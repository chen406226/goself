// Automatically generated file. DO NOT EDIT.
// Generated by gen-device-svd.go from esp32c3.svd, see https://github.com/posborne/cmsis-svd/tree/master/data/Espressif

//go:build esp && esp32c3
// +build esp,esp32c3

// 32-bit RISC-V MCU & 2.4 GHz Wi-Fi & Bluetooth 5 (LE)
//
//     Copyright 2021 Espressif Systems (Shanghai) PTE LTD Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
package esp

import (
	"runtime/volatile"
	"unsafe"
)

// Some information about this device.
const (
	Device       = "ESP32-C3"
	CPU          = "RV32IMC"
	FPUPresent   = false
	NVICPrioBits = 4
)

// Interrupt numbers.
const (
	// Highest interrupt number on this device.
	IRQ_max = 0
)

// Pseudo function call that is replaced by the compiler with the actual
// functions registered through interrupt.New.
//go:linkname callHandlers runtime/interrupt.callHandlers
func callHandlers(num int)
func HandleInterrupt(num int) {
	switch num {
	}
}

// Peripherals.
var (
	// Peripheral AES
	AES = (*AES_Type)(unsafe.Pointer(uintptr(0x6003a000)))

	// Peripheral APB_CTRL
	APB_CTRL = (*APB_CTRL_Type)(unsafe.Pointer(uintptr(0x60026000)))

	// Peripheral APB_SARADC
	APB_SARADC = (*APB_SARADC_Type)(unsafe.Pointer(uintptr(0x60040000)))

	// Peripheral ASSIST_DEBUG
	ASSIST_DEBUG = (*ASSIST_DEBUG_Type)(unsafe.Pointer(uintptr(0x600ce000)))

	// Peripheral DMA
	DMA = (*DMA_Type)(unsafe.Pointer(uintptr(0x6003f000)))

	// Peripheral DS
	DS = (*DS_Type)(unsafe.Pointer(uintptr(0x6003d000)))

	// Peripheral EFUSE
	EFUSE = (*EFUSE_Type)(unsafe.Pointer(uintptr(0x60008800)))

	// Peripheral GPIO
	GPIO = (*GPIO_Type)(unsafe.Pointer(uintptr(0x60004000)))

	// Peripheral GPIOSD
	GPIOSD = (*GPIOSD_Type)(unsafe.Pointer(uintptr(0x60004f00)))

	// Peripheral HMAC
	HMAC = (*HMAC_Type)(unsafe.Pointer(uintptr(0x6003e000)))

	// Peripheral I2C
	I2C = (*I2C_Type)(unsafe.Pointer(uintptr(0x60013000)))

	// Peripheral I2S
	I2S = (*I2S_Type)(unsafe.Pointer(uintptr(0x6002d000)))

	// Peripheral INTERRUPT_CORE0
	INTERRUPT_CORE0 = (*INTERRUPT_CORE0_Type)(unsafe.Pointer(uintptr(0x600c2000)))

	// Peripheral IO_MUX
	IO_MUX = (*IO_MUX_Type)(unsafe.Pointer(uintptr(0x60009000)))

	// Peripheral LEDC
	LEDC = (*LEDC_Type)(unsafe.Pointer(uintptr(0x60019000)))

	// Peripheral RMT
	RMT = (*RMT_Type)(unsafe.Pointer(uintptr(0x60016000)))

	// Peripheral RSA
	RSA = (*RSA_Type)(unsafe.Pointer(uintptr(0x6003c000)))

	// Peripheral RTC_CNTL
	RTC_CNTL = (*RTC_CNTL_Type)(unsafe.Pointer(uintptr(0x60008000)))

	// Peripheral SENSITIVE
	SENSITIVE = (*SENSITIVE_Type)(unsafe.Pointer(uintptr(0x600c1000)))

	// Peripheral SHA
	SHA = (*SHA_Type)(unsafe.Pointer(uintptr(0x6003b000)))

	// Peripheral SPI0
	SPI0 = (*SPI0_Type)(unsafe.Pointer(uintptr(0x60003000)))

	// Peripheral SPI1
	SPI1 = (*SPI1_Type)(unsafe.Pointer(uintptr(0x60002000)))

	// Peripheral SPI2
	SPI2 = (*SPI2_Type)(unsafe.Pointer(uintptr(0x60024000)))

	// Peripheral SYSTEM
	SYSTEM = (*SYSTEM_Type)(unsafe.Pointer(uintptr(0x600c0000)))

	// Peripheral SYSTIMER
	SYSTIMER = (*SYSTIMER_Type)(unsafe.Pointer(uintptr(0x60023000)))

	// Peripheral TIMG
	TIMG0 = (*TIMG_Type)(unsafe.Pointer(uintptr(0x6001f000)))

	// Peripheral UART
	UART0 = (*UART_Type)(unsafe.Pointer(uintptr(0x60000000)))

	// Peripheral UHCI
	UHCI0 = (*UHCI_Type)(unsafe.Pointer(uintptr(0x60014000)))

	// Peripheral USB_DEVICE
	USB_DEVICE = (*USB_DEVICE_Type)(unsafe.Pointer(uintptr(0x60043000)))

	// Peripheral XTS_AES
	XTS_AES = (*XTS_AES_Type)(unsafe.Pointer(uintptr(0x600cc000)))

	// Peripheral TIMG
	TIMG1 = (*TIMG_Type)(unsafe.Pointer(uintptr(0x60020000)))

	// Peripheral UART
	UART1 = (*UART_Type)(unsafe.Pointer(uintptr(0x60010000)))

	// Peripheral UHCI
	UHCI1 = (*UHCI_Type)(unsafe.Pointer(uintptr(0x6000c000)))
)

// Peripheral AES
type AES_Type struct {
	KEY_0             volatile.Register32 // 0x0
	KEY_1             volatile.Register32 // 0x4
	KEY_2             volatile.Register32 // 0x8
	KEY_3             volatile.Register32 // 0xC
	KEY_4             volatile.Register32 // 0x10
	KEY_5             volatile.Register32 // 0x14
	KEY_6             volatile.Register32 // 0x18
	KEY_7             volatile.Register32 // 0x1C
	TEXT_IN_0         volatile.Register32 // 0x20
	TEXT_IN_1         volatile.Register32 // 0x24
	TEXT_IN_2         volatile.Register32 // 0x28
	TEXT_IN_3         volatile.Register32 // 0x2C
	TEXT_OUT_0        volatile.Register32 // 0x30
	TEXT_OUT_1        volatile.Register32 // 0x34
	TEXT_OUT_2        volatile.Register32 // 0x38
	TEXT_OUT_3        volatile.Register32 // 0x3C
	MODE              volatile.Register32 // 0x40
	ENDIAN            volatile.Register32 // 0x44
	TRIGGER           volatile.Register32 // 0x48
	STATE             volatile.Register32 // 0x4C
	IV_MEM            volatile.Register32 // 0x50
	_                 [12]byte
	H_MEM             volatile.Register32 // 0x60
	_                 [12]byte
	J0_MEM            volatile.Register32 // 0x70
	_                 [12]byte
	T0_MEM            volatile.Register32 // 0x80
	_                 [12]byte
	DMA_ENABLE        volatile.Register32 // 0x90
	BLOCK_MODE        volatile.Register32 // 0x94
	BLOCK_NUM         volatile.Register32 // 0x98
	INC_SEL           volatile.Register32 // 0x9C
	AAD_BLOCK_NUM     volatile.Register32 // 0xA0
	REMAINDER_BIT_NUM volatile.Register32 // 0xA4
	CONTINUE          volatile.Register32 // 0xA8
	INT_CLEAR         volatile.Register32 // 0xAC
	INT_ENA           volatile.Register32 // 0xB0
	DATE              volatile.Register32 // 0xB4
	DMA_EXIT          volatile.Register32 // 0xB8
}

// Peripheral APB_CTRL
type APB_CTRL_Type struct {
	SYSCLK_CONF          volatile.Register32 // 0x0
	TICK_CONF            volatile.Register32 // 0x4
	CLK_OUT_EN           volatile.Register32 // 0x8
	WIFI_BB_CFG          volatile.Register32 // 0xC
	WIFI_BB_CFG_2        volatile.Register32 // 0x10
	WIFI_CLK_EN          volatile.Register32 // 0x14
	WIFI_RST_EN          volatile.Register32 // 0x18
	HOST_INF_SEL         volatile.Register32 // 0x1C
	EXT_MEM_PMS_LOCK     volatile.Register32 // 0x20
	_                    [4]byte
	FLASH_ACE0_ATTR      volatile.Register32 // 0x28
	FLASH_ACE1_ATTR      volatile.Register32 // 0x2C
	FLASH_ACE2_ATTR      volatile.Register32 // 0x30
	FLASH_ACE3_ATTR      volatile.Register32 // 0x34
	FLASH_ACE0_ADDR      volatile.Register32 // 0x38
	FLASH_ACE1_ADDR      volatile.Register32 // 0x3C
	FLASH_ACE2_ADDR      volatile.Register32 // 0x40
	FLASH_ACE3_ADDR      volatile.Register32 // 0x44
	FLASH_ACE0_SIZE      volatile.Register32 // 0x48
	FLASH_ACE1_SIZE      volatile.Register32 // 0x4C
	FLASH_ACE2_SIZE      volatile.Register32 // 0x50
	FLASH_ACE3_SIZE      volatile.Register32 // 0x54
	_                    [48]byte
	SPI_MEM_PMS_CTRL     volatile.Register32 // 0x88
	SPI_MEM_REJECT_ADDR  volatile.Register32 // 0x8C
	SDIO_CTRL            volatile.Register32 // 0x90
	REDCY_SIG0           volatile.Register32 // 0x94
	REDCY_SIG1           volatile.Register32 // 0x98
	FRONT_END_MEM_PD     volatile.Register32 // 0x9C
	RETENTION_CTRL       volatile.Register32 // 0xA0
	CLKGATE_FORCE_ON     volatile.Register32 // 0xA4
	MEM_POWER_DOWN       volatile.Register32 // 0xA8
	MEM_POWER_UP         volatile.Register32 // 0xAC
	RND_DATA             volatile.Register32 // 0xB0
	PERI_BACKUP_CONFIG   volatile.Register32 // 0xB4
	PERI_BACKUP_APB_ADDR volatile.Register32 // 0xB8
	PERI_BACKUP_MEM_ADDR volatile.Register32 // 0xBC
	PERI_BACKUP_INT_RAW  volatile.Register32 // 0xC0
	PERI_BACKUP_INT_ST   volatile.Register32 // 0xC4
	PERI_BACKUP_INT_ENA  volatile.Register32 // 0xC8
	_                    [4]byte
	PERI_BACKUP_INT_CLR  volatile.Register32 // 0xD0
	_                    [808]byte
	DATE                 volatile.Register32 // 0x3FC
}

// Peripheral APB_SARADC
type APB_SARADC_Type struct {
	CTRL            volatile.Register32 // 0x0
	CTRL2           volatile.Register32 // 0x4
	FILTER_CTRL1    volatile.Register32 // 0x8
	FSM_WAIT        volatile.Register32 // 0xC
	SAR1_STATUS     volatile.Register32 // 0x10
	SAR2_STATUS     volatile.Register32 // 0x14
	SAR_PATT_TAB1   volatile.Register32 // 0x18
	SAR_PATT_TAB2   volatile.Register32 // 0x1C
	ONETIME_SAMPLE  volatile.Register32 // 0x20
	ARB_CTRL        volatile.Register32 // 0x24
	FILTER_CTRL0    volatile.Register32 // 0x28
	SAR1DATA_STATUS volatile.Register32 // 0x2C
	SAR2DATA_STATUS volatile.Register32 // 0x30
	THRES0_CTRL     volatile.Register32 // 0x34
	THRES1_CTRL     volatile.Register32 // 0x38
	THRES_CTRL      volatile.Register32 // 0x3C
	INT_ENA         volatile.Register32 // 0x40
	INT_RAW         volatile.Register32 // 0x44
	INT_ST          volatile.Register32 // 0x48
	INT_CLR         volatile.Register32 // 0x4C
	DMA_CONF        volatile.Register32 // 0x50
	CLKM_CONF       volatile.Register32 // 0x54
	APB_TSENS_CTRL  volatile.Register32 // 0x58
	TSENS_CTRL2     volatile.Register32 // 0x5C
	CALI            volatile.Register32 // 0x60
	_               [920]byte
	CTRL_DATE       volatile.Register32 // 0x3FC
}

// Peripheral ASSIST_DEBUG
type ASSIST_DEBUG_Type struct {
	C0RE_0_MONTR_ENA                       volatile.Register32 // 0x0
	CORE_0_INTR_RAW                        volatile.Register32 // 0x4
	CORE_0_INTR_ENA                        volatile.Register32 // 0x8
	CORE_0_INTR_CLR                        volatile.Register32 // 0xC
	CORE_0_AREA_DRAM0_0_MIN                volatile.Register32 // 0x10
	CORE_0_AREA_DRAM0_0_MAX                volatile.Register32 // 0x14
	CORE_0_AREA_DRAM0_1_MIN                volatile.Register32 // 0x18
	CORE_0_AREA_DRAM0_1_MAX                volatile.Register32 // 0x1C
	CORE_0_AREA_PIF_0_MIN                  volatile.Register32 // 0x20
	CORE_0_AREA_PIF_0_MAX                  volatile.Register32 // 0x24
	CORE_0_AREA_PIF_1_MIN                  volatile.Register32 // 0x28
	CORE_0_AREA_PIF_1_MAX                  volatile.Register32 // 0x2C
	CORE_0_AREA_PC                         volatile.Register32 // 0x30
	CORE_0_AREA_SP                         volatile.Register32 // 0x34
	CORE_0_SP_MIN                          volatile.Register32 // 0x38
	CORE_0_SP_MAX                          volatile.Register32 // 0x3C
	CORE_0_SP_PC                           volatile.Register32 // 0x40
	CORE_0_RCD_EN                          volatile.Register32 // 0x44
	CORE_0_RCD_PDEBUGPC                    volatile.Register32 // 0x48
	CORE_0_RCD_PDEBUGSP                    volatile.Register32 // 0x4C
	CORE_0_IRAM0_EXCEPTION_MONITOR_0       volatile.Register32 // 0x50
	CORE_0_IRAM0_EXCEPTION_MONITOR_1       volatile.Register32 // 0x54
	CORE_0_DRAM0_EXCEPTION_MONITOR_0       volatile.Register32 // 0x58
	CORE_0_DRAM0_EXCEPTION_MONITOR_1       volatile.Register32 // 0x5C
	CORE_0_DRAM0_EXCEPTION_MONITOR_2       volatile.Register32 // 0x60
	CORE_0_DRAM0_EXCEPTION_MONITOR_3       volatile.Register32 // 0x64
	CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0 volatile.Register32 // 0x68
	CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1 volatile.Register32 // 0x6C
	LOG_SETTING                            volatile.Register32 // 0x70
	LOG_DATA_0                             volatile.Register32 // 0x74
	LOG_DATA_MASK                          volatile.Register32 // 0x78
	LOG_MIN                                volatile.Register32 // 0x7C
	LOG_MAX                                volatile.Register32 // 0x80
	LOG_MEM_START                          volatile.Register32 // 0x84
	LOG_MEM_END                            volatile.Register32 // 0x88
	LOG_MEM_WRITING_ADDR                   volatile.Register32 // 0x8C
	LOG_MEM_FULL_FLAG                      volatile.Register32 // 0x90
	C0RE_0_LASTPC_BEFORE_EXCEPTION         volatile.Register32 // 0x94
	C0RE_0_DEBUG_MODE                      volatile.Register32 // 0x98
	_                                      [352]byte
	DATE                                   volatile.Register32 // 0x1FC
}

// Peripheral DMA
type DMA_Type struct {
	INT_RAW_CH0              volatile.Register32 // 0x0
	INT_ST_CH0               volatile.Register32 // 0x4
	INT_ENA_CH0              volatile.Register32 // 0x8
	INT_CLR_CH0              volatile.Register32 // 0xC
	INT_RAW_CH1              volatile.Register32 // 0x10
	INT_ST_CH1               volatile.Register32 // 0x14
	INT_ENA_CH1              volatile.Register32 // 0x18
	INT_CLR_CH1              volatile.Register32 // 0x1C
	INT_RAW_CH2              volatile.Register32 // 0x20
	INT_ST_CH2               volatile.Register32 // 0x24
	INT_ENA_CH2              volatile.Register32 // 0x28
	INT_CLR_CH2              volatile.Register32 // 0x2C
	_                        [16]byte
	AHB_TEST                 volatile.Register32 // 0x40
	MISC_CONF                volatile.Register32 // 0x44
	DATE                     volatile.Register32 // 0x48
	_                        [36]byte
	IN_CONF0_CH0             volatile.Register32 // 0x70
	IN_CONF1_CH0             volatile.Register32 // 0x74
	INFIFO_STATUS_CH0        volatile.Register32 // 0x78
	IN_POP_CH0               volatile.Register32 // 0x7C
	IN_LINK_CH0              volatile.Register32 // 0x80
	IN_STATE_CH0             volatile.Register32 // 0x84
	IN_SUC_EOF_DES_ADDR_CH0  volatile.Register32 // 0x88
	IN_ERR_EOF_DES_ADDR_CH0  volatile.Register32 // 0x8C
	IN_DSCR_CH0              volatile.Register32 // 0x90
	IN_DSCR_BF0_CH0          volatile.Register32 // 0x94
	IN_DSCR_BF1_CH0          volatile.Register32 // 0x98
	IN_PRI_CH0               volatile.Register32 // 0x9C
	IN_PERI_SEL_CH0          volatile.Register32 // 0xA0
	_                        [44]byte
	OUT_CONF0_CH0            volatile.Register32 // 0xD0
	OUT_CONF1_CH0            volatile.Register32 // 0xD4
	OUTFIFO_STATUS_CH0       volatile.Register32 // 0xD8
	OUT_PUSH_CH0             volatile.Register32 // 0xDC
	OUT_LINK_CH0             volatile.Register32 // 0xE0
	OUT_STATE_CH0            volatile.Register32 // 0xE4
	OUT_EOF_DES_ADDR_CH0     volatile.Register32 // 0xE8
	OUT_EOF_BFR_DES_ADDR_CH0 volatile.Register32 // 0xEC
	OUT_DSCR_CH0             volatile.Register32 // 0xF0
	OUT_DSCR_BF0_CH0         volatile.Register32 // 0xF4
	OUT_DSCR_BF1_CH0         volatile.Register32 // 0xF8
	OUT_PRI_CH0              volatile.Register32 // 0xFC
	OUT_PERI_SEL_CH0         volatile.Register32 // 0x100
	_                        [44]byte
	IN_CONF0_CH1             volatile.Register32 // 0x130
	IN_CONF1_CH1             volatile.Register32 // 0x134
	INFIFO_STATUS_CH1        volatile.Register32 // 0x138
	IN_POP_CH1               volatile.Register32 // 0x13C
	IN_LINK_CH1              volatile.Register32 // 0x140
	IN_STATE_CH1             volatile.Register32 // 0x144
	IN_SUC_EOF_DES_ADDR_CH1  volatile.Register32 // 0x148
	IN_ERR_EOF_DES_ADDR_CH1  volatile.Register32 // 0x14C
	IN_DSCR_CH1              volatile.Register32 // 0x150
	IN_DSCR_BF0_CH1          volatile.Register32 // 0x154
	IN_DSCR_BF1_CH1          volatile.Register32 // 0x158
	IN_PRI_CH1               volatile.Register32 // 0x15C
	IN_PERI_SEL_CH1          volatile.Register32 // 0x160
	_                        [44]byte
	OUT_CONF0_CH1            volatile.Register32 // 0x190
	OUT_CONF1_CH1            volatile.Register32 // 0x194
	OUTFIFO_STATUS_CH1       volatile.Register32 // 0x198
	OUT_PUSH_CH1             volatile.Register32 // 0x19C
	OUT_LINK_CH1             volatile.Register32 // 0x1A0
	OUT_STATE_CH1            volatile.Register32 // 0x1A4
	OUT_EOF_DES_ADDR_CH1     volatile.Register32 // 0x1A8
	OUT_EOF_BFR_DES_ADDR_CH1 volatile.Register32 // 0x1AC
	OUT_DSCR_CH1             volatile.Register32 // 0x1B0
	OUT_DSCR_BF0_CH1         volatile.Register32 // 0x1B4
	OUT_DSCR_BF1_CH1         volatile.Register32 // 0x1B8
	OUT_PRI_CH1              volatile.Register32 // 0x1BC
	OUT_PERI_SEL_CH1         volatile.Register32 // 0x1C0
	_                        [44]byte
	IN_CONF0_CH2             volatile.Register32 // 0x1F0
	IN_CONF1_CH2             volatile.Register32 // 0x1F4
	INFIFO_STATUS_CH2        volatile.Register32 // 0x1F8
	IN_POP_CH2               volatile.Register32 // 0x1FC
	IN_LINK_CH2              volatile.Register32 // 0x200
	IN_STATE_CH2             volatile.Register32 // 0x204
	IN_SUC_EOF_DES_ADDR_CH2  volatile.Register32 // 0x208
	IN_ERR_EOF_DES_ADDR_CH2  volatile.Register32 // 0x20C
	IN_DSCR_CH2              volatile.Register32 // 0x210
	IN_DSCR_BF0_CH2          volatile.Register32 // 0x214
	IN_DSCR_BF1_CH2          volatile.Register32 // 0x218
	IN_PRI_CH2               volatile.Register32 // 0x21C
	IN_PERI_SEL_CH2          volatile.Register32 // 0x220
	_                        [44]byte
	OUT_CONF0_CH2            volatile.Register32 // 0x250
	OUT_CONF1_CH2            volatile.Register32 // 0x254
	OUTFIFO_STATUS_CH2       volatile.Register32 // 0x258
	OUT_PUSH_CH2             volatile.Register32 // 0x25C
	OUT_LINK_CH2             volatile.Register32 // 0x260
	OUT_STATE_CH2            volatile.Register32 // 0x264
	OUT_EOF_DES_ADDR_CH2     volatile.Register32 // 0x268
	OUT_EOF_BFR_DES_ADDR_CH2 volatile.Register32 // 0x26C
	OUT_DSCR_CH2             volatile.Register32 // 0x270
	OUT_DSCR_BF0_CH2         volatile.Register32 // 0x274
	OUT_DSCR_BF1_CH2         volatile.Register32 // 0x278
	OUT_PRI_CH2              volatile.Register32 // 0x27C
	OUT_PERI_SEL_CH2         volatile.Register32 // 0x280
}

// Peripheral DS
type DS_Type struct {
	Y_MEM           volatile.Register32 // 0x0
	_               [508]byte
	M_MEM           volatile.Register32 // 0x200
	_               [508]byte
	RB_MEM          volatile.Register32 // 0x400
	_               [508]byte
	BOX_MEM         volatile.Register32 // 0x600
	_               [508]byte
	X_MEM           volatile.Register32 // 0x800
	_               [508]byte
	Z_MEM           volatile.Register32 // 0xA00
	_               [1020]byte
	SET_START       volatile.Register32 // 0xE00
	SET_CONTINUE    volatile.Register32 // 0xE04
	SET_FINISH      volatile.Register32 // 0xE08
	QUERY_BUSY      volatile.Register32 // 0xE0C
	QUERY_KEY_WRONG volatile.Register32 // 0xE10
	QUERY_CHECK     volatile.Register32 // 0xE14
	_               [8]byte
	DATE            volatile.Register32 // 0xE20
}

// Peripheral EFUSE
type EFUSE_Type struct {
	PGM_DATA0          volatile.Register32 // 0x0
	PGM_DATA1          volatile.Register32 // 0x4
	PGM_DATA2          volatile.Register32 // 0x8
	PGM_DATA3          volatile.Register32 // 0xC
	PGM_DATA4          volatile.Register32 // 0x10
	PGM_DATA5          volatile.Register32 // 0x14
	PGM_DATA6          volatile.Register32 // 0x18
	PGM_DATA7          volatile.Register32 // 0x1C
	PGM_CHECK_VALUE0   volatile.Register32 // 0x20
	PGM_CHECK_VALUE1   volatile.Register32 // 0x24
	PGM_CHECK_VALUE2   volatile.Register32 // 0x28
	RD_WR_DIS          volatile.Register32 // 0x2C
	RD_REPEAT_DATA0    volatile.Register32 // 0x30
	RD_REPEAT_DATA1    volatile.Register32 // 0x34
	RD_REPEAT_DATA2    volatile.Register32 // 0x38
	RD_REPEAT_DATA3    volatile.Register32 // 0x3C
	RD_REPEAT_DATA4    volatile.Register32 // 0x40
	RD_MAC_SPI_SYS_0   volatile.Register32 // 0x44
	RD_MAC_SPI_SYS_1   volatile.Register32 // 0x48
	RD_MAC_SPI_SYS_2   volatile.Register32 // 0x4C
	RD_MAC_SPI_SYS_3   volatile.Register32 // 0x50
	RD_MAC_SPI_SYS_4   volatile.Register32 // 0x54
	RD_MAC_SPI_SYS_5   volatile.Register32 // 0x58
	RD_SYS_PART1_DATA0 volatile.Register32 // 0x5C
	RD_SYS_PART1_DATA1 volatile.Register32 // 0x60
	RD_SYS_PART1_DATA2 volatile.Register32 // 0x64
	RD_SYS_PART1_DATA3 volatile.Register32 // 0x68
	RD_SYS_PART1_DATA4 volatile.Register32 // 0x6C
	RD_SYS_PART1_DATA5 volatile.Register32 // 0x70
	RD_SYS_PART1_DATA6 volatile.Register32 // 0x74
	RD_SYS_PART1_DATA7 volatile.Register32 // 0x78
	RD_USR_DATA0       volatile.Register32 // 0x7C
	RD_USR_DATA1       volatile.Register32 // 0x80
	RD_USR_DATA2       volatile.Register32 // 0x84
	RD_USR_DATA3       volatile.Register32 // 0x88
	RD_USR_DATA4       volatile.Register32 // 0x8C
	RD_USR_DATA5       volatile.Register32 // 0x90
	RD_USR_DATA6       volatile.Register32 // 0x94
	RD_USR_DATA7       volatile.Register32 // 0x98
	RD_KEY0_DATA0      volatile.Register32 // 0x9C
	RD_KEY0_DATA1      volatile.Register32 // 0xA0
	RD_KEY0_DATA2      volatile.Register32 // 0xA4
	RD_KEY0_DATA3      volatile.Register32 // 0xA8
	RD_KEY0_DATA4      volatile.Register32 // 0xAC
	RD_KEY0_DATA5      volatile.Register32 // 0xB0
	RD_KEY0_DATA6      volatile.Register32 // 0xB4
	RD_KEY0_DATA7      volatile.Register32 // 0xB8
	RD_KEY1_DATA0      volatile.Register32 // 0xBC
	RD_KEY1_DATA1      volatile.Register32 // 0xC0
	RD_KEY1_DATA2      volatile.Register32 // 0xC4
	RD_KEY1_DATA3      volatile.Register32 // 0xC8
	RD_KEY1_DATA4      volatile.Register32 // 0xCC
	RD_KEY1_DATA5      volatile.Register32 // 0xD0
	RD_KEY1_DATA6      volatile.Register32 // 0xD4
	RD_KEY1_DATA7      volatile.Register32 // 0xD8
	RD_KEY2_DATA0      volatile.Register32 // 0xDC
	RD_KEY2_DATA1      volatile.Register32 // 0xE0
	RD_KEY2_DATA2      volatile.Register32 // 0xE4
	RD_KEY2_DATA3      volatile.Register32 // 0xE8
	RD_KEY2_DATA4      volatile.Register32 // 0xEC
	RD_KEY2_DATA5      volatile.Register32 // 0xF0
	RD_KEY2_DATA6      volatile.Register32 // 0xF4
	RD_KEY2_DATA7      volatile.Register32 // 0xF8
	RD_KEY3_DATA0      volatile.Register32 // 0xFC
	RD_KEY3_DATA1      volatile.Register32 // 0x100
	RD_KEY3_DATA2      volatile.Register32 // 0x104
	RD_KEY3_DATA3      volatile.Register32 // 0x108
	RD_KEY3_DATA4      volatile.Register32 // 0x10C
	RD_KEY3_DATA5      volatile.Register32 // 0x110
	RD_KEY3_DATA6      volatile.Register32 // 0x114
	RD_KEY3_DATA7      volatile.Register32 // 0x118
	RD_KEY4_DATA0      volatile.Register32 // 0x11C
	RD_KEY4_DATA1      volatile.Register32 // 0x120
	RD_KEY4_DATA2      volatile.Register32 // 0x124
	RD_KEY4_DATA3      volatile.Register32 // 0x128
	RD_KEY4_DATA4      volatile.Register32 // 0x12C
	RD_KEY4_DATA5      volatile.Register32 // 0x130
	RD_KEY4_DATA6      volatile.Register32 // 0x134
	RD_KEY4_DATA7      volatile.Register32 // 0x138
	RD_KEY5_DATA0      volatile.Register32 // 0x13C
	RD_KEY5_DATA1      volatile.Register32 // 0x140
	RD_KEY5_DATA2      volatile.Register32 // 0x144
	RD_KEY5_DATA3      volatile.Register32 // 0x148
	RD_KEY5_DATA4      volatile.Register32 // 0x14C
	RD_KEY5_DATA5      volatile.Register32 // 0x150
	RD_KEY5_DATA6      volatile.Register32 // 0x154
	RD_KEY5_DATA7      volatile.Register32 // 0x158
	RD_SYS_PART2_DATA0 volatile.Register32 // 0x15C
	RD_SYS_PART2_DATA1 volatile.Register32 // 0x160
	RD_SYS_PART2_DATA2 volatile.Register32 // 0x164
	RD_SYS_PART2_DATA3 volatile.Register32 // 0x168
	RD_SYS_PART2_DATA4 volatile.Register32 // 0x16C
	RD_SYS_PART2_DATA5 volatile.Register32 // 0x170
	RD_SYS_PART2_DATA6 volatile.Register32 // 0x174
	RD_SYS_PART2_DATA7 volatile.Register32 // 0x178
	RD_REPEAT_ERR0     volatile.Register32 // 0x17C
	RD_REPEAT_ERR1     volatile.Register32 // 0x180
	RD_REPEAT_ERR2     volatile.Register32 // 0x184
	RD_REPEAT_ERR3     volatile.Register32 // 0x188
	_                  [4]byte
	RD_REPEAT_ERR4     volatile.Register32 // 0x190
	_                  [44]byte
	RD_RS_ERR0         volatile.Register32 // 0x1C0
	RD_RS_ERR1         volatile.Register32 // 0x1C4
	CLK                volatile.Register32 // 0x1C8
	CONF               volatile.Register32 // 0x1CC
	STATUS             volatile.Register32 // 0x1D0
	CMD                volatile.Register32 // 0x1D4
	INT_RAW            volatile.Register32 // 0x1D8
	INT_ST             volatile.Register32 // 0x1DC
	INT_ENA            volatile.Register32 // 0x1E0
	INT_CLR            volatile.Register32 // 0x1E4
	DAC_CONF           volatile.Register32 // 0x1E8
	RD_TIM_CONF        volatile.Register32 // 0x1EC
	WR_TIM_CONF1       volatile.Register32 // 0x1F0
	WR_TIM_CONF2       volatile.Register32 // 0x1F4
	_                  [4]byte
	DATE               volatile.Register32 // 0x1FC
}

// Peripheral GPIO
type GPIO_Type struct {
	BT_SELECT          volatile.Register32 // 0x0
	OUT                volatile.Register32 // 0x4
	OUT_W1TS           volatile.Register32 // 0x8
	OUT_W1TC           volatile.Register32 // 0xC
	_                  [12]byte
	SDIO_SELECT        volatile.Register32 // 0x1C
	ENABLE             volatile.Register32 // 0x20
	ENABLE_W1TS        volatile.Register32 // 0x24
	ENABLE_W1TC        volatile.Register32 // 0x28
	_                  [12]byte
	STRAP              volatile.Register32 // 0x38
	IN                 volatile.Register32 // 0x3C
	_                  [4]byte
	STATUS             volatile.Register32 // 0x44
	STATUS_W1TS        volatile.Register32 // 0x48
	STATUS_W1TC        volatile.Register32 // 0x4C
	_                  [12]byte
	PCPU_INT           volatile.Register32 // 0x5C
	PCPU_NMI_INT       volatile.Register32 // 0x60
	CPUSDIO_INT        volatile.Register32 // 0x64
	_                  [12]byte
	PIN0               volatile.Register32 // 0x74
	PIN1               volatile.Register32 // 0x78
	PIN2               volatile.Register32 // 0x7C
	PIN3               volatile.Register32 // 0x80
	PIN4               volatile.Register32 // 0x84
	PIN5               volatile.Register32 // 0x88
	PIN6               volatile.Register32 // 0x8C
	PIN7               volatile.Register32 // 0x90
	PIN8               volatile.Register32 // 0x94
	PIN9               volatile.Register32 // 0x98
	PIN10              volatile.Register32 // 0x9C
	PIN11              volatile.Register32 // 0xA0
	PIN12              volatile.Register32 // 0xA4
	PIN13              volatile.Register32 // 0xA8
	PIN14              volatile.Register32 // 0xAC
	PIN15              volatile.Register32 // 0xB0
	PIN16              volatile.Register32 // 0xB4
	PIN17              volatile.Register32 // 0xB8
	PIN18              volatile.Register32 // 0xBC
	PIN19              volatile.Register32 // 0xC0
	PIN20              volatile.Register32 // 0xC4
	PIN21              volatile.Register32 // 0xC8
	PIN22              volatile.Register32 // 0xCC
	PIN23              volatile.Register32 // 0xD0
	PIN24              volatile.Register32 // 0xD4
	PIN25              volatile.Register32 // 0xD8
	_                  [112]byte
	STATUS_NEXT        volatile.Register32 // 0x14C
	_                  [4]byte
	FUNC0_IN_SEL_CFG   volatile.Register32 // 0x154
	FUNC1_IN_SEL_CFG   volatile.Register32 // 0x158
	FUNC2_IN_SEL_CFG   volatile.Register32 // 0x15C
	FUNC3_IN_SEL_CFG   volatile.Register32 // 0x160
	FUNC4_IN_SEL_CFG   volatile.Register32 // 0x164
	FUNC5_IN_SEL_CFG   volatile.Register32 // 0x168
	FUNC6_IN_SEL_CFG   volatile.Register32 // 0x16C
	FUNC7_IN_SEL_CFG   volatile.Register32 // 0x170
	FUNC8_IN_SEL_CFG   volatile.Register32 // 0x174
	FUNC9_IN_SEL_CFG   volatile.Register32 // 0x178
	FUNC10_IN_SEL_CFG  volatile.Register32 // 0x17C
	FUNC11_IN_SEL_CFG  volatile.Register32 // 0x180
	FUNC12_IN_SEL_CFG  volatile.Register32 // 0x184
	FUNC13_IN_SEL_CFG  volatile.Register32 // 0x188
	FUNC14_IN_SEL_CFG  volatile.Register32 // 0x18C
	FUNC15_IN_SEL_CFG  volatile.Register32 // 0x190
	FUNC16_IN_SEL_CFG  volatile.Register32 // 0x194
	FUNC17_IN_SEL_CFG  volatile.Register32 // 0x198
	FUNC18_IN_SEL_CFG  volatile.Register32 // 0x19C
	FUNC19_IN_SEL_CFG  volatile.Register32 // 0x1A0
	FUNC20_IN_SEL_CFG  volatile.Register32 // 0x1A4
	FUNC21_IN_SEL_CFG  volatile.Register32 // 0x1A8
	FUNC22_IN_SEL_CFG  volatile.Register32 // 0x1AC
	FUNC23_IN_SEL_CFG  volatile.Register32 // 0x1B0
	FUNC24_IN_SEL_CFG  volatile.Register32 // 0x1B4
	FUNC25_IN_SEL_CFG  volatile.Register32 // 0x1B8
	FUNC26_IN_SEL_CFG  volatile.Register32 // 0x1BC
	FUNC27_IN_SEL_CFG  volatile.Register32 // 0x1C0
	FUNC28_IN_SEL_CFG  volatile.Register32 // 0x1C4
	FUNC29_IN_SEL_CFG  volatile.Register32 // 0x1C8
	FUNC30_IN_SEL_CFG  volatile.Register32 // 0x1CC
	FUNC31_IN_SEL_CFG  volatile.Register32 // 0x1D0
	FUNC32_IN_SEL_CFG  volatile.Register32 // 0x1D4
	FUNC33_IN_SEL_CFG  volatile.Register32 // 0x1D8
	FUNC34_IN_SEL_CFG  volatile.Register32 // 0x1DC
	FUNC35_IN_SEL_CFG  volatile.Register32 // 0x1E0
	FUNC36_IN_SEL_CFG  volatile.Register32 // 0x1E4
	FUNC37_IN_SEL_CFG  volatile.Register32 // 0x1E8
	FUNC38_IN_SEL_CFG  volatile.Register32 // 0x1EC
	FUNC39_IN_SEL_CFG  volatile.Register32 // 0x1F0
	FUNC40_IN_SEL_CFG  volatile.Register32 // 0x1F4
	FUNC41_IN_SEL_CFG  volatile.Register32 // 0x1F8
	FUNC42_IN_SEL_CFG  volatile.Register32 // 0x1FC
	FUNC43_IN_SEL_CFG  volatile.Register32 // 0x200
	FUNC44_IN_SEL_CFG  volatile.Register32 // 0x204
	FUNC45_IN_SEL_CFG  volatile.Register32 // 0x208
	FUNC46_IN_SEL_CFG  volatile.Register32 // 0x20C
	FUNC47_IN_SEL_CFG  volatile.Register32 // 0x210
	FUNC48_IN_SEL_CFG  volatile.Register32 // 0x214
	FUNC49_IN_SEL_CFG  volatile.Register32 // 0x218
	FUNC50_IN_SEL_CFG  volatile.Register32 // 0x21C
	FUNC51_IN_SEL_CFG  volatile.Register32 // 0x220
	FUNC52_IN_SEL_CFG  volatile.Register32 // 0x224
	FUNC53_IN_SEL_CFG  volatile.Register32 // 0x228
	FUNC54_IN_SEL_CFG  volatile.Register32 // 0x22C
	FUNC55_IN_SEL_CFG  volatile.Register32 // 0x230
	FUNC56_IN_SEL_CFG  volatile.Register32 // 0x234
	FUNC57_IN_SEL_CFG  volatile.Register32 // 0x238
	FUNC58_IN_SEL_CFG  volatile.Register32 // 0x23C
	FUNC59_IN_SEL_CFG  volatile.Register32 // 0x240
	FUNC60_IN_SEL_CFG  volatile.Register32 // 0x244
	FUNC61_IN_SEL_CFG  volatile.Register32 // 0x248
	FUNC62_IN_SEL_CFG  volatile.Register32 // 0x24C
	FUNC63_IN_SEL_CFG  volatile.Register32 // 0x250
	FUNC64_IN_SEL_CFG  volatile.Register32 // 0x254
	FUNC65_IN_SEL_CFG  volatile.Register32 // 0x258
	FUNC66_IN_SEL_CFG  volatile.Register32 // 0x25C
	FUNC67_IN_SEL_CFG  volatile.Register32 // 0x260
	FUNC68_IN_SEL_CFG  volatile.Register32 // 0x264
	FUNC69_IN_SEL_CFG  volatile.Register32 // 0x268
	FUNC70_IN_SEL_CFG  volatile.Register32 // 0x26C
	FUNC71_IN_SEL_CFG  volatile.Register32 // 0x270
	FUNC72_IN_SEL_CFG  volatile.Register32 // 0x274
	FUNC73_IN_SEL_CFG  volatile.Register32 // 0x278
	FUNC74_IN_SEL_CFG  volatile.Register32 // 0x27C
	FUNC75_IN_SEL_CFG  volatile.Register32 // 0x280
	FUNC76_IN_SEL_CFG  volatile.Register32 // 0x284
	FUNC77_IN_SEL_CFG  volatile.Register32 // 0x288
	FUNC78_IN_SEL_CFG  volatile.Register32 // 0x28C
	FUNC79_IN_SEL_CFG  volatile.Register32 // 0x290
	FUNC80_IN_SEL_CFG  volatile.Register32 // 0x294
	FUNC81_IN_SEL_CFG  volatile.Register32 // 0x298
	FUNC82_IN_SEL_CFG  volatile.Register32 // 0x29C
	FUNC83_IN_SEL_CFG  volatile.Register32 // 0x2A0
	FUNC84_IN_SEL_CFG  volatile.Register32 // 0x2A4
	FUNC85_IN_SEL_CFG  volatile.Register32 // 0x2A8
	FUNC86_IN_SEL_CFG  volatile.Register32 // 0x2AC
	FUNC87_IN_SEL_CFG  volatile.Register32 // 0x2B0
	FUNC88_IN_SEL_CFG  volatile.Register32 // 0x2B4
	FUNC89_IN_SEL_CFG  volatile.Register32 // 0x2B8
	FUNC90_IN_SEL_CFG  volatile.Register32 // 0x2BC
	FUNC91_IN_SEL_CFG  volatile.Register32 // 0x2C0
	FUNC92_IN_SEL_CFG  volatile.Register32 // 0x2C4
	FUNC93_IN_SEL_CFG  volatile.Register32 // 0x2C8
	FUNC94_IN_SEL_CFG  volatile.Register32 // 0x2CC
	FUNC95_IN_SEL_CFG  volatile.Register32 // 0x2D0
	FUNC96_IN_SEL_CFG  volatile.Register32 // 0x2D4
	FUNC97_IN_SEL_CFG  volatile.Register32 // 0x2D8
	FUNC98_IN_SEL_CFG  volatile.Register32 // 0x2DC
	FUNC99_IN_SEL_CFG  volatile.Register32 // 0x2E0
	FUNC100_IN_SEL_CFG volatile.Register32 // 0x2E4
	FUNC101_IN_SEL_CFG volatile.Register32 // 0x2E8
	FUNC102_IN_SEL_CFG volatile.Register32 // 0x2EC
	FUNC103_IN_SEL_CFG volatile.Register32 // 0x2F0
	FUNC104_IN_SEL_CFG volatile.Register32 // 0x2F4
	FUNC105_IN_SEL_CFG volatile.Register32 // 0x2F8
	FUNC106_IN_SEL_CFG volatile.Register32 // 0x2FC
	FUNC107_IN_SEL_CFG volatile.Register32 // 0x300
	FUNC108_IN_SEL_CFG volatile.Register32 // 0x304
	FUNC109_IN_SEL_CFG volatile.Register32 // 0x308
	FUNC110_IN_SEL_CFG volatile.Register32 // 0x30C
	FUNC111_IN_SEL_CFG volatile.Register32 // 0x310
	FUNC112_IN_SEL_CFG volatile.Register32 // 0x314
	FUNC113_IN_SEL_CFG volatile.Register32 // 0x318
	FUNC114_IN_SEL_CFG volatile.Register32 // 0x31C
	FUNC115_IN_SEL_CFG volatile.Register32 // 0x320
	FUNC116_IN_SEL_CFG volatile.Register32 // 0x324
	FUNC117_IN_SEL_CFG volatile.Register32 // 0x328
	FUNC118_IN_SEL_CFG volatile.Register32 // 0x32C
	FUNC119_IN_SEL_CFG volatile.Register32 // 0x330
	FUNC120_IN_SEL_CFG volatile.Register32 // 0x334
	FUNC121_IN_SEL_CFG volatile.Register32 // 0x338
	FUNC122_IN_SEL_CFG volatile.Register32 // 0x33C
	FUNC123_IN_SEL_CFG volatile.Register32 // 0x340
	FUNC124_IN_SEL_CFG volatile.Register32 // 0x344
	FUNC125_IN_SEL_CFG volatile.Register32 // 0x348
	FUNC126_IN_SEL_CFG volatile.Register32 // 0x34C
	FUNC127_IN_SEL_CFG volatile.Register32 // 0x350
	_                  [512]byte
	FUNC0_OUT_SEL_CFG  volatile.Register32 // 0x554
	FUNC1_OUT_SEL_CFG  volatile.Register32 // 0x558
	FUNC2_OUT_SEL_CFG  volatile.Register32 // 0x55C
	FUNC3_OUT_SEL_CFG  volatile.Register32 // 0x560
	FUNC4_OUT_SEL_CFG  volatile.Register32 // 0x564
	FUNC5_OUT_SEL_CFG  volatile.Register32 // 0x568
	FUNC6_OUT_SEL_CFG  volatile.Register32 // 0x56C
	FUNC7_OUT_SEL_CFG  volatile.Register32 // 0x570
	FUNC8_OUT_SEL_CFG  volatile.Register32 // 0x574
	FUNC9_OUT_SEL_CFG  volatile.Register32 // 0x578
	FUNC10_OUT_SEL_CFG volatile.Register32 // 0x57C
	FUNC11_OUT_SEL_CFG volatile.Register32 // 0x580
	FUNC12_OUT_SEL_CFG volatile.Register32 // 0x584
	FUNC13_OUT_SEL_CFG volatile.Register32 // 0x588
	FUNC14_OUT_SEL_CFG volatile.Register32 // 0x58C
	FUNC15_OUT_SEL_CFG volatile.Register32 // 0x590
	FUNC16_OUT_SEL_CFG volatile.Register32 // 0x594
	FUNC17_OUT_SEL_CFG volatile.Register32 // 0x598
	FUNC18_OUT_SEL_CFG volatile.Register32 // 0x59C
	FUNC19_OUT_SEL_CFG volatile.Register32 // 0x5A0
	FUNC20_OUT_SEL_CFG volatile.Register32 // 0x5A4
	FUNC21_OUT_SEL_CFG volatile.Register32 // 0x5A8
	FUNC22_OUT_SEL_CFG volatile.Register32 // 0x5AC
	FUNC23_OUT_SEL_CFG volatile.Register32 // 0x5B0
	FUNC24_OUT_SEL_CFG volatile.Register32 // 0x5B4
	FUNC25_OUT_SEL_CFG volatile.Register32 // 0x5B8
	_                  [112]byte
	CLOCK_GATE         volatile.Register32 // 0x62C
	_                  [204]byte
	REG_DATE           volatile.Register32 // 0x6FC
}

// Peripheral GPIOSD
type GPIOSD_Type struct {
	SIGMADELTA0        volatile.Register32 // 0x0
	SIGMADELTA1        volatile.Register32 // 0x4
	SIGMADELTA2        volatile.Register32 // 0x8
	SIGMADELTA3        volatile.Register32 // 0xC
	_                  [16]byte
	SIGMADELTA_CG      volatile.Register32 // 0x20
	SIGMADELTA_MISC    volatile.Register32 // 0x24
	SIGMADELTA_VERSION volatile.Register32 // 0x28
}

// Peripheral HMAC
type HMAC_Type struct {
	_                   [64]byte
	SET_START           volatile.Register32 // 0x40
	SET_PARA_PURPOSE    volatile.Register32 // 0x44
	SET_PARA_KEY        volatile.Register32 // 0x48
	SET_PARA_FINISH     volatile.Register32 // 0x4C
	SET_MESSAGE_ONE     volatile.Register32 // 0x50
	SET_MESSAGE_ING     volatile.Register32 // 0x54
	SET_MESSAGE_END     volatile.Register32 // 0x58
	SET_RESULT_FINISH   volatile.Register32 // 0x5C
	SET_INVALIDATE_JTAG volatile.Register32 // 0x60
	SET_INVALIDATE_DS   volatile.Register32 // 0x64
	QUERY_ERROR         volatile.Register32 // 0x68
	QUERY_BUSY          volatile.Register32 // 0x6C
	_                   [16]byte
	WR_MESSAGE_MEM      volatile.Register32 // 0x80
	_                   [60]byte
	RD_RESULT_MEM       volatile.Register32 // 0xC0
	_                   [44]byte
	SET_MESSAGE_PAD     volatile.Register32 // 0xF0
	ONE_BLOCK           volatile.Register32 // 0xF4
	SOFT_JTAG_CTRL      volatile.Register32 // 0xF8
	WR_JTAG             volatile.Register32 // 0xFC
}

// Peripheral I2C
type I2C_Type struct {
	SCL_LOW_PERIOD       volatile.Register32 // 0x0
	CTR                  volatile.Register32 // 0x4
	SR                   volatile.Register32 // 0x8
	TO                   volatile.Register32 // 0xC
	SLAVE_ADDR           volatile.Register32 // 0x10
	FIFO_ST              volatile.Register32 // 0x14
	FIFO_CONF            volatile.Register32 // 0x18
	FIFO_DATA            volatile.Register32 // 0x1C
	INT_RAW              volatile.Register32 // 0x20
	INT_CLR              volatile.Register32 // 0x24
	INT_ENA              volatile.Register32 // 0x28
	INT_STATUS           volatile.Register32 // 0x2C
	SDA_HOLD             volatile.Register32 // 0x30
	SDA_SAMPLE           volatile.Register32 // 0x34
	SCL_HIGH_PERIOD      volatile.Register32 // 0x38
	_                    [4]byte
	SCL_START_HOLD       volatile.Register32 // 0x40
	SCL_RSTART_SETUP     volatile.Register32 // 0x44
	SCL_STOP_HOLD        volatile.Register32 // 0x48
	SCL_STOP_SETUP       volatile.Register32 // 0x4C
	FILTER_CFG           volatile.Register32 // 0x50
	CLK_CONF             volatile.Register32 // 0x54
	COMD0                volatile.Register32 // 0x58
	COMD1                volatile.Register32 // 0x5C
	COMD2                volatile.Register32 // 0x60
	COMD3                volatile.Register32 // 0x64
	COMD4                volatile.Register32 // 0x68
	COMD5                volatile.Register32 // 0x6C
	COMD6                volatile.Register32 // 0x70
	COMD7                volatile.Register32 // 0x74
	SCL_ST_TIME_OUT      volatile.Register32 // 0x78
	SCL_MAIN_ST_TIME_OUT volatile.Register32 // 0x7C
	SCL_SP_CONF          volatile.Register32 // 0x80
	SCL_STRETCH_CONF     volatile.Register32 // 0x84
	_                    [112]byte
	DATE                 volatile.Register32 // 0xF8
	_                    [4]byte
	TXFIFO_START_ADDR    volatile.Register32 // 0x100
	_                    [124]byte
	RXFIFO_START_ADDR    volatile.Register32 // 0x180
}

// Peripheral I2S
type I2S_Type struct {
	_                [12]byte
	INT_RAW          volatile.Register32 // 0xC
	INT_ST           volatile.Register32 // 0x10
	INT_ENA          volatile.Register32 // 0x14
	INT_CLR          volatile.Register32 // 0x18
	_                [4]byte
	RX_CONF          volatile.Register32 // 0x20
	TX_CONF          volatile.Register32 // 0x24
	RX_CONF1         volatile.Register32 // 0x28
	TX_CONF1         volatile.Register32 // 0x2C
	RX_CLKM_CONF     volatile.Register32 // 0x30
	TX_CLKM_CONF     volatile.Register32 // 0x34
	RX_CLKM_DIV_CONF volatile.Register32 // 0x38
	TX_CLKM_DIV_CONF volatile.Register32 // 0x3C
	TX_PCM2PDM_CONF  volatile.Register32 // 0x40
	TX_PCM2PDM_CONF1 volatile.Register32 // 0x44
	_                [8]byte
	RX_TDM_CTRL      volatile.Register32 // 0x50
	TX_TDM_CTRL      volatile.Register32 // 0x54
	RX_TIMING        volatile.Register32 // 0x58
	TX_TIMING        volatile.Register32 // 0x5C
	LC_HUNG_CONF     volatile.Register32 // 0x60
	RXEOF_NUM        volatile.Register32 // 0x64
	CONF_SIGLE_DATA  volatile.Register32 // 0x68
	STATE            volatile.Register32 // 0x6C
	_                [16]byte
	DATE             volatile.Register32 // 0x80
}

// Peripheral INTERRUPT_CORE0
type INTERRUPT_CORE0_Type struct {
	MAC_INTR_MAP                                 volatile.Register32 // 0x0
	MAC_NMI_MAP                                  volatile.Register32 // 0x4
	PWR_INTR_MAP                                 volatile.Register32 // 0x8
	BB_INT_MAP                                   volatile.Register32 // 0xC
	BT_MAC_INT_MAP                               volatile.Register32 // 0x10
	BT_BB_INT_MAP                                volatile.Register32 // 0x14
	BT_BB_NMI_MAP                                volatile.Register32 // 0x18
	RWBT_IRQ_MAP                                 volatile.Register32 // 0x1C
	RWBLE_IRQ_MAP                                volatile.Register32 // 0x20
	RWBT_NMI_MAP                                 volatile.Register32 // 0x24
	RWBLE_NMI_MAP                                volatile.Register32 // 0x28
	I2C_MST_INT_MAP                              volatile.Register32 // 0x2C
	SLC0_INTR_MAP                                volatile.Register32 // 0x30
	SLC1_INTR_MAP                                volatile.Register32 // 0x34
	APB_CTRL_INTR_MAP                            volatile.Register32 // 0x38
	UHCI0_INTR_MAP                               volatile.Register32 // 0x3C
	GPIO_INTERRUPT_PRO_MAP                       volatile.Register32 // 0x40
	GPIO_INTERRUPT_PRO_NMI_MAP                   volatile.Register32 // 0x44
	SPI_INTR_1_MAP                               volatile.Register32 // 0x48
	SPI_INTR_2_MAP                               volatile.Register32 // 0x4C
	I2S1_INT_MAP                                 volatile.Register32 // 0x50
	UART_INTR_MAP                                volatile.Register32 // 0x54
	UART1_INTR_MAP                               volatile.Register32 // 0x58
	LEDC_INT_MAP                                 volatile.Register32 // 0x5C
	EFUSE_INT_MAP                                volatile.Register32 // 0x60
	CAN_INT_MAP                                  volatile.Register32 // 0x64
	USB_INTR_MAP                                 volatile.Register32 // 0x68
	RTC_CORE_INTR_MAP                            volatile.Register32 // 0x6C
	RMT_INTR_MAP                                 volatile.Register32 // 0x70
	I2C_EXT0_INTR_MAP                            volatile.Register32 // 0x74
	TIMER_INT1_MAP                               volatile.Register32 // 0x78
	TIMER_INT2_MAP                               volatile.Register32 // 0x7C
	TG_T0_INT_MAP                                volatile.Register32 // 0x80
	TG_WDT_INT_MAP                               volatile.Register32 // 0x84
	TG1_T0_INT_MAP                               volatile.Register32 // 0x88
	TG1_WDT_INT_MAP                              volatile.Register32 // 0x8C
	CACHE_IA_INT_MAP                             volatile.Register32 // 0x90
	SYSTIMER_TARGET0_INT_MAP                     volatile.Register32 // 0x94
	SYSTIMER_TARGET1_INT_MAP                     volatile.Register32 // 0x98
	SYSTIMER_TARGET2_INT_MAP                     volatile.Register32 // 0x9C
	SPI_MEM_REJECT_INTR_MAP                      volatile.Register32 // 0xA0
	ICACHE_PRELOAD_INT_MAP                       volatile.Register32 // 0xA4
	ICACHE_SYNC_INT_MAP                          volatile.Register32 // 0xA8
	APB_ADC_INT_MAP                              volatile.Register32 // 0xAC
	DMA_CH0_INT_MAP                              volatile.Register32 // 0xB0
	DMA_CH1_INT_MAP                              volatile.Register32 // 0xB4
	DMA_CH2_INT_MAP                              volatile.Register32 // 0xB8
	RSA_INT_MAP                                  volatile.Register32 // 0xBC
	AES_INT_MAP                                  volatile.Register32 // 0xC0
	SHA_INT_MAP                                  volatile.Register32 // 0xC4
	CPU_INTR_FROM_CPU_0_MAP                      volatile.Register32 // 0xC8
	CPU_INTR_FROM_CPU_1_MAP                      volatile.Register32 // 0xCC
	CPU_INTR_FROM_CPU_2_MAP                      volatile.Register32 // 0xD0
	CPU_INTR_FROM_CPU_3_MAP                      volatile.Register32 // 0xD4
	ASSIST_DEBUG_INTR_MAP                        volatile.Register32 // 0xD8
	DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP     volatile.Register32 // 0xDC
	CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP    volatile.Register32 // 0xE0
	CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP    volatile.Register32 // 0xE4
	CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP      volatile.Register32 // 0xE8
	CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP volatile.Register32 // 0xEC
	BACKUP_PMS_VIOLATE_INTR_MAP                  volatile.Register32 // 0xF0
	CACHE_CORE0_ACS_INT_MAP                      volatile.Register32 // 0xF4
	INTR_STATUS_REG_0                            volatile.Register32 // 0xF8
	INTR_STATUS_REG_1                            volatile.Register32 // 0xFC
	CLOCK_GATE                                   volatile.Register32 // 0x100
	CPU_INT_ENABLE                               volatile.Register32 // 0x104
	CPU_INT_TYPE                                 volatile.Register32 // 0x108
	CPU_INT_CLEAR                                volatile.Register32 // 0x10C
	CPU_INT_EIP_STATUS                           volatile.Register32 // 0x110
	CPU_INT_PRI_0                                volatile.Register32 // 0x114
	CPU_INT_PRI_1                                volatile.Register32 // 0x118
	CPU_INT_PRI_2                                volatile.Register32 // 0x11C
	CPU_INT_PRI_3                                volatile.Register32 // 0x120
	CPU_INT_PRI_4                                volatile.Register32 // 0x124
	CPU_INT_PRI_5                                volatile.Register32 // 0x128
	CPU_INT_PRI_6                                volatile.Register32 // 0x12C
	CPU_INT_PRI_7                                volatile.Register32 // 0x130
	CPU_INT_PRI_8                                volatile.Register32 // 0x134
	CPU_INT_PRI_9                                volatile.Register32 // 0x138
	CPU_INT_PRI_10                               volatile.Register32 // 0x13C
	CPU_INT_PRI_11                               volatile.Register32 // 0x140
	CPU_INT_PRI_12                               volatile.Register32 // 0x144
	CPU_INT_PRI_13                               volatile.Register32 // 0x148
	CPU_INT_PRI_14                               volatile.Register32 // 0x14C
	CPU_INT_PRI_15                               volatile.Register32 // 0x150
	CPU_INT_PRI_16                               volatile.Register32 // 0x154
	CPU_INT_PRI_17                               volatile.Register32 // 0x158
	CPU_INT_PRI_18                               volatile.Register32 // 0x15C
	CPU_INT_PRI_19                               volatile.Register32 // 0x160
	CPU_INT_PRI_20                               volatile.Register32 // 0x164
	CPU_INT_PRI_21                               volatile.Register32 // 0x168
	CPU_INT_PRI_22                               volatile.Register32 // 0x16C
	CPU_INT_PRI_23                               volatile.Register32 // 0x170
	CPU_INT_PRI_24                               volatile.Register32 // 0x174
	CPU_INT_PRI_25                               volatile.Register32 // 0x178
	CPU_INT_PRI_26                               volatile.Register32 // 0x17C
	CPU_INT_PRI_27                               volatile.Register32 // 0x180
	CPU_INT_PRI_28                               volatile.Register32 // 0x184
	CPU_INT_PRI_29                               volatile.Register32 // 0x188
	CPU_INT_PRI_30                               volatile.Register32 // 0x18C
	CPU_INT_PRI_31                               volatile.Register32 // 0x190
	CPU_INT_THRESH                               volatile.Register32 // 0x194
	_                                            [1636]byte
	INTERRUPT_REG_DATE                           volatile.Register32 // 0x7FC
}

// Peripheral IO_MUX
type IO_MUX_Type struct {
	PIN_CTRL volatile.Register32 // 0x0
	GPIO0    volatile.Register32 // 0x4
	GPIO1    volatile.Register32 // 0x8
	GPIO2    volatile.Register32 // 0xC
	GPIO3    volatile.Register32 // 0x10
	GPIO4    volatile.Register32 // 0x14
	GPIO5    volatile.Register32 // 0x18
	GPIO6    volatile.Register32 // 0x1C
	GPIO7    volatile.Register32 // 0x20
	GPIO8    volatile.Register32 // 0x24
	GPIO9    volatile.Register32 // 0x28
	GPIO10   volatile.Register32 // 0x2C
	GPIO11   volatile.Register32 // 0x30
	GPIO12   volatile.Register32 // 0x34
	GPIO13   volatile.Register32 // 0x38
	GPIO14   volatile.Register32 // 0x3C
	GPIO15   volatile.Register32 // 0x40
	GPIO16   volatile.Register32 // 0x44
	GPIO17   volatile.Register32 // 0x48
	GPIO18   volatile.Register32 // 0x4C
	GPIO19   volatile.Register32 // 0x50
	GPIO20   volatile.Register32 // 0x54
	GPIO21   volatile.Register32 // 0x58
	_        [160]byte
	DATE     volatile.Register32 // 0xFC
}

// Peripheral LEDC
type LEDC_Type struct {
	LSCH0_CONF0    volatile.Register32 // 0x0
	LSCH0_HPOINT   volatile.Register32 // 0x4
	LSCH0_DUTY     volatile.Register32 // 0x8
	LSCH0_CONF1    volatile.Register32 // 0xC
	LSCH0_DUTY_R   volatile.Register32 // 0x10
	LSCH1_CONF0    volatile.Register32 // 0x14
	LSCH1_HPOINT   volatile.Register32 // 0x18
	LSCH1_DUTY     volatile.Register32 // 0x1C
	LSCH1_CONF1    volatile.Register32 // 0x20
	LSCH1_DUTY_R   volatile.Register32 // 0x24
	LSCH2_CONF0    volatile.Register32 // 0x28
	LSCH2_HPOINT   volatile.Register32 // 0x2C
	LSCH2_DUTY     volatile.Register32 // 0x30
	LSCH2_CONF1    volatile.Register32 // 0x34
	LSCH2_DUTY_R   volatile.Register32 // 0x38
	LSCH3_CONF0    volatile.Register32 // 0x3C
	LSCH3_HPOINT   volatile.Register32 // 0x40
	LSCH3_DUTY     volatile.Register32 // 0x44
	LSCH3_CONF1    volatile.Register32 // 0x48
	LSCH3_DUTY_R   volatile.Register32 // 0x4C
	LSCH4_CONF0    volatile.Register32 // 0x50
	LSCH4_HPOINT   volatile.Register32 // 0x54
	LSCH4_DUTY     volatile.Register32 // 0x58
	LSCH4_CONF1    volatile.Register32 // 0x5C
	LSCH4_DUTY_R   volatile.Register32 // 0x60
	LSCH5_CONF0    volatile.Register32 // 0x64
	LSCH5_HPOINT   volatile.Register32 // 0x68
	LSCH5_DUTY     volatile.Register32 // 0x6C
	LSCH5_CONF1    volatile.Register32 // 0x70
	LSCH5_DUTY_R   volatile.Register32 // 0x74
	_              [40]byte
	LSTIMER0_CONF  volatile.Register32 // 0xA0
	LSTIMER0_VALUE volatile.Register32 // 0xA4
	LSTIMER1_CONF  volatile.Register32 // 0xA8
	LSTIMER1_VALUE volatile.Register32 // 0xAC
	LSTIMER2_CONF  volatile.Register32 // 0xB0
	LSTIMER2_VALUE volatile.Register32 // 0xB4
	LSTIMER3_CONF  volatile.Register32 // 0xB8
	LSTIMER3_VALUE volatile.Register32 // 0xBC
	INT_RAW        volatile.Register32 // 0xC0
	INT_ST         volatile.Register32 // 0xC4
	INT_ENA        volatile.Register32 // 0xC8
	INT_CLR        volatile.Register32 // 0xCC
	CONF           volatile.Register32 // 0xD0
	_              [40]byte
	DATE           volatile.Register32 // 0xFC
}

// Peripheral RMT
type RMT_Type struct {
	CH0DATA           volatile.Register32 // 0x0
	CH1DATA           volatile.Register32 // 0x4
	CH2DATA           volatile.Register32 // 0x8
	CH3DATA           volatile.Register32 // 0xC
	CH0CONF0          volatile.Register32 // 0x10
	CH1CONF0          volatile.Register32 // 0x14
	CH2CONF0          volatile.Register32 // 0x18
	CH2CONF1          volatile.Register32 // 0x1C
	CH3CONF0          volatile.Register32 // 0x20
	CH3CONF1          volatile.Register32 // 0x24
	CH0STATUS         volatile.Register32 // 0x28
	CH1STATUS         volatile.Register32 // 0x2C
	CH2STATUS         volatile.Register32 // 0x30
	CH3STATUS         volatile.Register32 // 0x34
	INT_RAW           volatile.Register32 // 0x38
	INT_ST            volatile.Register32 // 0x3C
	INT_ENA           volatile.Register32 // 0x40
	INT_CLR           volatile.Register32 // 0x44
	CH0CARRIER_DUTY   volatile.Register32 // 0x48
	CH1CARRIER_DUTY   volatile.Register32 // 0x4C
	CH2_RX_CARRIER_RM volatile.Register32 // 0x50
	CH3_RX_CARRIER_RM volatile.Register32 // 0x54
	CH0_TX_LIM        volatile.Register32 // 0x58
	CH1_TX_LIM        volatile.Register32 // 0x5C
	CH2_RX_LIM        volatile.Register32 // 0x60
	CH3_RX_LIM        volatile.Register32 // 0x64
	SYS_CONF          volatile.Register32 // 0x68
	TX_SIM            volatile.Register32 // 0x6C
	REF_CNT_RST       volatile.Register32 // 0x70
	_                 [88]byte
	DATE              volatile.Register32 // 0xCC
}

// Peripheral RSA
type RSA_Type struct {
	M_MEM             volatile.Register32 // 0x0
	_                 [508]byte
	Z_MEM             volatile.Register32 // 0x200
	_                 [508]byte
	Y_MEM             volatile.Register32 // 0x400
	_                 [508]byte
	X_MEM             volatile.Register32 // 0x600
	_                 [508]byte
	M_PRIME           volatile.Register32 // 0x800
	MODE              volatile.Register32 // 0x804
	QUERY_CLEAN       volatile.Register32 // 0x808
	SET_START_MODEXP  volatile.Register32 // 0x80C
	SET_START_MODMULT volatile.Register32 // 0x810
	SET_START_MULT    volatile.Register32 // 0x814
	QUERY_IDLE        volatile.Register32 // 0x818
	INT_CLR           volatile.Register32 // 0x81C
	CONSTANT_TIME     volatile.Register32 // 0x820
	SEARCH_ENABLE     volatile.Register32 // 0x824
	SEARCH_POS        volatile.Register32 // 0x828
	INT_ENA           volatile.Register32 // 0x82C
	DATE              volatile.Register32 // 0x830
}

// Peripheral RTC_CNTL
type RTC_CNTL_Type struct {
	RTC_OPTIONS0            volatile.Register32 // 0x0
	RTC_SLP_TIMER0          volatile.Register32 // 0x4
	RTC_SLP_TIMER1          volatile.Register32 // 0x8
	RTC_TIME_UPDATE         volatile.Register32 // 0xC
	RTC_TIME_LOW0           volatile.Register32 // 0x10
	RTC_TIME_HIGH0          volatile.Register32 // 0x14
	RTC_STATE0              volatile.Register32 // 0x18
	RTC_TIMER1              volatile.Register32 // 0x1C
	RTC_TIMER2              volatile.Register32 // 0x20
	RTC_TIMER3              volatile.Register32 // 0x24
	RTC_TIMER4              volatile.Register32 // 0x28
	RTC_TIMER5              volatile.Register32 // 0x2C
	RTC_TIMER6              volatile.Register32 // 0x30
	RTC_ANA_CONF            volatile.Register32 // 0x34
	RTC_RESET_STATE         volatile.Register32 // 0x38
	RTC_WAKEUP_STATE        volatile.Register32 // 0x3C
	INT_ENA_RTC             volatile.Register32 // 0x40
	INT_RAW_RTC             volatile.Register32 // 0x44
	INT_ST_RTC              volatile.Register32 // 0x48
	INT_CLR_RTC             volatile.Register32 // 0x4C
	RTC_STORE0              volatile.Register32 // 0x50
	RTC_STORE1              volatile.Register32 // 0x54
	RTC_STORE2              volatile.Register32 // 0x58
	RTC_STORE3              volatile.Register32 // 0x5C
	RTC_EXT_XTL_CONF        volatile.Register32 // 0x60
	RTC_EXT_WAKEUP_CONF     volatile.Register32 // 0x64
	RTC_SLP_REJECT_CONF     volatile.Register32 // 0x68
	RTC_CPU_PERIOD_CONF     volatile.Register32 // 0x6C
	RTC_CLK_CONF            volatile.Register32 // 0x70
	RTC_SLOW_CLK_CONF       volatile.Register32 // 0x74
	RTC_SDIO_CONF           volatile.Register32 // 0x78
	RTC_BIAS_CONF           volatile.Register32 // 0x7C
	RTC                     volatile.Register32 // 0x80
	RTC_PWC                 volatile.Register32 // 0x84
	DIG_PWC                 volatile.Register32 // 0x88
	DIG_ISO                 volatile.Register32 // 0x8C
	RTC_WDTCONFIG0          volatile.Register32 // 0x90
	RTC_WDTCONFIG1          volatile.Register32 // 0x94
	RTC_WDTCONFIG2          volatile.Register32 // 0x98
	RTC_WDTCONFIG3          volatile.Register32 // 0x9C
	RTC_WDTCONFIG4          volatile.Register32 // 0xA0
	RTC_WDTFEED             volatile.Register32 // 0xA4
	RTC_WDTWPROTECT         volatile.Register32 // 0xA8
	RTC_SWD_CONF            volatile.Register32 // 0xAC
	RTC_SWD_WPROTECT        volatile.Register32 // 0xB0
	RTC_SW_CPU_STALL        volatile.Register32 // 0xB4
	RTC_STORE4              volatile.Register32 // 0xB8
	RTC_STORE5              volatile.Register32 // 0xBC
	RTC_STORE6              volatile.Register32 // 0xC0
	RTC_STORE7              volatile.Register32 // 0xC4
	RTC_LOW_POWER_ST        volatile.Register32 // 0xC8
	RTC_DIAG0               volatile.Register32 // 0xCC
	RTC_PAD_HOLD            volatile.Register32 // 0xD0
	DIG_PAD_HOLD            volatile.Register32 // 0xD4
	RTC_BROWN_OUT           volatile.Register32 // 0xD8
	RTC_TIME_LOW1           volatile.Register32 // 0xDC
	RTC_TIME_HIGH1          volatile.Register32 // 0xE0
	RTC_XTAL32K_CLK_FACTOR  volatile.Register32 // 0xE4
	RTC_XTAL32K_CONF        volatile.Register32 // 0xE8
	RTC_USB_CONF            volatile.Register32 // 0xEC
	RTC_SLP_REJECT_CAUSE    volatile.Register32 // 0xF0
	RTC_OPTION1             volatile.Register32 // 0xF4
	RTC_SLP_WAKEUP_CAUSE    volatile.Register32 // 0xF8
	RTC_ULP_CP_TIMER_1      volatile.Register32 // 0xFC
	INT_ENA_RTC_W1TS        volatile.Register32 // 0x100
	INT_ENA_RTC_W1TC        volatile.Register32 // 0x104
	RTC_CNTL_RETENTION_CTRL volatile.Register32 // 0x108
	RTC_FIB_SEL             volatile.Register32 // 0x10C
	RTC_CNTL_GPIO_WAKEUP    volatile.Register32 // 0x110
	RTC_CNTL_DBG_SEL        volatile.Register32 // 0x114
	RTC_CNTL_DBG_MAP        volatile.Register32 // 0x118
	RTC_CNTL_SENSOR_CTRL    volatile.Register32 // 0x11C
	RTC_CNTL_DBG_SAR_SEL    volatile.Register32 // 0x120
	RTC_CNTL_PG_CTRL        volatile.Register32 // 0x124
	_                       [212]byte
	DATE                    volatile.Register32 // 0x1FC
}

// Peripheral SENSITIVE
type SENSITIVE_Type struct {
	ROM_TABLE_LOCK                                volatile.Register32 // 0x0
	ROM_TABLE                                     volatile.Register32 // 0x4
	PRIVILEGE_MODE_SEL_LOCK                       volatile.Register32 // 0x8
	PRIVILEGE_MODE_SEL                            volatile.Register32 // 0xC
	APB_PERIPHERAL_ACCESS_0                       volatile.Register32 // 0x10
	APB_PERIPHERAL_ACCESS_1                       volatile.Register32 // 0x14
	INTERNAL_SRAM_USAGE_0                         volatile.Register32 // 0x18
	INTERNAL_SRAM_USAGE_1                         volatile.Register32 // 0x1C
	INTERNAL_SRAM_USAGE_3                         volatile.Register32 // 0x20
	INTERNAL_SRAM_USAGE_4                         volatile.Register32 // 0x24
	CACHE_TAG_ACCESS_0                            volatile.Register32 // 0x28
	CACHE_TAG_ACCESS_1                            volatile.Register32 // 0x2C
	CACHE_MMU_ACCESS_0                            volatile.Register32 // 0x30
	CACHE_MMU_ACCESS_1                            volatile.Register32 // 0x34
	DMA_APBPERI_SPI2_PMS_CONSTRAIN_0              volatile.Register32 // 0x38
	DMA_APBPERI_SPI2_PMS_CONSTRAIN_1              volatile.Register32 // 0x3C
	DMA_APBPERI_UCHI0_PMS_CONSTRAIN_0             volatile.Register32 // 0x40
	DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1             volatile.Register32 // 0x44
	DMA_APBPERI_I2S0_PMS_CONSTRAIN_0              volatile.Register32 // 0x48
	DMA_APBPERI_I2S0_PMS_CONSTRAIN_1              volatile.Register32 // 0x4C
	DMA_APBPERI_MAC_PMS_CONSTRAIN_0               volatile.Register32 // 0x50
	DMA_APBPERI_MAC_PMS_CONSTRAIN_1               volatile.Register32 // 0x54
	DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0            volatile.Register32 // 0x58
	DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1            volatile.Register32 // 0x5C
	DMA_APBPERI_LC_PMS_CONSTRAIN_0                volatile.Register32 // 0x60
	DMA_APBPERI_LC_PMS_CONSTRAIN_1                volatile.Register32 // 0x64
	DMA_APBPERI_AES_PMS_CONSTRAIN_0               volatile.Register32 // 0x68
	DMA_APBPERI_AES_PMS_CONSTRAIN_1               volatile.Register32 // 0x6C
	DMA_APBPERI_SHA_PMS_CONSTRAIN_0               volatile.Register32 // 0x70
	DMA_APBPERI_SHA_PMS_CONSTRAIN_1               volatile.Register32 // 0x74
	DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0           volatile.Register32 // 0x78
	DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1           volatile.Register32 // 0x7C
	DMA_APBPERI_PMS_MONITOR_0                     volatile.Register32 // 0x80
	DMA_APBPERI_PMS_MONITOR_1                     volatile.Register32 // 0x84
	DMA_APBPERI_PMS_MONITOR_2                     volatile.Register32 // 0x88
	DMA_APBPERI_PMS_MONITOR_3                     volatile.Register32 // 0x8C
	CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0 volatile.Register32 // 0x90
	CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1 volatile.Register32 // 0x94
	CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2 volatile.Register32 // 0x98
	CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3 volatile.Register32 // 0x9C
	CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4 volatile.Register32 // 0xA0
	CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5 volatile.Register32 // 0xA4
	CORE_X_IRAM0_PMS_CONSTRAIN_0                  volatile.Register32 // 0xA8
	CORE_X_IRAM0_PMS_CONSTRAIN_1                  volatile.Register32 // 0xAC
	CORE_X_IRAM0_PMS_CONSTRAIN_2                  volatile.Register32 // 0xB0
	CORE_0_IRAM0_PMS_MONITOR_0                    volatile.Register32 // 0xB4
	CORE_0_IRAM0_PMS_MONITOR_1                    volatile.Register32 // 0xB8
	CORE_0_IRAM0_PMS_MONITOR_2                    volatile.Register32 // 0xBC
	CORE_X_DRAM0_PMS_CONSTRAIN_0                  volatile.Register32 // 0xC0
	CORE_X_DRAM0_PMS_CONSTRAIN_1                  volatile.Register32 // 0xC4
	CORE_0_DRAM0_PMS_MONITOR_0                    volatile.Register32 // 0xC8
	CORE_0_DRAM0_PMS_MONITOR_1                    volatile.Register32 // 0xCC
	CORE_0_DRAM0_PMS_MONITOR_2                    volatile.Register32 // 0xD0
	CORE_0_DRAM0_PMS_MONITOR_3                    volatile.Register32 // 0xD4
	CORE_0_PIF_PMS_CONSTRAIN_0                    volatile.Register32 // 0xD8
	CORE_0_PIF_PMS_CONSTRAIN_1                    volatile.Register32 // 0xDC
	CORE_0_PIF_PMS_CONSTRAIN_2                    volatile.Register32 // 0xE0
	CORE_0_PIF_PMS_CONSTRAIN_3                    volatile.Register32 // 0xE4
	CORE_0_PIF_PMS_CONSTRAIN_4                    volatile.Register32 // 0xE8
	CORE_0_PIF_PMS_CONSTRAIN_5                    volatile.Register32 // 0xEC
	CORE_0_PIF_PMS_CONSTRAIN_6                    volatile.Register32 // 0xF0
	CORE_0_PIF_PMS_CONSTRAIN_7                    volatile.Register32 // 0xF4
	CORE_0_PIF_PMS_CONSTRAIN_8                    volatile.Register32 // 0xF8
	CORE_0_PIF_PMS_CONSTRAIN_9                    volatile.Register32 // 0xFC
	CORE_0_PIF_PMS_CONSTRAIN_10                   volatile.Register32 // 0x100
	REGION_PMS_CONSTRAIN_0                        volatile.Register32 // 0x104
	REGION_PMS_CONSTRAIN_1                        volatile.Register32 // 0x108
	REGION_PMS_CONSTRAIN_2                        volatile.Register32 // 0x10C
	REGION_PMS_CONSTRAIN_3                        volatile.Register32 // 0x110
	REGION_PMS_CONSTRAIN_4                        volatile.Register32 // 0x114
	REGION_PMS_CONSTRAIN_5                        volatile.Register32 // 0x118
	REGION_PMS_CONSTRAIN_6                        volatile.Register32 // 0x11C
	REGION_PMS_CONSTRAIN_7                        volatile.Register32 // 0x120
	REGION_PMS_CONSTRAIN_8                        volatile.Register32 // 0x124
	REGION_PMS_CONSTRAIN_9                        volatile.Register32 // 0x128
	REGION_PMS_CONSTRAIN_10                       volatile.Register32 // 0x12C
	CORE_0_PIF_PMS_MONITOR_0                      volatile.Register32 // 0x130
	CORE_0_PIF_PMS_MONITOR_1                      volatile.Register32 // 0x134
	CORE_0_PIF_PMS_MONITOR_2                      volatile.Register32 // 0x138
	CORE_0_PIF_PMS_MONITOR_3                      volatile.Register32 // 0x13C
	CORE_0_PIF_PMS_MONITOR_4                      volatile.Register32 // 0x140
	CORE_0_PIF_PMS_MONITOR_5                      volatile.Register32 // 0x144
	CORE_0_PIF_PMS_MONITOR_6                      volatile.Register32 // 0x148
	BACKUP_BUS_PMS_CONSTRAIN_0                    volatile.Register32 // 0x14C
	BACKUP_BUS_PMS_CONSTRAIN_1                    volatile.Register32 // 0x150
	BACKUP_BUS_PMS_CONSTRAIN_2                    volatile.Register32 // 0x154
	BACKUP_BUS_PMS_CONSTRAIN_3                    volatile.Register32 // 0x158
	BACKUP_BUS_PMS_CONSTRAIN_4                    volatile.Register32 // 0x15C
	BACKUP_BUS_PMS_MONITOR_0                      volatile.Register32 // 0x160
	BACKUP_BUS_PMS_MONITOR_1                      volatile.Register32 // 0x164
	BACKUP_BUS_PMS_MONITOR_2                      volatile.Register32 // 0x168
	BACKUP_BUS_PMS_MONITOR_3                      volatile.Register32 // 0x16C
	CLOCK_GATE                                    volatile.Register32 // 0x170
	_                                             [3720]byte
	DATE                                          volatile.Register32 // 0xFFC
}

// Peripheral SHA
type SHA_Type struct {
	MODE          volatile.Register32 // 0x0
	T_STRING      volatile.Register32 // 0x4
	T_LENGTH      volatile.Register32 // 0x8
	DMA_BLOCK_NUM volatile.Register32 // 0xC
	START         volatile.Register32 // 0x10
	CONTINUE      volatile.Register32 // 0x14
	BUSY          volatile.Register32 // 0x18
	DMA_START     volatile.Register32 // 0x1C
	DMA_CONTINUE  volatile.Register32 // 0x20
	CLEAR_IRQ     volatile.Register32 // 0x24
	IRQ_ENA       volatile.Register32 // 0x28
	DATE          volatile.Register32 // 0x2C
	_             [16]byte
	H_MEM         volatile.Register32 // 0x40
	_             [60]byte
	M_MEM         volatile.Register32 // 0x80
}

// Peripheral SPI0
type SPI0_Type struct {
	_            [8]byte
	CTRL         volatile.Register32 // 0x8
	CTRL1        volatile.Register32 // 0xC
	CTRL2        volatile.Register32 // 0x10
	CLOCK        volatile.Register32 // 0x14
	USER         volatile.Register32 // 0x18
	USER1        volatile.Register32 // 0x1C
	USER2        volatile.Register32 // 0x20
	_            [8]byte
	RD_STATUS    volatile.Register32 // 0x2C
	_            [4]byte
	MISC         volatile.Register32 // 0x34
	_            [4]byte
	CACHE_FCTRL  volatile.Register32 // 0x3C
	_            [20]byte
	FSM          volatile.Register32 // 0x54
	_            [80]byte
	TIMING_CALI  volatile.Register32 // 0xA8
	DIN_MODE     volatile.Register32 // 0xAC
	DIN_NUM      volatile.Register32 // 0xB0
	DOUT_MODE    volatile.Register32 // 0xB4
	_            [36]byte
	CLOCK_GATE   volatile.Register32 // 0xDC
	CORE_CLK_SEL volatile.Register32 // 0xE0
	_            [792]byte
	DATE         volatile.Register32 // 0x3FC
}

// Peripheral SPI1
type SPI1_Type struct {
	CMD              volatile.Register32 // 0x0
	ADDR             volatile.Register32 // 0x4
	CTRL             volatile.Register32 // 0x8
	CTRL1            volatile.Register32 // 0xC
	CTRL2            volatile.Register32 // 0x10
	CLOCK            volatile.Register32 // 0x14
	USER             volatile.Register32 // 0x18
	USER1            volatile.Register32 // 0x1C
	USER2            volatile.Register32 // 0x20
	MOSI_DLEN        volatile.Register32 // 0x24
	MISO_DLEN        volatile.Register32 // 0x28
	RD_STATUS        volatile.Register32 // 0x2C
	_                [4]byte
	MISC             volatile.Register32 // 0x34
	TX_CRC           volatile.Register32 // 0x38
	CACHE_FCTRL      volatile.Register32 // 0x3C
	_                [24]byte
	W0               volatile.Register32 // 0x58
	W1               volatile.Register32 // 0x5C
	W2               volatile.Register32 // 0x60
	W3               volatile.Register32 // 0x64
	W4               volatile.Register32 // 0x68
	W5               volatile.Register32 // 0x6C
	W6               volatile.Register32 // 0x70
	W7               volatile.Register32 // 0x74
	W8               volatile.Register32 // 0x78
	W9               volatile.Register32 // 0x7C
	W10              volatile.Register32 // 0x80
	W11              volatile.Register32 // 0x84
	W12              volatile.Register32 // 0x88
	W13              volatile.Register32 // 0x8C
	W14              volatile.Register32 // 0x90
	W15              volatile.Register32 // 0x94
	FLASH_WAITI_CTRL volatile.Register32 // 0x98
	FLASH_SUS_CTRL   volatile.Register32 // 0x9C
	FLASH_SUS_CMD    volatile.Register32 // 0xA0
	SUS_STATUS       volatile.Register32 // 0xA4
	TIMING_CALI      volatile.Register32 // 0xA8
	_                [20]byte
	INT_ENA          volatile.Register32 // 0xC0
	INT_CLR          volatile.Register32 // 0xC4
	INT_RAW          volatile.Register32 // 0xC8
	INT_ST           volatile.Register32 // 0xCC
	_                [12]byte
	CLOCK_GATE       volatile.Register32 // 0xDC
	_                [796]byte
	DATE             volatile.Register32 // 0x3FC
}

// Peripheral SPI2
type SPI2_Type struct {
	CMD         volatile.Register32 // 0x0
	ADDR        volatile.Register32 // 0x4
	CTRL        volatile.Register32 // 0x8
	CLOCK       volatile.Register32 // 0xC
	USER        volatile.Register32 // 0x10
	USER1       volatile.Register32 // 0x14
	USER2       volatile.Register32 // 0x18
	MS_DLEN     volatile.Register32 // 0x1C
	MISC        volatile.Register32 // 0x20
	DIN_MODE    volatile.Register32 // 0x24
	DIN_NUM     volatile.Register32 // 0x28
	DOUT_MODE   volatile.Register32 // 0x2C
	DMA_CONF    volatile.Register32 // 0x30
	DMA_INT_ENA volatile.Register32 // 0x34
	DMA_INT_CLR volatile.Register32 // 0x38
	DMA_INT_RAW volatile.Register32 // 0x3C
	DMA_INT_ST  volatile.Register32 // 0x40
	_           [84]byte
	W0          volatile.Register32 // 0x98
	W1          volatile.Register32 // 0x9C
	W2          volatile.Register32 // 0xA0
	W3          volatile.Register32 // 0xA4
	W4          volatile.Register32 // 0xA8
	W5          volatile.Register32 // 0xAC
	W6          volatile.Register32 // 0xB0
	W7          volatile.Register32 // 0xB4
	W8          volatile.Register32 // 0xB8
	W9          volatile.Register32 // 0xBC
	W10         volatile.Register32 // 0xC0
	W11         volatile.Register32 // 0xC4
	W12         volatile.Register32 // 0xC8
	W13         volatile.Register32 // 0xCC
	W14         volatile.Register32 // 0xD0
	W15         volatile.Register32 // 0xD4
	_           [8]byte
	SLAVE       volatile.Register32 // 0xE0
	SLAVE1      volatile.Register32 // 0xE4
	CLK_GATE    volatile.Register32 // 0xE8
	_           [4]byte
	DATE        volatile.Register32 // 0xF0
}

// Peripheral SYSTEM
type SYSTEM_Type struct {
	CPU_PERI_CLK_EN                         volatile.Register32 // 0x0
	CPU_PERI_RST_EN                         volatile.Register32 // 0x4
	CPU_PER_CONF                            volatile.Register32 // 0x8
	MEM_PD_MASK                             volatile.Register32 // 0xC
	PERIP_CLK_EN0                           volatile.Register32 // 0x10
	PERIP_CLK_EN1                           volatile.Register32 // 0x14
	PERIP_RST_EN0                           volatile.Register32 // 0x18
	PERIP_RST_EN1                           volatile.Register32 // 0x1C
	BT_LPCK_DIV_INT                         volatile.Register32 // 0x20
	BT_LPCK_DIV_FRAC                        volatile.Register32 // 0x24
	CPU_INTR_FROM_CPU_0                     volatile.Register32 // 0x28
	CPU_INTR_FROM_CPU_1                     volatile.Register32 // 0x2C
	CPU_INTR_FROM_CPU_2                     volatile.Register32 // 0x30
	CPU_INTR_FROM_CPU_3                     volatile.Register32 // 0x34
	RSA_PD_CTRL                             volatile.Register32 // 0x38
	EDMA_CTRL                               volatile.Register32 // 0x3C
	CACHE_CONTROL                           volatile.Register32 // 0x40
	EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL volatile.Register32 // 0x44
	RTC_FASTMEM_CONFIG                      volatile.Register32 // 0x48
	RTC_FASTMEM_CRC                         volatile.Register32 // 0x4C
	REDUNDANT_ECO_CTRL                      volatile.Register32 // 0x50
	CLOCK_GATE                              volatile.Register32 // 0x54
	SYSCLK_CONF                             volatile.Register32 // 0x58
	MEM_PVT                                 volatile.Register32 // 0x5C
	COMB_PVT_LVT_CONF                       volatile.Register32 // 0x60
	COMB_PVT_NVT_CONF                       volatile.Register32 // 0x64
	COMB_PVT_HVT_CONF                       volatile.Register32 // 0x68
	COMB_PVT_ERR_LVT_SITE0                  volatile.Register32 // 0x6C
	COMB_PVT_ERR_NVT_SITE0                  volatile.Register32 // 0x70
	COMB_PVT_ERR_HVT_SITE0                  volatile.Register32 // 0x74
	COMB_PVT_ERR_LVT_SITE1                  volatile.Register32 // 0x78
	COMB_PVT_ERR_NVT_SITE1                  volatile.Register32 // 0x7C
	COMB_PVT_ERR_HVT_SITE1                  volatile.Register32 // 0x80
	COMB_PVT_ERR_LVT_SITE2                  volatile.Register32 // 0x84
	COMB_PVT_ERR_NVT_SITE2                  volatile.Register32 // 0x88
	COMB_PVT_ERR_HVT_SITE2                  volatile.Register32 // 0x8C
	COMB_PVT_ERR_LVT_SITE3                  volatile.Register32 // 0x90
	COMB_PVT_ERR_NVT_SITE3                  volatile.Register32 // 0x94
	COMB_PVT_ERR_HVT_SITE3                  volatile.Register32 // 0x98
	_                                       [3936]byte
	SYSTEM_REG_DATE                         volatile.Register32 // 0xFFC
}

// Peripheral SYSTIMER
type SYSTIMER_Type struct {
	CONF           volatile.Register32 // 0x0
	UNIT0_OP       volatile.Register32 // 0x4
	UNIT1_OP       volatile.Register32 // 0x8
	UNIT0_LOAD_HI  volatile.Register32 // 0xC
	UNIT0_LOAD_LO  volatile.Register32 // 0x10
	UNIT1_LOAD_HI  volatile.Register32 // 0x14
	UNIT1_LOAD_LO  volatile.Register32 // 0x18
	TARGET0_HI     volatile.Register32 // 0x1C
	TARGET0_LO     volatile.Register32 // 0x20
	TARGET1_HI     volatile.Register32 // 0x24
	TARGET1_LO     volatile.Register32 // 0x28
	TARGET2_HI     volatile.Register32 // 0x2C
	TARGET2_LO     volatile.Register32 // 0x30
	TARGET0_CONF   volatile.Register32 // 0x34
	TARGET1_CONF   volatile.Register32 // 0x38
	TARGET2_CONF   volatile.Register32 // 0x3C
	UNIT0_VALUE_HI volatile.Register32 // 0x40
	UNIT0_VALUE_LO volatile.Register32 // 0x44
	UNIT1_VALUE_HI volatile.Register32 // 0x48
	UNIT1_VALUE_LO volatile.Register32 // 0x4C
	COMP0_LOAD     volatile.Register32 // 0x50
	COMP1_LOAD     volatile.Register32 // 0x54
	COMP2_LOAD     volatile.Register32 // 0x58
	UNIT0_LOAD     volatile.Register32 // 0x5C
	UNIT1_LOAD     volatile.Register32 // 0x60
	INT_ENA        volatile.Register32 // 0x64
	INT_RAW        volatile.Register32 // 0x68
	INT_CLR        volatile.Register32 // 0x6C
	INT_ST         volatile.Register32 // 0x70
	_              [136]byte
	DATE           volatile.Register32 // 0xFC
}

// Peripheral TIMG
type TIMG_Type struct {
	T0CONFIG     volatile.Register32 // 0x0
	T0LO         volatile.Register32 // 0x4
	T0HI         volatile.Register32 // 0x8
	T0UPDATE     volatile.Register32 // 0xC
	T0ALARMLO    volatile.Register32 // 0x10
	T0ALARMHI    volatile.Register32 // 0x14
	T0LOADLO     volatile.Register32 // 0x18
	T0LOADHI     volatile.Register32 // 0x1C
	T0LOAD       volatile.Register32 // 0x20
	_            [36]byte
	WDTCONFIG0   volatile.Register32 // 0x48
	WDTCONFIG1   volatile.Register32 // 0x4C
	WDTCONFIG2   volatile.Register32 // 0x50
	WDTCONFIG3   volatile.Register32 // 0x54
	WDTCONFIG4   volatile.Register32 // 0x58
	WDTCONFIG5   volatile.Register32 // 0x5C
	WDTFEED      volatile.Register32 // 0x60
	WDTWPROTECT  volatile.Register32 // 0x64
	RTCCALICFG   volatile.Register32 // 0x68
	RTCCALICFG1  volatile.Register32 // 0x6C
	INT_ENA_TIMG volatile.Register32 // 0x70
	INT_RAW_TIMG volatile.Register32 // 0x74
	INT_ST_TIMG  volatile.Register32 // 0x78
	INT_CLR_TIMG volatile.Register32 // 0x7C
	RTCCALICFG2  volatile.Register32 // 0x80
	_            [116]byte
	NTIMG_DATE   volatile.Register32 // 0xF8
	REGCLK       volatile.Register32 // 0xFC
}

// Peripheral UART
type UART_Type struct {
	FIFO           volatile.Register32 // 0x0
	INT_RAW        volatile.Register32 // 0x4
	INT_ST         volatile.Register32 // 0x8
	INT_ENA        volatile.Register32 // 0xC
	INT_CLR        volatile.Register32 // 0x10
	CLKDIV         volatile.Register32 // 0x14
	RX_FILT        volatile.Register32 // 0x18
	STATUS         volatile.Register32 // 0x1C
	CONF0          volatile.Register32 // 0x20
	CONF1          volatile.Register32 // 0x24
	LOWPULSE       volatile.Register32 // 0x28
	HIGHPULSE      volatile.Register32 // 0x2C
	RXD_CNT        volatile.Register32 // 0x30
	FLOW_CONF      volatile.Register32 // 0x34
	SLEEP_CONF     volatile.Register32 // 0x38
	SWFC_CONF0     volatile.Register32 // 0x3C
	SWFC_CONF1     volatile.Register32 // 0x40
	TXBRK_CONF     volatile.Register32 // 0x44
	IDLE_CONF      volatile.Register32 // 0x48
	RS485_CONF     volatile.Register32 // 0x4C
	AT_CMD_PRECNT  volatile.Register32 // 0x50
	AT_CMD_POSTCNT volatile.Register32 // 0x54
	AT_CMD_GAPTOUT volatile.Register32 // 0x58
	AT_CMD_CHAR    volatile.Register32 // 0x5C
	MEM_CONF       volatile.Register32 // 0x60
	MEM_TX_STATUS  volatile.Register32 // 0x64
	MEM_RX_STATUS  volatile.Register32 // 0x68
	FSM_STATUS     volatile.Register32 // 0x6C
	POSPULSE       volatile.Register32 // 0x70
	NEGPULSE       volatile.Register32 // 0x74
	CLK_CONF       volatile.Register32 // 0x78
	DATE           volatile.Register32 // 0x7C
	ID             volatile.Register32 // 0x80
}

// Peripheral UHCI
type UHCI_Type struct {
	CONF0        volatile.Register32 // 0x0
	INT_RAW      volatile.Register32 // 0x4
	INT_ST       volatile.Register32 // 0x8
	INT_ENA      volatile.Register32 // 0xC
	INT_CLR      volatile.Register32 // 0x10
	CONF1        volatile.Register32 // 0x14
	STATE0       volatile.Register32 // 0x18
	STATE1       volatile.Register32 // 0x1C
	ESCAPE_CONF  volatile.Register32 // 0x20
	HUNG_CONF    volatile.Register32 // 0x24
	ACK_NUM      volatile.Register32 // 0x28
	RX_HEAD      volatile.Register32 // 0x2C
	QUICK_SENT   volatile.Register32 // 0x30
	REG_Q0_WORD0 volatile.Register32 // 0x34
	REG_Q0_WORD1 volatile.Register32 // 0x38
	REG_Q1_WORD0 volatile.Register32 // 0x3C
	REG_Q1_WORD1 volatile.Register32 // 0x40
	REG_Q2_WORD0 volatile.Register32 // 0x44
	REG_Q2_WORD1 volatile.Register32 // 0x48
	REG_Q3_WORD0 volatile.Register32 // 0x4C
	REG_Q3_WORD1 volatile.Register32 // 0x50
	REG_Q4_WORD0 volatile.Register32 // 0x54
	REG_Q4_WORD1 volatile.Register32 // 0x58
	REG_Q5_WORD0 volatile.Register32 // 0x5C
	REG_Q5_WORD1 volatile.Register32 // 0x60
	REG_Q6_WORD0 volatile.Register32 // 0x64
	REG_Q6_WORD1 volatile.Register32 // 0x68
	ESC_CONF0    volatile.Register32 // 0x6C
	ESC_CONF1    volatile.Register32 // 0x70
	ESC_CONF2    volatile.Register32 // 0x74
	ESC_CONF3    volatile.Register32 // 0x78
	PKT_THRES    volatile.Register32 // 0x7C
	DATE         volatile.Register32 // 0x80
}

// Peripheral USB_DEVICE
type USB_DEVICE_Type struct {
	EP1        volatile.Register32 // 0x0
	EP1_CONF   volatile.Register32 // 0x4
	INT_RAW    volatile.Register32 // 0x8
	INT_ST     volatile.Register32 // 0xC
	INT_ENA    volatile.Register32 // 0x10
	INT_CLR    volatile.Register32 // 0x14
	CONF0      volatile.Register32 // 0x18
	TEST       volatile.Register32 // 0x1C
	JFIFO_ST   volatile.Register32 // 0x20
	FRAM_NUM   volatile.Register32 // 0x24
	IN_EP0_ST  volatile.Register32 // 0x28
	IN_EP1_ST  volatile.Register32 // 0x2C
	IN_EP2_ST  volatile.Register32 // 0x30
	IN_EP3_ST  volatile.Register32 // 0x34
	OUT_EP0_ST volatile.Register32 // 0x38
	OUT_EP1_ST volatile.Register32 // 0x3C
	OUT_EP2_ST volatile.Register32 // 0x40
	MISC_CONF  volatile.Register32 // 0x44
	MEM_CONF   volatile.Register32 // 0x48
	_          [52]byte
	DATE       volatile.Register32 // 0x80
}

// Peripheral XTS_AES
type XTS_AES_Type struct {
	PLAIN_MEM        volatile.Register32 // 0x0
	_                [60]byte
	LINESIZE         volatile.Register32 // 0x40
	DESTINATION      volatile.Register32 // 0x44
	PHYSICAL_ADDRESS volatile.Register32 // 0x48
	TRIGGER          volatile.Register32 // 0x4C
	RELEASE          volatile.Register32 // 0x50
	DESTROY          volatile.Register32 // 0x54
	STATE            volatile.Register32 // 0x58
	DATE             volatile.Register32 // 0x5C
}

// Bitfields for AES: Peripheral AES
const (
	// KEY_0: Key material key_0 configure register
	// Position of KEY_0 field.
	AES_KEY_0_KEY_0_Pos = 0x0
	// Bit mask of KEY_0 field.
	AES_KEY_0_KEY_0_Msk = 0xffffffff

	// KEY_1: Key material key_1 configure register
	// Position of KEY_1 field.
	AES_KEY_1_KEY_1_Pos = 0x0
	// Bit mask of KEY_1 field.
	AES_KEY_1_KEY_1_Msk = 0xffffffff

	// KEY_2: Key material key_2 configure register
	// Position of KEY_2 field.
	AES_KEY_2_KEY_2_Pos = 0x0
	// Bit mask of KEY_2 field.
	AES_KEY_2_KEY_2_Msk = 0xffffffff

	// KEY_3: Key material key_3 configure register
	// Position of KEY_3 field.
	AES_KEY_3_KEY_3_Pos = 0x0
	// Bit mask of KEY_3 field.
	AES_KEY_3_KEY_3_Msk = 0xffffffff

	// KEY_4: Key material key_4 configure register
	// Position of KEY_4 field.
	AES_KEY_4_KEY_4_Pos = 0x0
	// Bit mask of KEY_4 field.
	AES_KEY_4_KEY_4_Msk = 0xffffffff

	// KEY_5: Key material key_5 configure register
	// Position of KEY_5 field.
	AES_KEY_5_KEY_5_Pos = 0x0
	// Bit mask of KEY_5 field.
	AES_KEY_5_KEY_5_Msk = 0xffffffff

	// KEY_6: Key material key_6 configure register
	// Position of KEY_6 field.
	AES_KEY_6_KEY_6_Pos = 0x0
	// Bit mask of KEY_6 field.
	AES_KEY_6_KEY_6_Msk = 0xffffffff

	// KEY_7: Key material key_7 configure register
	// Position of KEY_7 field.
	AES_KEY_7_KEY_7_Pos = 0x0
	// Bit mask of KEY_7 field.
	AES_KEY_7_KEY_7_Msk = 0xffffffff

	// TEXT_IN_0: source text material text_in_0 configure register
	// Position of TEXT_IN_0 field.
	AES_TEXT_IN_0_TEXT_IN_0_Pos = 0x0
	// Bit mask of TEXT_IN_0 field.
	AES_TEXT_IN_0_TEXT_IN_0_Msk = 0xffffffff

	// TEXT_IN_1: source text material text_in_1 configure register
	// Position of TEXT_IN_1 field.
	AES_TEXT_IN_1_TEXT_IN_1_Pos = 0x0
	// Bit mask of TEXT_IN_1 field.
	AES_TEXT_IN_1_TEXT_IN_1_Msk = 0xffffffff

	// TEXT_IN_2: source text material text_in_2 configure register
	// Position of TEXT_IN_2 field.
	AES_TEXT_IN_2_TEXT_IN_2_Pos = 0x0
	// Bit mask of TEXT_IN_2 field.
	AES_TEXT_IN_2_TEXT_IN_2_Msk = 0xffffffff

	// TEXT_IN_3: source text material text_in_3 configure register
	// Position of TEXT_IN_3 field.
	AES_TEXT_IN_3_TEXT_IN_3_Pos = 0x0
	// Bit mask of TEXT_IN_3 field.
	AES_TEXT_IN_3_TEXT_IN_3_Msk = 0xffffffff

	// TEXT_OUT_0: result text material text_out_0 configure register
	// Position of TEXT_OUT_0 field.
	AES_TEXT_OUT_0_TEXT_OUT_0_Pos = 0x0
	// Bit mask of TEXT_OUT_0 field.
	AES_TEXT_OUT_0_TEXT_OUT_0_Msk = 0xffffffff

	// TEXT_OUT_1: result text material text_out_1 configure register
	// Position of TEXT_OUT_1 field.
	AES_TEXT_OUT_1_TEXT_OUT_1_Pos = 0x0
	// Bit mask of TEXT_OUT_1 field.
	AES_TEXT_OUT_1_TEXT_OUT_1_Msk = 0xffffffff

	// TEXT_OUT_2: result text material text_out_2 configure register
	// Position of TEXT_OUT_2 field.
	AES_TEXT_OUT_2_TEXT_OUT_2_Pos = 0x0
	// Bit mask of TEXT_OUT_2 field.
	AES_TEXT_OUT_2_TEXT_OUT_2_Msk = 0xffffffff

	// TEXT_OUT_3: result text material text_out_3 configure register
	// Position of TEXT_OUT_3 field.
	AES_TEXT_OUT_3_TEXT_OUT_3_Pos = 0x0
	// Bit mask of TEXT_OUT_3 field.
	AES_TEXT_OUT_3_TEXT_OUT_3_Msk = 0xffffffff

	// MODE: AES Mode register
	// Position of MODE field.
	AES_MODE_MODE_Pos = 0x0
	// Bit mask of MODE field.
	AES_MODE_MODE_Msk = 0x7

	// ENDIAN: AES Endian configure register
	// Position of ENDIAN field.
	AES_ENDIAN_ENDIAN_Pos = 0x0
	// Bit mask of ENDIAN field.
	AES_ENDIAN_ENDIAN_Msk = 0x3f

	// TRIGGER: AES trigger register
	// Position of TRIGGER field.
	AES_TRIGGER_TRIGGER_Pos = 0x0
	// Bit mask of TRIGGER field.
	AES_TRIGGER_TRIGGER_Msk = 0x1
	// Bit TRIGGER.
	AES_TRIGGER_TRIGGER = 0x1

	// STATE: AES state register
	// Position of STATE field.
	AES_STATE_STATE_Pos = 0x0
	// Bit mask of STATE field.
	AES_STATE_STATE_Msk = 0x3

	// DMA_ENABLE: DMA-AES working mode register
	// Position of DMA_ENABLE field.
	AES_DMA_ENABLE_DMA_ENABLE_Pos = 0x0
	// Bit mask of DMA_ENABLE field.
	AES_DMA_ENABLE_DMA_ENABLE_Msk = 0x1
	// Bit DMA_ENABLE.
	AES_DMA_ENABLE_DMA_ENABLE = 0x1

	// BLOCK_MODE: AES cipher block mode register
	// Position of BLOCK_MODE field.
	AES_BLOCK_MODE_BLOCK_MODE_Pos = 0x0
	// Bit mask of BLOCK_MODE field.
	AES_BLOCK_MODE_BLOCK_MODE_Msk = 0x7

	// BLOCK_NUM: AES block number register
	// Position of BLOCK_NUM field.
	AES_BLOCK_NUM_BLOCK_NUM_Pos = 0x0
	// Bit mask of BLOCK_NUM field.
	AES_BLOCK_NUM_BLOCK_NUM_Msk = 0xffffffff

	// INC_SEL: Standard incrementing function configure register
	// Position of INC_SEL field.
	AES_INC_SEL_INC_SEL_Pos = 0x0
	// Bit mask of INC_SEL field.
	AES_INC_SEL_INC_SEL_Msk = 0x1
	// Bit INC_SEL.
	AES_INC_SEL_INC_SEL = 0x1

	// AAD_BLOCK_NUM: Additional Authential Data block number register
	// Position of AAD_BLOCK_NUM field.
	AES_AAD_BLOCK_NUM_AAD_BLOCK_NUM_Pos = 0x0
	// Bit mask of AAD_BLOCK_NUM field.
	AES_AAD_BLOCK_NUM_AAD_BLOCK_NUM_Msk = 0xffffffff

	// REMAINDER_BIT_NUM: AES remainder bit number register
	// Position of REMAINDER_BIT_NUM field.
	AES_REMAINDER_BIT_NUM_REMAINDER_BIT_NUM_Pos = 0x0
	// Bit mask of REMAINDER_BIT_NUM field.
	AES_REMAINDER_BIT_NUM_REMAINDER_BIT_NUM_Msk = 0x7f

	// CONTINUE: AES continue register
	// Position of CONTINUE field.
	AES_CONTINUE_CONTINUE_Pos = 0x0
	// Bit mask of CONTINUE field.
	AES_CONTINUE_CONTINUE_Msk = 0x1
	// Bit CONTINUE.
	AES_CONTINUE_CONTINUE = 0x1

	// INT_CLEAR: AES Interrupt clear register
	// Position of INT_CLEAR field.
	AES_INT_CLEAR_INT_CLEAR_Pos = 0x0
	// Bit mask of INT_CLEAR field.
	AES_INT_CLEAR_INT_CLEAR_Msk = 0x1
	// Bit INT_CLEAR.
	AES_INT_CLEAR_INT_CLEAR = 0x1

	// INT_ENA: AES Interrupt enable register
	// Position of INT_ENA field.
	AES_INT_ENA_INT_ENA_Pos = 0x0
	// Bit mask of INT_ENA field.
	AES_INT_ENA_INT_ENA_Msk = 0x1
	// Bit INT_ENA.
	AES_INT_ENA_INT_ENA = 0x1

	// DATE: AES version control register
	// Position of DATE field.
	AES_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	AES_DATE_DATE_Msk = 0x3fffffff

	// DMA_EXIT: AES-DMA exit config
	// Position of DMA_EXIT field.
	AES_DMA_EXIT_DMA_EXIT_Pos = 0x0
	// Bit mask of DMA_EXIT field.
	AES_DMA_EXIT_DMA_EXIT_Msk = 0x1
	// Bit DMA_EXIT.
	AES_DMA_EXIT_DMA_EXIT = 0x1
)

// Bitfields for APB_CTRL: Peripheral APB_CTRL
const (
	// SYSCLK_CONF: APB_CTRL_SYSCLK_CONF_REG
	// Position of PRE_DIV_CNT field.
	APB_CTRL_SYSCLK_CONF_PRE_DIV_CNT_Pos = 0x0
	// Bit mask of PRE_DIV_CNT field.
	APB_CTRL_SYSCLK_CONF_PRE_DIV_CNT_Msk = 0x3ff
	// Position of CLK_320M_EN field.
	APB_CTRL_SYSCLK_CONF_CLK_320M_EN_Pos = 0xa
	// Bit mask of CLK_320M_EN field.
	APB_CTRL_SYSCLK_CONF_CLK_320M_EN_Msk = 0x400
	// Bit CLK_320M_EN.
	APB_CTRL_SYSCLK_CONF_CLK_320M_EN = 0x400
	// Position of CLK_EN field.
	APB_CTRL_SYSCLK_CONF_CLK_EN_Pos = 0xb
	// Bit mask of CLK_EN field.
	APB_CTRL_SYSCLK_CONF_CLK_EN_Msk = 0x800
	// Bit CLK_EN.
	APB_CTRL_SYSCLK_CONF_CLK_EN = 0x800
	// Position of RST_TICK_CNT field.
	APB_CTRL_SYSCLK_CONF_RST_TICK_CNT_Pos = 0xc
	// Bit mask of RST_TICK_CNT field.
	APB_CTRL_SYSCLK_CONF_RST_TICK_CNT_Msk = 0x1000
	// Bit RST_TICK_CNT.
	APB_CTRL_SYSCLK_CONF_RST_TICK_CNT = 0x1000

	// TICK_CONF: APB_CTRL_TICK_CONF_REG
	// Position of XTAL_TICK_NUM field.
	APB_CTRL_TICK_CONF_XTAL_TICK_NUM_Pos = 0x0
	// Bit mask of XTAL_TICK_NUM field.
	APB_CTRL_TICK_CONF_XTAL_TICK_NUM_Msk = 0xff
	// Position of CK8M_TICK_NUM field.
	APB_CTRL_TICK_CONF_CK8M_TICK_NUM_Pos = 0x8
	// Bit mask of CK8M_TICK_NUM field.
	APB_CTRL_TICK_CONF_CK8M_TICK_NUM_Msk = 0xff00
	// Position of TICK_ENABLE field.
	APB_CTRL_TICK_CONF_TICK_ENABLE_Pos = 0x10
	// Bit mask of TICK_ENABLE field.
	APB_CTRL_TICK_CONF_TICK_ENABLE_Msk = 0x10000
	// Bit TICK_ENABLE.
	APB_CTRL_TICK_CONF_TICK_ENABLE = 0x10000

	// CLK_OUT_EN: APB_CTRL_CLK_OUT_EN_REG
	// Position of CLK20_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK20_OEN_Pos = 0x0
	// Bit mask of CLK20_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK20_OEN_Msk = 0x1
	// Bit CLK20_OEN.
	APB_CTRL_CLK_OUT_EN_CLK20_OEN = 0x1
	// Position of CLK22_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK22_OEN_Pos = 0x1
	// Bit mask of CLK22_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK22_OEN_Msk = 0x2
	// Bit CLK22_OEN.
	APB_CTRL_CLK_OUT_EN_CLK22_OEN = 0x2
	// Position of CLK44_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK44_OEN_Pos = 0x2
	// Bit mask of CLK44_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK44_OEN_Msk = 0x4
	// Bit CLK44_OEN.
	APB_CTRL_CLK_OUT_EN_CLK44_OEN = 0x4
	// Position of CLK_BB_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_BB_OEN_Pos = 0x3
	// Bit mask of CLK_BB_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_BB_OEN_Msk = 0x8
	// Bit CLK_BB_OEN.
	APB_CTRL_CLK_OUT_EN_CLK_BB_OEN = 0x8
	// Position of CLK80_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK80_OEN_Pos = 0x4
	// Bit mask of CLK80_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK80_OEN_Msk = 0x10
	// Bit CLK80_OEN.
	APB_CTRL_CLK_OUT_EN_CLK80_OEN = 0x10
	// Position of CLK160_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK160_OEN_Pos = 0x5
	// Bit mask of CLK160_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK160_OEN_Msk = 0x20
	// Bit CLK160_OEN.
	APB_CTRL_CLK_OUT_EN_CLK160_OEN = 0x20
	// Position of CLK_320M_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_320M_OEN_Pos = 0x6
	// Bit mask of CLK_320M_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_320M_OEN_Msk = 0x40
	// Bit CLK_320M_OEN.
	APB_CTRL_CLK_OUT_EN_CLK_320M_OEN = 0x40
	// Position of CLK_ADC_INF_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_ADC_INF_OEN_Pos = 0x7
	// Bit mask of CLK_ADC_INF_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_ADC_INF_OEN_Msk = 0x80
	// Bit CLK_ADC_INF_OEN.
	APB_CTRL_CLK_OUT_EN_CLK_ADC_INF_OEN = 0x80
	// Position of CLK_DAC_CPU_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_DAC_CPU_OEN_Pos = 0x8
	// Bit mask of CLK_DAC_CPU_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_DAC_CPU_OEN_Msk = 0x100
	// Bit CLK_DAC_CPU_OEN.
	APB_CTRL_CLK_OUT_EN_CLK_DAC_CPU_OEN = 0x100
	// Position of CLK40X_BB_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK40X_BB_OEN_Pos = 0x9
	// Bit mask of CLK40X_BB_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK40X_BB_OEN_Msk = 0x200
	// Bit CLK40X_BB_OEN.
	APB_CTRL_CLK_OUT_EN_CLK40X_BB_OEN = 0x200
	// Position of CLK_XTAL_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_XTAL_OEN_Pos = 0xa
	// Bit mask of CLK_XTAL_OEN field.
	APB_CTRL_CLK_OUT_EN_CLK_XTAL_OEN_Msk = 0x400
	// Bit CLK_XTAL_OEN.
	APB_CTRL_CLK_OUT_EN_CLK_XTAL_OEN = 0x400

	// WIFI_BB_CFG: APB_CTRL_WIFI_BB_CFG_REG
	// Position of WIFI_BB_CFG field.
	APB_CTRL_WIFI_BB_CFG_WIFI_BB_CFG_Pos = 0x0
	// Bit mask of WIFI_BB_CFG field.
	APB_CTRL_WIFI_BB_CFG_WIFI_BB_CFG_Msk = 0xffffffff

	// WIFI_BB_CFG_2: APB_CTRL_WIFI_BB_CFG_2_REG
	// Position of WIFI_BB_CFG_2 field.
	APB_CTRL_WIFI_BB_CFG_2_WIFI_BB_CFG_2_Pos = 0x0
	// Bit mask of WIFI_BB_CFG_2 field.
	APB_CTRL_WIFI_BB_CFG_2_WIFI_BB_CFG_2_Msk = 0xffffffff

	// WIFI_CLK_EN: APB_CTRL_WIFI_CLK_EN_REG
	// Position of WIFI_CLK_EN field.
	APB_CTRL_WIFI_CLK_EN_WIFI_CLK_EN_Pos = 0x0
	// Bit mask of WIFI_CLK_EN field.
	APB_CTRL_WIFI_CLK_EN_WIFI_CLK_EN_Msk = 0xffffffff

	// WIFI_RST_EN: APB_CTRL_WIFI_RST_EN_REG
	// Position of WIFI_RST field.
	APB_CTRL_WIFI_RST_EN_WIFI_RST_Pos = 0x0
	// Bit mask of WIFI_RST field.
	APB_CTRL_WIFI_RST_EN_WIFI_RST_Msk = 0xffffffff

	// HOST_INF_SEL: APB_CTRL_HOST_INF_SEL_REG
	// Position of PERI_IO_SWAP field.
	APB_CTRL_HOST_INF_SEL_PERI_IO_SWAP_Pos = 0x0
	// Bit mask of PERI_IO_SWAP field.
	APB_CTRL_HOST_INF_SEL_PERI_IO_SWAP_Msk = 0xff

	// EXT_MEM_PMS_LOCK: APB_CTRL_EXT_MEM_PMS_LOCK_REG
	// Position of EXT_MEM_PMS_LOCK field.
	APB_CTRL_EXT_MEM_PMS_LOCK_EXT_MEM_PMS_LOCK_Pos = 0x0
	// Bit mask of EXT_MEM_PMS_LOCK field.
	APB_CTRL_EXT_MEM_PMS_LOCK_EXT_MEM_PMS_LOCK_Msk = 0x1
	// Bit EXT_MEM_PMS_LOCK.
	APB_CTRL_EXT_MEM_PMS_LOCK_EXT_MEM_PMS_LOCK = 0x1

	// FLASH_ACE0_ATTR: APB_CTRL_FLASH_ACE0_ATTR_REG
	// Position of FLASH_ACE0_ATTR field.
	APB_CTRL_FLASH_ACE0_ATTR_FLASH_ACE0_ATTR_Pos = 0x0
	// Bit mask of FLASH_ACE0_ATTR field.
	APB_CTRL_FLASH_ACE0_ATTR_FLASH_ACE0_ATTR_Msk = 0x3

	// FLASH_ACE1_ATTR: APB_CTRL_FLASH_ACE1_ATTR_REG
	// Position of FLASH_ACE1_ATTR field.
	APB_CTRL_FLASH_ACE1_ATTR_FLASH_ACE1_ATTR_Pos = 0x0
	// Bit mask of FLASH_ACE1_ATTR field.
	APB_CTRL_FLASH_ACE1_ATTR_FLASH_ACE1_ATTR_Msk = 0x3

	// FLASH_ACE2_ATTR: APB_CTRL_FLASH_ACE2_ATTR_REG
	// Position of FLASH_ACE2_ATTR field.
	APB_CTRL_FLASH_ACE2_ATTR_FLASH_ACE2_ATTR_Pos = 0x0
	// Bit mask of FLASH_ACE2_ATTR field.
	APB_CTRL_FLASH_ACE2_ATTR_FLASH_ACE2_ATTR_Msk = 0x3

	// FLASH_ACE3_ATTR: APB_CTRL_FLASH_ACE3_ATTR_REG
	// Position of FLASH_ACE3_ATTR field.
	APB_CTRL_FLASH_ACE3_ATTR_FLASH_ACE3_ATTR_Pos = 0x0
	// Bit mask of FLASH_ACE3_ATTR field.
	APB_CTRL_FLASH_ACE3_ATTR_FLASH_ACE3_ATTR_Msk = 0x3

	// FLASH_ACE0_ADDR: APB_CTRL_FLASH_ACE0_ADDR_REG
	// Position of S field.
	APB_CTRL_FLASH_ACE0_ADDR_S_Pos = 0x0
	// Bit mask of S field.
	APB_CTRL_FLASH_ACE0_ADDR_S_Msk = 0xffffffff

	// FLASH_ACE1_ADDR: APB_CTRL_FLASH_ACE1_ADDR_REG
	// Position of S field.
	APB_CTRL_FLASH_ACE1_ADDR_S_Pos = 0x0
	// Bit mask of S field.
	APB_CTRL_FLASH_ACE1_ADDR_S_Msk = 0xffffffff

	// FLASH_ACE2_ADDR: APB_CTRL_FLASH_ACE2_ADDR_REG
	// Position of S field.
	APB_CTRL_FLASH_ACE2_ADDR_S_Pos = 0x0
	// Bit mask of S field.
	APB_CTRL_FLASH_ACE2_ADDR_S_Msk = 0xffffffff

	// FLASH_ACE3_ADDR: APB_CTRL_FLASH_ACE3_ADDR_REG
	// Position of S field.
	APB_CTRL_FLASH_ACE3_ADDR_S_Pos = 0x0
	// Bit mask of S field.
	APB_CTRL_FLASH_ACE3_ADDR_S_Msk = 0xffffffff

	// FLASH_ACE0_SIZE: APB_CTRL_FLASH_ACE0_SIZE_REG
	// Position of FLASH_ACE0_SIZE field.
	APB_CTRL_FLASH_ACE0_SIZE_FLASH_ACE0_SIZE_Pos = 0x0
	// Bit mask of FLASH_ACE0_SIZE field.
	APB_CTRL_FLASH_ACE0_SIZE_FLASH_ACE0_SIZE_Msk = 0x1fff

	// FLASH_ACE1_SIZE: APB_CTRL_FLASH_ACE1_SIZE_REG
	// Position of FLASH_ACE1_SIZE field.
	APB_CTRL_FLASH_ACE1_SIZE_FLASH_ACE1_SIZE_Pos = 0x0
	// Bit mask of FLASH_ACE1_SIZE field.
	APB_CTRL_FLASH_ACE1_SIZE_FLASH_ACE1_SIZE_Msk = 0x1fff

	// FLASH_ACE2_SIZE: APB_CTRL_FLASH_ACE2_SIZE_REG
	// Position of FLASH_ACE2_SIZE field.
	APB_CTRL_FLASH_ACE2_SIZE_FLASH_ACE2_SIZE_Pos = 0x0
	// Bit mask of FLASH_ACE2_SIZE field.
	APB_CTRL_FLASH_ACE2_SIZE_FLASH_ACE2_SIZE_Msk = 0x1fff

	// FLASH_ACE3_SIZE: APB_CTRL_FLASH_ACE3_SIZE_REG
	// Position of FLASH_ACE3_SIZE field.
	APB_CTRL_FLASH_ACE3_SIZE_FLASH_ACE3_SIZE_Pos = 0x0
	// Bit mask of FLASH_ACE3_SIZE field.
	APB_CTRL_FLASH_ACE3_SIZE_FLASH_ACE3_SIZE_Msk = 0x1fff

	// SPI_MEM_PMS_CTRL: APB_CTRL_SPI_MEM_PMS_CTRL_REG
	// Position of SPI_MEM_REJECT_INT field.
	APB_CTRL_SPI_MEM_PMS_CTRL_SPI_MEM_REJECT_INT_Pos = 0x0
	// Bit mask of SPI_MEM_REJECT_INT field.
	APB_CTRL_SPI_MEM_PMS_CTRL_SPI_MEM_REJECT_INT_Msk = 0x1
	// Bit SPI_MEM_REJECT_INT.
	APB_CTRL_SPI_MEM_PMS_CTRL_SPI_MEM_REJECT_INT = 0x1
	// Position of SPI_MEM_REJECT_CLR field.
	APB_CTRL_SPI_MEM_PMS_CTRL_SPI_MEM_REJECT_CLR_Pos = 0x1
	// Bit mask of SPI_MEM_REJECT_CLR field.
	APB_CTRL_SPI_MEM_PMS_CTRL_SPI_MEM_REJECT_CLR_Msk = 0x2
	// Bit SPI_MEM_REJECT_CLR.
	APB_CTRL_SPI_MEM_PMS_CTRL_SPI_MEM_REJECT_CLR = 0x2
	// Position of SPI_MEM_REJECT_CDE field.
	APB_CTRL_SPI_MEM_PMS_CTRL_SPI_MEM_REJECT_CDE_Pos = 0x2
	// Bit mask of SPI_MEM_REJECT_CDE field.
	APB_CTRL_SPI_MEM_PMS_CTRL_SPI_MEM_REJECT_CDE_Msk = 0x7c

	// SPI_MEM_REJECT_ADDR: APB_CTRL_SPI_MEM_REJECT_ADDR_REG
	// Position of SPI_MEM_REJECT_ADDR field.
	APB_CTRL_SPI_MEM_REJECT_ADDR_SPI_MEM_REJECT_ADDR_Pos = 0x0
	// Bit mask of SPI_MEM_REJECT_ADDR field.
	APB_CTRL_SPI_MEM_REJECT_ADDR_SPI_MEM_REJECT_ADDR_Msk = 0xffffffff

	// SDIO_CTRL: APB_CTRL_SDIO_CTRL_REG
	// Position of SDIO_WIN_ACCESS_EN field.
	APB_CTRL_SDIO_CTRL_SDIO_WIN_ACCESS_EN_Pos = 0x0
	// Bit mask of SDIO_WIN_ACCESS_EN field.
	APB_CTRL_SDIO_CTRL_SDIO_WIN_ACCESS_EN_Msk = 0x1
	// Bit SDIO_WIN_ACCESS_EN.
	APB_CTRL_SDIO_CTRL_SDIO_WIN_ACCESS_EN = 0x1

	// REDCY_SIG0: APB_CTRL_REDCY_SIG0_REG
	// Position of REDCY_SIG0 field.
	APB_CTRL_REDCY_SIG0_REDCY_SIG0_Pos = 0x0
	// Bit mask of REDCY_SIG0 field.
	APB_CTRL_REDCY_SIG0_REDCY_SIG0_Msk = 0x7fffffff
	// Position of REDCY_ANDOR field.
	APB_CTRL_REDCY_SIG0_REDCY_ANDOR_Pos = 0x1f
	// Bit mask of REDCY_ANDOR field.
	APB_CTRL_REDCY_SIG0_REDCY_ANDOR_Msk = 0x80000000
	// Bit REDCY_ANDOR.
	APB_CTRL_REDCY_SIG0_REDCY_ANDOR = 0x80000000

	// REDCY_SIG1: APB_CTRL_REDCY_SIG1_REG
	// Position of REDCY_SIG1 field.
	APB_CTRL_REDCY_SIG1_REDCY_SIG1_Pos = 0x0
	// Bit mask of REDCY_SIG1 field.
	APB_CTRL_REDCY_SIG1_REDCY_SIG1_Msk = 0x7fffffff
	// Position of REDCY_NANDOR field.
	APB_CTRL_REDCY_SIG1_REDCY_NANDOR_Pos = 0x1f
	// Bit mask of REDCY_NANDOR field.
	APB_CTRL_REDCY_SIG1_REDCY_NANDOR_Msk = 0x80000000
	// Bit REDCY_NANDOR.
	APB_CTRL_REDCY_SIG1_REDCY_NANDOR = 0x80000000

	// FRONT_END_MEM_PD: APB_CTRL_FRONT_END_MEM_PD_REG
	// Position of AGC_MEM_FORCE_PU field.
	APB_CTRL_FRONT_END_MEM_PD_AGC_MEM_FORCE_PU_Pos = 0x0
	// Bit mask of AGC_MEM_FORCE_PU field.
	APB_CTRL_FRONT_END_MEM_PD_AGC_MEM_FORCE_PU_Msk = 0x1
	// Bit AGC_MEM_FORCE_PU.
	APB_CTRL_FRONT_END_MEM_PD_AGC_MEM_FORCE_PU = 0x1
	// Position of AGC_MEM_FORCE_PD field.
	APB_CTRL_FRONT_END_MEM_PD_AGC_MEM_FORCE_PD_Pos = 0x1
	// Bit mask of AGC_MEM_FORCE_PD field.
	APB_CTRL_FRONT_END_MEM_PD_AGC_MEM_FORCE_PD_Msk = 0x2
	// Bit AGC_MEM_FORCE_PD.
	APB_CTRL_FRONT_END_MEM_PD_AGC_MEM_FORCE_PD = 0x2
	// Position of PBUS_MEM_FORCE_PU field.
	APB_CTRL_FRONT_END_MEM_PD_PBUS_MEM_FORCE_PU_Pos = 0x2
	// Bit mask of PBUS_MEM_FORCE_PU field.
	APB_CTRL_FRONT_END_MEM_PD_PBUS_MEM_FORCE_PU_Msk = 0x4
	// Bit PBUS_MEM_FORCE_PU.
	APB_CTRL_FRONT_END_MEM_PD_PBUS_MEM_FORCE_PU = 0x4
	// Position of PBUS_MEM_FORCE_PD field.
	APB_CTRL_FRONT_END_MEM_PD_PBUS_MEM_FORCE_PD_Pos = 0x3
	// Bit mask of PBUS_MEM_FORCE_PD field.
	APB_CTRL_FRONT_END_MEM_PD_PBUS_MEM_FORCE_PD_Msk = 0x8
	// Bit PBUS_MEM_FORCE_PD.
	APB_CTRL_FRONT_END_MEM_PD_PBUS_MEM_FORCE_PD = 0x8
	// Position of DC_MEM_FORCE_PU field.
	APB_CTRL_FRONT_END_MEM_PD_DC_MEM_FORCE_PU_Pos = 0x4
	// Bit mask of DC_MEM_FORCE_PU field.
	APB_CTRL_FRONT_END_MEM_PD_DC_MEM_FORCE_PU_Msk = 0x10
	// Bit DC_MEM_FORCE_PU.
	APB_CTRL_FRONT_END_MEM_PD_DC_MEM_FORCE_PU = 0x10
	// Position of DC_MEM_FORCE_PD field.
	APB_CTRL_FRONT_END_MEM_PD_DC_MEM_FORCE_PD_Pos = 0x5
	// Bit mask of DC_MEM_FORCE_PD field.
	APB_CTRL_FRONT_END_MEM_PD_DC_MEM_FORCE_PD_Msk = 0x20
	// Bit DC_MEM_FORCE_PD.
	APB_CTRL_FRONT_END_MEM_PD_DC_MEM_FORCE_PD = 0x20

	// RETENTION_CTRL: APB_CTRL_RETENTION_CTRL_REG
	// Position of RETENTION_LINK_ADDR field.
	APB_CTRL_RETENTION_CTRL_RETENTION_LINK_ADDR_Pos = 0x0
	// Bit mask of RETENTION_LINK_ADDR field.
	APB_CTRL_RETENTION_CTRL_RETENTION_LINK_ADDR_Msk = 0x7ffffff
	// Position of NOBYPASS_CPU_ISO_RST field.
	APB_CTRL_RETENTION_CTRL_NOBYPASS_CPU_ISO_RST_Pos = 0x1b
	// Bit mask of NOBYPASS_CPU_ISO_RST field.
	APB_CTRL_RETENTION_CTRL_NOBYPASS_CPU_ISO_RST_Msk = 0x8000000
	// Bit NOBYPASS_CPU_ISO_RST.
	APB_CTRL_RETENTION_CTRL_NOBYPASS_CPU_ISO_RST = 0x8000000

	// CLKGATE_FORCE_ON: APB_CTRL_CLKGATE_FORCE_ON_REG
	// Position of ROM_CLKGATE_FORCE_ON field.
	APB_CTRL_CLKGATE_FORCE_ON_ROM_CLKGATE_FORCE_ON_Pos = 0x0
	// Bit mask of ROM_CLKGATE_FORCE_ON field.
	APB_CTRL_CLKGATE_FORCE_ON_ROM_CLKGATE_FORCE_ON_Msk = 0x3
	// Position of SRAM_CLKGATE_FORCE_ON field.
	APB_CTRL_CLKGATE_FORCE_ON_SRAM_CLKGATE_FORCE_ON_Pos = 0x2
	// Bit mask of SRAM_CLKGATE_FORCE_ON field.
	APB_CTRL_CLKGATE_FORCE_ON_SRAM_CLKGATE_FORCE_ON_Msk = 0x3c

	// MEM_POWER_DOWN: APB_CTRL_MEM_POWER_DOWN_REG
	// Position of ROM_POWER_DOWN field.
	APB_CTRL_MEM_POWER_DOWN_ROM_POWER_DOWN_Pos = 0x0
	// Bit mask of ROM_POWER_DOWN field.
	APB_CTRL_MEM_POWER_DOWN_ROM_POWER_DOWN_Msk = 0x3
	// Position of SRAM_POWER_DOWN field.
	APB_CTRL_MEM_POWER_DOWN_SRAM_POWER_DOWN_Pos = 0x2
	// Bit mask of SRAM_POWER_DOWN field.
	APB_CTRL_MEM_POWER_DOWN_SRAM_POWER_DOWN_Msk = 0x3c

	// MEM_POWER_UP: APB_CTRL_MEM_POWER_UP_REG
	// Position of ROM_POWER_UP field.
	APB_CTRL_MEM_POWER_UP_ROM_POWER_UP_Pos = 0x0
	// Bit mask of ROM_POWER_UP field.
	APB_CTRL_MEM_POWER_UP_ROM_POWER_UP_Msk = 0x3
	// Position of SRAM_POWER_UP field.
	APB_CTRL_MEM_POWER_UP_SRAM_POWER_UP_Pos = 0x2
	// Bit mask of SRAM_POWER_UP field.
	APB_CTRL_MEM_POWER_UP_SRAM_POWER_UP_Msk = 0x3c

	// RND_DATA: APB_CTRL_RND_DATA_REG
	// Position of RND_DATA field.
	APB_CTRL_RND_DATA_RND_DATA_Pos = 0x0
	// Bit mask of RND_DATA field.
	APB_CTRL_RND_DATA_RND_DATA_Msk = 0xffffffff

	// PERI_BACKUP_CONFIG: APB_CTRL_PERI_BACKUP_CONFIG_REG
	// Position of PERI_BACKUP_FLOW_ERR field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_FLOW_ERR_Pos = 0x1
	// Bit mask of PERI_BACKUP_FLOW_ERR field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_FLOW_ERR_Msk = 0x6
	// Position of PERI_BACKUP_BURST_LIMIT field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_BURST_LIMIT_Pos = 0x4
	// Bit mask of PERI_BACKUP_BURST_LIMIT field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_BURST_LIMIT_Msk = 0x1f0
	// Position of PERI_BACKUP_TOUT_THRES field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_TOUT_THRES_Pos = 0x9
	// Bit mask of PERI_BACKUP_TOUT_THRES field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_TOUT_THRES_Msk = 0x7fe00
	// Position of PERI_BACKUP_SIZE field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_SIZE_Pos = 0x13
	// Bit mask of PERI_BACKUP_SIZE field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_SIZE_Msk = 0x1ff80000
	// Position of PERI_BACKUP_START field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_START_Pos = 0x1d
	// Bit mask of PERI_BACKUP_START field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_START_Msk = 0x20000000
	// Bit PERI_BACKUP_START.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_START = 0x20000000
	// Position of PERI_BACKUP_TO_MEM field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_TO_MEM_Pos = 0x1e
	// Bit mask of PERI_BACKUP_TO_MEM field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_TO_MEM_Msk = 0x40000000
	// Bit PERI_BACKUP_TO_MEM.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_TO_MEM = 0x40000000
	// Position of PERI_BACKUP_ENA field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_ENA_Pos = 0x1f
	// Bit mask of PERI_BACKUP_ENA field.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_ENA_Msk = 0x80000000
	// Bit PERI_BACKUP_ENA.
	APB_CTRL_PERI_BACKUP_CONFIG_PERI_BACKUP_ENA = 0x80000000

	// PERI_BACKUP_APB_ADDR: APB_CTRL_PERI_BACKUP_APB_ADDR_REG
	// Position of BACKUP_APB_START_ADDR field.
	APB_CTRL_PERI_BACKUP_APB_ADDR_BACKUP_APB_START_ADDR_Pos = 0x0
	// Bit mask of BACKUP_APB_START_ADDR field.
	APB_CTRL_PERI_BACKUP_APB_ADDR_BACKUP_APB_START_ADDR_Msk = 0xffffffff

	// PERI_BACKUP_MEM_ADDR: APB_CTRL_PERI_BACKUP_MEM_ADDR_REG
	// Position of BACKUP_MEM_START_ADDR field.
	APB_CTRL_PERI_BACKUP_MEM_ADDR_BACKUP_MEM_START_ADDR_Pos = 0x0
	// Bit mask of BACKUP_MEM_START_ADDR field.
	APB_CTRL_PERI_BACKUP_MEM_ADDR_BACKUP_MEM_START_ADDR_Msk = 0xffffffff

	// PERI_BACKUP_INT_RAW: APB_CTRL_PERI_BACKUP_INT_RAW_REG
	// Position of PERI_BACKUP_DONE_INT_RAW field.
	APB_CTRL_PERI_BACKUP_INT_RAW_PERI_BACKUP_DONE_INT_RAW_Pos = 0x0
	// Bit mask of PERI_BACKUP_DONE_INT_RAW field.
	APB_CTRL_PERI_BACKUP_INT_RAW_PERI_BACKUP_DONE_INT_RAW_Msk = 0x1
	// Bit PERI_BACKUP_DONE_INT_RAW.
	APB_CTRL_PERI_BACKUP_INT_RAW_PERI_BACKUP_DONE_INT_RAW = 0x1
	// Position of PERI_BACKUP_ERR_INT_RAW field.
	APB_CTRL_PERI_BACKUP_INT_RAW_PERI_BACKUP_ERR_INT_RAW_Pos = 0x1
	// Bit mask of PERI_BACKUP_ERR_INT_RAW field.
	APB_CTRL_PERI_BACKUP_INT_RAW_PERI_BACKUP_ERR_INT_RAW_Msk = 0x2
	// Bit PERI_BACKUP_ERR_INT_RAW.
	APB_CTRL_PERI_BACKUP_INT_RAW_PERI_BACKUP_ERR_INT_RAW = 0x2

	// PERI_BACKUP_INT_ST: APB_CTRL_PERI_BACKUP_INT_ST_REG
	// Position of PERI_BACKUP_DONE_INT_ST field.
	APB_CTRL_PERI_BACKUP_INT_ST_PERI_BACKUP_DONE_INT_ST_Pos = 0x0
	// Bit mask of PERI_BACKUP_DONE_INT_ST field.
	APB_CTRL_PERI_BACKUP_INT_ST_PERI_BACKUP_DONE_INT_ST_Msk = 0x1
	// Bit PERI_BACKUP_DONE_INT_ST.
	APB_CTRL_PERI_BACKUP_INT_ST_PERI_BACKUP_DONE_INT_ST = 0x1
	// Position of PERI_BACKUP_ERR_INT_ST field.
	APB_CTRL_PERI_BACKUP_INT_ST_PERI_BACKUP_ERR_INT_ST_Pos = 0x1
	// Bit mask of PERI_BACKUP_ERR_INT_ST field.
	APB_CTRL_PERI_BACKUP_INT_ST_PERI_BACKUP_ERR_INT_ST_Msk = 0x2
	// Bit PERI_BACKUP_ERR_INT_ST.
	APB_CTRL_PERI_BACKUP_INT_ST_PERI_BACKUP_ERR_INT_ST = 0x2

	// PERI_BACKUP_INT_ENA: APB_CTRL_PERI_BACKUP_INT_ENA_REG
	// Position of PERI_BACKUP_DONE_INT_ENA field.
	APB_CTRL_PERI_BACKUP_INT_ENA_PERI_BACKUP_DONE_INT_ENA_Pos = 0x0
	// Bit mask of PERI_BACKUP_DONE_INT_ENA field.
	APB_CTRL_PERI_BACKUP_INT_ENA_PERI_BACKUP_DONE_INT_ENA_Msk = 0x1
	// Bit PERI_BACKUP_DONE_INT_ENA.
	APB_CTRL_PERI_BACKUP_INT_ENA_PERI_BACKUP_DONE_INT_ENA = 0x1
	// Position of PERI_BACKUP_ERR_INT_ENA field.
	APB_CTRL_PERI_BACKUP_INT_ENA_PERI_BACKUP_ERR_INT_ENA_Pos = 0x1
	// Bit mask of PERI_BACKUP_ERR_INT_ENA field.
	APB_CTRL_PERI_BACKUP_INT_ENA_PERI_BACKUP_ERR_INT_ENA_Msk = 0x2
	// Bit PERI_BACKUP_ERR_INT_ENA.
	APB_CTRL_PERI_BACKUP_INT_ENA_PERI_BACKUP_ERR_INT_ENA = 0x2

	// PERI_BACKUP_INT_CLR: APB_CTRL_PERI_BACKUP_INT_CLR_REG
	// Position of PERI_BACKUP_DONE_INT_CLR field.
	APB_CTRL_PERI_BACKUP_INT_CLR_PERI_BACKUP_DONE_INT_CLR_Pos = 0x0
	// Bit mask of PERI_BACKUP_DONE_INT_CLR field.
	APB_CTRL_PERI_BACKUP_INT_CLR_PERI_BACKUP_DONE_INT_CLR_Msk = 0x1
	// Bit PERI_BACKUP_DONE_INT_CLR.
	APB_CTRL_PERI_BACKUP_INT_CLR_PERI_BACKUP_DONE_INT_CLR = 0x1
	// Position of PERI_BACKUP_ERR_INT_CLR field.
	APB_CTRL_PERI_BACKUP_INT_CLR_PERI_BACKUP_ERR_INT_CLR_Pos = 0x1
	// Bit mask of PERI_BACKUP_ERR_INT_CLR field.
	APB_CTRL_PERI_BACKUP_INT_CLR_PERI_BACKUP_ERR_INT_CLR_Msk = 0x2
	// Bit PERI_BACKUP_ERR_INT_CLR.
	APB_CTRL_PERI_BACKUP_INT_CLR_PERI_BACKUP_ERR_INT_CLR = 0x2

	// DATE: APB_CTRL_DATE_REG
	// Position of DATE field.
	APB_CTRL_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	APB_CTRL_DATE_DATE_Msk = 0xffffffff
)

// Bitfields for APB_SARADC: Peripheral APB_SARADC
const (
	// CTRL: digital saradc configure register
	// Position of SARADC_START_FORCE field.
	APB_SARADC_CTRL_SARADC_START_FORCE_Pos = 0x0
	// Bit mask of SARADC_START_FORCE field.
	APB_SARADC_CTRL_SARADC_START_FORCE_Msk = 0x1
	// Bit SARADC_START_FORCE.
	APB_SARADC_CTRL_SARADC_START_FORCE = 0x1
	// Position of SARADC_START field.
	APB_SARADC_CTRL_SARADC_START_Pos = 0x1
	// Bit mask of SARADC_START field.
	APB_SARADC_CTRL_SARADC_START_Msk = 0x2
	// Bit SARADC_START.
	APB_SARADC_CTRL_SARADC_START = 0x2
	// Position of SARADC_SAR_CLK_GATED field.
	APB_SARADC_CTRL_SARADC_SAR_CLK_GATED_Pos = 0x6
	// Bit mask of SARADC_SAR_CLK_GATED field.
	APB_SARADC_CTRL_SARADC_SAR_CLK_GATED_Msk = 0x40
	// Bit SARADC_SAR_CLK_GATED.
	APB_SARADC_CTRL_SARADC_SAR_CLK_GATED = 0x40
	// Position of SARADC_SAR_CLK_DIV field.
	APB_SARADC_CTRL_SARADC_SAR_CLK_DIV_Pos = 0x7
	// Bit mask of SARADC_SAR_CLK_DIV field.
	APB_SARADC_CTRL_SARADC_SAR_CLK_DIV_Msk = 0x7f80
	// Position of SARADC_SAR_PATT_LEN field.
	APB_SARADC_CTRL_SARADC_SAR_PATT_LEN_Pos = 0xf
	// Bit mask of SARADC_SAR_PATT_LEN field.
	APB_SARADC_CTRL_SARADC_SAR_PATT_LEN_Msk = 0x38000
	// Position of SARADC_SAR_PATT_P_CLEAR field.
	APB_SARADC_CTRL_SARADC_SAR_PATT_P_CLEAR_Pos = 0x17
	// Bit mask of SARADC_SAR_PATT_P_CLEAR field.
	APB_SARADC_CTRL_SARADC_SAR_PATT_P_CLEAR_Msk = 0x800000
	// Bit SARADC_SAR_PATT_P_CLEAR.
	APB_SARADC_CTRL_SARADC_SAR_PATT_P_CLEAR = 0x800000
	// Position of SARADC_XPD_SAR_FORCE field.
	APB_SARADC_CTRL_SARADC_XPD_SAR_FORCE_Pos = 0x1b
	// Bit mask of SARADC_XPD_SAR_FORCE field.
	APB_SARADC_CTRL_SARADC_XPD_SAR_FORCE_Msk = 0x18000000
	// Position of SARADC_WAIT_ARB_CYCLE field.
	APB_SARADC_CTRL_SARADC_WAIT_ARB_CYCLE_Pos = 0x1e
	// Bit mask of SARADC_WAIT_ARB_CYCLE field.
	APB_SARADC_CTRL_SARADC_WAIT_ARB_CYCLE_Msk = 0xc0000000

	// CTRL2: digital saradc configure register
	// Position of SARADC_MEAS_NUM_LIMIT field.
	APB_SARADC_CTRL2_SARADC_MEAS_NUM_LIMIT_Pos = 0x0
	// Bit mask of SARADC_MEAS_NUM_LIMIT field.
	APB_SARADC_CTRL2_SARADC_MEAS_NUM_LIMIT_Msk = 0x1
	// Bit SARADC_MEAS_NUM_LIMIT.
	APB_SARADC_CTRL2_SARADC_MEAS_NUM_LIMIT = 0x1
	// Position of SARADC_MAX_MEAS_NUM field.
	APB_SARADC_CTRL2_SARADC_MAX_MEAS_NUM_Pos = 0x1
	// Bit mask of SARADC_MAX_MEAS_NUM field.
	APB_SARADC_CTRL2_SARADC_MAX_MEAS_NUM_Msk = 0x1fe
	// Position of SARADC_SAR1_INV field.
	APB_SARADC_CTRL2_SARADC_SAR1_INV_Pos = 0x9
	// Bit mask of SARADC_SAR1_INV field.
	APB_SARADC_CTRL2_SARADC_SAR1_INV_Msk = 0x200
	// Bit SARADC_SAR1_INV.
	APB_SARADC_CTRL2_SARADC_SAR1_INV = 0x200
	// Position of SARADC_SAR2_INV field.
	APB_SARADC_CTRL2_SARADC_SAR2_INV_Pos = 0xa
	// Bit mask of SARADC_SAR2_INV field.
	APB_SARADC_CTRL2_SARADC_SAR2_INV_Msk = 0x400
	// Bit SARADC_SAR2_INV.
	APB_SARADC_CTRL2_SARADC_SAR2_INV = 0x400
	// Position of SARADC_TIMER_TARGET field.
	APB_SARADC_CTRL2_SARADC_TIMER_TARGET_Pos = 0xc
	// Bit mask of SARADC_TIMER_TARGET field.
	APB_SARADC_CTRL2_SARADC_TIMER_TARGET_Msk = 0xfff000
	// Position of SARADC_TIMER_EN field.
	APB_SARADC_CTRL2_SARADC_TIMER_EN_Pos = 0x18
	// Bit mask of SARADC_TIMER_EN field.
	APB_SARADC_CTRL2_SARADC_TIMER_EN_Msk = 0x1000000
	// Bit SARADC_TIMER_EN.
	APB_SARADC_CTRL2_SARADC_TIMER_EN = 0x1000000

	// FILTER_CTRL1: digital saradc configure register
	// Position of APB_SARADC_FILTER_FACTOR1 field.
	APB_SARADC_FILTER_CTRL1_APB_SARADC_FILTER_FACTOR1_Pos = 0x1a
	// Bit mask of APB_SARADC_FILTER_FACTOR1 field.
	APB_SARADC_FILTER_CTRL1_APB_SARADC_FILTER_FACTOR1_Msk = 0x1c000000
	// Position of APB_SARADC_FILTER_FACTOR0 field.
	APB_SARADC_FILTER_CTRL1_APB_SARADC_FILTER_FACTOR0_Pos = 0x1d
	// Bit mask of APB_SARADC_FILTER_FACTOR0 field.
	APB_SARADC_FILTER_CTRL1_APB_SARADC_FILTER_FACTOR0_Msk = 0xe0000000

	// FSM_WAIT: digital saradc configure register
	// Position of SARADC_XPD_WAIT field.
	APB_SARADC_FSM_WAIT_SARADC_XPD_WAIT_Pos = 0x0
	// Bit mask of SARADC_XPD_WAIT field.
	APB_SARADC_FSM_WAIT_SARADC_XPD_WAIT_Msk = 0xff
	// Position of SARADC_RSTB_WAIT field.
	APB_SARADC_FSM_WAIT_SARADC_RSTB_WAIT_Pos = 0x8
	// Bit mask of SARADC_RSTB_WAIT field.
	APB_SARADC_FSM_WAIT_SARADC_RSTB_WAIT_Msk = 0xff00
	// Position of SARADC_STANDBY_WAIT field.
	APB_SARADC_FSM_WAIT_SARADC_STANDBY_WAIT_Pos = 0x10
	// Bit mask of SARADC_STANDBY_WAIT field.
	APB_SARADC_FSM_WAIT_SARADC_STANDBY_WAIT_Msk = 0xff0000

	// SAR1_STATUS: digital saradc configure register
	// Position of SARADC_SAR1_STATUS field.
	APB_SARADC_SAR1_STATUS_SARADC_SAR1_STATUS_Pos = 0x0
	// Bit mask of SARADC_SAR1_STATUS field.
	APB_SARADC_SAR1_STATUS_SARADC_SAR1_STATUS_Msk = 0xffffffff

	// SAR2_STATUS: digital saradc configure register
	// Position of SARADC_SAR2_STATUS field.
	APB_SARADC_SAR2_STATUS_SARADC_SAR2_STATUS_Pos = 0x0
	// Bit mask of SARADC_SAR2_STATUS field.
	APB_SARADC_SAR2_STATUS_SARADC_SAR2_STATUS_Msk = 0xffffffff

	// SAR_PATT_TAB1: digital saradc configure register
	// Position of SARADC_SAR_PATT_TAB1 field.
	APB_SARADC_SAR_PATT_TAB1_SARADC_SAR_PATT_TAB1_Pos = 0x0
	// Bit mask of SARADC_SAR_PATT_TAB1 field.
	APB_SARADC_SAR_PATT_TAB1_SARADC_SAR_PATT_TAB1_Msk = 0xffffff

	// SAR_PATT_TAB2: digital saradc configure register
	// Position of SARADC_SAR_PATT_TAB2 field.
	APB_SARADC_SAR_PATT_TAB2_SARADC_SAR_PATT_TAB2_Pos = 0x0
	// Bit mask of SARADC_SAR_PATT_TAB2 field.
	APB_SARADC_SAR_PATT_TAB2_SARADC_SAR_PATT_TAB2_Msk = 0xffffff

	// ONETIME_SAMPLE: digital saradc configure register
	// Position of SARADC_ONETIME_ATTEN field.
	APB_SARADC_ONETIME_SAMPLE_SARADC_ONETIME_ATTEN_Pos = 0x17
	// Bit mask of SARADC_ONETIME_ATTEN field.
	APB_SARADC_ONETIME_SAMPLE_SARADC_ONETIME_ATTEN_Msk = 0x1800000
	// Position of SARADC_ONETIME_CHANNEL field.
	APB_SARADC_ONETIME_SAMPLE_SARADC_ONETIME_CHANNEL_Pos = 0x19
	// Bit mask of SARADC_ONETIME_CHANNEL field.
	APB_SARADC_ONETIME_SAMPLE_SARADC_ONETIME_CHANNEL_Msk = 0x1e000000
	// Position of SARADC_ONETIME_START field.
	APB_SARADC_ONETIME_SAMPLE_SARADC_ONETIME_START_Pos = 0x1d
	// Bit mask of SARADC_ONETIME_START field.
	APB_SARADC_ONETIME_SAMPLE_SARADC_ONETIME_START_Msk = 0x20000000
	// Bit SARADC_ONETIME_START.
	APB_SARADC_ONETIME_SAMPLE_SARADC_ONETIME_START = 0x20000000
	// Position of SARADC2_ONETIME_SAMPLE field.
	APB_SARADC_ONETIME_SAMPLE_SARADC2_ONETIME_SAMPLE_Pos = 0x1e
	// Bit mask of SARADC2_ONETIME_SAMPLE field.
	APB_SARADC_ONETIME_SAMPLE_SARADC2_ONETIME_SAMPLE_Msk = 0x40000000
	// Bit SARADC2_ONETIME_SAMPLE.
	APB_SARADC_ONETIME_SAMPLE_SARADC2_ONETIME_SAMPLE = 0x40000000
	// Position of SARADC1_ONETIME_SAMPLE field.
	APB_SARADC_ONETIME_SAMPLE_SARADC1_ONETIME_SAMPLE_Pos = 0x1f
	// Bit mask of SARADC1_ONETIME_SAMPLE field.
	APB_SARADC_ONETIME_SAMPLE_SARADC1_ONETIME_SAMPLE_Msk = 0x80000000
	// Bit SARADC1_ONETIME_SAMPLE.
	APB_SARADC_ONETIME_SAMPLE_SARADC1_ONETIME_SAMPLE = 0x80000000

	// ARB_CTRL: digital saradc configure register
	// Position of ADC_ARB_APB_FORCE field.
	APB_SARADC_ARB_CTRL_ADC_ARB_APB_FORCE_Pos = 0x2
	// Bit mask of ADC_ARB_APB_FORCE field.
	APB_SARADC_ARB_CTRL_ADC_ARB_APB_FORCE_Msk = 0x4
	// Bit ADC_ARB_APB_FORCE.
	APB_SARADC_ARB_CTRL_ADC_ARB_APB_FORCE = 0x4
	// Position of ADC_ARB_RTC_FORCE field.
	APB_SARADC_ARB_CTRL_ADC_ARB_RTC_FORCE_Pos = 0x3
	// Bit mask of ADC_ARB_RTC_FORCE field.
	APB_SARADC_ARB_CTRL_ADC_ARB_RTC_FORCE_Msk = 0x8
	// Bit ADC_ARB_RTC_FORCE.
	APB_SARADC_ARB_CTRL_ADC_ARB_RTC_FORCE = 0x8
	// Position of ADC_ARB_WIFI_FORCE field.
	APB_SARADC_ARB_CTRL_ADC_ARB_WIFI_FORCE_Pos = 0x4
	// Bit mask of ADC_ARB_WIFI_FORCE field.
	APB_SARADC_ARB_CTRL_ADC_ARB_WIFI_FORCE_Msk = 0x10
	// Bit ADC_ARB_WIFI_FORCE.
	APB_SARADC_ARB_CTRL_ADC_ARB_WIFI_FORCE = 0x10
	// Position of ADC_ARB_GRANT_FORCE field.
	APB_SARADC_ARB_CTRL_ADC_ARB_GRANT_FORCE_Pos = 0x5
	// Bit mask of ADC_ARB_GRANT_FORCE field.
	APB_SARADC_ARB_CTRL_ADC_ARB_GRANT_FORCE_Msk = 0x20
	// Bit ADC_ARB_GRANT_FORCE.
	APB_SARADC_ARB_CTRL_ADC_ARB_GRANT_FORCE = 0x20
	// Position of ADC_ARB_APB_PRIORITY field.
	APB_SARADC_ARB_CTRL_ADC_ARB_APB_PRIORITY_Pos = 0x6
	// Bit mask of ADC_ARB_APB_PRIORITY field.
	APB_SARADC_ARB_CTRL_ADC_ARB_APB_PRIORITY_Msk = 0xc0
	// Position of ADC_ARB_RTC_PRIORITY field.
	APB_SARADC_ARB_CTRL_ADC_ARB_RTC_PRIORITY_Pos = 0x8
	// Bit mask of ADC_ARB_RTC_PRIORITY field.
	APB_SARADC_ARB_CTRL_ADC_ARB_RTC_PRIORITY_Msk = 0x300
	// Position of ADC_ARB_WIFI_PRIORITY field.
	APB_SARADC_ARB_CTRL_ADC_ARB_WIFI_PRIORITY_Pos = 0xa
	// Bit mask of ADC_ARB_WIFI_PRIORITY field.
	APB_SARADC_ARB_CTRL_ADC_ARB_WIFI_PRIORITY_Msk = 0xc00
	// Position of ADC_ARB_FIX_PRIORITY field.
	APB_SARADC_ARB_CTRL_ADC_ARB_FIX_PRIORITY_Pos = 0xc
	// Bit mask of ADC_ARB_FIX_PRIORITY field.
	APB_SARADC_ARB_CTRL_ADC_ARB_FIX_PRIORITY_Msk = 0x1000
	// Bit ADC_ARB_FIX_PRIORITY.
	APB_SARADC_ARB_CTRL_ADC_ARB_FIX_PRIORITY = 0x1000

	// FILTER_CTRL0: digital saradc configure register
	// Position of APB_SARADC_FILTER_CHANNEL1 field.
	APB_SARADC_FILTER_CTRL0_APB_SARADC_FILTER_CHANNEL1_Pos = 0x12
	// Bit mask of APB_SARADC_FILTER_CHANNEL1 field.
	APB_SARADC_FILTER_CTRL0_APB_SARADC_FILTER_CHANNEL1_Msk = 0x3c0000
	// Position of APB_SARADC_FILTER_CHANNEL0 field.
	APB_SARADC_FILTER_CTRL0_APB_SARADC_FILTER_CHANNEL0_Pos = 0x16
	// Bit mask of APB_SARADC_FILTER_CHANNEL0 field.
	APB_SARADC_FILTER_CTRL0_APB_SARADC_FILTER_CHANNEL0_Msk = 0x3c00000
	// Position of APB_SARADC_FILTER_RESET field.
	APB_SARADC_FILTER_CTRL0_APB_SARADC_FILTER_RESET_Pos = 0x1f
	// Bit mask of APB_SARADC_FILTER_RESET field.
	APB_SARADC_FILTER_CTRL0_APB_SARADC_FILTER_RESET_Msk = 0x80000000
	// Bit APB_SARADC_FILTER_RESET.
	APB_SARADC_FILTER_CTRL0_APB_SARADC_FILTER_RESET = 0x80000000

	// SAR1DATA_STATUS: digital saradc configure register
	// Position of APB_SARADC1_DATA field.
	APB_SARADC_SAR1DATA_STATUS_APB_SARADC1_DATA_Pos = 0x0
	// Bit mask of APB_SARADC1_DATA field.
	APB_SARADC_SAR1DATA_STATUS_APB_SARADC1_DATA_Msk = 0x1ffff

	// SAR2DATA_STATUS: digital saradc configure register
	// Position of APB_SARADC2_DATA field.
	APB_SARADC_SAR2DATA_STATUS_APB_SARADC2_DATA_Pos = 0x0
	// Bit mask of APB_SARADC2_DATA field.
	APB_SARADC_SAR2DATA_STATUS_APB_SARADC2_DATA_Msk = 0x1ffff

	// THRES0_CTRL: digital saradc configure register
	// Position of APB_SARADC_THRES0_CHANNEL field.
	APB_SARADC_THRES0_CTRL_APB_SARADC_THRES0_CHANNEL_Pos = 0x0
	// Bit mask of APB_SARADC_THRES0_CHANNEL field.
	APB_SARADC_THRES0_CTRL_APB_SARADC_THRES0_CHANNEL_Msk = 0xf
	// Position of APB_SARADC_THRES0_HIGH field.
	APB_SARADC_THRES0_CTRL_APB_SARADC_THRES0_HIGH_Pos = 0x5
	// Bit mask of APB_SARADC_THRES0_HIGH field.
	APB_SARADC_THRES0_CTRL_APB_SARADC_THRES0_HIGH_Msk = 0x3ffe0
	// Position of APB_SARADC_THRES0_LOW field.
	APB_SARADC_THRES0_CTRL_APB_SARADC_THRES0_LOW_Pos = 0x12
	// Bit mask of APB_SARADC_THRES0_LOW field.
	APB_SARADC_THRES0_CTRL_APB_SARADC_THRES0_LOW_Msk = 0x7ffc0000

	// THRES1_CTRL: digital saradc configure register
	// Position of APB_SARADC_THRES1_CHANNEL field.
	APB_SARADC_THRES1_CTRL_APB_SARADC_THRES1_CHANNEL_Pos = 0x0
	// Bit mask of APB_SARADC_THRES1_CHANNEL field.
	APB_SARADC_THRES1_CTRL_APB_SARADC_THRES1_CHANNEL_Msk = 0xf
	// Position of APB_SARADC_THRES1_HIGH field.
	APB_SARADC_THRES1_CTRL_APB_SARADC_THRES1_HIGH_Pos = 0x5
	// Bit mask of APB_SARADC_THRES1_HIGH field.
	APB_SARADC_THRES1_CTRL_APB_SARADC_THRES1_HIGH_Msk = 0x3ffe0
	// Position of APB_SARADC_THRES1_LOW field.
	APB_SARADC_THRES1_CTRL_APB_SARADC_THRES1_LOW_Pos = 0x12
	// Bit mask of APB_SARADC_THRES1_LOW field.
	APB_SARADC_THRES1_CTRL_APB_SARADC_THRES1_LOW_Msk = 0x7ffc0000

	// THRES_CTRL: digital saradc configure register
	// Position of APB_SARADC_THRES_ALL_EN field.
	APB_SARADC_THRES_CTRL_APB_SARADC_THRES_ALL_EN_Pos = 0x1b
	// Bit mask of APB_SARADC_THRES_ALL_EN field.
	APB_SARADC_THRES_CTRL_APB_SARADC_THRES_ALL_EN_Msk = 0x8000000
	// Bit APB_SARADC_THRES_ALL_EN.
	APB_SARADC_THRES_CTRL_APB_SARADC_THRES_ALL_EN = 0x8000000
	// Position of APB_SARADC_THRES1_EN field.
	APB_SARADC_THRES_CTRL_APB_SARADC_THRES1_EN_Pos = 0x1e
	// Bit mask of APB_SARADC_THRES1_EN field.
	APB_SARADC_THRES_CTRL_APB_SARADC_THRES1_EN_Msk = 0x40000000
	// Bit APB_SARADC_THRES1_EN.
	APB_SARADC_THRES_CTRL_APB_SARADC_THRES1_EN = 0x40000000
	// Position of APB_SARADC_THRES0_EN field.
	APB_SARADC_THRES_CTRL_APB_SARADC_THRES0_EN_Pos = 0x1f
	// Bit mask of APB_SARADC_THRES0_EN field.
	APB_SARADC_THRES_CTRL_APB_SARADC_THRES0_EN_Msk = 0x80000000
	// Bit APB_SARADC_THRES0_EN.
	APB_SARADC_THRES_CTRL_APB_SARADC_THRES0_EN = 0x80000000

	// INT_ENA: digital saradc int register
	// Position of APB_SARADC_THRES1_LOW_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC_THRES1_LOW_INT_ENA_Pos = 0x1a
	// Bit mask of APB_SARADC_THRES1_LOW_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC_THRES1_LOW_INT_ENA_Msk = 0x4000000
	// Bit APB_SARADC_THRES1_LOW_INT_ENA.
	APB_SARADC_INT_ENA_APB_SARADC_THRES1_LOW_INT_ENA = 0x4000000
	// Position of APB_SARADC_THRES0_LOW_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC_THRES0_LOW_INT_ENA_Pos = 0x1b
	// Bit mask of APB_SARADC_THRES0_LOW_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC_THRES0_LOW_INT_ENA_Msk = 0x8000000
	// Bit APB_SARADC_THRES0_LOW_INT_ENA.
	APB_SARADC_INT_ENA_APB_SARADC_THRES0_LOW_INT_ENA = 0x8000000
	// Position of APB_SARADC_THRES1_HIGH_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC_THRES1_HIGH_INT_ENA_Pos = 0x1c
	// Bit mask of APB_SARADC_THRES1_HIGH_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC_THRES1_HIGH_INT_ENA_Msk = 0x10000000
	// Bit APB_SARADC_THRES1_HIGH_INT_ENA.
	APB_SARADC_INT_ENA_APB_SARADC_THRES1_HIGH_INT_ENA = 0x10000000
	// Position of APB_SARADC_THRES0_HIGH_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC_THRES0_HIGH_INT_ENA_Pos = 0x1d
	// Bit mask of APB_SARADC_THRES0_HIGH_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC_THRES0_HIGH_INT_ENA_Msk = 0x20000000
	// Bit APB_SARADC_THRES0_HIGH_INT_ENA.
	APB_SARADC_INT_ENA_APB_SARADC_THRES0_HIGH_INT_ENA = 0x20000000
	// Position of APB_SARADC2_DONE_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC2_DONE_INT_ENA_Pos = 0x1e
	// Bit mask of APB_SARADC2_DONE_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC2_DONE_INT_ENA_Msk = 0x40000000
	// Bit APB_SARADC2_DONE_INT_ENA.
	APB_SARADC_INT_ENA_APB_SARADC2_DONE_INT_ENA = 0x40000000
	// Position of APB_SARADC1_DONE_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC1_DONE_INT_ENA_Pos = 0x1f
	// Bit mask of APB_SARADC1_DONE_INT_ENA field.
	APB_SARADC_INT_ENA_APB_SARADC1_DONE_INT_ENA_Msk = 0x80000000
	// Bit APB_SARADC1_DONE_INT_ENA.
	APB_SARADC_INT_ENA_APB_SARADC1_DONE_INT_ENA = 0x80000000

	// INT_RAW: digital saradc int register
	// Position of APB_SARADC_THRES1_LOW_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC_THRES1_LOW_INT_RAW_Pos = 0x1a
	// Bit mask of APB_SARADC_THRES1_LOW_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC_THRES1_LOW_INT_RAW_Msk = 0x4000000
	// Bit APB_SARADC_THRES1_LOW_INT_RAW.
	APB_SARADC_INT_RAW_APB_SARADC_THRES1_LOW_INT_RAW = 0x4000000
	// Position of APB_SARADC_THRES0_LOW_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC_THRES0_LOW_INT_RAW_Pos = 0x1b
	// Bit mask of APB_SARADC_THRES0_LOW_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC_THRES0_LOW_INT_RAW_Msk = 0x8000000
	// Bit APB_SARADC_THRES0_LOW_INT_RAW.
	APB_SARADC_INT_RAW_APB_SARADC_THRES0_LOW_INT_RAW = 0x8000000
	// Position of APB_SARADC_THRES1_HIGH_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC_THRES1_HIGH_INT_RAW_Pos = 0x1c
	// Bit mask of APB_SARADC_THRES1_HIGH_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC_THRES1_HIGH_INT_RAW_Msk = 0x10000000
	// Bit APB_SARADC_THRES1_HIGH_INT_RAW.
	APB_SARADC_INT_RAW_APB_SARADC_THRES1_HIGH_INT_RAW = 0x10000000
	// Position of APB_SARADC_THRES0_HIGH_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC_THRES0_HIGH_INT_RAW_Pos = 0x1d
	// Bit mask of APB_SARADC_THRES0_HIGH_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC_THRES0_HIGH_INT_RAW_Msk = 0x20000000
	// Bit APB_SARADC_THRES0_HIGH_INT_RAW.
	APB_SARADC_INT_RAW_APB_SARADC_THRES0_HIGH_INT_RAW = 0x20000000
	// Position of APB_SARADC2_DONE_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC2_DONE_INT_RAW_Pos = 0x1e
	// Bit mask of APB_SARADC2_DONE_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC2_DONE_INT_RAW_Msk = 0x40000000
	// Bit APB_SARADC2_DONE_INT_RAW.
	APB_SARADC_INT_RAW_APB_SARADC2_DONE_INT_RAW = 0x40000000
	// Position of APB_SARADC1_DONE_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC1_DONE_INT_RAW_Pos = 0x1f
	// Bit mask of APB_SARADC1_DONE_INT_RAW field.
	APB_SARADC_INT_RAW_APB_SARADC1_DONE_INT_RAW_Msk = 0x80000000
	// Bit APB_SARADC1_DONE_INT_RAW.
	APB_SARADC_INT_RAW_APB_SARADC1_DONE_INT_RAW = 0x80000000

	// INT_ST: digital saradc int register
	// Position of APB_SARADC_THRES1_LOW_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC_THRES1_LOW_INT_ST_Pos = 0x1a
	// Bit mask of APB_SARADC_THRES1_LOW_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC_THRES1_LOW_INT_ST_Msk = 0x4000000
	// Bit APB_SARADC_THRES1_LOW_INT_ST.
	APB_SARADC_INT_ST_APB_SARADC_THRES1_LOW_INT_ST = 0x4000000
	// Position of APB_SARADC_THRES0_LOW_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC_THRES0_LOW_INT_ST_Pos = 0x1b
	// Bit mask of APB_SARADC_THRES0_LOW_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC_THRES0_LOW_INT_ST_Msk = 0x8000000
	// Bit APB_SARADC_THRES0_LOW_INT_ST.
	APB_SARADC_INT_ST_APB_SARADC_THRES0_LOW_INT_ST = 0x8000000
	// Position of APB_SARADC_THRES1_HIGH_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC_THRES1_HIGH_INT_ST_Pos = 0x1c
	// Bit mask of APB_SARADC_THRES1_HIGH_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC_THRES1_HIGH_INT_ST_Msk = 0x10000000
	// Bit APB_SARADC_THRES1_HIGH_INT_ST.
	APB_SARADC_INT_ST_APB_SARADC_THRES1_HIGH_INT_ST = 0x10000000
	// Position of APB_SARADC_THRES0_HIGH_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC_THRES0_HIGH_INT_ST_Pos = 0x1d
	// Bit mask of APB_SARADC_THRES0_HIGH_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC_THRES0_HIGH_INT_ST_Msk = 0x20000000
	// Bit APB_SARADC_THRES0_HIGH_INT_ST.
	APB_SARADC_INT_ST_APB_SARADC_THRES0_HIGH_INT_ST = 0x20000000
	// Position of APB_SARADC2_DONE_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC2_DONE_INT_ST_Pos = 0x1e
	// Bit mask of APB_SARADC2_DONE_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC2_DONE_INT_ST_Msk = 0x40000000
	// Bit APB_SARADC2_DONE_INT_ST.
	APB_SARADC_INT_ST_APB_SARADC2_DONE_INT_ST = 0x40000000
	// Position of APB_SARADC1_DONE_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC1_DONE_INT_ST_Pos = 0x1f
	// Bit mask of APB_SARADC1_DONE_INT_ST field.
	APB_SARADC_INT_ST_APB_SARADC1_DONE_INT_ST_Msk = 0x80000000
	// Bit APB_SARADC1_DONE_INT_ST.
	APB_SARADC_INT_ST_APB_SARADC1_DONE_INT_ST = 0x80000000

	// INT_CLR: digital saradc int register
	// Position of APB_SARADC_THRES1_LOW_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC_THRES1_LOW_INT_CLR_Pos = 0x1a
	// Bit mask of APB_SARADC_THRES1_LOW_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC_THRES1_LOW_INT_CLR_Msk = 0x4000000
	// Bit APB_SARADC_THRES1_LOW_INT_CLR.
	APB_SARADC_INT_CLR_APB_SARADC_THRES1_LOW_INT_CLR = 0x4000000
	// Position of APB_SARADC_THRES0_LOW_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC_THRES0_LOW_INT_CLR_Pos = 0x1b
	// Bit mask of APB_SARADC_THRES0_LOW_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC_THRES0_LOW_INT_CLR_Msk = 0x8000000
	// Bit APB_SARADC_THRES0_LOW_INT_CLR.
	APB_SARADC_INT_CLR_APB_SARADC_THRES0_LOW_INT_CLR = 0x8000000
	// Position of APB_SARADC_THRES1_HIGH_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC_THRES1_HIGH_INT_CLR_Pos = 0x1c
	// Bit mask of APB_SARADC_THRES1_HIGH_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC_THRES1_HIGH_INT_CLR_Msk = 0x10000000
	// Bit APB_SARADC_THRES1_HIGH_INT_CLR.
	APB_SARADC_INT_CLR_APB_SARADC_THRES1_HIGH_INT_CLR = 0x10000000
	// Position of APB_SARADC_THRES0_HIGH_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC_THRES0_HIGH_INT_CLR_Pos = 0x1d
	// Bit mask of APB_SARADC_THRES0_HIGH_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC_THRES0_HIGH_INT_CLR_Msk = 0x20000000
	// Bit APB_SARADC_THRES0_HIGH_INT_CLR.
	APB_SARADC_INT_CLR_APB_SARADC_THRES0_HIGH_INT_CLR = 0x20000000
	// Position of APB_SARADC2_DONE_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC2_DONE_INT_CLR_Pos = 0x1e
	// Bit mask of APB_SARADC2_DONE_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC2_DONE_INT_CLR_Msk = 0x40000000
	// Bit APB_SARADC2_DONE_INT_CLR.
	APB_SARADC_INT_CLR_APB_SARADC2_DONE_INT_CLR = 0x40000000
	// Position of APB_SARADC1_DONE_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC1_DONE_INT_CLR_Pos = 0x1f
	// Bit mask of APB_SARADC1_DONE_INT_CLR field.
	APB_SARADC_INT_CLR_APB_SARADC1_DONE_INT_CLR_Msk = 0x80000000
	// Bit APB_SARADC1_DONE_INT_CLR.
	APB_SARADC_INT_CLR_APB_SARADC1_DONE_INT_CLR = 0x80000000

	// DMA_CONF: digital saradc configure register
	// Position of APB_ADC_EOF_NUM field.
	APB_SARADC_DMA_CONF_APB_ADC_EOF_NUM_Pos = 0x0
	// Bit mask of APB_ADC_EOF_NUM field.
	APB_SARADC_DMA_CONF_APB_ADC_EOF_NUM_Msk = 0xffff
	// Position of APB_ADC_RESET_FSM field.
	APB_SARADC_DMA_CONF_APB_ADC_RESET_FSM_Pos = 0x1e
	// Bit mask of APB_ADC_RESET_FSM field.
	APB_SARADC_DMA_CONF_APB_ADC_RESET_FSM_Msk = 0x40000000
	// Bit APB_ADC_RESET_FSM.
	APB_SARADC_DMA_CONF_APB_ADC_RESET_FSM = 0x40000000
	// Position of APB_ADC_TRANS field.
	APB_SARADC_DMA_CONF_APB_ADC_TRANS_Pos = 0x1f
	// Bit mask of APB_ADC_TRANS field.
	APB_SARADC_DMA_CONF_APB_ADC_TRANS_Msk = 0x80000000
	// Bit APB_ADC_TRANS.
	APB_SARADC_DMA_CONF_APB_ADC_TRANS = 0x80000000

	// CLKM_CONF: digital saradc configure register
	// Position of CLKM_DIV_NUM field.
	APB_SARADC_CLKM_CONF_CLKM_DIV_NUM_Pos = 0x0
	// Bit mask of CLKM_DIV_NUM field.
	APB_SARADC_CLKM_CONF_CLKM_DIV_NUM_Msk = 0xff
	// Position of CLKM_DIV_B field.
	APB_SARADC_CLKM_CONF_CLKM_DIV_B_Pos = 0x8
	// Bit mask of CLKM_DIV_B field.
	APB_SARADC_CLKM_CONF_CLKM_DIV_B_Msk = 0x3f00
	// Position of CLKM_DIV_A field.
	APB_SARADC_CLKM_CONF_CLKM_DIV_A_Pos = 0xe
	// Bit mask of CLKM_DIV_A field.
	APB_SARADC_CLKM_CONF_CLKM_DIV_A_Msk = 0xfc000
	// Position of CLK_EN field.
	APB_SARADC_CLKM_CONF_CLK_EN_Pos = 0x14
	// Bit mask of CLK_EN field.
	APB_SARADC_CLKM_CONF_CLK_EN_Msk = 0x100000
	// Bit CLK_EN.
	APB_SARADC_CLKM_CONF_CLK_EN = 0x100000
	// Position of CLK_SEL field.
	APB_SARADC_CLKM_CONF_CLK_SEL_Pos = 0x15
	// Bit mask of CLK_SEL field.
	APB_SARADC_CLKM_CONF_CLK_SEL_Msk = 0x600000

	// APB_TSENS_CTRL: digital tsens configure register
	// Position of TSENS_OUT field.
	APB_SARADC_APB_TSENS_CTRL_TSENS_OUT_Pos = 0x0
	// Bit mask of TSENS_OUT field.
	APB_SARADC_APB_TSENS_CTRL_TSENS_OUT_Msk = 0xff
	// Position of TSENS_IN_INV field.
	APB_SARADC_APB_TSENS_CTRL_TSENS_IN_INV_Pos = 0xd
	// Bit mask of TSENS_IN_INV field.
	APB_SARADC_APB_TSENS_CTRL_TSENS_IN_INV_Msk = 0x2000
	// Bit TSENS_IN_INV.
	APB_SARADC_APB_TSENS_CTRL_TSENS_IN_INV = 0x2000
	// Position of TSENS_CLK_DIV field.
	APB_SARADC_APB_TSENS_CTRL_TSENS_CLK_DIV_Pos = 0xe
	// Bit mask of TSENS_CLK_DIV field.
	APB_SARADC_APB_TSENS_CTRL_TSENS_CLK_DIV_Msk = 0x3fc000
	// Position of TSENS_PU field.
	APB_SARADC_APB_TSENS_CTRL_TSENS_PU_Pos = 0x16
	// Bit mask of TSENS_PU field.
	APB_SARADC_APB_TSENS_CTRL_TSENS_PU_Msk = 0x400000
	// Bit TSENS_PU.
	APB_SARADC_APB_TSENS_CTRL_TSENS_PU = 0x400000

	// TSENS_CTRL2: digital tsens configure register
	// Position of TSENS_XPD_WAIT field.
	APB_SARADC_TSENS_CTRL2_TSENS_XPD_WAIT_Pos = 0x0
	// Bit mask of TSENS_XPD_WAIT field.
	APB_SARADC_TSENS_CTRL2_TSENS_XPD_WAIT_Msk = 0xfff
	// Position of TSENS_XPD_FORCE field.
	APB_SARADC_TSENS_CTRL2_TSENS_XPD_FORCE_Pos = 0xc
	// Bit mask of TSENS_XPD_FORCE field.
	APB_SARADC_TSENS_CTRL2_TSENS_XPD_FORCE_Msk = 0x3000
	// Position of TSENS_CLK_INV field.
	APB_SARADC_TSENS_CTRL2_TSENS_CLK_INV_Pos = 0xe
	// Bit mask of TSENS_CLK_INV field.
	APB_SARADC_TSENS_CTRL2_TSENS_CLK_INV_Msk = 0x4000
	// Bit TSENS_CLK_INV.
	APB_SARADC_TSENS_CTRL2_TSENS_CLK_INV = 0x4000
	// Position of TSENS_CLK_SEL field.
	APB_SARADC_TSENS_CTRL2_TSENS_CLK_SEL_Pos = 0xf
	// Bit mask of TSENS_CLK_SEL field.
	APB_SARADC_TSENS_CTRL2_TSENS_CLK_SEL_Msk = 0x8000
	// Bit TSENS_CLK_SEL.
	APB_SARADC_TSENS_CTRL2_TSENS_CLK_SEL = 0x8000

	// CALI: digital saradc configure register
	// Position of APB_SARADC_CALI_CFG field.
	APB_SARADC_CALI_APB_SARADC_CALI_CFG_Pos = 0x0
	// Bit mask of APB_SARADC_CALI_CFG field.
	APB_SARADC_CALI_APB_SARADC_CALI_CFG_Msk = 0x1ffff

	// CTRL_DATE: version
	// Position of DATE field.
	APB_SARADC_CTRL_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	APB_SARADC_CTRL_DATE_DATE_Msk = 0xffffffff
)

// Bitfields for ASSIST_DEBUG: Peripheral ASSIST_DEBUG
const (
	// C0RE_0_MONTR_ENA: ASSIST_DEBUG_C0RE_0_MONTR_ENA_REG
	// Position of CORE_0_AREA_DRAM0_0_RD_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_0_RD_ENA_Pos = 0x0
	// Bit mask of CORE_0_AREA_DRAM0_0_RD_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_0_RD_ENA_Msk = 0x1
	// Bit CORE_0_AREA_DRAM0_0_RD_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_0_RD_ENA = 0x1
	// Position of CORE_0_AREA_DRAM0_0_WR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_0_WR_ENA_Pos = 0x1
	// Bit mask of CORE_0_AREA_DRAM0_0_WR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_0_WR_ENA_Msk = 0x2
	// Bit CORE_0_AREA_DRAM0_0_WR_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_0_WR_ENA = 0x2
	// Position of CORE_0_AREA_DRAM0_1_RD_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_1_RD_ENA_Pos = 0x2
	// Bit mask of CORE_0_AREA_DRAM0_1_RD_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_1_RD_ENA_Msk = 0x4
	// Bit CORE_0_AREA_DRAM0_1_RD_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_1_RD_ENA = 0x4
	// Position of CORE_0_AREA_DRAM0_1_WR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_1_WR_ENA_Pos = 0x3
	// Bit mask of CORE_0_AREA_DRAM0_1_WR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_1_WR_ENA_Msk = 0x8
	// Bit CORE_0_AREA_DRAM0_1_WR_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_DRAM0_1_WR_ENA = 0x8
	// Position of CORE_0_AREA_PIF_0_RD_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_0_RD_ENA_Pos = 0x4
	// Bit mask of CORE_0_AREA_PIF_0_RD_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_0_RD_ENA_Msk = 0x10
	// Bit CORE_0_AREA_PIF_0_RD_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_0_RD_ENA = 0x10
	// Position of CORE_0_AREA_PIF_0_WR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_0_WR_ENA_Pos = 0x5
	// Bit mask of CORE_0_AREA_PIF_0_WR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_0_WR_ENA_Msk = 0x20
	// Bit CORE_0_AREA_PIF_0_WR_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_0_WR_ENA = 0x20
	// Position of CORE_0_AREA_PIF_1_RD_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_1_RD_ENA_Pos = 0x6
	// Bit mask of CORE_0_AREA_PIF_1_RD_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_1_RD_ENA_Msk = 0x40
	// Bit CORE_0_AREA_PIF_1_RD_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_1_RD_ENA = 0x40
	// Position of CORE_0_AREA_PIF_1_WR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_1_WR_ENA_Pos = 0x7
	// Bit mask of CORE_0_AREA_PIF_1_WR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_1_WR_ENA_Msk = 0x80
	// Bit CORE_0_AREA_PIF_1_WR_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_AREA_PIF_1_WR_ENA = 0x80
	// Position of CORE_0_SP_SPILL_MIN_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_SP_SPILL_MIN_ENA_Pos = 0x8
	// Bit mask of CORE_0_SP_SPILL_MIN_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_SP_SPILL_MIN_ENA_Msk = 0x100
	// Bit CORE_0_SP_SPILL_MIN_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_SP_SPILL_MIN_ENA = 0x100
	// Position of CORE_0_SP_SPILL_MAX_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_SP_SPILL_MAX_ENA_Pos = 0x9
	// Bit mask of CORE_0_SP_SPILL_MAX_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_SP_SPILL_MAX_ENA_Msk = 0x200
	// Bit CORE_0_SP_SPILL_MAX_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_SP_SPILL_MAX_ENA = 0x200
	// Position of CORE_0_IRAM0_EXCEPTION_MONITOR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_IRAM0_EXCEPTION_MONITOR_ENA_Pos = 0xa
	// Bit mask of CORE_0_IRAM0_EXCEPTION_MONITOR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_IRAM0_EXCEPTION_MONITOR_ENA_Msk = 0x400
	// Bit CORE_0_IRAM0_EXCEPTION_MONITOR_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_IRAM0_EXCEPTION_MONITOR_ENA = 0x400
	// Position of CORE_0_DRAM0_EXCEPTION_MONITOR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_DRAM0_EXCEPTION_MONITOR_ENA_Pos = 0xb
	// Bit mask of CORE_0_DRAM0_EXCEPTION_MONITOR_ENA field.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_DRAM0_EXCEPTION_MONITOR_ENA_Msk = 0x800
	// Bit CORE_0_DRAM0_EXCEPTION_MONITOR_ENA.
	ASSIST_DEBUG_C0RE_0_MONTR_ENA_CORE_0_DRAM0_EXCEPTION_MONITOR_ENA = 0x800

	// CORE_0_INTR_RAW: ASSIST_DEBUG_CORE_0_INTR_RAW_REG
	// Position of CORE_0_AREA_DRAM0_0_RD_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_0_RD_RAW_Pos = 0x0
	// Bit mask of CORE_0_AREA_DRAM0_0_RD_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_0_RD_RAW_Msk = 0x1
	// Bit CORE_0_AREA_DRAM0_0_RD_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_0_RD_RAW = 0x1
	// Position of CORE_0_AREA_DRAM0_0_WR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_0_WR_RAW_Pos = 0x1
	// Bit mask of CORE_0_AREA_DRAM0_0_WR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_0_WR_RAW_Msk = 0x2
	// Bit CORE_0_AREA_DRAM0_0_WR_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_0_WR_RAW = 0x2
	// Position of CORE_0_AREA_DRAM0_1_RD_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_1_RD_RAW_Pos = 0x2
	// Bit mask of CORE_0_AREA_DRAM0_1_RD_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_1_RD_RAW_Msk = 0x4
	// Bit CORE_0_AREA_DRAM0_1_RD_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_1_RD_RAW = 0x4
	// Position of CORE_0_AREA_DRAM0_1_WR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_1_WR_RAW_Pos = 0x3
	// Bit mask of CORE_0_AREA_DRAM0_1_WR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_1_WR_RAW_Msk = 0x8
	// Bit CORE_0_AREA_DRAM0_1_WR_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_DRAM0_1_WR_RAW = 0x8
	// Position of CORE_0_AREA_PIF_0_RD_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_0_RD_RAW_Pos = 0x4
	// Bit mask of CORE_0_AREA_PIF_0_RD_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_0_RD_RAW_Msk = 0x10
	// Bit CORE_0_AREA_PIF_0_RD_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_0_RD_RAW = 0x10
	// Position of CORE_0_AREA_PIF_0_WR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_0_WR_RAW_Pos = 0x5
	// Bit mask of CORE_0_AREA_PIF_0_WR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_0_WR_RAW_Msk = 0x20
	// Bit CORE_0_AREA_PIF_0_WR_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_0_WR_RAW = 0x20
	// Position of CORE_0_AREA_PIF_1_RD_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_1_RD_RAW_Pos = 0x6
	// Bit mask of CORE_0_AREA_PIF_1_RD_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_1_RD_RAW_Msk = 0x40
	// Bit CORE_0_AREA_PIF_1_RD_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_1_RD_RAW = 0x40
	// Position of CORE_0_AREA_PIF_1_WR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_1_WR_RAW_Pos = 0x7
	// Bit mask of CORE_0_AREA_PIF_1_WR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_1_WR_RAW_Msk = 0x80
	// Bit CORE_0_AREA_PIF_1_WR_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_AREA_PIF_1_WR_RAW = 0x80
	// Position of CORE_0_SP_SPILL_MIN_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_SP_SPILL_MIN_RAW_Pos = 0x8
	// Bit mask of CORE_0_SP_SPILL_MIN_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_SP_SPILL_MIN_RAW_Msk = 0x100
	// Bit CORE_0_SP_SPILL_MIN_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_SP_SPILL_MIN_RAW = 0x100
	// Position of CORE_0_SP_SPILL_MAX_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_SP_SPILL_MAX_RAW_Pos = 0x9
	// Bit mask of CORE_0_SP_SPILL_MAX_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_SP_SPILL_MAX_RAW_Msk = 0x200
	// Bit CORE_0_SP_SPILL_MAX_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_SP_SPILL_MAX_RAW = 0x200
	// Position of CORE_0_IRAM0_EXCEPTION_MONITOR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_IRAM0_EXCEPTION_MONITOR_RAW_Pos = 0xa
	// Bit mask of CORE_0_IRAM0_EXCEPTION_MONITOR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_IRAM0_EXCEPTION_MONITOR_RAW_Msk = 0x400
	// Bit CORE_0_IRAM0_EXCEPTION_MONITOR_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_IRAM0_EXCEPTION_MONITOR_RAW = 0x400
	// Position of CORE_0_DRAM0_EXCEPTION_MONITOR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_DRAM0_EXCEPTION_MONITOR_RAW_Pos = 0xb
	// Bit mask of CORE_0_DRAM0_EXCEPTION_MONITOR_RAW field.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_DRAM0_EXCEPTION_MONITOR_RAW_Msk = 0x800
	// Bit CORE_0_DRAM0_EXCEPTION_MONITOR_RAW.
	ASSIST_DEBUG_CORE_0_INTR_RAW_CORE_0_DRAM0_EXCEPTION_MONITOR_RAW = 0x800

	// CORE_0_INTR_ENA: ASSIST_DEBUG_CORE_0_INTR_ENA_REG
	// Position of CORE_0_AREA_DRAM0_0_RD_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_0_RD_INTR_ENA_Pos = 0x0
	// Bit mask of CORE_0_AREA_DRAM0_0_RD_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_0_RD_INTR_ENA_Msk = 0x1
	// Bit CORE_0_AREA_DRAM0_0_RD_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_0_RD_INTR_ENA = 0x1
	// Position of CORE_0_AREA_DRAM0_0_WR_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_0_WR_INTR_ENA_Pos = 0x1
	// Bit mask of CORE_0_AREA_DRAM0_0_WR_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_0_WR_INTR_ENA_Msk = 0x2
	// Bit CORE_0_AREA_DRAM0_0_WR_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_0_WR_INTR_ENA = 0x2
	// Position of CORE_0_AREA_DRAM0_1_RD_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_1_RD_INTR_ENA_Pos = 0x2
	// Bit mask of CORE_0_AREA_DRAM0_1_RD_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_1_RD_INTR_ENA_Msk = 0x4
	// Bit CORE_0_AREA_DRAM0_1_RD_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_1_RD_INTR_ENA = 0x4
	// Position of CORE_0_AREA_DRAM0_1_WR_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_1_WR_INTR_ENA_Pos = 0x3
	// Bit mask of CORE_0_AREA_DRAM0_1_WR_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_1_WR_INTR_ENA_Msk = 0x8
	// Bit CORE_0_AREA_DRAM0_1_WR_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_DRAM0_1_WR_INTR_ENA = 0x8
	// Position of CORE_0_AREA_PIF_0_RD_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_0_RD_INTR_ENA_Pos = 0x4
	// Bit mask of CORE_0_AREA_PIF_0_RD_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_0_RD_INTR_ENA_Msk = 0x10
	// Bit CORE_0_AREA_PIF_0_RD_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_0_RD_INTR_ENA = 0x10
	// Position of CORE_0_AREA_PIF_0_WR_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_0_WR_INTR_ENA_Pos = 0x5
	// Bit mask of CORE_0_AREA_PIF_0_WR_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_0_WR_INTR_ENA_Msk = 0x20
	// Bit CORE_0_AREA_PIF_0_WR_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_0_WR_INTR_ENA = 0x20
	// Position of CORE_0_AREA_PIF_1_RD_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_1_RD_INTR_ENA_Pos = 0x6
	// Bit mask of CORE_0_AREA_PIF_1_RD_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_1_RD_INTR_ENA_Msk = 0x40
	// Bit CORE_0_AREA_PIF_1_RD_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_1_RD_INTR_ENA = 0x40
	// Position of CORE_0_AREA_PIF_1_WR_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_1_WR_INTR_ENA_Pos = 0x7
	// Bit mask of CORE_0_AREA_PIF_1_WR_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_1_WR_INTR_ENA_Msk = 0x80
	// Bit CORE_0_AREA_PIF_1_WR_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_AREA_PIF_1_WR_INTR_ENA = 0x80
	// Position of CORE_0_SP_SPILL_MIN_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_SP_SPILL_MIN_INTR_ENA_Pos = 0x8
	// Bit mask of CORE_0_SP_SPILL_MIN_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_SP_SPILL_MIN_INTR_ENA_Msk = 0x100
	// Bit CORE_0_SP_SPILL_MIN_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_SP_SPILL_MIN_INTR_ENA = 0x100
	// Position of CORE_0_SP_SPILL_MAX_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_SP_SPILL_MAX_INTR_ENA_Pos = 0x9
	// Bit mask of CORE_0_SP_SPILL_MAX_INTR_ENA field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_SP_SPILL_MAX_INTR_ENA_Msk = 0x200
	// Bit CORE_0_SP_SPILL_MAX_INTR_ENA.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_SP_SPILL_MAX_INTR_ENA = 0x200
	// Position of CORE_0_IRAM0_EXCEPTION_MONITOR_RLS field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_IRAM0_EXCEPTION_MONITOR_RLS_Pos = 0xa
	// Bit mask of CORE_0_IRAM0_EXCEPTION_MONITOR_RLS field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_IRAM0_EXCEPTION_MONITOR_RLS_Msk = 0x400
	// Bit CORE_0_IRAM0_EXCEPTION_MONITOR_RLS.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_IRAM0_EXCEPTION_MONITOR_RLS = 0x400
	// Position of CORE_0_DRAM0_EXCEPTION_MONITOR_RLS field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_DRAM0_EXCEPTION_MONITOR_RLS_Pos = 0xb
	// Bit mask of CORE_0_DRAM0_EXCEPTION_MONITOR_RLS field.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_DRAM0_EXCEPTION_MONITOR_RLS_Msk = 0x800
	// Bit CORE_0_DRAM0_EXCEPTION_MONITOR_RLS.
	ASSIST_DEBUG_CORE_0_INTR_ENA_CORE_0_DRAM0_EXCEPTION_MONITOR_RLS = 0x800

	// CORE_0_INTR_CLR: ASSIST_DEBUG_CORE_0_INTR_CLR_REG
	// Position of CORE_0_AREA_DRAM0_0_RD_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_0_RD_CLR_Pos = 0x0
	// Bit mask of CORE_0_AREA_DRAM0_0_RD_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_0_RD_CLR_Msk = 0x1
	// Bit CORE_0_AREA_DRAM0_0_RD_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_0_RD_CLR = 0x1
	// Position of CORE_0_AREA_DRAM0_0_WR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_0_WR_CLR_Pos = 0x1
	// Bit mask of CORE_0_AREA_DRAM0_0_WR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_0_WR_CLR_Msk = 0x2
	// Bit CORE_0_AREA_DRAM0_0_WR_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_0_WR_CLR = 0x2
	// Position of CORE_0_AREA_DRAM0_1_RD_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_1_RD_CLR_Pos = 0x2
	// Bit mask of CORE_0_AREA_DRAM0_1_RD_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_1_RD_CLR_Msk = 0x4
	// Bit CORE_0_AREA_DRAM0_1_RD_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_1_RD_CLR = 0x4
	// Position of CORE_0_AREA_DRAM0_1_WR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_1_WR_CLR_Pos = 0x3
	// Bit mask of CORE_0_AREA_DRAM0_1_WR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_1_WR_CLR_Msk = 0x8
	// Bit CORE_0_AREA_DRAM0_1_WR_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_DRAM0_1_WR_CLR = 0x8
	// Position of CORE_0_AREA_PIF_0_RD_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_0_RD_CLR_Pos = 0x4
	// Bit mask of CORE_0_AREA_PIF_0_RD_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_0_RD_CLR_Msk = 0x10
	// Bit CORE_0_AREA_PIF_0_RD_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_0_RD_CLR = 0x10
	// Position of CORE_0_AREA_PIF_0_WR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_0_WR_CLR_Pos = 0x5
	// Bit mask of CORE_0_AREA_PIF_0_WR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_0_WR_CLR_Msk = 0x20
	// Bit CORE_0_AREA_PIF_0_WR_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_0_WR_CLR = 0x20
	// Position of CORE_0_AREA_PIF_1_RD_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_1_RD_CLR_Pos = 0x6
	// Bit mask of CORE_0_AREA_PIF_1_RD_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_1_RD_CLR_Msk = 0x40
	// Bit CORE_0_AREA_PIF_1_RD_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_1_RD_CLR = 0x40
	// Position of CORE_0_AREA_PIF_1_WR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_1_WR_CLR_Pos = 0x7
	// Bit mask of CORE_0_AREA_PIF_1_WR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_1_WR_CLR_Msk = 0x80
	// Bit CORE_0_AREA_PIF_1_WR_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_AREA_PIF_1_WR_CLR = 0x80
	// Position of CORE_0_SP_SPILL_MIN_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_SP_SPILL_MIN_CLR_Pos = 0x8
	// Bit mask of CORE_0_SP_SPILL_MIN_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_SP_SPILL_MIN_CLR_Msk = 0x100
	// Bit CORE_0_SP_SPILL_MIN_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_SP_SPILL_MIN_CLR = 0x100
	// Position of CORE_0_SP_SPILL_MAX_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_SP_SPILL_MAX_CLR_Pos = 0x9
	// Bit mask of CORE_0_SP_SPILL_MAX_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_SP_SPILL_MAX_CLR_Msk = 0x200
	// Bit CORE_0_SP_SPILL_MAX_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_SP_SPILL_MAX_CLR = 0x200
	// Position of CORE_0_IRAM0_EXCEPTION_MONITOR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_IRAM0_EXCEPTION_MONITOR_CLR_Pos = 0xa
	// Bit mask of CORE_0_IRAM0_EXCEPTION_MONITOR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_IRAM0_EXCEPTION_MONITOR_CLR_Msk = 0x400
	// Bit CORE_0_IRAM0_EXCEPTION_MONITOR_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_IRAM0_EXCEPTION_MONITOR_CLR = 0x400
	// Position of CORE_0_DRAM0_EXCEPTION_MONITOR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_DRAM0_EXCEPTION_MONITOR_CLR_Pos = 0xb
	// Bit mask of CORE_0_DRAM0_EXCEPTION_MONITOR_CLR field.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_DRAM0_EXCEPTION_MONITOR_CLR_Msk = 0x800
	// Bit CORE_0_DRAM0_EXCEPTION_MONITOR_CLR.
	ASSIST_DEBUG_CORE_0_INTR_CLR_CORE_0_DRAM0_EXCEPTION_MONITOR_CLR = 0x800

	// CORE_0_AREA_DRAM0_0_MIN: ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_REG
	// Position of CORE_0_AREA_DRAM0_0_MIN field.
	ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_CORE_0_AREA_DRAM0_0_MIN_Pos = 0x0
	// Bit mask of CORE_0_AREA_DRAM0_0_MIN field.
	ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MIN_CORE_0_AREA_DRAM0_0_MIN_Msk = 0xffffffff

	// CORE_0_AREA_DRAM0_0_MAX: ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_REG
	// Position of CORE_0_AREA_DRAM0_0_MAX field.
	ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_CORE_0_AREA_DRAM0_0_MAX_Pos = 0x0
	// Bit mask of CORE_0_AREA_DRAM0_0_MAX field.
	ASSIST_DEBUG_CORE_0_AREA_DRAM0_0_MAX_CORE_0_AREA_DRAM0_0_MAX_Msk = 0xffffffff

	// CORE_0_AREA_DRAM0_1_MIN: ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_REG
	// Position of CORE_0_AREA_DRAM0_1_MIN field.
	ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_CORE_0_AREA_DRAM0_1_MIN_Pos = 0x0
	// Bit mask of CORE_0_AREA_DRAM0_1_MIN field.
	ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MIN_CORE_0_AREA_DRAM0_1_MIN_Msk = 0xffffffff

	// CORE_0_AREA_DRAM0_1_MAX: ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_REG
	// Position of CORE_0_AREA_DRAM0_1_MAX field.
	ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_CORE_0_AREA_DRAM0_1_MAX_Pos = 0x0
	// Bit mask of CORE_0_AREA_DRAM0_1_MAX field.
	ASSIST_DEBUG_CORE_0_AREA_DRAM0_1_MAX_CORE_0_AREA_DRAM0_1_MAX_Msk = 0xffffffff

	// CORE_0_AREA_PIF_0_MIN: ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_REG
	// Position of CORE_0_AREA_PIF_0_MIN field.
	ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_CORE_0_AREA_PIF_0_MIN_Pos = 0x0
	// Bit mask of CORE_0_AREA_PIF_0_MIN field.
	ASSIST_DEBUG_CORE_0_AREA_PIF_0_MIN_CORE_0_AREA_PIF_0_MIN_Msk = 0xffffffff

	// CORE_0_AREA_PIF_0_MAX: ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_REG
	// Position of CORE_0_AREA_PIF_0_MAX field.
	ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_CORE_0_AREA_PIF_0_MAX_Pos = 0x0
	// Bit mask of CORE_0_AREA_PIF_0_MAX field.
	ASSIST_DEBUG_CORE_0_AREA_PIF_0_MAX_CORE_0_AREA_PIF_0_MAX_Msk = 0xffffffff

	// CORE_0_AREA_PIF_1_MIN: ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_REG
	// Position of CORE_0_AREA_PIF_1_MIN field.
	ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_CORE_0_AREA_PIF_1_MIN_Pos = 0x0
	// Bit mask of CORE_0_AREA_PIF_1_MIN field.
	ASSIST_DEBUG_CORE_0_AREA_PIF_1_MIN_CORE_0_AREA_PIF_1_MIN_Msk = 0xffffffff

	// CORE_0_AREA_PIF_1_MAX: ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_REG
	// Position of CORE_0_AREA_PIF_1_MAX field.
	ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_CORE_0_AREA_PIF_1_MAX_Pos = 0x0
	// Bit mask of CORE_0_AREA_PIF_1_MAX field.
	ASSIST_DEBUG_CORE_0_AREA_PIF_1_MAX_CORE_0_AREA_PIF_1_MAX_Msk = 0xffffffff

	// CORE_0_AREA_PC: ASSIST_DEBUG_CORE_0_AREA_PC_REG
	// Position of CORE_0_AREA_PC field.
	ASSIST_DEBUG_CORE_0_AREA_PC_CORE_0_AREA_PC_Pos = 0x0
	// Bit mask of CORE_0_AREA_PC field.
	ASSIST_DEBUG_CORE_0_AREA_PC_CORE_0_AREA_PC_Msk = 0xffffffff

	// CORE_0_AREA_SP: ASSIST_DEBUG_CORE_0_AREA_SP_REG
	// Position of CORE_0_AREA_SP field.
	ASSIST_DEBUG_CORE_0_AREA_SP_CORE_0_AREA_SP_Pos = 0x0
	// Bit mask of CORE_0_AREA_SP field.
	ASSIST_DEBUG_CORE_0_AREA_SP_CORE_0_AREA_SP_Msk = 0xffffffff

	// CORE_0_SP_MIN: ASSIST_DEBUG_CORE_0_SP_MIN_REG
	// Position of CORE_0_SP_MIN field.
	ASSIST_DEBUG_CORE_0_SP_MIN_CORE_0_SP_MIN_Pos = 0x0
	// Bit mask of CORE_0_SP_MIN field.
	ASSIST_DEBUG_CORE_0_SP_MIN_CORE_0_SP_MIN_Msk = 0xffffffff

	// CORE_0_SP_MAX: ASSIST_DEBUG_CORE_0_SP_MAX_REG
	// Position of CORE_0_SP_MAX field.
	ASSIST_DEBUG_CORE_0_SP_MAX_CORE_0_SP_MAX_Pos = 0x0
	// Bit mask of CORE_0_SP_MAX field.
	ASSIST_DEBUG_CORE_0_SP_MAX_CORE_0_SP_MAX_Msk = 0xffffffff

	// CORE_0_SP_PC: ASSIST_DEBUG_CORE_0_SP_PC_REG
	// Position of CORE_0_SP_PC field.
	ASSIST_DEBUG_CORE_0_SP_PC_CORE_0_SP_PC_Pos = 0x0
	// Bit mask of CORE_0_SP_PC field.
	ASSIST_DEBUG_CORE_0_SP_PC_CORE_0_SP_PC_Msk = 0xffffffff

	// CORE_0_RCD_EN: ASSIST_DEBUG_CORE_0_RCD_EN_REG
	// Position of CORE_0_RCD_RECORDEN field.
	ASSIST_DEBUG_CORE_0_RCD_EN_CORE_0_RCD_RECORDEN_Pos = 0x0
	// Bit mask of CORE_0_RCD_RECORDEN field.
	ASSIST_DEBUG_CORE_0_RCD_EN_CORE_0_RCD_RECORDEN_Msk = 0x1
	// Bit CORE_0_RCD_RECORDEN.
	ASSIST_DEBUG_CORE_0_RCD_EN_CORE_0_RCD_RECORDEN = 0x1
	// Position of CORE_0_RCD_PDEBUGEN field.
	ASSIST_DEBUG_CORE_0_RCD_EN_CORE_0_RCD_PDEBUGEN_Pos = 0x1
	// Bit mask of CORE_0_RCD_PDEBUGEN field.
	ASSIST_DEBUG_CORE_0_RCD_EN_CORE_0_RCD_PDEBUGEN_Msk = 0x2
	// Bit CORE_0_RCD_PDEBUGEN.
	ASSIST_DEBUG_CORE_0_RCD_EN_CORE_0_RCD_PDEBUGEN = 0x2

	// CORE_0_RCD_PDEBUGPC: ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_REG
	// Position of CORE_0_RCD_PDEBUGPC field.
	ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_CORE_0_RCD_PDEBUGPC_Pos = 0x0
	// Bit mask of CORE_0_RCD_PDEBUGPC field.
	ASSIST_DEBUG_CORE_0_RCD_PDEBUGPC_CORE_0_RCD_PDEBUGPC_Msk = 0xffffffff

	// CORE_0_RCD_PDEBUGSP: ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_REG
	// Position of CORE_0_RCD_PDEBUGSP field.
	ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_CORE_0_RCD_PDEBUGSP_Pos = 0x0
	// Bit mask of CORE_0_RCD_PDEBUGSP field.
	ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_CORE_0_RCD_PDEBUGSP_Msk = 0xffffffff

	// CORE_0_IRAM0_EXCEPTION_MONITOR_0: ASSIST_DEBUG_CORE_0_RCD_PDEBUGSP_REG
	// Position of CORE_0_IRAM0_RECORDING_ADDR_0 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_0_CORE_0_IRAM0_RECORDING_ADDR_0_Pos = 0x0
	// Bit mask of CORE_0_IRAM0_RECORDING_ADDR_0 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_0_CORE_0_IRAM0_RECORDING_ADDR_0_Msk = 0xffffff
	// Position of CORE_0_IRAM0_RECORDING_WR_0 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_0_CORE_0_IRAM0_RECORDING_WR_0_Pos = 0x18
	// Bit mask of CORE_0_IRAM0_RECORDING_WR_0 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_0_CORE_0_IRAM0_RECORDING_WR_0_Msk = 0x1000000
	// Bit CORE_0_IRAM0_RECORDING_WR_0.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_0_CORE_0_IRAM0_RECORDING_WR_0 = 0x1000000
	// Position of CORE_0_IRAM0_RECORDING_LOADSTORE_0 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_0_CORE_0_IRAM0_RECORDING_LOADSTORE_0_Pos = 0x19
	// Bit mask of CORE_0_IRAM0_RECORDING_LOADSTORE_0 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_0_CORE_0_IRAM0_RECORDING_LOADSTORE_0_Msk = 0x2000000
	// Bit CORE_0_IRAM0_RECORDING_LOADSTORE_0.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_0_CORE_0_IRAM0_RECORDING_LOADSTORE_0 = 0x2000000

	// CORE_0_IRAM0_EXCEPTION_MONITOR_1: ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_REG
	// Position of CORE_0_IRAM0_RECORDING_ADDR_1 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_CORE_0_IRAM0_RECORDING_ADDR_1_Pos = 0x0
	// Bit mask of CORE_0_IRAM0_RECORDING_ADDR_1 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_CORE_0_IRAM0_RECORDING_ADDR_1_Msk = 0xffffff
	// Position of CORE_0_IRAM0_RECORDING_WR_1 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_CORE_0_IRAM0_RECORDING_WR_1_Pos = 0x18
	// Bit mask of CORE_0_IRAM0_RECORDING_WR_1 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_CORE_0_IRAM0_RECORDING_WR_1_Msk = 0x1000000
	// Bit CORE_0_IRAM0_RECORDING_WR_1.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_CORE_0_IRAM0_RECORDING_WR_1 = 0x1000000
	// Position of CORE_0_IRAM0_RECORDING_LOADSTORE_1 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_CORE_0_IRAM0_RECORDING_LOADSTORE_1_Pos = 0x19
	// Bit mask of CORE_0_IRAM0_RECORDING_LOADSTORE_1 field.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_CORE_0_IRAM0_RECORDING_LOADSTORE_1_Msk = 0x2000000
	// Bit CORE_0_IRAM0_RECORDING_LOADSTORE_1.
	ASSIST_DEBUG_CORE_0_IRAM0_EXCEPTION_MONITOR_1_CORE_0_IRAM0_RECORDING_LOADSTORE_1 = 0x2000000

	// CORE_0_DRAM0_EXCEPTION_MONITOR_0: ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_REG
	// Position of CORE_0_DRAM0_RECORDING_ADDR_0 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_CORE_0_DRAM0_RECORDING_ADDR_0_Pos = 0x0
	// Bit mask of CORE_0_DRAM0_RECORDING_ADDR_0 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_CORE_0_DRAM0_RECORDING_ADDR_0_Msk = 0xffffff
	// Position of CORE_0_DRAM0_RECORDING_WR_0 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_CORE_0_DRAM0_RECORDING_WR_0_Pos = 0x18
	// Bit mask of CORE_0_DRAM0_RECORDING_WR_0 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_CORE_0_DRAM0_RECORDING_WR_0_Msk = 0x1000000
	// Bit CORE_0_DRAM0_RECORDING_WR_0.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_CORE_0_DRAM0_RECORDING_WR_0 = 0x1000000
	// Position of CORE_0_DRAM0_RECORDING_BYTEEN_0 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_CORE_0_DRAM0_RECORDING_BYTEEN_0_Pos = 0x19
	// Bit mask of CORE_0_DRAM0_RECORDING_BYTEEN_0 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_0_CORE_0_DRAM0_RECORDING_BYTEEN_0_Msk = 0x1e000000

	// CORE_0_DRAM0_EXCEPTION_MONITOR_1: ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_REG
	// Position of CORE_0_DRAM0_RECORDING_PC_0 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_CORE_0_DRAM0_RECORDING_PC_0_Pos = 0x0
	// Bit mask of CORE_0_DRAM0_RECORDING_PC_0 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_CORE_0_DRAM0_RECORDING_PC_0_Msk = 0xffffffff

	// CORE_0_DRAM0_EXCEPTION_MONITOR_2: ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_1_REG
	// Position of CORE_0_DRAM0_RECORDING_ADDR_1 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_2_CORE_0_DRAM0_RECORDING_ADDR_1_Pos = 0x0
	// Bit mask of CORE_0_DRAM0_RECORDING_ADDR_1 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_2_CORE_0_DRAM0_RECORDING_ADDR_1_Msk = 0xffffff
	// Position of CORE_0_DRAM0_RECORDING_WR_1 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_2_CORE_0_DRAM0_RECORDING_WR_1_Pos = 0x18
	// Bit mask of CORE_0_DRAM0_RECORDING_WR_1 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_2_CORE_0_DRAM0_RECORDING_WR_1_Msk = 0x1000000
	// Bit CORE_0_DRAM0_RECORDING_WR_1.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_2_CORE_0_DRAM0_RECORDING_WR_1 = 0x1000000
	// Position of CORE_0_DRAM0_RECORDING_BYTEEN_1 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_2_CORE_0_DRAM0_RECORDING_BYTEEN_1_Pos = 0x19
	// Bit mask of CORE_0_DRAM0_RECORDING_BYTEEN_1 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_2_CORE_0_DRAM0_RECORDING_BYTEEN_1_Msk = 0x1e000000

	// CORE_0_DRAM0_EXCEPTION_MONITOR_3: ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_3_REG
	// Position of CORE_0_DRAM0_RECORDING_PC_1 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_3_CORE_0_DRAM0_RECORDING_PC_1_Pos = 0x0
	// Bit mask of CORE_0_DRAM0_RECORDING_PC_1 field.
	ASSIST_DEBUG_CORE_0_DRAM0_EXCEPTION_MONITOR_3_CORE_0_DRAM0_RECORDING_PC_1_Msk = 0xffffffff

	// CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0: ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0_REG
	// Position of CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0 field.
	ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0_Pos = 0x0
	// Bit mask of CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0 field.
	ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_0_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_0_Msk = 0xfffff

	// CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1: ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1_REG
	// Position of CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1 field.
	ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1_Pos = 0x0
	// Bit mask of CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1 field.
	ASSIST_DEBUG_CORE_X_IRAM0_DRAM0_EXCEPTION_MONITOR_1_CORE_X_IRAM0_DRAM0_LIMIT_CYCLE_1_Msk = 0xfffff

	// LOG_SETTING: ASSIST_DEBUG_LOG_SETTING
	// Position of LOG_ENA field.
	ASSIST_DEBUG_LOG_SETTING_LOG_ENA_Pos = 0x0
	// Bit mask of LOG_ENA field.
	ASSIST_DEBUG_LOG_SETTING_LOG_ENA_Msk = 0x7
	// Position of LOG_MODE field.
	ASSIST_DEBUG_LOG_SETTING_LOG_MODE_Pos = 0x3
	// Bit mask of LOG_MODE field.
	ASSIST_DEBUG_LOG_SETTING_LOG_MODE_Msk = 0x78
	// Position of LOG_MEM_LOOP_ENABLE field.
	ASSIST_DEBUG_LOG_SETTING_LOG_MEM_LOOP_ENABLE_Pos = 0x7
	// Bit mask of LOG_MEM_LOOP_ENABLE field.
	ASSIST_DEBUG_LOG_SETTING_LOG_MEM_LOOP_ENABLE_Msk = 0x80
	// Bit LOG_MEM_LOOP_ENABLE.
	ASSIST_DEBUG_LOG_SETTING_LOG_MEM_LOOP_ENABLE = 0x80

	// LOG_DATA_0: ASSIST_DEBUG_LOG_DATA_0_REG
	// Position of LOG_DATA_0 field.
	ASSIST_DEBUG_LOG_DATA_0_LOG_DATA_0_Pos = 0x0
	// Bit mask of LOG_DATA_0 field.
	ASSIST_DEBUG_LOG_DATA_0_LOG_DATA_0_Msk = 0xffffffff

	// LOG_DATA_MASK: ASSIST_DEBUG_LOG_DATA_MASK_REG
	// Position of LOG_DATA_SIZE field.
	ASSIST_DEBUG_LOG_DATA_MASK_LOG_DATA_SIZE_Pos = 0x0
	// Bit mask of LOG_DATA_SIZE field.
	ASSIST_DEBUG_LOG_DATA_MASK_LOG_DATA_SIZE_Msk = 0xffff

	// LOG_MIN: ASSIST_DEBUG_LOG_MIN_REG
	// Position of LOG_MIN field.
	ASSIST_DEBUG_LOG_MIN_LOG_MIN_Pos = 0x0
	// Bit mask of LOG_MIN field.
	ASSIST_DEBUG_LOG_MIN_LOG_MIN_Msk = 0xffffffff

	// LOG_MAX: ASSIST_DEBUG_LOG_MAX_REG
	// Position of LOG_MAX field.
	ASSIST_DEBUG_LOG_MAX_LOG_MAX_Pos = 0x0
	// Bit mask of LOG_MAX field.
	ASSIST_DEBUG_LOG_MAX_LOG_MAX_Msk = 0xffffffff

	// LOG_MEM_START: ASSIST_DEBUG_LOG_MEM_START_REG
	// Position of LOG_MEM_START field.
	ASSIST_DEBUG_LOG_MEM_START_LOG_MEM_START_Pos = 0x0
	// Bit mask of LOG_MEM_START field.
	ASSIST_DEBUG_LOG_MEM_START_LOG_MEM_START_Msk = 0xffffffff

	// LOG_MEM_END: ASSIST_DEBUG_LOG_MEM_END_REG
	// Position of LOG_MEM_END field.
	ASSIST_DEBUG_LOG_MEM_END_LOG_MEM_END_Pos = 0x0
	// Bit mask of LOG_MEM_END field.
	ASSIST_DEBUG_LOG_MEM_END_LOG_MEM_END_Msk = 0xffffffff

	// LOG_MEM_WRITING_ADDR: ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_REG
	// Position of LOG_MEM_WRITING_ADDR field.
	ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_LOG_MEM_WRITING_ADDR_Pos = 0x0
	// Bit mask of LOG_MEM_WRITING_ADDR field.
	ASSIST_DEBUG_LOG_MEM_WRITING_ADDR_LOG_MEM_WRITING_ADDR_Msk = 0xffffffff

	// LOG_MEM_FULL_FLAG: ASSIST_DEBUG_LOG_MEM_FULL_FLAG_REG
	// Position of LOG_MEM_FULL_FLAG field.
	ASSIST_DEBUG_LOG_MEM_FULL_FLAG_LOG_MEM_FULL_FLAG_Pos = 0x0
	// Bit mask of LOG_MEM_FULL_FLAG field.
	ASSIST_DEBUG_LOG_MEM_FULL_FLAG_LOG_MEM_FULL_FLAG_Msk = 0x1
	// Bit LOG_MEM_FULL_FLAG.
	ASSIST_DEBUG_LOG_MEM_FULL_FLAG_LOG_MEM_FULL_FLAG = 0x1
	// Position of CLR_LOG_MEM_FULL_FLAG field.
	ASSIST_DEBUG_LOG_MEM_FULL_FLAG_CLR_LOG_MEM_FULL_FLAG_Pos = 0x1
	// Bit mask of CLR_LOG_MEM_FULL_FLAG field.
	ASSIST_DEBUG_LOG_MEM_FULL_FLAG_CLR_LOG_MEM_FULL_FLAG_Msk = 0x2
	// Bit CLR_LOG_MEM_FULL_FLAG.
	ASSIST_DEBUG_LOG_MEM_FULL_FLAG_CLR_LOG_MEM_FULL_FLAG = 0x2

	// C0RE_0_LASTPC_BEFORE_EXCEPTION: ASSIST_DEBUG_C0RE_0_LASTPC_BEFORE_EXCEPTION
	// Position of CORE_0_LASTPC_BEFORE_EXC field.
	ASSIST_DEBUG_C0RE_0_LASTPC_BEFORE_EXCEPTION_CORE_0_LASTPC_BEFORE_EXC_Pos = 0x0
	// Bit mask of CORE_0_LASTPC_BEFORE_EXC field.
	ASSIST_DEBUG_C0RE_0_LASTPC_BEFORE_EXCEPTION_CORE_0_LASTPC_BEFORE_EXC_Msk = 0xffffffff

	// C0RE_0_DEBUG_MODE: ASSIST_DEBUG_C0RE_0_DEBUG_MODE
	// Position of CORE_0_DEBUG_MODE field.
	ASSIST_DEBUG_C0RE_0_DEBUG_MODE_CORE_0_DEBUG_MODE_Pos = 0x0
	// Bit mask of CORE_0_DEBUG_MODE field.
	ASSIST_DEBUG_C0RE_0_DEBUG_MODE_CORE_0_DEBUG_MODE_Msk = 0x1
	// Bit CORE_0_DEBUG_MODE.
	ASSIST_DEBUG_C0RE_0_DEBUG_MODE_CORE_0_DEBUG_MODE = 0x1
	// Position of CORE_0_DEBUG_MODULE_ACTIVE field.
	ASSIST_DEBUG_C0RE_0_DEBUG_MODE_CORE_0_DEBUG_MODULE_ACTIVE_Pos = 0x1
	// Bit mask of CORE_0_DEBUG_MODULE_ACTIVE field.
	ASSIST_DEBUG_C0RE_0_DEBUG_MODE_CORE_0_DEBUG_MODULE_ACTIVE_Msk = 0x2
	// Bit CORE_0_DEBUG_MODULE_ACTIVE.
	ASSIST_DEBUG_C0RE_0_DEBUG_MODE_CORE_0_DEBUG_MODULE_ACTIVE = 0x2

	// DATE: ASSIST_DEBUG_DATE_REG
	// Position of ASSIST_DEBUG_DATE field.
	ASSIST_DEBUG_DATE_ASSIST_DEBUG_DATE_Pos = 0x0
	// Bit mask of ASSIST_DEBUG_DATE field.
	ASSIST_DEBUG_DATE_ASSIST_DEBUG_DATE_Msk = 0xfffffff
)

// Bitfields for DMA: Peripheral DMA
const (
	// INT_RAW_CH0: DMA_INT_RAW_CH0_REG.
	// Position of IN_DONE_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_DONE_CH0_INT_RAW_Pos = 0x0
	// Bit mask of IN_DONE_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_DONE_CH0_INT_RAW_Msk = 0x1
	// Bit IN_DONE_CH0_INT_RAW.
	DMA_INT_RAW_CH0_IN_DONE_CH0_INT_RAW = 0x1
	// Position of IN_SUC_EOF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_SUC_EOF_CH0_INT_RAW_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_SUC_EOF_CH0_INT_RAW_Msk = 0x2
	// Bit IN_SUC_EOF_CH0_INT_RAW.
	DMA_INT_RAW_CH0_IN_SUC_EOF_CH0_INT_RAW = 0x2
	// Position of IN_ERR_EOF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_ERR_EOF_CH0_INT_RAW_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_ERR_EOF_CH0_INT_RAW_Msk = 0x4
	// Bit IN_ERR_EOF_CH0_INT_RAW.
	DMA_INT_RAW_CH0_IN_ERR_EOF_CH0_INT_RAW = 0x4
	// Position of OUT_DONE_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUT_DONE_CH0_INT_RAW_Pos = 0x3
	// Bit mask of OUT_DONE_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUT_DONE_CH0_INT_RAW_Msk = 0x8
	// Bit OUT_DONE_CH0_INT_RAW.
	DMA_INT_RAW_CH0_OUT_DONE_CH0_INT_RAW = 0x8
	// Position of OUT_EOF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUT_EOF_CH0_INT_RAW_Pos = 0x4
	// Bit mask of OUT_EOF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUT_EOF_CH0_INT_RAW_Msk = 0x10
	// Bit OUT_EOF_CH0_INT_RAW.
	DMA_INT_RAW_CH0_OUT_EOF_CH0_INT_RAW = 0x10
	// Position of IN_DSCR_ERR_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_DSCR_ERR_CH0_INT_RAW_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_DSCR_ERR_CH0_INT_RAW_Msk = 0x20
	// Bit IN_DSCR_ERR_CH0_INT_RAW.
	DMA_INT_RAW_CH0_IN_DSCR_ERR_CH0_INT_RAW = 0x20
	// Position of OUT_DSCR_ERR_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUT_DSCR_ERR_CH0_INT_RAW_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUT_DSCR_ERR_CH0_INT_RAW_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH0_INT_RAW.
	DMA_INT_RAW_CH0_OUT_DSCR_ERR_CH0_INT_RAW = 0x40
	// Position of IN_DSCR_EMPTY_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_DSCR_EMPTY_CH0_INT_RAW_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_IN_DSCR_EMPTY_CH0_INT_RAW_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH0_INT_RAW.
	DMA_INT_RAW_CH0_IN_DSCR_EMPTY_CH0_INT_RAW = 0x80
	// Position of OUT_TOTAL_EOF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUT_TOTAL_EOF_CH0_INT_RAW_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUT_TOTAL_EOF_CH0_INT_RAW_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH0_INT_RAW.
	DMA_INT_RAW_CH0_OUT_TOTAL_EOF_CH0_INT_RAW = 0x100
	// Position of INFIFO_OVF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_INFIFO_OVF_CH0_INT_RAW_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_INFIFO_OVF_CH0_INT_RAW_Msk = 0x200
	// Bit INFIFO_OVF_CH0_INT_RAW.
	DMA_INT_RAW_CH0_INFIFO_OVF_CH0_INT_RAW = 0x200
	// Position of INFIFO_UDF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_INFIFO_UDF_CH0_INT_RAW_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_INFIFO_UDF_CH0_INT_RAW_Msk = 0x400
	// Bit INFIFO_UDF_CH0_INT_RAW.
	DMA_INT_RAW_CH0_INFIFO_UDF_CH0_INT_RAW = 0x400
	// Position of OUTFIFO_OVF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUTFIFO_OVF_CH0_INT_RAW_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUTFIFO_OVF_CH0_INT_RAW_Msk = 0x800
	// Bit OUTFIFO_OVF_CH0_INT_RAW.
	DMA_INT_RAW_CH0_OUTFIFO_OVF_CH0_INT_RAW = 0x800
	// Position of OUTFIFO_UDF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUTFIFO_UDF_CH0_INT_RAW_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH0_INT_RAW field.
	DMA_INT_RAW_CH0_OUTFIFO_UDF_CH0_INT_RAW_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH0_INT_RAW.
	DMA_INT_RAW_CH0_OUTFIFO_UDF_CH0_INT_RAW = 0x1000

	// INT_ST_CH0: DMA_INT_ST_CH0_REG.
	// Position of IN_DONE_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_DONE_CH0_INT_ST_Pos = 0x0
	// Bit mask of IN_DONE_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_DONE_CH0_INT_ST_Msk = 0x1
	// Bit IN_DONE_CH0_INT_ST.
	DMA_INT_ST_CH0_IN_DONE_CH0_INT_ST = 0x1
	// Position of IN_SUC_EOF_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_SUC_EOF_CH0_INT_ST_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_SUC_EOF_CH0_INT_ST_Msk = 0x2
	// Bit IN_SUC_EOF_CH0_INT_ST.
	DMA_INT_ST_CH0_IN_SUC_EOF_CH0_INT_ST = 0x2
	// Position of IN_ERR_EOF_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_ERR_EOF_CH0_INT_ST_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_ERR_EOF_CH0_INT_ST_Msk = 0x4
	// Bit IN_ERR_EOF_CH0_INT_ST.
	DMA_INT_ST_CH0_IN_ERR_EOF_CH0_INT_ST = 0x4
	// Position of OUT_DONE_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUT_DONE_CH0_INT_ST_Pos = 0x3
	// Bit mask of OUT_DONE_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUT_DONE_CH0_INT_ST_Msk = 0x8
	// Bit OUT_DONE_CH0_INT_ST.
	DMA_INT_ST_CH0_OUT_DONE_CH0_INT_ST = 0x8
	// Position of OUT_EOF_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUT_EOF_CH0_INT_ST_Pos = 0x4
	// Bit mask of OUT_EOF_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUT_EOF_CH0_INT_ST_Msk = 0x10
	// Bit OUT_EOF_CH0_INT_ST.
	DMA_INT_ST_CH0_OUT_EOF_CH0_INT_ST = 0x10
	// Position of IN_DSCR_ERR_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_DSCR_ERR_CH0_INT_ST_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_DSCR_ERR_CH0_INT_ST_Msk = 0x20
	// Bit IN_DSCR_ERR_CH0_INT_ST.
	DMA_INT_ST_CH0_IN_DSCR_ERR_CH0_INT_ST = 0x20
	// Position of OUT_DSCR_ERR_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUT_DSCR_ERR_CH0_INT_ST_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUT_DSCR_ERR_CH0_INT_ST_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH0_INT_ST.
	DMA_INT_ST_CH0_OUT_DSCR_ERR_CH0_INT_ST = 0x40
	// Position of IN_DSCR_EMPTY_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_DSCR_EMPTY_CH0_INT_ST_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH0_INT_ST field.
	DMA_INT_ST_CH0_IN_DSCR_EMPTY_CH0_INT_ST_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH0_INT_ST.
	DMA_INT_ST_CH0_IN_DSCR_EMPTY_CH0_INT_ST = 0x80
	// Position of OUT_TOTAL_EOF_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUT_TOTAL_EOF_CH0_INT_ST_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUT_TOTAL_EOF_CH0_INT_ST_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH0_INT_ST.
	DMA_INT_ST_CH0_OUT_TOTAL_EOF_CH0_INT_ST = 0x100
	// Position of INFIFO_OVF_CH0_INT_ST field.
	DMA_INT_ST_CH0_INFIFO_OVF_CH0_INT_ST_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH0_INT_ST field.
	DMA_INT_ST_CH0_INFIFO_OVF_CH0_INT_ST_Msk = 0x200
	// Bit INFIFO_OVF_CH0_INT_ST.
	DMA_INT_ST_CH0_INFIFO_OVF_CH0_INT_ST = 0x200
	// Position of INFIFO_UDF_CH0_INT_ST field.
	DMA_INT_ST_CH0_INFIFO_UDF_CH0_INT_ST_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH0_INT_ST field.
	DMA_INT_ST_CH0_INFIFO_UDF_CH0_INT_ST_Msk = 0x400
	// Bit INFIFO_UDF_CH0_INT_ST.
	DMA_INT_ST_CH0_INFIFO_UDF_CH0_INT_ST = 0x400
	// Position of OUTFIFO_OVF_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUTFIFO_OVF_CH0_INT_ST_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUTFIFO_OVF_CH0_INT_ST_Msk = 0x800
	// Bit OUTFIFO_OVF_CH0_INT_ST.
	DMA_INT_ST_CH0_OUTFIFO_OVF_CH0_INT_ST = 0x800
	// Position of OUTFIFO_UDF_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUTFIFO_UDF_CH0_INT_ST_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH0_INT_ST field.
	DMA_INT_ST_CH0_OUTFIFO_UDF_CH0_INT_ST_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH0_INT_ST.
	DMA_INT_ST_CH0_OUTFIFO_UDF_CH0_INT_ST = 0x1000

	// INT_ENA_CH0: DMA_INT_ENA_CH0_REG.
	// Position of IN_DONE_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_DONE_CH0_INT_ENA_Pos = 0x0
	// Bit mask of IN_DONE_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_DONE_CH0_INT_ENA_Msk = 0x1
	// Bit IN_DONE_CH0_INT_ENA.
	DMA_INT_ENA_CH0_IN_DONE_CH0_INT_ENA = 0x1
	// Position of IN_SUC_EOF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_SUC_EOF_CH0_INT_ENA_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_SUC_EOF_CH0_INT_ENA_Msk = 0x2
	// Bit IN_SUC_EOF_CH0_INT_ENA.
	DMA_INT_ENA_CH0_IN_SUC_EOF_CH0_INT_ENA = 0x2
	// Position of IN_ERR_EOF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_ERR_EOF_CH0_INT_ENA_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_ERR_EOF_CH0_INT_ENA_Msk = 0x4
	// Bit IN_ERR_EOF_CH0_INT_ENA.
	DMA_INT_ENA_CH0_IN_ERR_EOF_CH0_INT_ENA = 0x4
	// Position of OUT_DONE_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUT_DONE_CH0_INT_ENA_Pos = 0x3
	// Bit mask of OUT_DONE_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUT_DONE_CH0_INT_ENA_Msk = 0x8
	// Bit OUT_DONE_CH0_INT_ENA.
	DMA_INT_ENA_CH0_OUT_DONE_CH0_INT_ENA = 0x8
	// Position of OUT_EOF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUT_EOF_CH0_INT_ENA_Pos = 0x4
	// Bit mask of OUT_EOF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUT_EOF_CH0_INT_ENA_Msk = 0x10
	// Bit OUT_EOF_CH0_INT_ENA.
	DMA_INT_ENA_CH0_OUT_EOF_CH0_INT_ENA = 0x10
	// Position of IN_DSCR_ERR_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_DSCR_ERR_CH0_INT_ENA_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_DSCR_ERR_CH0_INT_ENA_Msk = 0x20
	// Bit IN_DSCR_ERR_CH0_INT_ENA.
	DMA_INT_ENA_CH0_IN_DSCR_ERR_CH0_INT_ENA = 0x20
	// Position of OUT_DSCR_ERR_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUT_DSCR_ERR_CH0_INT_ENA_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUT_DSCR_ERR_CH0_INT_ENA_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH0_INT_ENA.
	DMA_INT_ENA_CH0_OUT_DSCR_ERR_CH0_INT_ENA = 0x40
	// Position of IN_DSCR_EMPTY_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_DSCR_EMPTY_CH0_INT_ENA_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_IN_DSCR_EMPTY_CH0_INT_ENA_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH0_INT_ENA.
	DMA_INT_ENA_CH0_IN_DSCR_EMPTY_CH0_INT_ENA = 0x80
	// Position of OUT_TOTAL_EOF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUT_TOTAL_EOF_CH0_INT_ENA_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUT_TOTAL_EOF_CH0_INT_ENA_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH0_INT_ENA.
	DMA_INT_ENA_CH0_OUT_TOTAL_EOF_CH0_INT_ENA = 0x100
	// Position of INFIFO_OVF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_INFIFO_OVF_CH0_INT_ENA_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_INFIFO_OVF_CH0_INT_ENA_Msk = 0x200
	// Bit INFIFO_OVF_CH0_INT_ENA.
	DMA_INT_ENA_CH0_INFIFO_OVF_CH0_INT_ENA = 0x200
	// Position of INFIFO_UDF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_INFIFO_UDF_CH0_INT_ENA_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_INFIFO_UDF_CH0_INT_ENA_Msk = 0x400
	// Bit INFIFO_UDF_CH0_INT_ENA.
	DMA_INT_ENA_CH0_INFIFO_UDF_CH0_INT_ENA = 0x400
	// Position of OUTFIFO_OVF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUTFIFO_OVF_CH0_INT_ENA_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUTFIFO_OVF_CH0_INT_ENA_Msk = 0x800
	// Bit OUTFIFO_OVF_CH0_INT_ENA.
	DMA_INT_ENA_CH0_OUTFIFO_OVF_CH0_INT_ENA = 0x800
	// Position of OUTFIFO_UDF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUTFIFO_UDF_CH0_INT_ENA_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH0_INT_ENA field.
	DMA_INT_ENA_CH0_OUTFIFO_UDF_CH0_INT_ENA_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH0_INT_ENA.
	DMA_INT_ENA_CH0_OUTFIFO_UDF_CH0_INT_ENA = 0x1000

	// INT_CLR_CH0: DMA_INT_CLR_CH0_REG.
	// Position of IN_DONE_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_DONE_CH0_INT_CLR_Pos = 0x0
	// Bit mask of IN_DONE_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_DONE_CH0_INT_CLR_Msk = 0x1
	// Bit IN_DONE_CH0_INT_CLR.
	DMA_INT_CLR_CH0_IN_DONE_CH0_INT_CLR = 0x1
	// Position of IN_SUC_EOF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_SUC_EOF_CH0_INT_CLR_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_SUC_EOF_CH0_INT_CLR_Msk = 0x2
	// Bit IN_SUC_EOF_CH0_INT_CLR.
	DMA_INT_CLR_CH0_IN_SUC_EOF_CH0_INT_CLR = 0x2
	// Position of IN_ERR_EOF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_ERR_EOF_CH0_INT_CLR_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_ERR_EOF_CH0_INT_CLR_Msk = 0x4
	// Bit IN_ERR_EOF_CH0_INT_CLR.
	DMA_INT_CLR_CH0_IN_ERR_EOF_CH0_INT_CLR = 0x4
	// Position of OUT_DONE_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUT_DONE_CH0_INT_CLR_Pos = 0x3
	// Bit mask of OUT_DONE_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUT_DONE_CH0_INT_CLR_Msk = 0x8
	// Bit OUT_DONE_CH0_INT_CLR.
	DMA_INT_CLR_CH0_OUT_DONE_CH0_INT_CLR = 0x8
	// Position of OUT_EOF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUT_EOF_CH0_INT_CLR_Pos = 0x4
	// Bit mask of OUT_EOF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUT_EOF_CH0_INT_CLR_Msk = 0x10
	// Bit OUT_EOF_CH0_INT_CLR.
	DMA_INT_CLR_CH0_OUT_EOF_CH0_INT_CLR = 0x10
	// Position of IN_DSCR_ERR_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_DSCR_ERR_CH0_INT_CLR_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_DSCR_ERR_CH0_INT_CLR_Msk = 0x20
	// Bit IN_DSCR_ERR_CH0_INT_CLR.
	DMA_INT_CLR_CH0_IN_DSCR_ERR_CH0_INT_CLR = 0x20
	// Position of OUT_DSCR_ERR_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUT_DSCR_ERR_CH0_INT_CLR_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUT_DSCR_ERR_CH0_INT_CLR_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH0_INT_CLR.
	DMA_INT_CLR_CH0_OUT_DSCR_ERR_CH0_INT_CLR = 0x40
	// Position of IN_DSCR_EMPTY_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_DSCR_EMPTY_CH0_INT_CLR_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_IN_DSCR_EMPTY_CH0_INT_CLR_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH0_INT_CLR.
	DMA_INT_CLR_CH0_IN_DSCR_EMPTY_CH0_INT_CLR = 0x80
	// Position of OUT_TOTAL_EOF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUT_TOTAL_EOF_CH0_INT_CLR_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUT_TOTAL_EOF_CH0_INT_CLR_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH0_INT_CLR.
	DMA_INT_CLR_CH0_OUT_TOTAL_EOF_CH0_INT_CLR = 0x100
	// Position of INFIFO_OVF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_INFIFO_OVF_CH0_INT_CLR_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_INFIFO_OVF_CH0_INT_CLR_Msk = 0x200
	// Bit INFIFO_OVF_CH0_INT_CLR.
	DMA_INT_CLR_CH0_INFIFO_OVF_CH0_INT_CLR = 0x200
	// Position of INFIFO_UDF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_INFIFO_UDF_CH0_INT_CLR_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_INFIFO_UDF_CH0_INT_CLR_Msk = 0x400
	// Bit INFIFO_UDF_CH0_INT_CLR.
	DMA_INT_CLR_CH0_INFIFO_UDF_CH0_INT_CLR = 0x400
	// Position of OUTFIFO_OVF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUTFIFO_OVF_CH0_INT_CLR_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUTFIFO_OVF_CH0_INT_CLR_Msk = 0x800
	// Bit OUTFIFO_OVF_CH0_INT_CLR.
	DMA_INT_CLR_CH0_OUTFIFO_OVF_CH0_INT_CLR = 0x800
	// Position of OUTFIFO_UDF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUTFIFO_UDF_CH0_INT_CLR_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH0_INT_CLR field.
	DMA_INT_CLR_CH0_OUTFIFO_UDF_CH0_INT_CLR_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH0_INT_CLR.
	DMA_INT_CLR_CH0_OUTFIFO_UDF_CH0_INT_CLR = 0x1000

	// INT_RAW_CH1: DMA_INT_RAW_CH1_REG.
	// Position of IN_DONE_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_DONE_CH1_INT_RAW_Pos = 0x0
	// Bit mask of IN_DONE_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_DONE_CH1_INT_RAW_Msk = 0x1
	// Bit IN_DONE_CH1_INT_RAW.
	DMA_INT_RAW_CH1_IN_DONE_CH1_INT_RAW = 0x1
	// Position of IN_SUC_EOF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_SUC_EOF_CH1_INT_RAW_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_SUC_EOF_CH1_INT_RAW_Msk = 0x2
	// Bit IN_SUC_EOF_CH1_INT_RAW.
	DMA_INT_RAW_CH1_IN_SUC_EOF_CH1_INT_RAW = 0x2
	// Position of IN_ERR_EOF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_ERR_EOF_CH1_INT_RAW_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_ERR_EOF_CH1_INT_RAW_Msk = 0x4
	// Bit IN_ERR_EOF_CH1_INT_RAW.
	DMA_INT_RAW_CH1_IN_ERR_EOF_CH1_INT_RAW = 0x4
	// Position of OUT_DONE_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUT_DONE_CH1_INT_RAW_Pos = 0x3
	// Bit mask of OUT_DONE_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUT_DONE_CH1_INT_RAW_Msk = 0x8
	// Bit OUT_DONE_CH1_INT_RAW.
	DMA_INT_RAW_CH1_OUT_DONE_CH1_INT_RAW = 0x8
	// Position of OUT_EOF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUT_EOF_CH1_INT_RAW_Pos = 0x4
	// Bit mask of OUT_EOF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUT_EOF_CH1_INT_RAW_Msk = 0x10
	// Bit OUT_EOF_CH1_INT_RAW.
	DMA_INT_RAW_CH1_OUT_EOF_CH1_INT_RAW = 0x10
	// Position of IN_DSCR_ERR_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_DSCR_ERR_CH1_INT_RAW_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_DSCR_ERR_CH1_INT_RAW_Msk = 0x20
	// Bit IN_DSCR_ERR_CH1_INT_RAW.
	DMA_INT_RAW_CH1_IN_DSCR_ERR_CH1_INT_RAW = 0x20
	// Position of OUT_DSCR_ERR_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUT_DSCR_ERR_CH1_INT_RAW_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUT_DSCR_ERR_CH1_INT_RAW_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH1_INT_RAW.
	DMA_INT_RAW_CH1_OUT_DSCR_ERR_CH1_INT_RAW = 0x40
	// Position of IN_DSCR_EMPTY_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_DSCR_EMPTY_CH1_INT_RAW_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_IN_DSCR_EMPTY_CH1_INT_RAW_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH1_INT_RAW.
	DMA_INT_RAW_CH1_IN_DSCR_EMPTY_CH1_INT_RAW = 0x80
	// Position of OUT_TOTAL_EOF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUT_TOTAL_EOF_CH1_INT_RAW_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUT_TOTAL_EOF_CH1_INT_RAW_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH1_INT_RAW.
	DMA_INT_RAW_CH1_OUT_TOTAL_EOF_CH1_INT_RAW = 0x100
	// Position of INFIFO_OVF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_INFIFO_OVF_CH1_INT_RAW_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_INFIFO_OVF_CH1_INT_RAW_Msk = 0x200
	// Bit INFIFO_OVF_CH1_INT_RAW.
	DMA_INT_RAW_CH1_INFIFO_OVF_CH1_INT_RAW = 0x200
	// Position of INFIFO_UDF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_INFIFO_UDF_CH1_INT_RAW_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_INFIFO_UDF_CH1_INT_RAW_Msk = 0x400
	// Bit INFIFO_UDF_CH1_INT_RAW.
	DMA_INT_RAW_CH1_INFIFO_UDF_CH1_INT_RAW = 0x400
	// Position of OUTFIFO_OVF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUTFIFO_OVF_CH1_INT_RAW_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUTFIFO_OVF_CH1_INT_RAW_Msk = 0x800
	// Bit OUTFIFO_OVF_CH1_INT_RAW.
	DMA_INT_RAW_CH1_OUTFIFO_OVF_CH1_INT_RAW = 0x800
	// Position of OUTFIFO_UDF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUTFIFO_UDF_CH1_INT_RAW_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH1_INT_RAW field.
	DMA_INT_RAW_CH1_OUTFIFO_UDF_CH1_INT_RAW_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH1_INT_RAW.
	DMA_INT_RAW_CH1_OUTFIFO_UDF_CH1_INT_RAW = 0x1000

	// INT_ST_CH1: DMA_INT_ST_CH1_REG.
	// Position of IN_DONE_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_DONE_CH1_INT_ST_Pos = 0x0
	// Bit mask of IN_DONE_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_DONE_CH1_INT_ST_Msk = 0x1
	// Bit IN_DONE_CH1_INT_ST.
	DMA_INT_ST_CH1_IN_DONE_CH1_INT_ST = 0x1
	// Position of IN_SUC_EOF_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_SUC_EOF_CH1_INT_ST_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_SUC_EOF_CH1_INT_ST_Msk = 0x2
	// Bit IN_SUC_EOF_CH1_INT_ST.
	DMA_INT_ST_CH1_IN_SUC_EOF_CH1_INT_ST = 0x2
	// Position of IN_ERR_EOF_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_ERR_EOF_CH1_INT_ST_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_ERR_EOF_CH1_INT_ST_Msk = 0x4
	// Bit IN_ERR_EOF_CH1_INT_ST.
	DMA_INT_ST_CH1_IN_ERR_EOF_CH1_INT_ST = 0x4
	// Position of OUT_DONE_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUT_DONE_CH1_INT_ST_Pos = 0x3
	// Bit mask of OUT_DONE_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUT_DONE_CH1_INT_ST_Msk = 0x8
	// Bit OUT_DONE_CH1_INT_ST.
	DMA_INT_ST_CH1_OUT_DONE_CH1_INT_ST = 0x8
	// Position of OUT_EOF_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUT_EOF_CH1_INT_ST_Pos = 0x4
	// Bit mask of OUT_EOF_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUT_EOF_CH1_INT_ST_Msk = 0x10
	// Bit OUT_EOF_CH1_INT_ST.
	DMA_INT_ST_CH1_OUT_EOF_CH1_INT_ST = 0x10
	// Position of IN_DSCR_ERR_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_DSCR_ERR_CH1_INT_ST_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_DSCR_ERR_CH1_INT_ST_Msk = 0x20
	// Bit IN_DSCR_ERR_CH1_INT_ST.
	DMA_INT_ST_CH1_IN_DSCR_ERR_CH1_INT_ST = 0x20
	// Position of OUT_DSCR_ERR_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUT_DSCR_ERR_CH1_INT_ST_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUT_DSCR_ERR_CH1_INT_ST_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH1_INT_ST.
	DMA_INT_ST_CH1_OUT_DSCR_ERR_CH1_INT_ST = 0x40
	// Position of IN_DSCR_EMPTY_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_DSCR_EMPTY_CH1_INT_ST_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH1_INT_ST field.
	DMA_INT_ST_CH1_IN_DSCR_EMPTY_CH1_INT_ST_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH1_INT_ST.
	DMA_INT_ST_CH1_IN_DSCR_EMPTY_CH1_INT_ST = 0x80
	// Position of OUT_TOTAL_EOF_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUT_TOTAL_EOF_CH1_INT_ST_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUT_TOTAL_EOF_CH1_INT_ST_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH1_INT_ST.
	DMA_INT_ST_CH1_OUT_TOTAL_EOF_CH1_INT_ST = 0x100
	// Position of INFIFO_OVF_CH1_INT_ST field.
	DMA_INT_ST_CH1_INFIFO_OVF_CH1_INT_ST_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH1_INT_ST field.
	DMA_INT_ST_CH1_INFIFO_OVF_CH1_INT_ST_Msk = 0x200
	// Bit INFIFO_OVF_CH1_INT_ST.
	DMA_INT_ST_CH1_INFIFO_OVF_CH1_INT_ST = 0x200
	// Position of INFIFO_UDF_CH1_INT_ST field.
	DMA_INT_ST_CH1_INFIFO_UDF_CH1_INT_ST_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH1_INT_ST field.
	DMA_INT_ST_CH1_INFIFO_UDF_CH1_INT_ST_Msk = 0x400
	// Bit INFIFO_UDF_CH1_INT_ST.
	DMA_INT_ST_CH1_INFIFO_UDF_CH1_INT_ST = 0x400
	// Position of OUTFIFO_OVF_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUTFIFO_OVF_CH1_INT_ST_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUTFIFO_OVF_CH1_INT_ST_Msk = 0x800
	// Bit OUTFIFO_OVF_CH1_INT_ST.
	DMA_INT_ST_CH1_OUTFIFO_OVF_CH1_INT_ST = 0x800
	// Position of OUTFIFO_UDF_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUTFIFO_UDF_CH1_INT_ST_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH1_INT_ST field.
	DMA_INT_ST_CH1_OUTFIFO_UDF_CH1_INT_ST_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH1_INT_ST.
	DMA_INT_ST_CH1_OUTFIFO_UDF_CH1_INT_ST = 0x1000

	// INT_ENA_CH1: DMA_INT_ENA_CH1_REG.
	// Position of IN_DONE_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_DONE_CH1_INT_ENA_Pos = 0x0
	// Bit mask of IN_DONE_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_DONE_CH1_INT_ENA_Msk = 0x1
	// Bit IN_DONE_CH1_INT_ENA.
	DMA_INT_ENA_CH1_IN_DONE_CH1_INT_ENA = 0x1
	// Position of IN_SUC_EOF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_SUC_EOF_CH1_INT_ENA_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_SUC_EOF_CH1_INT_ENA_Msk = 0x2
	// Bit IN_SUC_EOF_CH1_INT_ENA.
	DMA_INT_ENA_CH1_IN_SUC_EOF_CH1_INT_ENA = 0x2
	// Position of IN_ERR_EOF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_ERR_EOF_CH1_INT_ENA_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_ERR_EOF_CH1_INT_ENA_Msk = 0x4
	// Bit IN_ERR_EOF_CH1_INT_ENA.
	DMA_INT_ENA_CH1_IN_ERR_EOF_CH1_INT_ENA = 0x4
	// Position of OUT_DONE_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUT_DONE_CH1_INT_ENA_Pos = 0x3
	// Bit mask of OUT_DONE_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUT_DONE_CH1_INT_ENA_Msk = 0x8
	// Bit OUT_DONE_CH1_INT_ENA.
	DMA_INT_ENA_CH1_OUT_DONE_CH1_INT_ENA = 0x8
	// Position of OUT_EOF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUT_EOF_CH1_INT_ENA_Pos = 0x4
	// Bit mask of OUT_EOF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUT_EOF_CH1_INT_ENA_Msk = 0x10
	// Bit OUT_EOF_CH1_INT_ENA.
	DMA_INT_ENA_CH1_OUT_EOF_CH1_INT_ENA = 0x10
	// Position of IN_DSCR_ERR_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_DSCR_ERR_CH1_INT_ENA_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_DSCR_ERR_CH1_INT_ENA_Msk = 0x20
	// Bit IN_DSCR_ERR_CH1_INT_ENA.
	DMA_INT_ENA_CH1_IN_DSCR_ERR_CH1_INT_ENA = 0x20
	// Position of OUT_DSCR_ERR_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUT_DSCR_ERR_CH1_INT_ENA_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUT_DSCR_ERR_CH1_INT_ENA_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH1_INT_ENA.
	DMA_INT_ENA_CH1_OUT_DSCR_ERR_CH1_INT_ENA = 0x40
	// Position of IN_DSCR_EMPTY_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_DSCR_EMPTY_CH1_INT_ENA_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_IN_DSCR_EMPTY_CH1_INT_ENA_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH1_INT_ENA.
	DMA_INT_ENA_CH1_IN_DSCR_EMPTY_CH1_INT_ENA = 0x80
	// Position of OUT_TOTAL_EOF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUT_TOTAL_EOF_CH1_INT_ENA_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUT_TOTAL_EOF_CH1_INT_ENA_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH1_INT_ENA.
	DMA_INT_ENA_CH1_OUT_TOTAL_EOF_CH1_INT_ENA = 0x100
	// Position of INFIFO_OVF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_INFIFO_OVF_CH1_INT_ENA_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_INFIFO_OVF_CH1_INT_ENA_Msk = 0x200
	// Bit INFIFO_OVF_CH1_INT_ENA.
	DMA_INT_ENA_CH1_INFIFO_OVF_CH1_INT_ENA = 0x200
	// Position of INFIFO_UDF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_INFIFO_UDF_CH1_INT_ENA_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_INFIFO_UDF_CH1_INT_ENA_Msk = 0x400
	// Bit INFIFO_UDF_CH1_INT_ENA.
	DMA_INT_ENA_CH1_INFIFO_UDF_CH1_INT_ENA = 0x400
	// Position of OUTFIFO_OVF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUTFIFO_OVF_CH1_INT_ENA_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUTFIFO_OVF_CH1_INT_ENA_Msk = 0x800
	// Bit OUTFIFO_OVF_CH1_INT_ENA.
	DMA_INT_ENA_CH1_OUTFIFO_OVF_CH1_INT_ENA = 0x800
	// Position of OUTFIFO_UDF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUTFIFO_UDF_CH1_INT_ENA_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH1_INT_ENA field.
	DMA_INT_ENA_CH1_OUTFIFO_UDF_CH1_INT_ENA_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH1_INT_ENA.
	DMA_INT_ENA_CH1_OUTFIFO_UDF_CH1_INT_ENA = 0x1000

	// INT_CLR_CH1: DMA_INT_CLR_CH1_REG.
	// Position of IN_DONE_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_DONE_CH1_INT_CLR_Pos = 0x0
	// Bit mask of IN_DONE_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_DONE_CH1_INT_CLR_Msk = 0x1
	// Bit IN_DONE_CH1_INT_CLR.
	DMA_INT_CLR_CH1_IN_DONE_CH1_INT_CLR = 0x1
	// Position of IN_SUC_EOF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_SUC_EOF_CH1_INT_CLR_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_SUC_EOF_CH1_INT_CLR_Msk = 0x2
	// Bit IN_SUC_EOF_CH1_INT_CLR.
	DMA_INT_CLR_CH1_IN_SUC_EOF_CH1_INT_CLR = 0x2
	// Position of IN_ERR_EOF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_ERR_EOF_CH1_INT_CLR_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_ERR_EOF_CH1_INT_CLR_Msk = 0x4
	// Bit IN_ERR_EOF_CH1_INT_CLR.
	DMA_INT_CLR_CH1_IN_ERR_EOF_CH1_INT_CLR = 0x4
	// Position of OUT_DONE_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUT_DONE_CH1_INT_CLR_Pos = 0x3
	// Bit mask of OUT_DONE_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUT_DONE_CH1_INT_CLR_Msk = 0x8
	// Bit OUT_DONE_CH1_INT_CLR.
	DMA_INT_CLR_CH1_OUT_DONE_CH1_INT_CLR = 0x8
	// Position of OUT_EOF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUT_EOF_CH1_INT_CLR_Pos = 0x4
	// Bit mask of OUT_EOF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUT_EOF_CH1_INT_CLR_Msk = 0x10
	// Bit OUT_EOF_CH1_INT_CLR.
	DMA_INT_CLR_CH1_OUT_EOF_CH1_INT_CLR = 0x10
	// Position of IN_DSCR_ERR_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_DSCR_ERR_CH1_INT_CLR_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_DSCR_ERR_CH1_INT_CLR_Msk = 0x20
	// Bit IN_DSCR_ERR_CH1_INT_CLR.
	DMA_INT_CLR_CH1_IN_DSCR_ERR_CH1_INT_CLR = 0x20
	// Position of OUT_DSCR_ERR_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUT_DSCR_ERR_CH1_INT_CLR_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUT_DSCR_ERR_CH1_INT_CLR_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH1_INT_CLR.
	DMA_INT_CLR_CH1_OUT_DSCR_ERR_CH1_INT_CLR = 0x40
	// Position of IN_DSCR_EMPTY_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_DSCR_EMPTY_CH1_INT_CLR_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_IN_DSCR_EMPTY_CH1_INT_CLR_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH1_INT_CLR.
	DMA_INT_CLR_CH1_IN_DSCR_EMPTY_CH1_INT_CLR = 0x80
	// Position of OUT_TOTAL_EOF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUT_TOTAL_EOF_CH1_INT_CLR_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUT_TOTAL_EOF_CH1_INT_CLR_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH1_INT_CLR.
	DMA_INT_CLR_CH1_OUT_TOTAL_EOF_CH1_INT_CLR = 0x100
	// Position of INFIFO_OVF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_INFIFO_OVF_CH1_INT_CLR_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_INFIFO_OVF_CH1_INT_CLR_Msk = 0x200
	// Bit INFIFO_OVF_CH1_INT_CLR.
	DMA_INT_CLR_CH1_INFIFO_OVF_CH1_INT_CLR = 0x200
	// Position of INFIFO_UDF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_INFIFO_UDF_CH1_INT_CLR_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_INFIFO_UDF_CH1_INT_CLR_Msk = 0x400
	// Bit INFIFO_UDF_CH1_INT_CLR.
	DMA_INT_CLR_CH1_INFIFO_UDF_CH1_INT_CLR = 0x400
	// Position of OUTFIFO_OVF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUTFIFO_OVF_CH1_INT_CLR_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUTFIFO_OVF_CH1_INT_CLR_Msk = 0x800
	// Bit OUTFIFO_OVF_CH1_INT_CLR.
	DMA_INT_CLR_CH1_OUTFIFO_OVF_CH1_INT_CLR = 0x800
	// Position of OUTFIFO_UDF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUTFIFO_UDF_CH1_INT_CLR_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH1_INT_CLR field.
	DMA_INT_CLR_CH1_OUTFIFO_UDF_CH1_INT_CLR_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH1_INT_CLR.
	DMA_INT_CLR_CH1_OUTFIFO_UDF_CH1_INT_CLR = 0x1000

	// INT_RAW_CH2: DMA_INT_RAW_CH2_REG.
	// Position of IN_DONE_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_DONE_CH2_INT_RAW_Pos = 0x0
	// Bit mask of IN_DONE_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_DONE_CH2_INT_RAW_Msk = 0x1
	// Bit IN_DONE_CH2_INT_RAW.
	DMA_INT_RAW_CH2_IN_DONE_CH2_INT_RAW = 0x1
	// Position of IN_SUC_EOF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_SUC_EOF_CH2_INT_RAW_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_SUC_EOF_CH2_INT_RAW_Msk = 0x2
	// Bit IN_SUC_EOF_CH2_INT_RAW.
	DMA_INT_RAW_CH2_IN_SUC_EOF_CH2_INT_RAW = 0x2
	// Position of IN_ERR_EOF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_ERR_EOF_CH2_INT_RAW_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_ERR_EOF_CH2_INT_RAW_Msk = 0x4
	// Bit IN_ERR_EOF_CH2_INT_RAW.
	DMA_INT_RAW_CH2_IN_ERR_EOF_CH2_INT_RAW = 0x4
	// Position of OUT_DONE_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUT_DONE_CH2_INT_RAW_Pos = 0x3
	// Bit mask of OUT_DONE_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUT_DONE_CH2_INT_RAW_Msk = 0x8
	// Bit OUT_DONE_CH2_INT_RAW.
	DMA_INT_RAW_CH2_OUT_DONE_CH2_INT_RAW = 0x8
	// Position of OUT_EOF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUT_EOF_CH2_INT_RAW_Pos = 0x4
	// Bit mask of OUT_EOF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUT_EOF_CH2_INT_RAW_Msk = 0x10
	// Bit OUT_EOF_CH2_INT_RAW.
	DMA_INT_RAW_CH2_OUT_EOF_CH2_INT_RAW = 0x10
	// Position of IN_DSCR_ERR_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_DSCR_ERR_CH2_INT_RAW_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_DSCR_ERR_CH2_INT_RAW_Msk = 0x20
	// Bit IN_DSCR_ERR_CH2_INT_RAW.
	DMA_INT_RAW_CH2_IN_DSCR_ERR_CH2_INT_RAW = 0x20
	// Position of OUT_DSCR_ERR_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUT_DSCR_ERR_CH2_INT_RAW_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUT_DSCR_ERR_CH2_INT_RAW_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH2_INT_RAW.
	DMA_INT_RAW_CH2_OUT_DSCR_ERR_CH2_INT_RAW = 0x40
	// Position of IN_DSCR_EMPTY_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_DSCR_EMPTY_CH2_INT_RAW_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_IN_DSCR_EMPTY_CH2_INT_RAW_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH2_INT_RAW.
	DMA_INT_RAW_CH2_IN_DSCR_EMPTY_CH2_INT_RAW = 0x80
	// Position of OUT_TOTAL_EOF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUT_TOTAL_EOF_CH2_INT_RAW_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUT_TOTAL_EOF_CH2_INT_RAW_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH2_INT_RAW.
	DMA_INT_RAW_CH2_OUT_TOTAL_EOF_CH2_INT_RAW = 0x100
	// Position of INFIFO_OVF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_INFIFO_OVF_CH2_INT_RAW_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_INFIFO_OVF_CH2_INT_RAW_Msk = 0x200
	// Bit INFIFO_OVF_CH2_INT_RAW.
	DMA_INT_RAW_CH2_INFIFO_OVF_CH2_INT_RAW = 0x200
	// Position of INFIFO_UDF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_INFIFO_UDF_CH2_INT_RAW_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_INFIFO_UDF_CH2_INT_RAW_Msk = 0x400
	// Bit INFIFO_UDF_CH2_INT_RAW.
	DMA_INT_RAW_CH2_INFIFO_UDF_CH2_INT_RAW = 0x400
	// Position of OUTFIFO_OVF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUTFIFO_OVF_CH2_INT_RAW_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUTFIFO_OVF_CH2_INT_RAW_Msk = 0x800
	// Bit OUTFIFO_OVF_CH2_INT_RAW.
	DMA_INT_RAW_CH2_OUTFIFO_OVF_CH2_INT_RAW = 0x800
	// Position of OUTFIFO_UDF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUTFIFO_UDF_CH2_INT_RAW_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH2_INT_RAW field.
	DMA_INT_RAW_CH2_OUTFIFO_UDF_CH2_INT_RAW_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH2_INT_RAW.
	DMA_INT_RAW_CH2_OUTFIFO_UDF_CH2_INT_RAW = 0x1000

	// INT_ST_CH2: DMA_INT_ST_CH2_REG.
	// Position of IN_DONE_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_DONE_CH2_INT_ST_Pos = 0x0
	// Bit mask of IN_DONE_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_DONE_CH2_INT_ST_Msk = 0x1
	// Bit IN_DONE_CH2_INT_ST.
	DMA_INT_ST_CH2_IN_DONE_CH2_INT_ST = 0x1
	// Position of IN_SUC_EOF_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_SUC_EOF_CH2_INT_ST_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_SUC_EOF_CH2_INT_ST_Msk = 0x2
	// Bit IN_SUC_EOF_CH2_INT_ST.
	DMA_INT_ST_CH2_IN_SUC_EOF_CH2_INT_ST = 0x2
	// Position of IN_ERR_EOF_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_ERR_EOF_CH2_INT_ST_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_ERR_EOF_CH2_INT_ST_Msk = 0x4
	// Bit IN_ERR_EOF_CH2_INT_ST.
	DMA_INT_ST_CH2_IN_ERR_EOF_CH2_INT_ST = 0x4
	// Position of OUT_DONE_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUT_DONE_CH2_INT_ST_Pos = 0x3
	// Bit mask of OUT_DONE_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUT_DONE_CH2_INT_ST_Msk = 0x8
	// Bit OUT_DONE_CH2_INT_ST.
	DMA_INT_ST_CH2_OUT_DONE_CH2_INT_ST = 0x8
	// Position of OUT_EOF_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUT_EOF_CH2_INT_ST_Pos = 0x4
	// Bit mask of OUT_EOF_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUT_EOF_CH2_INT_ST_Msk = 0x10
	// Bit OUT_EOF_CH2_INT_ST.
	DMA_INT_ST_CH2_OUT_EOF_CH2_INT_ST = 0x10
	// Position of IN_DSCR_ERR_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_DSCR_ERR_CH2_INT_ST_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_DSCR_ERR_CH2_INT_ST_Msk = 0x20
	// Bit IN_DSCR_ERR_CH2_INT_ST.
	DMA_INT_ST_CH2_IN_DSCR_ERR_CH2_INT_ST = 0x20
	// Position of OUT_DSCR_ERR_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUT_DSCR_ERR_CH2_INT_ST_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUT_DSCR_ERR_CH2_INT_ST_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH2_INT_ST.
	DMA_INT_ST_CH2_OUT_DSCR_ERR_CH2_INT_ST = 0x40
	// Position of IN_DSCR_EMPTY_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_DSCR_EMPTY_CH2_INT_ST_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH2_INT_ST field.
	DMA_INT_ST_CH2_IN_DSCR_EMPTY_CH2_INT_ST_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH2_INT_ST.
	DMA_INT_ST_CH2_IN_DSCR_EMPTY_CH2_INT_ST = 0x80
	// Position of OUT_TOTAL_EOF_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUT_TOTAL_EOF_CH2_INT_ST_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUT_TOTAL_EOF_CH2_INT_ST_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH2_INT_ST.
	DMA_INT_ST_CH2_OUT_TOTAL_EOF_CH2_INT_ST = 0x100
	// Position of INFIFO_OVF_CH2_INT_ST field.
	DMA_INT_ST_CH2_INFIFO_OVF_CH2_INT_ST_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH2_INT_ST field.
	DMA_INT_ST_CH2_INFIFO_OVF_CH2_INT_ST_Msk = 0x200
	// Bit INFIFO_OVF_CH2_INT_ST.
	DMA_INT_ST_CH2_INFIFO_OVF_CH2_INT_ST = 0x200
	// Position of INFIFO_UDF_CH2_INT_ST field.
	DMA_INT_ST_CH2_INFIFO_UDF_CH2_INT_ST_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH2_INT_ST field.
	DMA_INT_ST_CH2_INFIFO_UDF_CH2_INT_ST_Msk = 0x400
	// Bit INFIFO_UDF_CH2_INT_ST.
	DMA_INT_ST_CH2_INFIFO_UDF_CH2_INT_ST = 0x400
	// Position of OUTFIFO_OVF_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUTFIFO_OVF_CH2_INT_ST_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUTFIFO_OVF_CH2_INT_ST_Msk = 0x800
	// Bit OUTFIFO_OVF_CH2_INT_ST.
	DMA_INT_ST_CH2_OUTFIFO_OVF_CH2_INT_ST = 0x800
	// Position of OUTFIFO_UDF_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUTFIFO_UDF_CH2_INT_ST_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH2_INT_ST field.
	DMA_INT_ST_CH2_OUTFIFO_UDF_CH2_INT_ST_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH2_INT_ST.
	DMA_INT_ST_CH2_OUTFIFO_UDF_CH2_INT_ST = 0x1000

	// INT_ENA_CH2: DMA_INT_ENA_CH2_REG.
	// Position of IN_DONE_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_DONE_CH2_INT_ENA_Pos = 0x0
	// Bit mask of IN_DONE_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_DONE_CH2_INT_ENA_Msk = 0x1
	// Bit IN_DONE_CH2_INT_ENA.
	DMA_INT_ENA_CH2_IN_DONE_CH2_INT_ENA = 0x1
	// Position of IN_SUC_EOF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_SUC_EOF_CH2_INT_ENA_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_SUC_EOF_CH2_INT_ENA_Msk = 0x2
	// Bit IN_SUC_EOF_CH2_INT_ENA.
	DMA_INT_ENA_CH2_IN_SUC_EOF_CH2_INT_ENA = 0x2
	// Position of IN_ERR_EOF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_ERR_EOF_CH2_INT_ENA_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_ERR_EOF_CH2_INT_ENA_Msk = 0x4
	// Bit IN_ERR_EOF_CH2_INT_ENA.
	DMA_INT_ENA_CH2_IN_ERR_EOF_CH2_INT_ENA = 0x4
	// Position of OUT_DONE_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUT_DONE_CH2_INT_ENA_Pos = 0x3
	// Bit mask of OUT_DONE_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUT_DONE_CH2_INT_ENA_Msk = 0x8
	// Bit OUT_DONE_CH2_INT_ENA.
	DMA_INT_ENA_CH2_OUT_DONE_CH2_INT_ENA = 0x8
	// Position of OUT_EOF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUT_EOF_CH2_INT_ENA_Pos = 0x4
	// Bit mask of OUT_EOF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUT_EOF_CH2_INT_ENA_Msk = 0x10
	// Bit OUT_EOF_CH2_INT_ENA.
	DMA_INT_ENA_CH2_OUT_EOF_CH2_INT_ENA = 0x10
	// Position of IN_DSCR_ERR_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_DSCR_ERR_CH2_INT_ENA_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_DSCR_ERR_CH2_INT_ENA_Msk = 0x20
	// Bit IN_DSCR_ERR_CH2_INT_ENA.
	DMA_INT_ENA_CH2_IN_DSCR_ERR_CH2_INT_ENA = 0x20
	// Position of OUT_DSCR_ERR_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUT_DSCR_ERR_CH2_INT_ENA_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUT_DSCR_ERR_CH2_INT_ENA_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH2_INT_ENA.
	DMA_INT_ENA_CH2_OUT_DSCR_ERR_CH2_INT_ENA = 0x40
	// Position of IN_DSCR_EMPTY_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_DSCR_EMPTY_CH2_INT_ENA_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_IN_DSCR_EMPTY_CH2_INT_ENA_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH2_INT_ENA.
	DMA_INT_ENA_CH2_IN_DSCR_EMPTY_CH2_INT_ENA = 0x80
	// Position of OUT_TOTAL_EOF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUT_TOTAL_EOF_CH2_INT_ENA_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUT_TOTAL_EOF_CH2_INT_ENA_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH2_INT_ENA.
	DMA_INT_ENA_CH2_OUT_TOTAL_EOF_CH2_INT_ENA = 0x100
	// Position of INFIFO_OVF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_INFIFO_OVF_CH2_INT_ENA_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_INFIFO_OVF_CH2_INT_ENA_Msk = 0x200
	// Bit INFIFO_OVF_CH2_INT_ENA.
	DMA_INT_ENA_CH2_INFIFO_OVF_CH2_INT_ENA = 0x200
	// Position of INFIFO_UDF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_INFIFO_UDF_CH2_INT_ENA_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_INFIFO_UDF_CH2_INT_ENA_Msk = 0x400
	// Bit INFIFO_UDF_CH2_INT_ENA.
	DMA_INT_ENA_CH2_INFIFO_UDF_CH2_INT_ENA = 0x400
	// Position of OUTFIFO_OVF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUTFIFO_OVF_CH2_INT_ENA_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUTFIFO_OVF_CH2_INT_ENA_Msk = 0x800
	// Bit OUTFIFO_OVF_CH2_INT_ENA.
	DMA_INT_ENA_CH2_OUTFIFO_OVF_CH2_INT_ENA = 0x800
	// Position of OUTFIFO_UDF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUTFIFO_UDF_CH2_INT_ENA_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH2_INT_ENA field.
	DMA_INT_ENA_CH2_OUTFIFO_UDF_CH2_INT_ENA_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH2_INT_ENA.
	DMA_INT_ENA_CH2_OUTFIFO_UDF_CH2_INT_ENA = 0x1000

	// INT_CLR_CH2: DMA_INT_CLR_CH2_REG.
	// Position of IN_DONE_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_DONE_CH2_INT_CLR_Pos = 0x0
	// Bit mask of IN_DONE_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_DONE_CH2_INT_CLR_Msk = 0x1
	// Bit IN_DONE_CH2_INT_CLR.
	DMA_INT_CLR_CH2_IN_DONE_CH2_INT_CLR = 0x1
	// Position of IN_SUC_EOF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_SUC_EOF_CH2_INT_CLR_Pos = 0x1
	// Bit mask of IN_SUC_EOF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_SUC_EOF_CH2_INT_CLR_Msk = 0x2
	// Bit IN_SUC_EOF_CH2_INT_CLR.
	DMA_INT_CLR_CH2_IN_SUC_EOF_CH2_INT_CLR = 0x2
	// Position of IN_ERR_EOF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_ERR_EOF_CH2_INT_CLR_Pos = 0x2
	// Bit mask of IN_ERR_EOF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_ERR_EOF_CH2_INT_CLR_Msk = 0x4
	// Bit IN_ERR_EOF_CH2_INT_CLR.
	DMA_INT_CLR_CH2_IN_ERR_EOF_CH2_INT_CLR = 0x4
	// Position of OUT_DONE_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUT_DONE_CH2_INT_CLR_Pos = 0x3
	// Bit mask of OUT_DONE_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUT_DONE_CH2_INT_CLR_Msk = 0x8
	// Bit OUT_DONE_CH2_INT_CLR.
	DMA_INT_CLR_CH2_OUT_DONE_CH2_INT_CLR = 0x8
	// Position of OUT_EOF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUT_EOF_CH2_INT_CLR_Pos = 0x4
	// Bit mask of OUT_EOF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUT_EOF_CH2_INT_CLR_Msk = 0x10
	// Bit OUT_EOF_CH2_INT_CLR.
	DMA_INT_CLR_CH2_OUT_EOF_CH2_INT_CLR = 0x10
	// Position of IN_DSCR_ERR_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_DSCR_ERR_CH2_INT_CLR_Pos = 0x5
	// Bit mask of IN_DSCR_ERR_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_DSCR_ERR_CH2_INT_CLR_Msk = 0x20
	// Bit IN_DSCR_ERR_CH2_INT_CLR.
	DMA_INT_CLR_CH2_IN_DSCR_ERR_CH2_INT_CLR = 0x20
	// Position of OUT_DSCR_ERR_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUT_DSCR_ERR_CH2_INT_CLR_Pos = 0x6
	// Bit mask of OUT_DSCR_ERR_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUT_DSCR_ERR_CH2_INT_CLR_Msk = 0x40
	// Bit OUT_DSCR_ERR_CH2_INT_CLR.
	DMA_INT_CLR_CH2_OUT_DSCR_ERR_CH2_INT_CLR = 0x40
	// Position of IN_DSCR_EMPTY_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_DSCR_EMPTY_CH2_INT_CLR_Pos = 0x7
	// Bit mask of IN_DSCR_EMPTY_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_IN_DSCR_EMPTY_CH2_INT_CLR_Msk = 0x80
	// Bit IN_DSCR_EMPTY_CH2_INT_CLR.
	DMA_INT_CLR_CH2_IN_DSCR_EMPTY_CH2_INT_CLR = 0x80
	// Position of OUT_TOTAL_EOF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUT_TOTAL_EOF_CH2_INT_CLR_Pos = 0x8
	// Bit mask of OUT_TOTAL_EOF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUT_TOTAL_EOF_CH2_INT_CLR_Msk = 0x100
	// Bit OUT_TOTAL_EOF_CH2_INT_CLR.
	DMA_INT_CLR_CH2_OUT_TOTAL_EOF_CH2_INT_CLR = 0x100
	// Position of INFIFO_OVF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_INFIFO_OVF_CH2_INT_CLR_Pos = 0x9
	// Bit mask of INFIFO_OVF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_INFIFO_OVF_CH2_INT_CLR_Msk = 0x200
	// Bit INFIFO_OVF_CH2_INT_CLR.
	DMA_INT_CLR_CH2_INFIFO_OVF_CH2_INT_CLR = 0x200
	// Position of INFIFO_UDF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_INFIFO_UDF_CH2_INT_CLR_Pos = 0xa
	// Bit mask of INFIFO_UDF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_INFIFO_UDF_CH2_INT_CLR_Msk = 0x400
	// Bit INFIFO_UDF_CH2_INT_CLR.
	DMA_INT_CLR_CH2_INFIFO_UDF_CH2_INT_CLR = 0x400
	// Position of OUTFIFO_OVF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUTFIFO_OVF_CH2_INT_CLR_Pos = 0xb
	// Bit mask of OUTFIFO_OVF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUTFIFO_OVF_CH2_INT_CLR_Msk = 0x800
	// Bit OUTFIFO_OVF_CH2_INT_CLR.
	DMA_INT_CLR_CH2_OUTFIFO_OVF_CH2_INT_CLR = 0x800
	// Position of OUTFIFO_UDF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUTFIFO_UDF_CH2_INT_CLR_Pos = 0xc
	// Bit mask of OUTFIFO_UDF_CH2_INT_CLR field.
	DMA_INT_CLR_CH2_OUTFIFO_UDF_CH2_INT_CLR_Msk = 0x1000
	// Bit OUTFIFO_UDF_CH2_INT_CLR.
	DMA_INT_CLR_CH2_OUTFIFO_UDF_CH2_INT_CLR = 0x1000

	// AHB_TEST: DMA_AHB_TEST_REG.
	// Position of AHB_TESTMODE field.
	DMA_AHB_TEST_AHB_TESTMODE_Pos = 0x0
	// Bit mask of AHB_TESTMODE field.
	DMA_AHB_TEST_AHB_TESTMODE_Msk = 0x7
	// Position of AHB_TESTADDR field.
	DMA_AHB_TEST_AHB_TESTADDR_Pos = 0x4
	// Bit mask of AHB_TESTADDR field.
	DMA_AHB_TEST_AHB_TESTADDR_Msk = 0x30

	// MISC_CONF: DMA_MISC_CONF_REG.
	// Position of AHBM_RST_INTER field.
	DMA_MISC_CONF_AHBM_RST_INTER_Pos = 0x0
	// Bit mask of AHBM_RST_INTER field.
	DMA_MISC_CONF_AHBM_RST_INTER_Msk = 0x1
	// Bit AHBM_RST_INTER.
	DMA_MISC_CONF_AHBM_RST_INTER = 0x1
	// Position of ARB_PRI_DIS field.
	DMA_MISC_CONF_ARB_PRI_DIS_Pos = 0x2
	// Bit mask of ARB_PRI_DIS field.
	DMA_MISC_CONF_ARB_PRI_DIS_Msk = 0x4
	// Bit ARB_PRI_DIS.
	DMA_MISC_CONF_ARB_PRI_DIS = 0x4
	// Position of CLK_EN field.
	DMA_MISC_CONF_CLK_EN_Pos = 0x3
	// Bit mask of CLK_EN field.
	DMA_MISC_CONF_CLK_EN_Msk = 0x8
	// Bit CLK_EN.
	DMA_MISC_CONF_CLK_EN = 0x8

	// DATE: DMA_DATE_REG.
	// Position of DATE field.
	DMA_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	DMA_DATE_DATE_Msk = 0xffffffff

	// IN_CONF0_CH0: DMA_IN_CONF0_CH0_REG.
	// Position of IN_RST_CH0 field.
	DMA_IN_CONF0_CH0_IN_RST_CH0_Pos = 0x0
	// Bit mask of IN_RST_CH0 field.
	DMA_IN_CONF0_CH0_IN_RST_CH0_Msk = 0x1
	// Bit IN_RST_CH0.
	DMA_IN_CONF0_CH0_IN_RST_CH0 = 0x1
	// Position of IN_LOOP_TEST_CH0 field.
	DMA_IN_CONF0_CH0_IN_LOOP_TEST_CH0_Pos = 0x1
	// Bit mask of IN_LOOP_TEST_CH0 field.
	DMA_IN_CONF0_CH0_IN_LOOP_TEST_CH0_Msk = 0x2
	// Bit IN_LOOP_TEST_CH0.
	DMA_IN_CONF0_CH0_IN_LOOP_TEST_CH0 = 0x2
	// Position of INDSCR_BURST_EN_CH0 field.
	DMA_IN_CONF0_CH0_INDSCR_BURST_EN_CH0_Pos = 0x2
	// Bit mask of INDSCR_BURST_EN_CH0 field.
	DMA_IN_CONF0_CH0_INDSCR_BURST_EN_CH0_Msk = 0x4
	// Bit INDSCR_BURST_EN_CH0.
	DMA_IN_CONF0_CH0_INDSCR_BURST_EN_CH0 = 0x4
	// Position of IN_DATA_BURST_EN_CH0 field.
	DMA_IN_CONF0_CH0_IN_DATA_BURST_EN_CH0_Pos = 0x3
	// Bit mask of IN_DATA_BURST_EN_CH0 field.
	DMA_IN_CONF0_CH0_IN_DATA_BURST_EN_CH0_Msk = 0x8
	// Bit IN_DATA_BURST_EN_CH0.
	DMA_IN_CONF0_CH0_IN_DATA_BURST_EN_CH0 = 0x8
	// Position of MEM_TRANS_EN_CH0 field.
	DMA_IN_CONF0_CH0_MEM_TRANS_EN_CH0_Pos = 0x4
	// Bit mask of MEM_TRANS_EN_CH0 field.
	DMA_IN_CONF0_CH0_MEM_TRANS_EN_CH0_Msk = 0x10
	// Bit MEM_TRANS_EN_CH0.
	DMA_IN_CONF0_CH0_MEM_TRANS_EN_CH0 = 0x10

	// IN_CONF1_CH0: DMA_IN_CONF1_CH0_REG.
	// Position of IN_CHECK_OWNER_CH0 field.
	DMA_IN_CONF1_CH0_IN_CHECK_OWNER_CH0_Pos = 0xc
	// Bit mask of IN_CHECK_OWNER_CH0 field.
	DMA_IN_CONF1_CH0_IN_CHECK_OWNER_CH0_Msk = 0x1000
	// Bit IN_CHECK_OWNER_CH0.
	DMA_IN_CONF1_CH0_IN_CHECK_OWNER_CH0 = 0x1000

	// INFIFO_STATUS_CH0: DMA_INFIFO_STATUS_CH0_REG.
	// Position of INFIFO_FULL_CH0 field.
	DMA_INFIFO_STATUS_CH0_INFIFO_FULL_CH0_Pos = 0x0
	// Bit mask of INFIFO_FULL_CH0 field.
	DMA_INFIFO_STATUS_CH0_INFIFO_FULL_CH0_Msk = 0x1
	// Bit INFIFO_FULL_CH0.
	DMA_INFIFO_STATUS_CH0_INFIFO_FULL_CH0 = 0x1
	// Position of INFIFO_EMPTY_CH0 field.
	DMA_INFIFO_STATUS_CH0_INFIFO_EMPTY_CH0_Pos = 0x1
	// Bit mask of INFIFO_EMPTY_CH0 field.
	DMA_INFIFO_STATUS_CH0_INFIFO_EMPTY_CH0_Msk = 0x2
	// Bit INFIFO_EMPTY_CH0.
	DMA_INFIFO_STATUS_CH0_INFIFO_EMPTY_CH0 = 0x2
	// Position of INFIFO_CNT_CH0 field.
	DMA_INFIFO_STATUS_CH0_INFIFO_CNT_CH0_Pos = 0x2
	// Bit mask of INFIFO_CNT_CH0 field.
	DMA_INFIFO_STATUS_CH0_INFIFO_CNT_CH0_Msk = 0xfc
	// Position of IN_REMAIN_UNDER_1B_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_1B_CH0_Pos = 0x17
	// Bit mask of IN_REMAIN_UNDER_1B_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_1B_CH0_Msk = 0x800000
	// Bit IN_REMAIN_UNDER_1B_CH0.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_1B_CH0 = 0x800000
	// Position of IN_REMAIN_UNDER_2B_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_2B_CH0_Pos = 0x18
	// Bit mask of IN_REMAIN_UNDER_2B_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_2B_CH0_Msk = 0x1000000
	// Bit IN_REMAIN_UNDER_2B_CH0.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_2B_CH0 = 0x1000000
	// Position of IN_REMAIN_UNDER_3B_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_3B_CH0_Pos = 0x19
	// Bit mask of IN_REMAIN_UNDER_3B_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_3B_CH0_Msk = 0x2000000
	// Bit IN_REMAIN_UNDER_3B_CH0.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_3B_CH0 = 0x2000000
	// Position of IN_REMAIN_UNDER_4B_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_4B_CH0_Pos = 0x1a
	// Bit mask of IN_REMAIN_UNDER_4B_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_4B_CH0_Msk = 0x4000000
	// Bit IN_REMAIN_UNDER_4B_CH0.
	DMA_INFIFO_STATUS_CH0_IN_REMAIN_UNDER_4B_CH0 = 0x4000000
	// Position of IN_BUF_HUNGRY_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_BUF_HUNGRY_CH0_Pos = 0x1b
	// Bit mask of IN_BUF_HUNGRY_CH0 field.
	DMA_INFIFO_STATUS_CH0_IN_BUF_HUNGRY_CH0_Msk = 0x8000000
	// Bit IN_BUF_HUNGRY_CH0.
	DMA_INFIFO_STATUS_CH0_IN_BUF_HUNGRY_CH0 = 0x8000000

	// IN_POP_CH0: DMA_IN_POP_CH0_REG.
	// Position of INFIFO_RDATA_CH0 field.
	DMA_IN_POP_CH0_INFIFO_RDATA_CH0_Pos = 0x0
	// Bit mask of INFIFO_RDATA_CH0 field.
	DMA_IN_POP_CH0_INFIFO_RDATA_CH0_Msk = 0xfff
	// Position of INFIFO_POP_CH0 field.
	DMA_IN_POP_CH0_INFIFO_POP_CH0_Pos = 0xc
	// Bit mask of INFIFO_POP_CH0 field.
	DMA_IN_POP_CH0_INFIFO_POP_CH0_Msk = 0x1000
	// Bit INFIFO_POP_CH0.
	DMA_IN_POP_CH0_INFIFO_POP_CH0 = 0x1000

	// IN_LINK_CH0: DMA_IN_LINK_CH0_REG.
	// Position of INLINK_ADDR_CH0 field.
	DMA_IN_LINK_CH0_INLINK_ADDR_CH0_Pos = 0x0
	// Bit mask of INLINK_ADDR_CH0 field.
	DMA_IN_LINK_CH0_INLINK_ADDR_CH0_Msk = 0xfffff
	// Position of INLINK_AUTO_RET_CH0 field.
	DMA_IN_LINK_CH0_INLINK_AUTO_RET_CH0_Pos = 0x14
	// Bit mask of INLINK_AUTO_RET_CH0 field.
	DMA_IN_LINK_CH0_INLINK_AUTO_RET_CH0_Msk = 0x100000
	// Bit INLINK_AUTO_RET_CH0.
	DMA_IN_LINK_CH0_INLINK_AUTO_RET_CH0 = 0x100000
	// Position of INLINK_STOP_CH0 field.
	DMA_IN_LINK_CH0_INLINK_STOP_CH0_Pos = 0x15
	// Bit mask of INLINK_STOP_CH0 field.
	DMA_IN_LINK_CH0_INLINK_STOP_CH0_Msk = 0x200000
	// Bit INLINK_STOP_CH0.
	DMA_IN_LINK_CH0_INLINK_STOP_CH0 = 0x200000
	// Position of INLINK_START_CH0 field.
	DMA_IN_LINK_CH0_INLINK_START_CH0_Pos = 0x16
	// Bit mask of INLINK_START_CH0 field.
	DMA_IN_LINK_CH0_INLINK_START_CH0_Msk = 0x400000
	// Bit INLINK_START_CH0.
	DMA_IN_LINK_CH0_INLINK_START_CH0 = 0x400000
	// Position of INLINK_RESTART_CH0 field.
	DMA_IN_LINK_CH0_INLINK_RESTART_CH0_Pos = 0x17
	// Bit mask of INLINK_RESTART_CH0 field.
	DMA_IN_LINK_CH0_INLINK_RESTART_CH0_Msk = 0x800000
	// Bit INLINK_RESTART_CH0.
	DMA_IN_LINK_CH0_INLINK_RESTART_CH0 = 0x800000
	// Position of INLINK_PARK_CH0 field.
	DMA_IN_LINK_CH0_INLINK_PARK_CH0_Pos = 0x18
	// Bit mask of INLINK_PARK_CH0 field.
	DMA_IN_LINK_CH0_INLINK_PARK_CH0_Msk = 0x1000000
	// Bit INLINK_PARK_CH0.
	DMA_IN_LINK_CH0_INLINK_PARK_CH0 = 0x1000000

	// IN_STATE_CH0: DMA_IN_STATE_CH0_REG.
	// Position of INLINK_DSCR_ADDR_CH0 field.
	DMA_IN_STATE_CH0_INLINK_DSCR_ADDR_CH0_Pos = 0x0
	// Bit mask of INLINK_DSCR_ADDR_CH0 field.
	DMA_IN_STATE_CH0_INLINK_DSCR_ADDR_CH0_Msk = 0x3ffff
	// Position of IN_DSCR_STATE_CH0 field.
	DMA_IN_STATE_CH0_IN_DSCR_STATE_CH0_Pos = 0x12
	// Bit mask of IN_DSCR_STATE_CH0 field.
	DMA_IN_STATE_CH0_IN_DSCR_STATE_CH0_Msk = 0xc0000
	// Position of IN_STATE_CH0 field.
	DMA_IN_STATE_CH0_IN_STATE_CH0_Pos = 0x14
	// Bit mask of IN_STATE_CH0 field.
	DMA_IN_STATE_CH0_IN_STATE_CH0_Msk = 0x700000

	// IN_SUC_EOF_DES_ADDR_CH0: DMA_IN_SUC_EOF_DES_ADDR_CH0_REG.
	// Position of IN_SUC_EOF_DES_ADDR_CH0 field.
	DMA_IN_SUC_EOF_DES_ADDR_CH0_IN_SUC_EOF_DES_ADDR_CH0_Pos = 0x0
	// Bit mask of IN_SUC_EOF_DES_ADDR_CH0 field.
	DMA_IN_SUC_EOF_DES_ADDR_CH0_IN_SUC_EOF_DES_ADDR_CH0_Msk = 0xffffffff

	// IN_ERR_EOF_DES_ADDR_CH0: DMA_IN_ERR_EOF_DES_ADDR_CH0_REG.
	// Position of IN_ERR_EOF_DES_ADDR_CH0 field.
	DMA_IN_ERR_EOF_DES_ADDR_CH0_IN_ERR_EOF_DES_ADDR_CH0_Pos = 0x0
	// Bit mask of IN_ERR_EOF_DES_ADDR_CH0 field.
	DMA_IN_ERR_EOF_DES_ADDR_CH0_IN_ERR_EOF_DES_ADDR_CH0_Msk = 0xffffffff

	// IN_DSCR_CH0: DMA_IN_DSCR_CH0_REG.
	// Position of INLINK_DSCR_CH0 field.
	DMA_IN_DSCR_CH0_INLINK_DSCR_CH0_Pos = 0x0
	// Bit mask of INLINK_DSCR_CH0 field.
	DMA_IN_DSCR_CH0_INLINK_DSCR_CH0_Msk = 0xffffffff

	// IN_DSCR_BF0_CH0: DMA_IN_DSCR_BF0_CH0_REG.
	// Position of INLINK_DSCR_BF0_CH0 field.
	DMA_IN_DSCR_BF0_CH0_INLINK_DSCR_BF0_CH0_Pos = 0x0
	// Bit mask of INLINK_DSCR_BF0_CH0 field.
	DMA_IN_DSCR_BF0_CH0_INLINK_DSCR_BF0_CH0_Msk = 0xffffffff

	// IN_DSCR_BF1_CH0: DMA_IN_DSCR_BF1_CH0_REG.
	// Position of INLINK_DSCR_BF1_CH0 field.
	DMA_IN_DSCR_BF1_CH0_INLINK_DSCR_BF1_CH0_Pos = 0x0
	// Bit mask of INLINK_DSCR_BF1_CH0 field.
	DMA_IN_DSCR_BF1_CH0_INLINK_DSCR_BF1_CH0_Msk = 0xffffffff

	// IN_PRI_CH0: DMA_IN_PRI_CH0_REG.
	// Position of RX_PRI_CH0 field.
	DMA_IN_PRI_CH0_RX_PRI_CH0_Pos = 0x0
	// Bit mask of RX_PRI_CH0 field.
	DMA_IN_PRI_CH0_RX_PRI_CH0_Msk = 0xf

	// IN_PERI_SEL_CH0: DMA_IN_PERI_SEL_CH0_REG.
	// Position of PERI_IN_SEL_CH0 field.
	DMA_IN_PERI_SEL_CH0_PERI_IN_SEL_CH0_Pos = 0x0
	// Bit mask of PERI_IN_SEL_CH0 field.
	DMA_IN_PERI_SEL_CH0_PERI_IN_SEL_CH0_Msk = 0x3f

	// OUT_CONF0_CH0: DMA_OUT_CONF0_CH0_REG.
	// Position of OUT_RST_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_RST_CH0_Pos = 0x0
	// Bit mask of OUT_RST_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_RST_CH0_Msk = 0x1
	// Bit OUT_RST_CH0.
	DMA_OUT_CONF0_CH0_OUT_RST_CH0 = 0x1
	// Position of OUT_LOOP_TEST_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_LOOP_TEST_CH0_Pos = 0x1
	// Bit mask of OUT_LOOP_TEST_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_LOOP_TEST_CH0_Msk = 0x2
	// Bit OUT_LOOP_TEST_CH0.
	DMA_OUT_CONF0_CH0_OUT_LOOP_TEST_CH0 = 0x2
	// Position of OUT_AUTO_WRBACK_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_AUTO_WRBACK_CH0_Pos = 0x2
	// Bit mask of OUT_AUTO_WRBACK_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_AUTO_WRBACK_CH0_Msk = 0x4
	// Bit OUT_AUTO_WRBACK_CH0.
	DMA_OUT_CONF0_CH0_OUT_AUTO_WRBACK_CH0 = 0x4
	// Position of OUT_EOF_MODE_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_EOF_MODE_CH0_Pos = 0x3
	// Bit mask of OUT_EOF_MODE_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_EOF_MODE_CH0_Msk = 0x8
	// Bit OUT_EOF_MODE_CH0.
	DMA_OUT_CONF0_CH0_OUT_EOF_MODE_CH0 = 0x8
	// Position of OUTDSCR_BURST_EN_CH0 field.
	DMA_OUT_CONF0_CH0_OUTDSCR_BURST_EN_CH0_Pos = 0x4
	// Bit mask of OUTDSCR_BURST_EN_CH0 field.
	DMA_OUT_CONF0_CH0_OUTDSCR_BURST_EN_CH0_Msk = 0x10
	// Bit OUTDSCR_BURST_EN_CH0.
	DMA_OUT_CONF0_CH0_OUTDSCR_BURST_EN_CH0 = 0x10
	// Position of OUT_DATA_BURST_EN_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_DATA_BURST_EN_CH0_Pos = 0x5
	// Bit mask of OUT_DATA_BURST_EN_CH0 field.
	DMA_OUT_CONF0_CH0_OUT_DATA_BURST_EN_CH0_Msk = 0x20
	// Bit OUT_DATA_BURST_EN_CH0.
	DMA_OUT_CONF0_CH0_OUT_DATA_BURST_EN_CH0 = 0x20

	// OUT_CONF1_CH0: DMA_OUT_CONF1_CH0_REG.
	// Position of OUT_CHECK_OWNER_CH0 field.
	DMA_OUT_CONF1_CH0_OUT_CHECK_OWNER_CH0_Pos = 0xc
	// Bit mask of OUT_CHECK_OWNER_CH0 field.
	DMA_OUT_CONF1_CH0_OUT_CHECK_OWNER_CH0_Msk = 0x1000
	// Bit OUT_CHECK_OWNER_CH0.
	DMA_OUT_CONF1_CH0_OUT_CHECK_OWNER_CH0 = 0x1000

	// OUTFIFO_STATUS_CH0: DMA_OUTFIFO_STATUS_CH0_REG.
	// Position of OUTFIFO_FULL_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUTFIFO_FULL_CH0_Pos = 0x0
	// Bit mask of OUTFIFO_FULL_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUTFIFO_FULL_CH0_Msk = 0x1
	// Bit OUTFIFO_FULL_CH0.
	DMA_OUTFIFO_STATUS_CH0_OUTFIFO_FULL_CH0 = 0x1
	// Position of OUTFIFO_EMPTY_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUTFIFO_EMPTY_CH0_Pos = 0x1
	// Bit mask of OUTFIFO_EMPTY_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUTFIFO_EMPTY_CH0_Msk = 0x2
	// Bit OUTFIFO_EMPTY_CH0.
	DMA_OUTFIFO_STATUS_CH0_OUTFIFO_EMPTY_CH0 = 0x2
	// Position of OUTFIFO_CNT_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUTFIFO_CNT_CH0_Pos = 0x2
	// Bit mask of OUTFIFO_CNT_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUTFIFO_CNT_CH0_Msk = 0xfc
	// Position of OUT_REMAIN_UNDER_1B_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_1B_CH0_Pos = 0x17
	// Bit mask of OUT_REMAIN_UNDER_1B_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_1B_CH0_Msk = 0x800000
	// Bit OUT_REMAIN_UNDER_1B_CH0.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_1B_CH0 = 0x800000
	// Position of OUT_REMAIN_UNDER_2B_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_2B_CH0_Pos = 0x18
	// Bit mask of OUT_REMAIN_UNDER_2B_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_2B_CH0_Msk = 0x1000000
	// Bit OUT_REMAIN_UNDER_2B_CH0.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_2B_CH0 = 0x1000000
	// Position of OUT_REMAIN_UNDER_3B_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_3B_CH0_Pos = 0x19
	// Bit mask of OUT_REMAIN_UNDER_3B_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_3B_CH0_Msk = 0x2000000
	// Bit OUT_REMAIN_UNDER_3B_CH0.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_3B_CH0 = 0x2000000
	// Position of OUT_REMAIN_UNDER_4B_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_4B_CH0_Pos = 0x1a
	// Bit mask of OUT_REMAIN_UNDER_4B_CH0 field.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_4B_CH0_Msk = 0x4000000
	// Bit OUT_REMAIN_UNDER_4B_CH0.
	DMA_OUTFIFO_STATUS_CH0_OUT_REMAIN_UNDER_4B_CH0 = 0x4000000

	// OUT_PUSH_CH0: DMA_OUT_PUSH_CH0_REG.
	// Position of OUTFIFO_WDATA_CH0 field.
	DMA_OUT_PUSH_CH0_OUTFIFO_WDATA_CH0_Pos = 0x0
	// Bit mask of OUTFIFO_WDATA_CH0 field.
	DMA_OUT_PUSH_CH0_OUTFIFO_WDATA_CH0_Msk = 0x1ff
	// Position of OUTFIFO_PUSH_CH0 field.
	DMA_OUT_PUSH_CH0_OUTFIFO_PUSH_CH0_Pos = 0x9
	// Bit mask of OUTFIFO_PUSH_CH0 field.
	DMA_OUT_PUSH_CH0_OUTFIFO_PUSH_CH0_Msk = 0x200
	// Bit OUTFIFO_PUSH_CH0.
	DMA_OUT_PUSH_CH0_OUTFIFO_PUSH_CH0 = 0x200

	// OUT_LINK_CH0: DMA_OUT_LINK_CH0_REG.
	// Position of OUTLINK_ADDR_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_ADDR_CH0_Pos = 0x0
	// Bit mask of OUTLINK_ADDR_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_ADDR_CH0_Msk = 0xfffff
	// Position of OUTLINK_STOP_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_STOP_CH0_Pos = 0x14
	// Bit mask of OUTLINK_STOP_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_STOP_CH0_Msk = 0x100000
	// Bit OUTLINK_STOP_CH0.
	DMA_OUT_LINK_CH0_OUTLINK_STOP_CH0 = 0x100000
	// Position of OUTLINK_START_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_START_CH0_Pos = 0x15
	// Bit mask of OUTLINK_START_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_START_CH0_Msk = 0x200000
	// Bit OUTLINK_START_CH0.
	DMA_OUT_LINK_CH0_OUTLINK_START_CH0 = 0x200000
	// Position of OUTLINK_RESTART_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_RESTART_CH0_Pos = 0x16
	// Bit mask of OUTLINK_RESTART_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_RESTART_CH0_Msk = 0x400000
	// Bit OUTLINK_RESTART_CH0.
	DMA_OUT_LINK_CH0_OUTLINK_RESTART_CH0 = 0x400000
	// Position of OUTLINK_PARK_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_PARK_CH0_Pos = 0x17
	// Bit mask of OUTLINK_PARK_CH0 field.
	DMA_OUT_LINK_CH0_OUTLINK_PARK_CH0_Msk = 0x800000
	// Bit OUTLINK_PARK_CH0.
	DMA_OUT_LINK_CH0_OUTLINK_PARK_CH0 = 0x800000

	// OUT_STATE_CH0: DMA_OUT_STATE_CH0_REG.
	// Position of OUTLINK_DSCR_ADDR_CH0 field.
	DMA_OUT_STATE_CH0_OUTLINK_DSCR_ADDR_CH0_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_ADDR_CH0 field.
	DMA_OUT_STATE_CH0_OUTLINK_DSCR_ADDR_CH0_Msk = 0x3ffff
	// Position of OUT_DSCR_STATE_CH0 field.
	DMA_OUT_STATE_CH0_OUT_DSCR_STATE_CH0_Pos = 0x12
	// Bit mask of OUT_DSCR_STATE_CH0 field.
	DMA_OUT_STATE_CH0_OUT_DSCR_STATE_CH0_Msk = 0xc0000
	// Position of OUT_STATE_CH0 field.
	DMA_OUT_STATE_CH0_OUT_STATE_CH0_Pos = 0x14
	// Bit mask of OUT_STATE_CH0 field.
	DMA_OUT_STATE_CH0_OUT_STATE_CH0_Msk = 0x700000

	// OUT_EOF_DES_ADDR_CH0: DMA_OUT_EOF_DES_ADDR_CH0_REG.
	// Position of OUT_EOF_DES_ADDR_CH0 field.
	DMA_OUT_EOF_DES_ADDR_CH0_OUT_EOF_DES_ADDR_CH0_Pos = 0x0
	// Bit mask of OUT_EOF_DES_ADDR_CH0 field.
	DMA_OUT_EOF_DES_ADDR_CH0_OUT_EOF_DES_ADDR_CH0_Msk = 0xffffffff

	// OUT_EOF_BFR_DES_ADDR_CH0: DMA_OUT_EOF_BFR_DES_ADDR_CH0_REG.
	// Position of OUT_EOF_BFR_DES_ADDR_CH0 field.
	DMA_OUT_EOF_BFR_DES_ADDR_CH0_OUT_EOF_BFR_DES_ADDR_CH0_Pos = 0x0
	// Bit mask of OUT_EOF_BFR_DES_ADDR_CH0 field.
	DMA_OUT_EOF_BFR_DES_ADDR_CH0_OUT_EOF_BFR_DES_ADDR_CH0_Msk = 0xffffffff

	// OUT_DSCR_CH0: DMA_OUT_DSCR_CH0_REG.
	// Position of OUTLINK_DSCR_CH0 field.
	DMA_OUT_DSCR_CH0_OUTLINK_DSCR_CH0_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_CH0 field.
	DMA_OUT_DSCR_CH0_OUTLINK_DSCR_CH0_Msk = 0xffffffff

	// OUT_DSCR_BF0_CH0: DMA_OUT_DSCR_BF0_CH0_REG.
	// Position of OUTLINK_DSCR_BF0_CH0 field.
	DMA_OUT_DSCR_BF0_CH0_OUTLINK_DSCR_BF0_CH0_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_BF0_CH0 field.
	DMA_OUT_DSCR_BF0_CH0_OUTLINK_DSCR_BF0_CH0_Msk = 0xffffffff

	// OUT_DSCR_BF1_CH0: DMA_OUT_DSCR_BF1_CH0_REG.
	// Position of OUTLINK_DSCR_BF1_CH0 field.
	DMA_OUT_DSCR_BF1_CH0_OUTLINK_DSCR_BF1_CH0_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_BF1_CH0 field.
	DMA_OUT_DSCR_BF1_CH0_OUTLINK_DSCR_BF1_CH0_Msk = 0xffffffff

	// OUT_PRI_CH0: DMA_OUT_PRI_CH0_REG.
	// Position of TX_PRI_CH0 field.
	DMA_OUT_PRI_CH0_TX_PRI_CH0_Pos = 0x0
	// Bit mask of TX_PRI_CH0 field.
	DMA_OUT_PRI_CH0_TX_PRI_CH0_Msk = 0xf

	// OUT_PERI_SEL_CH0: DMA_OUT_PERI_SEL_CH0_REG.
	// Position of PERI_OUT_SEL_CH0 field.
	DMA_OUT_PERI_SEL_CH0_PERI_OUT_SEL_CH0_Pos = 0x0
	// Bit mask of PERI_OUT_SEL_CH0 field.
	DMA_OUT_PERI_SEL_CH0_PERI_OUT_SEL_CH0_Msk = 0x3f

	// IN_CONF0_CH1: DMA_IN_CONF0_CH1_REG.
	// Position of IN_RST_CH1 field.
	DMA_IN_CONF0_CH1_IN_RST_CH1_Pos = 0x0
	// Bit mask of IN_RST_CH1 field.
	DMA_IN_CONF0_CH1_IN_RST_CH1_Msk = 0x1
	// Bit IN_RST_CH1.
	DMA_IN_CONF0_CH1_IN_RST_CH1 = 0x1
	// Position of IN_LOOP_TEST_CH1 field.
	DMA_IN_CONF0_CH1_IN_LOOP_TEST_CH1_Pos = 0x1
	// Bit mask of IN_LOOP_TEST_CH1 field.
	DMA_IN_CONF0_CH1_IN_LOOP_TEST_CH1_Msk = 0x2
	// Bit IN_LOOP_TEST_CH1.
	DMA_IN_CONF0_CH1_IN_LOOP_TEST_CH1 = 0x2
	// Position of INDSCR_BURST_EN_CH1 field.
	DMA_IN_CONF0_CH1_INDSCR_BURST_EN_CH1_Pos = 0x2
	// Bit mask of INDSCR_BURST_EN_CH1 field.
	DMA_IN_CONF0_CH1_INDSCR_BURST_EN_CH1_Msk = 0x4
	// Bit INDSCR_BURST_EN_CH1.
	DMA_IN_CONF0_CH1_INDSCR_BURST_EN_CH1 = 0x4
	// Position of IN_DATA_BURST_EN_CH1 field.
	DMA_IN_CONF0_CH1_IN_DATA_BURST_EN_CH1_Pos = 0x3
	// Bit mask of IN_DATA_BURST_EN_CH1 field.
	DMA_IN_CONF0_CH1_IN_DATA_BURST_EN_CH1_Msk = 0x8
	// Bit IN_DATA_BURST_EN_CH1.
	DMA_IN_CONF0_CH1_IN_DATA_BURST_EN_CH1 = 0x8
	// Position of MEM_TRANS_EN_CH1 field.
	DMA_IN_CONF0_CH1_MEM_TRANS_EN_CH1_Pos = 0x4
	// Bit mask of MEM_TRANS_EN_CH1 field.
	DMA_IN_CONF0_CH1_MEM_TRANS_EN_CH1_Msk = 0x10
	// Bit MEM_TRANS_EN_CH1.
	DMA_IN_CONF0_CH1_MEM_TRANS_EN_CH1 = 0x10

	// IN_CONF1_CH1: DMA_IN_CONF1_CH1_REG.
	// Position of IN_CHECK_OWNER_CH1 field.
	DMA_IN_CONF1_CH1_IN_CHECK_OWNER_CH1_Pos = 0xc
	// Bit mask of IN_CHECK_OWNER_CH1 field.
	DMA_IN_CONF1_CH1_IN_CHECK_OWNER_CH1_Msk = 0x1000
	// Bit IN_CHECK_OWNER_CH1.
	DMA_IN_CONF1_CH1_IN_CHECK_OWNER_CH1 = 0x1000

	// INFIFO_STATUS_CH1: DMA_INFIFO_STATUS_CH1_REG.
	// Position of INFIFO_FULL_CH1 field.
	DMA_INFIFO_STATUS_CH1_INFIFO_FULL_CH1_Pos = 0x0
	// Bit mask of INFIFO_FULL_CH1 field.
	DMA_INFIFO_STATUS_CH1_INFIFO_FULL_CH1_Msk = 0x1
	// Bit INFIFO_FULL_CH1.
	DMA_INFIFO_STATUS_CH1_INFIFO_FULL_CH1 = 0x1
	// Position of INFIFO_EMPTY_CH1 field.
	DMA_INFIFO_STATUS_CH1_INFIFO_EMPTY_CH1_Pos = 0x1
	// Bit mask of INFIFO_EMPTY_CH1 field.
	DMA_INFIFO_STATUS_CH1_INFIFO_EMPTY_CH1_Msk = 0x2
	// Bit INFIFO_EMPTY_CH1.
	DMA_INFIFO_STATUS_CH1_INFIFO_EMPTY_CH1 = 0x2
	// Position of INFIFO_CNT_CH1 field.
	DMA_INFIFO_STATUS_CH1_INFIFO_CNT_CH1_Pos = 0x2
	// Bit mask of INFIFO_CNT_CH1 field.
	DMA_INFIFO_STATUS_CH1_INFIFO_CNT_CH1_Msk = 0xfc
	// Position of IN_REMAIN_UNDER_1B_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_1B_CH1_Pos = 0x17
	// Bit mask of IN_REMAIN_UNDER_1B_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_1B_CH1_Msk = 0x800000
	// Bit IN_REMAIN_UNDER_1B_CH1.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_1B_CH1 = 0x800000
	// Position of IN_REMAIN_UNDER_2B_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_2B_CH1_Pos = 0x18
	// Bit mask of IN_REMAIN_UNDER_2B_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_2B_CH1_Msk = 0x1000000
	// Bit IN_REMAIN_UNDER_2B_CH1.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_2B_CH1 = 0x1000000
	// Position of IN_REMAIN_UNDER_3B_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_3B_CH1_Pos = 0x19
	// Bit mask of IN_REMAIN_UNDER_3B_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_3B_CH1_Msk = 0x2000000
	// Bit IN_REMAIN_UNDER_3B_CH1.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_3B_CH1 = 0x2000000
	// Position of IN_REMAIN_UNDER_4B_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_4B_CH1_Pos = 0x1a
	// Bit mask of IN_REMAIN_UNDER_4B_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_4B_CH1_Msk = 0x4000000
	// Bit IN_REMAIN_UNDER_4B_CH1.
	DMA_INFIFO_STATUS_CH1_IN_REMAIN_UNDER_4B_CH1 = 0x4000000
	// Position of IN_BUF_HUNGRY_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_BUF_HUNGRY_CH1_Pos = 0x1b
	// Bit mask of IN_BUF_HUNGRY_CH1 field.
	DMA_INFIFO_STATUS_CH1_IN_BUF_HUNGRY_CH1_Msk = 0x8000000
	// Bit IN_BUF_HUNGRY_CH1.
	DMA_INFIFO_STATUS_CH1_IN_BUF_HUNGRY_CH1 = 0x8000000

	// IN_POP_CH1: DMA_IN_POP_CH1_REG.
	// Position of INFIFO_RDATA_CH1 field.
	DMA_IN_POP_CH1_INFIFO_RDATA_CH1_Pos = 0x0
	// Bit mask of INFIFO_RDATA_CH1 field.
	DMA_IN_POP_CH1_INFIFO_RDATA_CH1_Msk = 0xfff
	// Position of INFIFO_POP_CH1 field.
	DMA_IN_POP_CH1_INFIFO_POP_CH1_Pos = 0xc
	// Bit mask of INFIFO_POP_CH1 field.
	DMA_IN_POP_CH1_INFIFO_POP_CH1_Msk = 0x1000
	// Bit INFIFO_POP_CH1.
	DMA_IN_POP_CH1_INFIFO_POP_CH1 = 0x1000

	// IN_LINK_CH1: DMA_IN_LINK_CH1_REG.
	// Position of INLINK_ADDR_CH1 field.
	DMA_IN_LINK_CH1_INLINK_ADDR_CH1_Pos = 0x0
	// Bit mask of INLINK_ADDR_CH1 field.
	DMA_IN_LINK_CH1_INLINK_ADDR_CH1_Msk = 0xfffff
	// Position of INLINK_AUTO_RET_CH1 field.
	DMA_IN_LINK_CH1_INLINK_AUTO_RET_CH1_Pos = 0x14
	// Bit mask of INLINK_AUTO_RET_CH1 field.
	DMA_IN_LINK_CH1_INLINK_AUTO_RET_CH1_Msk = 0x100000
	// Bit INLINK_AUTO_RET_CH1.
	DMA_IN_LINK_CH1_INLINK_AUTO_RET_CH1 = 0x100000
	// Position of INLINK_STOP_CH1 field.
	DMA_IN_LINK_CH1_INLINK_STOP_CH1_Pos = 0x15
	// Bit mask of INLINK_STOP_CH1 field.
	DMA_IN_LINK_CH1_INLINK_STOP_CH1_Msk = 0x200000
	// Bit INLINK_STOP_CH1.
	DMA_IN_LINK_CH1_INLINK_STOP_CH1 = 0x200000
	// Position of INLINK_START_CH1 field.
	DMA_IN_LINK_CH1_INLINK_START_CH1_Pos = 0x16
	// Bit mask of INLINK_START_CH1 field.
	DMA_IN_LINK_CH1_INLINK_START_CH1_Msk = 0x400000
	// Bit INLINK_START_CH1.
	DMA_IN_LINK_CH1_INLINK_START_CH1 = 0x400000
	// Position of INLINK_RESTART_CH1 field.
	DMA_IN_LINK_CH1_INLINK_RESTART_CH1_Pos = 0x17
	// Bit mask of INLINK_RESTART_CH1 field.
	DMA_IN_LINK_CH1_INLINK_RESTART_CH1_Msk = 0x800000
	// Bit INLINK_RESTART_CH1.
	DMA_IN_LINK_CH1_INLINK_RESTART_CH1 = 0x800000
	// Position of INLINK_PARK_CH1 field.
	DMA_IN_LINK_CH1_INLINK_PARK_CH1_Pos = 0x18
	// Bit mask of INLINK_PARK_CH1 field.
	DMA_IN_LINK_CH1_INLINK_PARK_CH1_Msk = 0x1000000
	// Bit INLINK_PARK_CH1.
	DMA_IN_LINK_CH1_INLINK_PARK_CH1 = 0x1000000

	// IN_STATE_CH1: DMA_IN_STATE_CH1_REG.
	// Position of INLINK_DSCR_ADDR_CH1 field.
	DMA_IN_STATE_CH1_INLINK_DSCR_ADDR_CH1_Pos = 0x0
	// Bit mask of INLINK_DSCR_ADDR_CH1 field.
	DMA_IN_STATE_CH1_INLINK_DSCR_ADDR_CH1_Msk = 0x3ffff
	// Position of IN_DSCR_STATE_CH1 field.
	DMA_IN_STATE_CH1_IN_DSCR_STATE_CH1_Pos = 0x12
	// Bit mask of IN_DSCR_STATE_CH1 field.
	DMA_IN_STATE_CH1_IN_DSCR_STATE_CH1_Msk = 0xc0000
	// Position of IN_STATE_CH1 field.
	DMA_IN_STATE_CH1_IN_STATE_CH1_Pos = 0x14
	// Bit mask of IN_STATE_CH1 field.
	DMA_IN_STATE_CH1_IN_STATE_CH1_Msk = 0x700000

	// IN_SUC_EOF_DES_ADDR_CH1: DMA_IN_SUC_EOF_DES_ADDR_CH1_REG.
	// Position of IN_SUC_EOF_DES_ADDR_CH1 field.
	DMA_IN_SUC_EOF_DES_ADDR_CH1_IN_SUC_EOF_DES_ADDR_CH1_Pos = 0x0
	// Bit mask of IN_SUC_EOF_DES_ADDR_CH1 field.
	DMA_IN_SUC_EOF_DES_ADDR_CH1_IN_SUC_EOF_DES_ADDR_CH1_Msk = 0xffffffff

	// IN_ERR_EOF_DES_ADDR_CH1: DMA_IN_ERR_EOF_DES_ADDR_CH1_REG.
	// Position of IN_ERR_EOF_DES_ADDR_CH1 field.
	DMA_IN_ERR_EOF_DES_ADDR_CH1_IN_ERR_EOF_DES_ADDR_CH1_Pos = 0x0
	// Bit mask of IN_ERR_EOF_DES_ADDR_CH1 field.
	DMA_IN_ERR_EOF_DES_ADDR_CH1_IN_ERR_EOF_DES_ADDR_CH1_Msk = 0xffffffff

	// IN_DSCR_CH1: DMA_IN_DSCR_CH1_REG.
	// Position of INLINK_DSCR_CH1 field.
	DMA_IN_DSCR_CH1_INLINK_DSCR_CH1_Pos = 0x0
	// Bit mask of INLINK_DSCR_CH1 field.
	DMA_IN_DSCR_CH1_INLINK_DSCR_CH1_Msk = 0xffffffff

	// IN_DSCR_BF0_CH1: DMA_IN_DSCR_BF0_CH1_REG.
	// Position of INLINK_DSCR_BF0_CH1 field.
	DMA_IN_DSCR_BF0_CH1_INLINK_DSCR_BF0_CH1_Pos = 0x0
	// Bit mask of INLINK_DSCR_BF0_CH1 field.
	DMA_IN_DSCR_BF0_CH1_INLINK_DSCR_BF0_CH1_Msk = 0xffffffff

	// IN_DSCR_BF1_CH1: DMA_IN_DSCR_BF1_CH1_REG.
	// Position of INLINK_DSCR_BF1_CH1 field.
	DMA_IN_DSCR_BF1_CH1_INLINK_DSCR_BF1_CH1_Pos = 0x0
	// Bit mask of INLINK_DSCR_BF1_CH1 field.
	DMA_IN_DSCR_BF1_CH1_INLINK_DSCR_BF1_CH1_Msk = 0xffffffff

	// IN_PRI_CH1: DMA_IN_PRI_CH1_REG.
	// Position of RX_PRI_CH1 field.
	DMA_IN_PRI_CH1_RX_PRI_CH1_Pos = 0x0
	// Bit mask of RX_PRI_CH1 field.
	DMA_IN_PRI_CH1_RX_PRI_CH1_Msk = 0xf

	// IN_PERI_SEL_CH1: DMA_IN_PERI_SEL_CH1_REG.
	// Position of PERI_IN_SEL_CH1 field.
	DMA_IN_PERI_SEL_CH1_PERI_IN_SEL_CH1_Pos = 0x0
	// Bit mask of PERI_IN_SEL_CH1 field.
	DMA_IN_PERI_SEL_CH1_PERI_IN_SEL_CH1_Msk = 0x3f

	// OUT_CONF0_CH1: DMA_OUT_CONF0_CH1_REG.
	// Position of OUT_RST_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_RST_CH1_Pos = 0x0
	// Bit mask of OUT_RST_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_RST_CH1_Msk = 0x1
	// Bit OUT_RST_CH1.
	DMA_OUT_CONF0_CH1_OUT_RST_CH1 = 0x1
	// Position of OUT_LOOP_TEST_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_LOOP_TEST_CH1_Pos = 0x1
	// Bit mask of OUT_LOOP_TEST_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_LOOP_TEST_CH1_Msk = 0x2
	// Bit OUT_LOOP_TEST_CH1.
	DMA_OUT_CONF0_CH1_OUT_LOOP_TEST_CH1 = 0x2
	// Position of OUT_AUTO_WRBACK_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_AUTO_WRBACK_CH1_Pos = 0x2
	// Bit mask of OUT_AUTO_WRBACK_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_AUTO_WRBACK_CH1_Msk = 0x4
	// Bit OUT_AUTO_WRBACK_CH1.
	DMA_OUT_CONF0_CH1_OUT_AUTO_WRBACK_CH1 = 0x4
	// Position of OUT_EOF_MODE_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_EOF_MODE_CH1_Pos = 0x3
	// Bit mask of OUT_EOF_MODE_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_EOF_MODE_CH1_Msk = 0x8
	// Bit OUT_EOF_MODE_CH1.
	DMA_OUT_CONF0_CH1_OUT_EOF_MODE_CH1 = 0x8
	// Position of OUTDSCR_BURST_EN_CH1 field.
	DMA_OUT_CONF0_CH1_OUTDSCR_BURST_EN_CH1_Pos = 0x4
	// Bit mask of OUTDSCR_BURST_EN_CH1 field.
	DMA_OUT_CONF0_CH1_OUTDSCR_BURST_EN_CH1_Msk = 0x10
	// Bit OUTDSCR_BURST_EN_CH1.
	DMA_OUT_CONF0_CH1_OUTDSCR_BURST_EN_CH1 = 0x10
	// Position of OUT_DATA_BURST_EN_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_DATA_BURST_EN_CH1_Pos = 0x5
	// Bit mask of OUT_DATA_BURST_EN_CH1 field.
	DMA_OUT_CONF0_CH1_OUT_DATA_BURST_EN_CH1_Msk = 0x20
	// Bit OUT_DATA_BURST_EN_CH1.
	DMA_OUT_CONF0_CH1_OUT_DATA_BURST_EN_CH1 = 0x20

	// OUT_CONF1_CH1: DMA_OUT_CONF1_CH1_REG.
	// Position of OUT_CHECK_OWNER_CH1 field.
	DMA_OUT_CONF1_CH1_OUT_CHECK_OWNER_CH1_Pos = 0xc
	// Bit mask of OUT_CHECK_OWNER_CH1 field.
	DMA_OUT_CONF1_CH1_OUT_CHECK_OWNER_CH1_Msk = 0x1000
	// Bit OUT_CHECK_OWNER_CH1.
	DMA_OUT_CONF1_CH1_OUT_CHECK_OWNER_CH1 = 0x1000

	// OUTFIFO_STATUS_CH1: DMA_OUTFIFO_STATUS_CH1_REG.
	// Position of OUTFIFO_FULL_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUTFIFO_FULL_CH1_Pos = 0x0
	// Bit mask of OUTFIFO_FULL_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUTFIFO_FULL_CH1_Msk = 0x1
	// Bit OUTFIFO_FULL_CH1.
	DMA_OUTFIFO_STATUS_CH1_OUTFIFO_FULL_CH1 = 0x1
	// Position of OUTFIFO_EMPTY_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUTFIFO_EMPTY_CH1_Pos = 0x1
	// Bit mask of OUTFIFO_EMPTY_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUTFIFO_EMPTY_CH1_Msk = 0x2
	// Bit OUTFIFO_EMPTY_CH1.
	DMA_OUTFIFO_STATUS_CH1_OUTFIFO_EMPTY_CH1 = 0x2
	// Position of OUTFIFO_CNT_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUTFIFO_CNT_CH1_Pos = 0x2
	// Bit mask of OUTFIFO_CNT_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUTFIFO_CNT_CH1_Msk = 0xfc
	// Position of OUT_REMAIN_UNDER_1B_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_1B_CH1_Pos = 0x17
	// Bit mask of OUT_REMAIN_UNDER_1B_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_1B_CH1_Msk = 0x800000
	// Bit OUT_REMAIN_UNDER_1B_CH1.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_1B_CH1 = 0x800000
	// Position of OUT_REMAIN_UNDER_2B_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_2B_CH1_Pos = 0x18
	// Bit mask of OUT_REMAIN_UNDER_2B_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_2B_CH1_Msk = 0x1000000
	// Bit OUT_REMAIN_UNDER_2B_CH1.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_2B_CH1 = 0x1000000
	// Position of OUT_REMAIN_UNDER_3B_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_3B_CH1_Pos = 0x19
	// Bit mask of OUT_REMAIN_UNDER_3B_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_3B_CH1_Msk = 0x2000000
	// Bit OUT_REMAIN_UNDER_3B_CH1.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_3B_CH1 = 0x2000000
	// Position of OUT_REMAIN_UNDER_4B_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_4B_CH1_Pos = 0x1a
	// Bit mask of OUT_REMAIN_UNDER_4B_CH1 field.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_4B_CH1_Msk = 0x4000000
	// Bit OUT_REMAIN_UNDER_4B_CH1.
	DMA_OUTFIFO_STATUS_CH1_OUT_REMAIN_UNDER_4B_CH1 = 0x4000000

	// OUT_PUSH_CH1: DMA_OUT_PUSH_CH1_REG.
	// Position of OUTFIFO_WDATA_CH1 field.
	DMA_OUT_PUSH_CH1_OUTFIFO_WDATA_CH1_Pos = 0x0
	// Bit mask of OUTFIFO_WDATA_CH1 field.
	DMA_OUT_PUSH_CH1_OUTFIFO_WDATA_CH1_Msk = 0x1ff
	// Position of OUTFIFO_PUSH_CH1 field.
	DMA_OUT_PUSH_CH1_OUTFIFO_PUSH_CH1_Pos = 0x9
	// Bit mask of OUTFIFO_PUSH_CH1 field.
	DMA_OUT_PUSH_CH1_OUTFIFO_PUSH_CH1_Msk = 0x200
	// Bit OUTFIFO_PUSH_CH1.
	DMA_OUT_PUSH_CH1_OUTFIFO_PUSH_CH1 = 0x200

	// OUT_LINK_CH1: DMA_OUT_LINK_CH1_REG.
	// Position of OUTLINK_ADDR_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_ADDR_CH1_Pos = 0x0
	// Bit mask of OUTLINK_ADDR_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_ADDR_CH1_Msk = 0xfffff
	// Position of OUTLINK_STOP_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_STOP_CH1_Pos = 0x14
	// Bit mask of OUTLINK_STOP_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_STOP_CH1_Msk = 0x100000
	// Bit OUTLINK_STOP_CH1.
	DMA_OUT_LINK_CH1_OUTLINK_STOP_CH1 = 0x100000
	// Position of OUTLINK_START_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_START_CH1_Pos = 0x15
	// Bit mask of OUTLINK_START_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_START_CH1_Msk = 0x200000
	// Bit OUTLINK_START_CH1.
	DMA_OUT_LINK_CH1_OUTLINK_START_CH1 = 0x200000
	// Position of OUTLINK_RESTART_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_RESTART_CH1_Pos = 0x16
	// Bit mask of OUTLINK_RESTART_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_RESTART_CH1_Msk = 0x400000
	// Bit OUTLINK_RESTART_CH1.
	DMA_OUT_LINK_CH1_OUTLINK_RESTART_CH1 = 0x400000
	// Position of OUTLINK_PARK_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_PARK_CH1_Pos = 0x17
	// Bit mask of OUTLINK_PARK_CH1 field.
	DMA_OUT_LINK_CH1_OUTLINK_PARK_CH1_Msk = 0x800000
	// Bit OUTLINK_PARK_CH1.
	DMA_OUT_LINK_CH1_OUTLINK_PARK_CH1 = 0x800000

	// OUT_STATE_CH1: DMA_OUT_STATE_CH1_REG.
	// Position of OUTLINK_DSCR_ADDR_CH1 field.
	DMA_OUT_STATE_CH1_OUTLINK_DSCR_ADDR_CH1_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_ADDR_CH1 field.
	DMA_OUT_STATE_CH1_OUTLINK_DSCR_ADDR_CH1_Msk = 0x3ffff
	// Position of OUT_DSCR_STATE_CH1 field.
	DMA_OUT_STATE_CH1_OUT_DSCR_STATE_CH1_Pos = 0x12
	// Bit mask of OUT_DSCR_STATE_CH1 field.
	DMA_OUT_STATE_CH1_OUT_DSCR_STATE_CH1_Msk = 0xc0000
	// Position of OUT_STATE_CH1 field.
	DMA_OUT_STATE_CH1_OUT_STATE_CH1_Pos = 0x14
	// Bit mask of OUT_STATE_CH1 field.
	DMA_OUT_STATE_CH1_OUT_STATE_CH1_Msk = 0x700000

	// OUT_EOF_DES_ADDR_CH1: DMA_OUT_EOF_DES_ADDR_CH1_REG.
	// Position of OUT_EOF_DES_ADDR_CH1 field.
	DMA_OUT_EOF_DES_ADDR_CH1_OUT_EOF_DES_ADDR_CH1_Pos = 0x0
	// Bit mask of OUT_EOF_DES_ADDR_CH1 field.
	DMA_OUT_EOF_DES_ADDR_CH1_OUT_EOF_DES_ADDR_CH1_Msk = 0xffffffff

	// OUT_EOF_BFR_DES_ADDR_CH1: DMA_OUT_EOF_BFR_DES_ADDR_CH1_REG.
	// Position of OUT_EOF_BFR_DES_ADDR_CH1 field.
	DMA_OUT_EOF_BFR_DES_ADDR_CH1_OUT_EOF_BFR_DES_ADDR_CH1_Pos = 0x0
	// Bit mask of OUT_EOF_BFR_DES_ADDR_CH1 field.
	DMA_OUT_EOF_BFR_DES_ADDR_CH1_OUT_EOF_BFR_DES_ADDR_CH1_Msk = 0xffffffff

	// OUT_DSCR_CH1: DMA_OUT_DSCR_CH1_REG.
	// Position of OUTLINK_DSCR_CH1 field.
	DMA_OUT_DSCR_CH1_OUTLINK_DSCR_CH1_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_CH1 field.
	DMA_OUT_DSCR_CH1_OUTLINK_DSCR_CH1_Msk = 0xffffffff

	// OUT_DSCR_BF0_CH1: DMA_OUT_DSCR_BF0_CH1_REG.
	// Position of OUTLINK_DSCR_BF0_CH1 field.
	DMA_OUT_DSCR_BF0_CH1_OUTLINK_DSCR_BF0_CH1_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_BF0_CH1 field.
	DMA_OUT_DSCR_BF0_CH1_OUTLINK_DSCR_BF0_CH1_Msk = 0xffffffff

	// OUT_DSCR_BF1_CH1: DMA_OUT_DSCR_BF1_CH1_REG.
	// Position of OUTLINK_DSCR_BF1_CH1 field.
	DMA_OUT_DSCR_BF1_CH1_OUTLINK_DSCR_BF1_CH1_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_BF1_CH1 field.
	DMA_OUT_DSCR_BF1_CH1_OUTLINK_DSCR_BF1_CH1_Msk = 0xffffffff

	// OUT_PRI_CH1: DMA_OUT_PRI_CH1_REG.
	// Position of TX_PRI_CH1 field.
	DMA_OUT_PRI_CH1_TX_PRI_CH1_Pos = 0x0
	// Bit mask of TX_PRI_CH1 field.
	DMA_OUT_PRI_CH1_TX_PRI_CH1_Msk = 0xf

	// OUT_PERI_SEL_CH1: DMA_OUT_PERI_SEL_CH1_REG.
	// Position of PERI_OUT_SEL_CH1 field.
	DMA_OUT_PERI_SEL_CH1_PERI_OUT_SEL_CH1_Pos = 0x0
	// Bit mask of PERI_OUT_SEL_CH1 field.
	DMA_OUT_PERI_SEL_CH1_PERI_OUT_SEL_CH1_Msk = 0x3f

	// IN_CONF0_CH2: DMA_IN_CONF0_CH2_REG.
	// Position of IN_RST_CH2 field.
	DMA_IN_CONF0_CH2_IN_RST_CH2_Pos = 0x0
	// Bit mask of IN_RST_CH2 field.
	DMA_IN_CONF0_CH2_IN_RST_CH2_Msk = 0x1
	// Bit IN_RST_CH2.
	DMA_IN_CONF0_CH2_IN_RST_CH2 = 0x1
	// Position of IN_LOOP_TEST_CH2 field.
	DMA_IN_CONF0_CH2_IN_LOOP_TEST_CH2_Pos = 0x1
	// Bit mask of IN_LOOP_TEST_CH2 field.
	DMA_IN_CONF0_CH2_IN_LOOP_TEST_CH2_Msk = 0x2
	// Bit IN_LOOP_TEST_CH2.
	DMA_IN_CONF0_CH2_IN_LOOP_TEST_CH2 = 0x2
	// Position of INDSCR_BURST_EN_CH2 field.
	DMA_IN_CONF0_CH2_INDSCR_BURST_EN_CH2_Pos = 0x2
	// Bit mask of INDSCR_BURST_EN_CH2 field.
	DMA_IN_CONF0_CH2_INDSCR_BURST_EN_CH2_Msk = 0x4
	// Bit INDSCR_BURST_EN_CH2.
	DMA_IN_CONF0_CH2_INDSCR_BURST_EN_CH2 = 0x4
	// Position of IN_DATA_BURST_EN_CH2 field.
	DMA_IN_CONF0_CH2_IN_DATA_BURST_EN_CH2_Pos = 0x3
	// Bit mask of IN_DATA_BURST_EN_CH2 field.
	DMA_IN_CONF0_CH2_IN_DATA_BURST_EN_CH2_Msk = 0x8
	// Bit IN_DATA_BURST_EN_CH2.
	DMA_IN_CONF0_CH2_IN_DATA_BURST_EN_CH2 = 0x8
	// Position of MEM_TRANS_EN_CH2 field.
	DMA_IN_CONF0_CH2_MEM_TRANS_EN_CH2_Pos = 0x4
	// Bit mask of MEM_TRANS_EN_CH2 field.
	DMA_IN_CONF0_CH2_MEM_TRANS_EN_CH2_Msk = 0x10
	// Bit MEM_TRANS_EN_CH2.
	DMA_IN_CONF0_CH2_MEM_TRANS_EN_CH2 = 0x10

	// IN_CONF1_CH2: DMA_IN_CONF1_CH2_REG.
	// Position of IN_CHECK_OWNER_CH2 field.
	DMA_IN_CONF1_CH2_IN_CHECK_OWNER_CH2_Pos = 0xc
	// Bit mask of IN_CHECK_OWNER_CH2 field.
	DMA_IN_CONF1_CH2_IN_CHECK_OWNER_CH2_Msk = 0x1000
	// Bit IN_CHECK_OWNER_CH2.
	DMA_IN_CONF1_CH2_IN_CHECK_OWNER_CH2 = 0x1000

	// INFIFO_STATUS_CH2: DMA_INFIFO_STATUS_CH2_REG.
	// Position of INFIFO_FULL_CH2 field.
	DMA_INFIFO_STATUS_CH2_INFIFO_FULL_CH2_Pos = 0x0
	// Bit mask of INFIFO_FULL_CH2 field.
	DMA_INFIFO_STATUS_CH2_INFIFO_FULL_CH2_Msk = 0x1
	// Bit INFIFO_FULL_CH2.
	DMA_INFIFO_STATUS_CH2_INFIFO_FULL_CH2 = 0x1
	// Position of INFIFO_EMPTY_CH2 field.
	DMA_INFIFO_STATUS_CH2_INFIFO_EMPTY_CH2_Pos = 0x1
	// Bit mask of INFIFO_EMPTY_CH2 field.
	DMA_INFIFO_STATUS_CH2_INFIFO_EMPTY_CH2_Msk = 0x2
	// Bit INFIFO_EMPTY_CH2.
	DMA_INFIFO_STATUS_CH2_INFIFO_EMPTY_CH2 = 0x2
	// Position of INFIFO_CNT_CH2 field.
	DMA_INFIFO_STATUS_CH2_INFIFO_CNT_CH2_Pos = 0x2
	// Bit mask of INFIFO_CNT_CH2 field.
	DMA_INFIFO_STATUS_CH2_INFIFO_CNT_CH2_Msk = 0xfc
	// Position of IN_REMAIN_UNDER_1B_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_1B_CH2_Pos = 0x17
	// Bit mask of IN_REMAIN_UNDER_1B_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_1B_CH2_Msk = 0x800000
	// Bit IN_REMAIN_UNDER_1B_CH2.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_1B_CH2 = 0x800000
	// Position of IN_REMAIN_UNDER_2B_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_2B_CH2_Pos = 0x18
	// Bit mask of IN_REMAIN_UNDER_2B_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_2B_CH2_Msk = 0x1000000
	// Bit IN_REMAIN_UNDER_2B_CH2.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_2B_CH2 = 0x1000000
	// Position of IN_REMAIN_UNDER_3B_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_3B_CH2_Pos = 0x19
	// Bit mask of IN_REMAIN_UNDER_3B_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_3B_CH2_Msk = 0x2000000
	// Bit IN_REMAIN_UNDER_3B_CH2.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_3B_CH2 = 0x2000000
	// Position of IN_REMAIN_UNDER_4B_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_4B_CH2_Pos = 0x1a
	// Bit mask of IN_REMAIN_UNDER_4B_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_4B_CH2_Msk = 0x4000000
	// Bit IN_REMAIN_UNDER_4B_CH2.
	DMA_INFIFO_STATUS_CH2_IN_REMAIN_UNDER_4B_CH2 = 0x4000000
	// Position of IN_BUF_HUNGRY_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_BUF_HUNGRY_CH2_Pos = 0x1b
	// Bit mask of IN_BUF_HUNGRY_CH2 field.
	DMA_INFIFO_STATUS_CH2_IN_BUF_HUNGRY_CH2_Msk = 0x8000000
	// Bit IN_BUF_HUNGRY_CH2.
	DMA_INFIFO_STATUS_CH2_IN_BUF_HUNGRY_CH2 = 0x8000000

	// IN_POP_CH2: DMA_IN_POP_CH2_REG.
	// Position of INFIFO_RDATA_CH2 field.
	DMA_IN_POP_CH2_INFIFO_RDATA_CH2_Pos = 0x0
	// Bit mask of INFIFO_RDATA_CH2 field.
	DMA_IN_POP_CH2_INFIFO_RDATA_CH2_Msk = 0xfff
	// Position of INFIFO_POP_CH2 field.
	DMA_IN_POP_CH2_INFIFO_POP_CH2_Pos = 0xc
	// Bit mask of INFIFO_POP_CH2 field.
	DMA_IN_POP_CH2_INFIFO_POP_CH2_Msk = 0x1000
	// Bit INFIFO_POP_CH2.
	DMA_IN_POP_CH2_INFIFO_POP_CH2 = 0x1000

	// IN_LINK_CH2: DMA_IN_LINK_CH2_REG.
	// Position of INLINK_ADDR_CH2 field.
	DMA_IN_LINK_CH2_INLINK_ADDR_CH2_Pos = 0x0
	// Bit mask of INLINK_ADDR_CH2 field.
	DMA_IN_LINK_CH2_INLINK_ADDR_CH2_Msk = 0xfffff
	// Position of INLINK_AUTO_RET_CH2 field.
	DMA_IN_LINK_CH2_INLINK_AUTO_RET_CH2_Pos = 0x14
	// Bit mask of INLINK_AUTO_RET_CH2 field.
	DMA_IN_LINK_CH2_INLINK_AUTO_RET_CH2_Msk = 0x100000
	// Bit INLINK_AUTO_RET_CH2.
	DMA_IN_LINK_CH2_INLINK_AUTO_RET_CH2 = 0x100000
	// Position of INLINK_STOP_CH2 field.
	DMA_IN_LINK_CH2_INLINK_STOP_CH2_Pos = 0x15
	// Bit mask of INLINK_STOP_CH2 field.
	DMA_IN_LINK_CH2_INLINK_STOP_CH2_Msk = 0x200000
	// Bit INLINK_STOP_CH2.
	DMA_IN_LINK_CH2_INLINK_STOP_CH2 = 0x200000
	// Position of INLINK_START_CH2 field.
	DMA_IN_LINK_CH2_INLINK_START_CH2_Pos = 0x16
	// Bit mask of INLINK_START_CH2 field.
	DMA_IN_LINK_CH2_INLINK_START_CH2_Msk = 0x400000
	// Bit INLINK_START_CH2.
	DMA_IN_LINK_CH2_INLINK_START_CH2 = 0x400000
	// Position of INLINK_RESTART_CH2 field.
	DMA_IN_LINK_CH2_INLINK_RESTART_CH2_Pos = 0x17
	// Bit mask of INLINK_RESTART_CH2 field.
	DMA_IN_LINK_CH2_INLINK_RESTART_CH2_Msk = 0x800000
	// Bit INLINK_RESTART_CH2.
	DMA_IN_LINK_CH2_INLINK_RESTART_CH2 = 0x800000
	// Position of INLINK_PARK_CH2 field.
	DMA_IN_LINK_CH2_INLINK_PARK_CH2_Pos = 0x18
	// Bit mask of INLINK_PARK_CH2 field.
	DMA_IN_LINK_CH2_INLINK_PARK_CH2_Msk = 0x1000000
	// Bit INLINK_PARK_CH2.
	DMA_IN_LINK_CH2_INLINK_PARK_CH2 = 0x1000000

	// IN_STATE_CH2: DMA_IN_STATE_CH2_REG.
	// Position of INLINK_DSCR_ADDR_CH2 field.
	DMA_IN_STATE_CH2_INLINK_DSCR_ADDR_CH2_Pos = 0x0
	// Bit mask of INLINK_DSCR_ADDR_CH2 field.
	DMA_IN_STATE_CH2_INLINK_DSCR_ADDR_CH2_Msk = 0x3ffff
	// Position of IN_DSCR_STATE_CH2 field.
	DMA_IN_STATE_CH2_IN_DSCR_STATE_CH2_Pos = 0x12
	// Bit mask of IN_DSCR_STATE_CH2 field.
	DMA_IN_STATE_CH2_IN_DSCR_STATE_CH2_Msk = 0xc0000
	// Position of IN_STATE_CH2 field.
	DMA_IN_STATE_CH2_IN_STATE_CH2_Pos = 0x14
	// Bit mask of IN_STATE_CH2 field.
	DMA_IN_STATE_CH2_IN_STATE_CH2_Msk = 0x700000

	// IN_SUC_EOF_DES_ADDR_CH2: DMA_IN_SUC_EOF_DES_ADDR_CH2_REG.
	// Position of IN_SUC_EOF_DES_ADDR_CH2 field.
	DMA_IN_SUC_EOF_DES_ADDR_CH2_IN_SUC_EOF_DES_ADDR_CH2_Pos = 0x0
	// Bit mask of IN_SUC_EOF_DES_ADDR_CH2 field.
	DMA_IN_SUC_EOF_DES_ADDR_CH2_IN_SUC_EOF_DES_ADDR_CH2_Msk = 0xffffffff

	// IN_ERR_EOF_DES_ADDR_CH2: DMA_IN_ERR_EOF_DES_ADDR_CH2_REG.
	// Position of IN_ERR_EOF_DES_ADDR_CH2 field.
	DMA_IN_ERR_EOF_DES_ADDR_CH2_IN_ERR_EOF_DES_ADDR_CH2_Pos = 0x0
	// Bit mask of IN_ERR_EOF_DES_ADDR_CH2 field.
	DMA_IN_ERR_EOF_DES_ADDR_CH2_IN_ERR_EOF_DES_ADDR_CH2_Msk = 0xffffffff

	// IN_DSCR_CH2: DMA_IN_DSCR_CH2_REG.
	// Position of INLINK_DSCR_CH2 field.
	DMA_IN_DSCR_CH2_INLINK_DSCR_CH2_Pos = 0x0
	// Bit mask of INLINK_DSCR_CH2 field.
	DMA_IN_DSCR_CH2_INLINK_DSCR_CH2_Msk = 0xffffffff

	// IN_DSCR_BF0_CH2: DMA_IN_DSCR_BF0_CH2_REG.
	// Position of INLINK_DSCR_BF0_CH2 field.
	DMA_IN_DSCR_BF0_CH2_INLINK_DSCR_BF0_CH2_Pos = 0x0
	// Bit mask of INLINK_DSCR_BF0_CH2 field.
	DMA_IN_DSCR_BF0_CH2_INLINK_DSCR_BF0_CH2_Msk = 0xffffffff

	// IN_DSCR_BF1_CH2: DMA_IN_DSCR_BF1_CH2_REG.
	// Position of INLINK_DSCR_BF1_CH2 field.
	DMA_IN_DSCR_BF1_CH2_INLINK_DSCR_BF1_CH2_Pos = 0x0
	// Bit mask of INLINK_DSCR_BF1_CH2 field.
	DMA_IN_DSCR_BF1_CH2_INLINK_DSCR_BF1_CH2_Msk = 0xffffffff

	// IN_PRI_CH2: DMA_IN_PRI_CH2_REG.
	// Position of RX_PRI_CH2 field.
	DMA_IN_PRI_CH2_RX_PRI_CH2_Pos = 0x0
	// Bit mask of RX_PRI_CH2 field.
	DMA_IN_PRI_CH2_RX_PRI_CH2_Msk = 0xf

	// IN_PERI_SEL_CH2: DMA_IN_PERI_SEL_CH2_REG.
	// Position of PERI_IN_SEL_CH2 field.
	DMA_IN_PERI_SEL_CH2_PERI_IN_SEL_CH2_Pos = 0x0
	// Bit mask of PERI_IN_SEL_CH2 field.
	DMA_IN_PERI_SEL_CH2_PERI_IN_SEL_CH2_Msk = 0x3f

	// OUT_CONF0_CH2: DMA_OUT_CONF0_CH2_REG.
	// Position of OUT_RST_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_RST_CH2_Pos = 0x0
	// Bit mask of OUT_RST_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_RST_CH2_Msk = 0x1
	// Bit OUT_RST_CH2.
	DMA_OUT_CONF0_CH2_OUT_RST_CH2 = 0x1
	// Position of OUT_LOOP_TEST_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_LOOP_TEST_CH2_Pos = 0x1
	// Bit mask of OUT_LOOP_TEST_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_LOOP_TEST_CH2_Msk = 0x2
	// Bit OUT_LOOP_TEST_CH2.
	DMA_OUT_CONF0_CH2_OUT_LOOP_TEST_CH2 = 0x2
	// Position of OUT_AUTO_WRBACK_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_AUTO_WRBACK_CH2_Pos = 0x2
	// Bit mask of OUT_AUTO_WRBACK_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_AUTO_WRBACK_CH2_Msk = 0x4
	// Bit OUT_AUTO_WRBACK_CH2.
	DMA_OUT_CONF0_CH2_OUT_AUTO_WRBACK_CH2 = 0x4
	// Position of OUT_EOF_MODE_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_EOF_MODE_CH2_Pos = 0x3
	// Bit mask of OUT_EOF_MODE_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_EOF_MODE_CH2_Msk = 0x8
	// Bit OUT_EOF_MODE_CH2.
	DMA_OUT_CONF0_CH2_OUT_EOF_MODE_CH2 = 0x8
	// Position of OUTDSCR_BURST_EN_CH2 field.
	DMA_OUT_CONF0_CH2_OUTDSCR_BURST_EN_CH2_Pos = 0x4
	// Bit mask of OUTDSCR_BURST_EN_CH2 field.
	DMA_OUT_CONF0_CH2_OUTDSCR_BURST_EN_CH2_Msk = 0x10
	// Bit OUTDSCR_BURST_EN_CH2.
	DMA_OUT_CONF0_CH2_OUTDSCR_BURST_EN_CH2 = 0x10
	// Position of OUT_DATA_BURST_EN_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_DATA_BURST_EN_CH2_Pos = 0x5
	// Bit mask of OUT_DATA_BURST_EN_CH2 field.
	DMA_OUT_CONF0_CH2_OUT_DATA_BURST_EN_CH2_Msk = 0x20
	// Bit OUT_DATA_BURST_EN_CH2.
	DMA_OUT_CONF0_CH2_OUT_DATA_BURST_EN_CH2 = 0x20

	// OUT_CONF1_CH2: DMA_OUT_CONF1_CH2_REG.
	// Position of OUT_CHECK_OWNER_CH2 field.
	DMA_OUT_CONF1_CH2_OUT_CHECK_OWNER_CH2_Pos = 0xc
	// Bit mask of OUT_CHECK_OWNER_CH2 field.
	DMA_OUT_CONF1_CH2_OUT_CHECK_OWNER_CH2_Msk = 0x1000
	// Bit OUT_CHECK_OWNER_CH2.
	DMA_OUT_CONF1_CH2_OUT_CHECK_OWNER_CH2 = 0x1000

	// OUTFIFO_STATUS_CH2: DMA_OUTFIFO_STATUS_CH2_REG.
	// Position of OUTFIFO_FULL_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUTFIFO_FULL_CH2_Pos = 0x0
	// Bit mask of OUTFIFO_FULL_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUTFIFO_FULL_CH2_Msk = 0x1
	// Bit OUTFIFO_FULL_CH2.
	DMA_OUTFIFO_STATUS_CH2_OUTFIFO_FULL_CH2 = 0x1
	// Position of OUTFIFO_EMPTY_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUTFIFO_EMPTY_CH2_Pos = 0x1
	// Bit mask of OUTFIFO_EMPTY_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUTFIFO_EMPTY_CH2_Msk = 0x2
	// Bit OUTFIFO_EMPTY_CH2.
	DMA_OUTFIFO_STATUS_CH2_OUTFIFO_EMPTY_CH2 = 0x2
	// Position of OUTFIFO_CNT_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUTFIFO_CNT_CH2_Pos = 0x2
	// Bit mask of OUTFIFO_CNT_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUTFIFO_CNT_CH2_Msk = 0xfc
	// Position of OUT_REMAIN_UNDER_1B_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_1B_CH2_Pos = 0x17
	// Bit mask of OUT_REMAIN_UNDER_1B_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_1B_CH2_Msk = 0x800000
	// Bit OUT_REMAIN_UNDER_1B_CH2.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_1B_CH2 = 0x800000
	// Position of OUT_REMAIN_UNDER_2B_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_2B_CH2_Pos = 0x18
	// Bit mask of OUT_REMAIN_UNDER_2B_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_2B_CH2_Msk = 0x1000000
	// Bit OUT_REMAIN_UNDER_2B_CH2.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_2B_CH2 = 0x1000000
	// Position of OUT_REMAIN_UNDER_3B_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_3B_CH2_Pos = 0x19
	// Bit mask of OUT_REMAIN_UNDER_3B_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_3B_CH2_Msk = 0x2000000
	// Bit OUT_REMAIN_UNDER_3B_CH2.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_3B_CH2 = 0x2000000
	// Position of OUT_REMAIN_UNDER_4B_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_4B_CH2_Pos = 0x1a
	// Bit mask of OUT_REMAIN_UNDER_4B_CH2 field.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_4B_CH2_Msk = 0x4000000
	// Bit OUT_REMAIN_UNDER_4B_CH2.
	DMA_OUTFIFO_STATUS_CH2_OUT_REMAIN_UNDER_4B_CH2 = 0x4000000

	// OUT_PUSH_CH2: DMA_OUT_PUSH_CH2_REG.
	// Position of OUTFIFO_WDATA_CH2 field.
	DMA_OUT_PUSH_CH2_OUTFIFO_WDATA_CH2_Pos = 0x0
	// Bit mask of OUTFIFO_WDATA_CH2 field.
	DMA_OUT_PUSH_CH2_OUTFIFO_WDATA_CH2_Msk = 0x1ff
	// Position of OUTFIFO_PUSH_CH2 field.
	DMA_OUT_PUSH_CH2_OUTFIFO_PUSH_CH2_Pos = 0x9
	// Bit mask of OUTFIFO_PUSH_CH2 field.
	DMA_OUT_PUSH_CH2_OUTFIFO_PUSH_CH2_Msk = 0x200
	// Bit OUTFIFO_PUSH_CH2.
	DMA_OUT_PUSH_CH2_OUTFIFO_PUSH_CH2 = 0x200

	// OUT_LINK_CH2: DMA_OUT_LINK_CH2_REG.
	// Position of OUTLINK_ADDR_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_ADDR_CH2_Pos = 0x0
	// Bit mask of OUTLINK_ADDR_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_ADDR_CH2_Msk = 0xfffff
	// Position of OUTLINK_STOP_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_STOP_CH2_Pos = 0x14
	// Bit mask of OUTLINK_STOP_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_STOP_CH2_Msk = 0x100000
	// Bit OUTLINK_STOP_CH2.
	DMA_OUT_LINK_CH2_OUTLINK_STOP_CH2 = 0x100000
	// Position of OUTLINK_START_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_START_CH2_Pos = 0x15
	// Bit mask of OUTLINK_START_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_START_CH2_Msk = 0x200000
	// Bit OUTLINK_START_CH2.
	DMA_OUT_LINK_CH2_OUTLINK_START_CH2 = 0x200000
	// Position of OUTLINK_RESTART_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_RESTART_CH2_Pos = 0x16
	// Bit mask of OUTLINK_RESTART_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_RESTART_CH2_Msk = 0x400000
	// Bit OUTLINK_RESTART_CH2.
	DMA_OUT_LINK_CH2_OUTLINK_RESTART_CH2 = 0x400000
	// Position of OUTLINK_PARK_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_PARK_CH2_Pos = 0x17
	// Bit mask of OUTLINK_PARK_CH2 field.
	DMA_OUT_LINK_CH2_OUTLINK_PARK_CH2_Msk = 0x800000
	// Bit OUTLINK_PARK_CH2.
	DMA_OUT_LINK_CH2_OUTLINK_PARK_CH2 = 0x800000

	// OUT_STATE_CH2: DMA_OUT_STATE_CH2_REG.
	// Position of OUTLINK_DSCR_ADDR_CH2 field.
	DMA_OUT_STATE_CH2_OUTLINK_DSCR_ADDR_CH2_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_ADDR_CH2 field.
	DMA_OUT_STATE_CH2_OUTLINK_DSCR_ADDR_CH2_Msk = 0x3ffff
	// Position of OUT_DSCR_STATE_CH2 field.
	DMA_OUT_STATE_CH2_OUT_DSCR_STATE_CH2_Pos = 0x12
	// Bit mask of OUT_DSCR_STATE_CH2 field.
	DMA_OUT_STATE_CH2_OUT_DSCR_STATE_CH2_Msk = 0xc0000
	// Position of OUT_STATE_CH2 field.
	DMA_OUT_STATE_CH2_OUT_STATE_CH2_Pos = 0x14
	// Bit mask of OUT_STATE_CH2 field.
	DMA_OUT_STATE_CH2_OUT_STATE_CH2_Msk = 0x700000

	// OUT_EOF_DES_ADDR_CH2: DMA_OUT_EOF_DES_ADDR_CH2_REG.
	// Position of OUT_EOF_DES_ADDR_CH2 field.
	DMA_OUT_EOF_DES_ADDR_CH2_OUT_EOF_DES_ADDR_CH2_Pos = 0x0
	// Bit mask of OUT_EOF_DES_ADDR_CH2 field.
	DMA_OUT_EOF_DES_ADDR_CH2_OUT_EOF_DES_ADDR_CH2_Msk = 0xffffffff

	// OUT_EOF_BFR_DES_ADDR_CH2: DMA_OUT_EOF_BFR_DES_ADDR_CH2_REG.
	// Position of OUT_EOF_BFR_DES_ADDR_CH2 field.
	DMA_OUT_EOF_BFR_DES_ADDR_CH2_OUT_EOF_BFR_DES_ADDR_CH2_Pos = 0x0
	// Bit mask of OUT_EOF_BFR_DES_ADDR_CH2 field.
	DMA_OUT_EOF_BFR_DES_ADDR_CH2_OUT_EOF_BFR_DES_ADDR_CH2_Msk = 0xffffffff

	// OUT_DSCR_CH2: DMA_OUT_DSCR_CH2_REG.
	// Position of OUTLINK_DSCR_CH2 field.
	DMA_OUT_DSCR_CH2_OUTLINK_DSCR_CH2_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_CH2 field.
	DMA_OUT_DSCR_CH2_OUTLINK_DSCR_CH2_Msk = 0xffffffff

	// OUT_DSCR_BF0_CH2: DMA_OUT_DSCR_BF0_CH2_REG.
	// Position of OUTLINK_DSCR_BF0_CH2 field.
	DMA_OUT_DSCR_BF0_CH2_OUTLINK_DSCR_BF0_CH2_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_BF0_CH2 field.
	DMA_OUT_DSCR_BF0_CH2_OUTLINK_DSCR_BF0_CH2_Msk = 0xffffffff

	// OUT_DSCR_BF1_CH2: DMA_OUT_DSCR_BF1_CH2_REG.
	// Position of OUTLINK_DSCR_BF1_CH2 field.
	DMA_OUT_DSCR_BF1_CH2_OUTLINK_DSCR_BF1_CH2_Pos = 0x0
	// Bit mask of OUTLINK_DSCR_BF1_CH2 field.
	DMA_OUT_DSCR_BF1_CH2_OUTLINK_DSCR_BF1_CH2_Msk = 0xffffffff

	// OUT_PRI_CH2: DMA_OUT_PRI_CH2_REG.
	// Position of TX_PRI_CH2 field.
	DMA_OUT_PRI_CH2_TX_PRI_CH2_Pos = 0x0
	// Bit mask of TX_PRI_CH2 field.
	DMA_OUT_PRI_CH2_TX_PRI_CH2_Msk = 0xf

	// OUT_PERI_SEL_CH2: DMA_OUT_PERI_SEL_CH2_REG.
	// Position of PERI_OUT_SEL_CH2 field.
	DMA_OUT_PERI_SEL_CH2_PERI_OUT_SEL_CH2_Pos = 0x0
	// Bit mask of PERI_OUT_SEL_CH2 field.
	DMA_OUT_PERI_SEL_CH2_PERI_OUT_SEL_CH2_Msk = 0x3f
)

// Bitfields for DS: Peripheral DS
const (
	// SET_START: DS start control register
	// Position of SET_START field.
	DS_SET_START_SET_START_Pos = 0x0
	// Bit mask of SET_START field.
	DS_SET_START_SET_START_Msk = 0x1
	// Bit SET_START.
	DS_SET_START_SET_START = 0x1

	// SET_CONTINUE: DS continue control register
	// Position of SET_CONTINUE field.
	DS_SET_CONTINUE_SET_CONTINUE_Pos = 0x0
	// Bit mask of SET_CONTINUE field.
	DS_SET_CONTINUE_SET_CONTINUE_Msk = 0x1
	// Bit SET_CONTINUE.
	DS_SET_CONTINUE_SET_CONTINUE = 0x1

	// SET_FINISH: DS finish control register
	// Position of SET_FINISH field.
	DS_SET_FINISH_SET_FINISH_Pos = 0x0
	// Bit mask of SET_FINISH field.
	DS_SET_FINISH_SET_FINISH_Msk = 0x1
	// Bit SET_FINISH.
	DS_SET_FINISH_SET_FINISH = 0x1

	// QUERY_BUSY: DS query busy register
	// Position of QUERY_BUSY field.
	DS_QUERY_BUSY_QUERY_BUSY_Pos = 0x0
	// Bit mask of QUERY_BUSY field.
	DS_QUERY_BUSY_QUERY_BUSY_Msk = 0x1
	// Bit QUERY_BUSY.
	DS_QUERY_BUSY_QUERY_BUSY = 0x1

	// QUERY_KEY_WRONG: DS query key-wrong counter register
	// Position of QUERY_KEY_WRONG field.
	DS_QUERY_KEY_WRONG_QUERY_KEY_WRONG_Pos = 0x0
	// Bit mask of QUERY_KEY_WRONG field.
	DS_QUERY_KEY_WRONG_QUERY_KEY_WRONG_Msk = 0xf

	// QUERY_CHECK: DS query check result register
	// Position of MD_ERROR field.
	DS_QUERY_CHECK_MD_ERROR_Pos = 0x0
	// Bit mask of MD_ERROR field.
	DS_QUERY_CHECK_MD_ERROR_Msk = 0x1
	// Bit MD_ERROR.
	DS_QUERY_CHECK_MD_ERROR = 0x1
	// Position of PADDING_BAD field.
	DS_QUERY_CHECK_PADDING_BAD_Pos = 0x1
	// Bit mask of PADDING_BAD field.
	DS_QUERY_CHECK_PADDING_BAD_Msk = 0x2
	// Bit PADDING_BAD.
	DS_QUERY_CHECK_PADDING_BAD = 0x2

	// DATE: DS version control register
	// Position of DATE field.
	DS_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	DS_DATE_DATE_Msk = 0x3fffffff
)

// Bitfields for EFUSE: Peripheral EFUSE
const (
	// PGM_DATA0: Register 0 that stores data to be programmed.
	// Position of PGM_DATA_0 field.
	EFUSE_PGM_DATA0_PGM_DATA_0_Pos = 0x0
	// Bit mask of PGM_DATA_0 field.
	EFUSE_PGM_DATA0_PGM_DATA_0_Msk = 0xffffffff

	// PGM_DATA1: Register 1 that stores data to be programmed.
	// Position of PGM_DATA_1 field.
	EFUSE_PGM_DATA1_PGM_DATA_1_Pos = 0x0
	// Bit mask of PGM_DATA_1 field.
	EFUSE_PGM_DATA1_PGM_DATA_1_Msk = 0xffffffff

	// PGM_DATA2: Register 2 that stores data to be programmed.
	// Position of PGM_DATA_2 field.
	EFUSE_PGM_DATA2_PGM_DATA_2_Pos = 0x0
	// Bit mask of PGM_DATA_2 field.
	EFUSE_PGM_DATA2_PGM_DATA_2_Msk = 0xffffffff

	// PGM_DATA3: Register 3 that stores data to be programmed.
	// Position of PGM_DATA_3 field.
	EFUSE_PGM_DATA3_PGM_DATA_3_Pos = 0x0
	// Bit mask of PGM_DATA_3 field.
	EFUSE_PGM_DATA3_PGM_DATA_3_Msk = 0xffffffff

	// PGM_DATA4: Register 4 that stores data to be programmed.
	// Position of PGM_DATA_4 field.
	EFUSE_PGM_DATA4_PGM_DATA_4_Pos = 0x0
	// Bit mask of PGM_DATA_4 field.
	EFUSE_PGM_DATA4_PGM_DATA_4_Msk = 0xffffffff

	// PGM_DATA5: Register 5 that stores data to be programmed.
	// Position of PGM_DATA_5 field.
	EFUSE_PGM_DATA5_PGM_DATA_5_Pos = 0x0
	// Bit mask of PGM_DATA_5 field.
	EFUSE_PGM_DATA5_PGM_DATA_5_Msk = 0xffffffff

	// PGM_DATA6: Register 6 that stores data to be programmed.
	// Position of PGM_DATA_6 field.
	EFUSE_PGM_DATA6_PGM_DATA_6_Pos = 0x0
	// Bit mask of PGM_DATA_6 field.
	EFUSE_PGM_DATA6_PGM_DATA_6_Msk = 0xffffffff

	// PGM_DATA7: Register 7 that stores data to be programmed.
	// Position of PGM_DATA_7 field.
	EFUSE_PGM_DATA7_PGM_DATA_7_Pos = 0x0
	// Bit mask of PGM_DATA_7 field.
	EFUSE_PGM_DATA7_PGM_DATA_7_Msk = 0xffffffff

	// PGM_CHECK_VALUE0: Register 0 that stores the RS code to be programmed.
	// Position of PGM_RS_DATA_0 field.
	EFUSE_PGM_CHECK_VALUE0_PGM_RS_DATA_0_Pos = 0x0
	// Bit mask of PGM_RS_DATA_0 field.
	EFUSE_PGM_CHECK_VALUE0_PGM_RS_DATA_0_Msk = 0xffffffff

	// PGM_CHECK_VALUE1: Register 1 that stores the RS code to be programmed.
	// Position of PGM_RS_DATA_1 field.
	EFUSE_PGM_CHECK_VALUE1_PGM_RS_DATA_1_Pos = 0x0
	// Bit mask of PGM_RS_DATA_1 field.
	EFUSE_PGM_CHECK_VALUE1_PGM_RS_DATA_1_Msk = 0xffffffff

	// PGM_CHECK_VALUE2: Register 2 that stores the RS code to be programmed.
	// Position of PGM_RS_DATA_2 field.
	EFUSE_PGM_CHECK_VALUE2_PGM_RS_DATA_2_Pos = 0x0
	// Bit mask of PGM_RS_DATA_2 field.
	EFUSE_PGM_CHECK_VALUE2_PGM_RS_DATA_2_Msk = 0xffffffff

	// RD_WR_DIS: BLOCK0 data register 0.
	// Position of WR_DIS field.
	EFUSE_RD_WR_DIS_WR_DIS_Pos = 0x0
	// Bit mask of WR_DIS field.
	EFUSE_RD_WR_DIS_WR_DIS_Msk = 0xffffffff

	// RD_REPEAT_DATA0: BLOCK0 data register 1.
	// Position of RD_DIS field.
	EFUSE_RD_REPEAT_DATA0_RD_DIS_Pos = 0x0
	// Bit mask of RD_DIS field.
	EFUSE_RD_REPEAT_DATA0_RD_DIS_Msk = 0x7f
	// Position of DIS_RTC_RAM_BOOT field.
	EFUSE_RD_REPEAT_DATA0_DIS_RTC_RAM_BOOT_Pos = 0x7
	// Bit mask of DIS_RTC_RAM_BOOT field.
	EFUSE_RD_REPEAT_DATA0_DIS_RTC_RAM_BOOT_Msk = 0x80
	// Bit DIS_RTC_RAM_BOOT.
	EFUSE_RD_REPEAT_DATA0_DIS_RTC_RAM_BOOT = 0x80
	// Position of DIS_ICACHE field.
	EFUSE_RD_REPEAT_DATA0_DIS_ICACHE_Pos = 0x8
	// Bit mask of DIS_ICACHE field.
	EFUSE_RD_REPEAT_DATA0_DIS_ICACHE_Msk = 0x100
	// Bit DIS_ICACHE.
	EFUSE_RD_REPEAT_DATA0_DIS_ICACHE = 0x100
	// Position of DIS_USB_JTAG field.
	EFUSE_RD_REPEAT_DATA0_DIS_USB_JTAG_Pos = 0x9
	// Bit mask of DIS_USB_JTAG field.
	EFUSE_RD_REPEAT_DATA0_DIS_USB_JTAG_Msk = 0x200
	// Bit DIS_USB_JTAG.
	EFUSE_RD_REPEAT_DATA0_DIS_USB_JTAG = 0x200
	// Position of DIS_DOWNLOAD_ICACHE field.
	EFUSE_RD_REPEAT_DATA0_DIS_DOWNLOAD_ICACHE_Pos = 0xa
	// Bit mask of DIS_DOWNLOAD_ICACHE field.
	EFUSE_RD_REPEAT_DATA0_DIS_DOWNLOAD_ICACHE_Msk = 0x400
	// Bit DIS_DOWNLOAD_ICACHE.
	EFUSE_RD_REPEAT_DATA0_DIS_DOWNLOAD_ICACHE = 0x400
	// Position of DIS_USB_DEVICE field.
	EFUSE_RD_REPEAT_DATA0_DIS_USB_DEVICE_Pos = 0xb
	// Bit mask of DIS_USB_DEVICE field.
	EFUSE_RD_REPEAT_DATA0_DIS_USB_DEVICE_Msk = 0x800
	// Bit DIS_USB_DEVICE.
	EFUSE_RD_REPEAT_DATA0_DIS_USB_DEVICE = 0x800
	// Position of DIS_FORCE_DOWNLOAD field.
	EFUSE_RD_REPEAT_DATA0_DIS_FORCE_DOWNLOAD_Pos = 0xc
	// Bit mask of DIS_FORCE_DOWNLOAD field.
	EFUSE_RD_REPEAT_DATA0_DIS_FORCE_DOWNLOAD_Msk = 0x1000
	// Bit DIS_FORCE_DOWNLOAD.
	EFUSE_RD_REPEAT_DATA0_DIS_FORCE_DOWNLOAD = 0x1000
	// Position of RPT4_RESERVED6 field.
	EFUSE_RD_REPEAT_DATA0_RPT4_RESERVED6_Pos = 0xd
	// Bit mask of RPT4_RESERVED6 field.
	EFUSE_RD_REPEAT_DATA0_RPT4_RESERVED6_Msk = 0x2000
	// Bit RPT4_RESERVED6.
	EFUSE_RD_REPEAT_DATA0_RPT4_RESERVED6 = 0x2000
	// Position of DIS_CAN field.
	EFUSE_RD_REPEAT_DATA0_DIS_CAN_Pos = 0xe
	// Bit mask of DIS_CAN field.
	EFUSE_RD_REPEAT_DATA0_DIS_CAN_Msk = 0x4000
	// Bit DIS_CAN.
	EFUSE_RD_REPEAT_DATA0_DIS_CAN = 0x4000
	// Position of JTAG_SEL_ENABLE field.
	EFUSE_RD_REPEAT_DATA0_JTAG_SEL_ENABLE_Pos = 0xf
	// Bit mask of JTAG_SEL_ENABLE field.
	EFUSE_RD_REPEAT_DATA0_JTAG_SEL_ENABLE_Msk = 0x8000
	// Bit JTAG_SEL_ENABLE.
	EFUSE_RD_REPEAT_DATA0_JTAG_SEL_ENABLE = 0x8000
	// Position of SOFT_DIS_JTAG field.
	EFUSE_RD_REPEAT_DATA0_SOFT_DIS_JTAG_Pos = 0x10
	// Bit mask of SOFT_DIS_JTAG field.
	EFUSE_RD_REPEAT_DATA0_SOFT_DIS_JTAG_Msk = 0x70000
	// Position of DIS_PAD_JTAG field.
	EFUSE_RD_REPEAT_DATA0_DIS_PAD_JTAG_Pos = 0x13
	// Bit mask of DIS_PAD_JTAG field.
	EFUSE_RD_REPEAT_DATA0_DIS_PAD_JTAG_Msk = 0x80000
	// Bit DIS_PAD_JTAG.
	EFUSE_RD_REPEAT_DATA0_DIS_PAD_JTAG = 0x80000
	// Position of DIS_DOWNLOAD_MANUAL_ENCRYPT field.
	EFUSE_RD_REPEAT_DATA0_DIS_DOWNLOAD_MANUAL_ENCRYPT_Pos = 0x14
	// Bit mask of DIS_DOWNLOAD_MANUAL_ENCRYPT field.
	EFUSE_RD_REPEAT_DATA0_DIS_DOWNLOAD_MANUAL_ENCRYPT_Msk = 0x100000
	// Bit DIS_DOWNLOAD_MANUAL_ENCRYPT.
	EFUSE_RD_REPEAT_DATA0_DIS_DOWNLOAD_MANUAL_ENCRYPT = 0x100000
	// Position of USB_DREFH field.
	EFUSE_RD_REPEAT_DATA0_USB_DREFH_Pos = 0x15
	// Bit mask of USB_DREFH field.
	EFUSE_RD_REPEAT_DATA0_USB_DREFH_Msk = 0x600000
	// Position of USB_DREFL field.
	EFUSE_RD_REPEAT_DATA0_USB_DREFL_Pos = 0x17
	// Bit mask of USB_DREFL field.
	EFUSE_RD_REPEAT_DATA0_USB_DREFL_Msk = 0x1800000
	// Position of USB_EXCHG_PINS field.
	EFUSE_RD_REPEAT_DATA0_USB_EXCHG_PINS_Pos = 0x19
	// Bit mask of USB_EXCHG_PINS field.
	EFUSE_RD_REPEAT_DATA0_USB_EXCHG_PINS_Msk = 0x2000000
	// Bit USB_EXCHG_PINS.
	EFUSE_RD_REPEAT_DATA0_USB_EXCHG_PINS = 0x2000000
	// Position of VDD_SPI_AS_GPIO field.
	EFUSE_RD_REPEAT_DATA0_VDD_SPI_AS_GPIO_Pos = 0x1a
	// Bit mask of VDD_SPI_AS_GPIO field.
	EFUSE_RD_REPEAT_DATA0_VDD_SPI_AS_GPIO_Msk = 0x4000000
	// Bit VDD_SPI_AS_GPIO.
	EFUSE_RD_REPEAT_DATA0_VDD_SPI_AS_GPIO = 0x4000000
	// Position of BTLC_GPIO_ENABLE field.
	EFUSE_RD_REPEAT_DATA0_BTLC_GPIO_ENABLE_Pos = 0x1b
	// Bit mask of BTLC_GPIO_ENABLE field.
	EFUSE_RD_REPEAT_DATA0_BTLC_GPIO_ENABLE_Msk = 0x18000000
	// Position of POWERGLITCH_EN field.
	EFUSE_RD_REPEAT_DATA0_POWERGLITCH_EN_Pos = 0x1d
	// Bit mask of POWERGLITCH_EN field.
	EFUSE_RD_REPEAT_DATA0_POWERGLITCH_EN_Msk = 0x20000000
	// Bit POWERGLITCH_EN.
	EFUSE_RD_REPEAT_DATA0_POWERGLITCH_EN = 0x20000000
	// Position of POWER_GLITCH_DSENSE field.
	EFUSE_RD_REPEAT_DATA0_POWER_GLITCH_DSENSE_Pos = 0x1e
	// Bit mask of POWER_GLITCH_DSENSE field.
	EFUSE_RD_REPEAT_DATA0_POWER_GLITCH_DSENSE_Msk = 0xc0000000

	// RD_REPEAT_DATA1: BLOCK0 data register 2.
	// Position of RPT4_RESERVED2 field.
	EFUSE_RD_REPEAT_DATA1_RPT4_RESERVED2_Pos = 0x0
	// Bit mask of RPT4_RESERVED2 field.
	EFUSE_RD_REPEAT_DATA1_RPT4_RESERVED2_Msk = 0xffff
	// Position of WDT_DELAY_SEL field.
	EFUSE_RD_REPEAT_DATA1_WDT_DELAY_SEL_Pos = 0x10
	// Bit mask of WDT_DELAY_SEL field.
	EFUSE_RD_REPEAT_DATA1_WDT_DELAY_SEL_Msk = 0x30000
	// Position of SPI_BOOT_CRYPT_CNT field.
	EFUSE_RD_REPEAT_DATA1_SPI_BOOT_CRYPT_CNT_Pos = 0x12
	// Bit mask of SPI_BOOT_CRYPT_CNT field.
	EFUSE_RD_REPEAT_DATA1_SPI_BOOT_CRYPT_CNT_Msk = 0x1c0000
	// Position of SECURE_BOOT_KEY_REVOKE0 field.
	EFUSE_RD_REPEAT_DATA1_SECURE_BOOT_KEY_REVOKE0_Pos = 0x15
	// Bit mask of SECURE_BOOT_KEY_REVOKE0 field.
	EFUSE_RD_REPEAT_DATA1_SECURE_BOOT_KEY_REVOKE0_Msk = 0x200000
	// Bit SECURE_BOOT_KEY_REVOKE0.
	EFUSE_RD_REPEAT_DATA1_SECURE_BOOT_KEY_REVOKE0 = 0x200000
	// Position of SECURE_BOOT_KEY_REVOKE1 field.
	EFUSE_RD_REPEAT_DATA1_SECURE_BOOT_KEY_REVOKE1_Pos = 0x16
	// Bit mask of SECURE_BOOT_KEY_REVOKE1 field.
	EFUSE_RD_REPEAT_DATA1_SECURE_BOOT_KEY_REVOKE1_Msk = 0x400000
	// Bit SECURE_BOOT_KEY_REVOKE1.
	EFUSE_RD_REPEAT_DATA1_SECURE_BOOT_KEY_REVOKE1 = 0x400000
	// Position of SECURE_BOOT_KEY_REVOKE2 field.
	EFUSE_RD_REPEAT_DATA1_SECURE_BOOT_KEY_REVOKE2_Pos = 0x17
	// Bit mask of SECURE_BOOT_KEY_REVOKE2 field.
	EFUSE_RD_REPEAT_DATA1_SECURE_BOOT_KEY_REVOKE2_Msk = 0x800000
	// Bit SECURE_BOOT_KEY_REVOKE2.
	EFUSE_RD_REPEAT_DATA1_SECURE_BOOT_KEY_REVOKE2 = 0x800000
	// Position of KEY_PURPOSE_0 field.
	EFUSE_RD_REPEAT_DATA1_KEY_PURPOSE_0_Pos = 0x18
	// Bit mask of KEY_PURPOSE_0 field.
	EFUSE_RD_REPEAT_DATA1_KEY_PURPOSE_0_Msk = 0xf000000
	// Position of KEY_PURPOSE_1 field.
	EFUSE_RD_REPEAT_DATA1_KEY_PURPOSE_1_Pos = 0x1c
	// Bit mask of KEY_PURPOSE_1 field.
	EFUSE_RD_REPEAT_DATA1_KEY_PURPOSE_1_Msk = 0xf0000000

	// RD_REPEAT_DATA2: BLOCK0 data register 3.
	// Position of KEY_PURPOSE_2 field.
	EFUSE_RD_REPEAT_DATA2_KEY_PURPOSE_2_Pos = 0x0
	// Bit mask of KEY_PURPOSE_2 field.
	EFUSE_RD_REPEAT_DATA2_KEY_PURPOSE_2_Msk = 0xf
	// Position of KEY_PURPOSE_3 field.
	EFUSE_RD_REPEAT_DATA2_KEY_PURPOSE_3_Pos = 0x4
	// Bit mask of KEY_PURPOSE_3 field.
	EFUSE_RD_REPEAT_DATA2_KEY_PURPOSE_3_Msk = 0xf0
	// Position of KEY_PURPOSE_4 field.
	EFUSE_RD_REPEAT_DATA2_KEY_PURPOSE_4_Pos = 0x8
	// Bit mask of KEY_PURPOSE_4 field.
	EFUSE_RD_REPEAT_DATA2_KEY_PURPOSE_4_Msk = 0xf00
	// Position of KEY_PURPOSE_5 field.
	EFUSE_RD_REPEAT_DATA2_KEY_PURPOSE_5_Pos = 0xc
	// Bit mask of KEY_PURPOSE_5 field.
	EFUSE_RD_REPEAT_DATA2_KEY_PURPOSE_5_Msk = 0xf000
	// Position of RPT4_RESERVED3 field.
	EFUSE_RD_REPEAT_DATA2_RPT4_RESERVED3_Pos = 0x10
	// Bit mask of RPT4_RESERVED3 field.
	EFUSE_RD_REPEAT_DATA2_RPT4_RESERVED3_Msk = 0xf0000
	// Position of SECURE_BOOT_EN field.
	EFUSE_RD_REPEAT_DATA2_SECURE_BOOT_EN_Pos = 0x14
	// Bit mask of SECURE_BOOT_EN field.
	EFUSE_RD_REPEAT_DATA2_SECURE_BOOT_EN_Msk = 0x100000
	// Bit SECURE_BOOT_EN.
	EFUSE_RD_REPEAT_DATA2_SECURE_BOOT_EN = 0x100000
	// Position of SECURE_BOOT_AGGRESSIVE_REVOKE field.
	EFUSE_RD_REPEAT_DATA2_SECURE_BOOT_AGGRESSIVE_REVOKE_Pos = 0x15
	// Bit mask of SECURE_BOOT_AGGRESSIVE_REVOKE field.
	EFUSE_RD_REPEAT_DATA2_SECURE_BOOT_AGGRESSIVE_REVOKE_Msk = 0x200000
	// Bit SECURE_BOOT_AGGRESSIVE_REVOKE.
	EFUSE_RD_REPEAT_DATA2_SECURE_BOOT_AGGRESSIVE_REVOKE = 0x200000
	// Position of RPT4_RESERVED0 field.
	EFUSE_RD_REPEAT_DATA2_RPT4_RESERVED0_Pos = 0x16
	// Bit mask of RPT4_RESERVED0 field.
	EFUSE_RD_REPEAT_DATA2_RPT4_RESERVED0_Msk = 0xfc00000
	// Position of FLASH_TPUW field.
	EFUSE_RD_REPEAT_DATA2_FLASH_TPUW_Pos = 0x1c
	// Bit mask of FLASH_TPUW field.
	EFUSE_RD_REPEAT_DATA2_FLASH_TPUW_Msk = 0xf0000000

	// RD_REPEAT_DATA3: BLOCK0 data register 4.
	// Position of DIS_DOWNLOAD_MODE field.
	EFUSE_RD_REPEAT_DATA3_DIS_DOWNLOAD_MODE_Pos = 0x0
	// Bit mask of DIS_DOWNLOAD_MODE field.
	EFUSE_RD_REPEAT_DATA3_DIS_DOWNLOAD_MODE_Msk = 0x1
	// Bit DIS_DOWNLOAD_MODE.
	EFUSE_RD_REPEAT_DATA3_DIS_DOWNLOAD_MODE = 0x1
	// Position of DIS_LEGACY_SPI_BOOT field.
	EFUSE_RD_REPEAT_DATA3_DIS_LEGACY_SPI_BOOT_Pos = 0x1
	// Bit mask of DIS_LEGACY_SPI_BOOT field.
	EFUSE_RD_REPEAT_DATA3_DIS_LEGACY_SPI_BOOT_Msk = 0x2
	// Bit DIS_LEGACY_SPI_BOOT.
	EFUSE_RD_REPEAT_DATA3_DIS_LEGACY_SPI_BOOT = 0x2
	// Position of UART_PRINT_CHANNEL field.
	EFUSE_RD_REPEAT_DATA3_UART_PRINT_CHANNEL_Pos = 0x2
	// Bit mask of UART_PRINT_CHANNEL field.
	EFUSE_RD_REPEAT_DATA3_UART_PRINT_CHANNEL_Msk = 0x4
	// Bit UART_PRINT_CHANNEL.
	EFUSE_RD_REPEAT_DATA3_UART_PRINT_CHANNEL = 0x4
	// Position of FLASH_ECC_MODE field.
	EFUSE_RD_REPEAT_DATA3_FLASH_ECC_MODE_Pos = 0x3
	// Bit mask of FLASH_ECC_MODE field.
	EFUSE_RD_REPEAT_DATA3_FLASH_ECC_MODE_Msk = 0x8
	// Bit FLASH_ECC_MODE.
	EFUSE_RD_REPEAT_DATA3_FLASH_ECC_MODE = 0x8
	// Position of DIS_USB_DOWNLOAD_MODE field.
	EFUSE_RD_REPEAT_DATA3_DIS_USB_DOWNLOAD_MODE_Pos = 0x4
	// Bit mask of DIS_USB_DOWNLOAD_MODE field.
	EFUSE_RD_REPEAT_DATA3_DIS_USB_DOWNLOAD_MODE_Msk = 0x10
	// Bit DIS_USB_DOWNLOAD_MODE.
	EFUSE_RD_REPEAT_DATA3_DIS_USB_DOWNLOAD_MODE = 0x10
	// Position of ENABLE_SECURITY_DOWNLOAD field.
	EFUSE_RD_REPEAT_DATA3_ENABLE_SECURITY_DOWNLOAD_Pos = 0x5
	// Bit mask of ENABLE_SECURITY_DOWNLOAD field.
	EFUSE_RD_REPEAT_DATA3_ENABLE_SECURITY_DOWNLOAD_Msk = 0x20
	// Bit ENABLE_SECURITY_DOWNLOAD.
	EFUSE_RD_REPEAT_DATA3_ENABLE_SECURITY_DOWNLOAD = 0x20
	// Position of UART_PRINT_CONTROL field.
	EFUSE_RD_REPEAT_DATA3_UART_PRINT_CONTROL_Pos = 0x6
	// Bit mask of UART_PRINT_CONTROL field.
	EFUSE_RD_REPEAT_DATA3_UART_PRINT_CONTROL_Msk = 0xc0
	// Position of PIN_POWER_SELECTION field.
	EFUSE_RD_REPEAT_DATA3_PIN_POWER_SELECTION_Pos = 0x8
	// Bit mask of PIN_POWER_SELECTION field.
	EFUSE_RD_REPEAT_DATA3_PIN_POWER_SELECTION_Msk = 0x100
	// Bit PIN_POWER_SELECTION.
	EFUSE_RD_REPEAT_DATA3_PIN_POWER_SELECTION = 0x100
	// Position of FLASH_TYPE field.
	EFUSE_RD_REPEAT_DATA3_FLASH_TYPE_Pos = 0x9
	// Bit mask of FLASH_TYPE field.
	EFUSE_RD_REPEAT_DATA3_FLASH_TYPE_Msk = 0x200
	// Bit FLASH_TYPE.
	EFUSE_RD_REPEAT_DATA3_FLASH_TYPE = 0x200
	// Position of FLASH_PAGE_SIZE field.
	EFUSE_RD_REPEAT_DATA3_FLASH_PAGE_SIZE_Pos = 0xa
	// Bit mask of FLASH_PAGE_SIZE field.
	EFUSE_RD_REPEAT_DATA3_FLASH_PAGE_SIZE_Msk = 0xc00
	// Position of FLASH_ECC_EN field.
	EFUSE_RD_REPEAT_DATA3_FLASH_ECC_EN_Pos = 0xc
	// Bit mask of FLASH_ECC_EN field.
	EFUSE_RD_REPEAT_DATA3_FLASH_ECC_EN_Msk = 0x1000
	// Bit FLASH_ECC_EN.
	EFUSE_RD_REPEAT_DATA3_FLASH_ECC_EN = 0x1000
	// Position of FORCE_SEND_RESUME field.
	EFUSE_RD_REPEAT_DATA3_FORCE_SEND_RESUME_Pos = 0xd
	// Bit mask of FORCE_SEND_RESUME field.
	EFUSE_RD_REPEAT_DATA3_FORCE_SEND_RESUME_Msk = 0x2000
	// Bit FORCE_SEND_RESUME.
	EFUSE_RD_REPEAT_DATA3_FORCE_SEND_RESUME = 0x2000
	// Position of SECURE_VERSION field.
	EFUSE_RD_REPEAT_DATA3_SECURE_VERSION_Pos = 0xe
	// Bit mask of SECURE_VERSION field.
	EFUSE_RD_REPEAT_DATA3_SECURE_VERSION_Msk = 0x3fffc000
	// Position of RPT4_RESERVED1 field.
	EFUSE_RD_REPEAT_DATA3_RPT4_RESERVED1_Pos = 0x1e
	// Bit mask of RPT4_RESERVED1 field.
	EFUSE_RD_REPEAT_DATA3_RPT4_RESERVED1_Msk = 0xc0000000

	// RD_REPEAT_DATA4: BLOCK0 data register 5.
	// Position of RPT4_RESERVED4 field.
	EFUSE_RD_REPEAT_DATA4_RPT4_RESERVED4_Pos = 0x0
	// Bit mask of RPT4_RESERVED4 field.
	EFUSE_RD_REPEAT_DATA4_RPT4_RESERVED4_Msk = 0xffffff

	// RD_MAC_SPI_SYS_0: BLOCK1 data register 0.
	// Position of MAC_0 field.
	EFUSE_RD_MAC_SPI_SYS_0_MAC_0_Pos = 0x0
	// Bit mask of MAC_0 field.
	EFUSE_RD_MAC_SPI_SYS_0_MAC_0_Msk = 0xffffffff

	// RD_MAC_SPI_SYS_1: BLOCK1 data register 1.
	// Position of MAC_1 field.
	EFUSE_RD_MAC_SPI_SYS_1_MAC_1_Pos = 0x0
	// Bit mask of MAC_1 field.
	EFUSE_RD_MAC_SPI_SYS_1_MAC_1_Msk = 0xffff
	// Position of SPI_PAD_CONF_0 field.
	EFUSE_RD_MAC_SPI_SYS_1_SPI_PAD_CONF_0_Pos = 0x10
	// Bit mask of SPI_PAD_CONF_0 field.
	EFUSE_RD_MAC_SPI_SYS_1_SPI_PAD_CONF_0_Msk = 0xffff0000

	// RD_MAC_SPI_SYS_2: BLOCK1 data register 2.
	// Position of SPI_PAD_CONF_1 field.
	EFUSE_RD_MAC_SPI_SYS_2_SPI_PAD_CONF_1_Pos = 0x0
	// Bit mask of SPI_PAD_CONF_1 field.
	EFUSE_RD_MAC_SPI_SYS_2_SPI_PAD_CONF_1_Msk = 0xffffffff

	// RD_MAC_SPI_SYS_3: BLOCK1 data register 3.
	// Position of SPI_PAD_CONF_2 field.
	EFUSE_RD_MAC_SPI_SYS_3_SPI_PAD_CONF_2_Pos = 0x0
	// Bit mask of SPI_PAD_CONF_2 field.
	EFUSE_RD_MAC_SPI_SYS_3_SPI_PAD_CONF_2_Msk = 0x3ffff
	// Position of SYS_DATA_PART0_0 field.
	EFUSE_RD_MAC_SPI_SYS_3_SYS_DATA_PART0_0_Pos = 0x12
	// Bit mask of SYS_DATA_PART0_0 field.
	EFUSE_RD_MAC_SPI_SYS_3_SYS_DATA_PART0_0_Msk = 0xfffc0000

	// RD_MAC_SPI_SYS_4: BLOCK1 data register 4.
	// Position of SYS_DATA_PART0_1 field.
	EFUSE_RD_MAC_SPI_SYS_4_SYS_DATA_PART0_1_Pos = 0x0
	// Bit mask of SYS_DATA_PART0_1 field.
	EFUSE_RD_MAC_SPI_SYS_4_SYS_DATA_PART0_1_Msk = 0xffffffff

	// RD_MAC_SPI_SYS_5: BLOCK1 data register 5.
	// Position of SYS_DATA_PART0_2 field.
	EFUSE_RD_MAC_SPI_SYS_5_SYS_DATA_PART0_2_Pos = 0x0
	// Bit mask of SYS_DATA_PART0_2 field.
	EFUSE_RD_MAC_SPI_SYS_5_SYS_DATA_PART0_2_Msk = 0xffffffff

	// RD_SYS_PART1_DATA0: Register 0 of BLOCK2 (system).
	// Position of SYS_DATA_PART1_0 field.
	EFUSE_RD_SYS_PART1_DATA0_SYS_DATA_PART1_0_Pos = 0x0
	// Bit mask of SYS_DATA_PART1_0 field.
	EFUSE_RD_SYS_PART1_DATA0_SYS_DATA_PART1_0_Msk = 0xffffffff

	// RD_SYS_PART1_DATA1: Register 1 of BLOCK2 (system).
	// Position of SYS_DATA_PART1_1 field.
	EFUSE_RD_SYS_PART1_DATA1_SYS_DATA_PART1_1_Pos = 0x0
	// Bit mask of SYS_DATA_PART1_1 field.
	EFUSE_RD_SYS_PART1_DATA1_SYS_DATA_PART1_1_Msk = 0xffffffff

	// RD_SYS_PART1_DATA2: Register 2 of BLOCK2 (system).
	// Position of SYS_DATA_PART1_2 field.
	EFUSE_RD_SYS_PART1_DATA2_SYS_DATA_PART1_2_Pos = 0x0
	// Bit mask of SYS_DATA_PART1_2 field.
	EFUSE_RD_SYS_PART1_DATA2_SYS_DATA_PART1_2_Msk = 0xffffffff

	// RD_SYS_PART1_DATA3: Register 3 of BLOCK2 (system).
	// Position of SYS_DATA_PART1_3 field.
	EFUSE_RD_SYS_PART1_DATA3_SYS_DATA_PART1_3_Pos = 0x0
	// Bit mask of SYS_DATA_PART1_3 field.
	EFUSE_RD_SYS_PART1_DATA3_SYS_DATA_PART1_3_Msk = 0xffffffff

	// RD_SYS_PART1_DATA4: Register 4 of BLOCK2 (system).
	// Position of SYS_DATA_PART1_4 field.
	EFUSE_RD_SYS_PART1_DATA4_SYS_DATA_PART1_4_Pos = 0x0
	// Bit mask of SYS_DATA_PART1_4 field.
	EFUSE_RD_SYS_PART1_DATA4_SYS_DATA_PART1_4_Msk = 0xffffffff

	// RD_SYS_PART1_DATA5: Register 5 of BLOCK2 (system).
	// Position of SYS_DATA_PART1_5 field.
	EFUSE_RD_SYS_PART1_DATA5_SYS_DATA_PART1_5_Pos = 0x0
	// Bit mask of SYS_DATA_PART1_5 field.
	EFUSE_RD_SYS_PART1_DATA5_SYS_DATA_PART1_5_Msk = 0xffffffff

	// RD_SYS_PART1_DATA6: Register 6 of BLOCK2 (system).
	// Position of SYS_DATA_PART1_6 field.
	EFUSE_RD_SYS_PART1_DATA6_SYS_DATA_PART1_6_Pos = 0x0
	// Bit mask of SYS_DATA_PART1_6 field.
	EFUSE_RD_SYS_PART1_DATA6_SYS_DATA_PART1_6_Msk = 0xffffffff

	// RD_SYS_PART1_DATA7: Register 7 of BLOCK2 (system).
	// Position of SYS_DATA_PART1_7 field.
	EFUSE_RD_SYS_PART1_DATA7_SYS_DATA_PART1_7_Pos = 0x0
	// Bit mask of SYS_DATA_PART1_7 field.
	EFUSE_RD_SYS_PART1_DATA7_SYS_DATA_PART1_7_Msk = 0xffffffff

	// RD_USR_DATA0: Register 0 of BLOCK3 (user).
	// Position of USR_DATA0 field.
	EFUSE_RD_USR_DATA0_USR_DATA0_Pos = 0x0
	// Bit mask of USR_DATA0 field.
	EFUSE_RD_USR_DATA0_USR_DATA0_Msk = 0xffffffff

	// RD_USR_DATA1: Register 1 of BLOCK3 (user).
	// Position of USR_DATA1 field.
	EFUSE_RD_USR_DATA1_USR_DATA1_Pos = 0x0
	// Bit mask of USR_DATA1 field.
	EFUSE_RD_USR_DATA1_USR_DATA1_Msk = 0xffffffff

	// RD_USR_DATA2: Register 2 of BLOCK3 (user).
	// Position of USR_DATA2 field.
	EFUSE_RD_USR_DATA2_USR_DATA2_Pos = 0x0
	// Bit mask of USR_DATA2 field.
	EFUSE_RD_USR_DATA2_USR_DATA2_Msk = 0xffffffff

	// RD_USR_DATA3: Register 3 of BLOCK3 (user).
	// Position of USR_DATA3 field.
	EFUSE_RD_USR_DATA3_USR_DATA3_Pos = 0x0
	// Bit mask of USR_DATA3 field.
	EFUSE_RD_USR_DATA3_USR_DATA3_Msk = 0xffffffff

	// RD_USR_DATA4: Register 4 of BLOCK3 (user).
	// Position of USR_DATA4 field.
	EFUSE_RD_USR_DATA4_USR_DATA4_Pos = 0x0
	// Bit mask of USR_DATA4 field.
	EFUSE_RD_USR_DATA4_USR_DATA4_Msk = 0xffffffff

	// RD_USR_DATA5: Register 5 of BLOCK3 (user).
	// Position of USR_DATA5 field.
	EFUSE_RD_USR_DATA5_USR_DATA5_Pos = 0x0
	// Bit mask of USR_DATA5 field.
	EFUSE_RD_USR_DATA5_USR_DATA5_Msk = 0xffffffff

	// RD_USR_DATA6: Register 6 of BLOCK3 (user).
	// Position of USR_DATA6 field.
	EFUSE_RD_USR_DATA6_USR_DATA6_Pos = 0x0
	// Bit mask of USR_DATA6 field.
	EFUSE_RD_USR_DATA6_USR_DATA6_Msk = 0xffffffff

	// RD_USR_DATA7: Register 7 of BLOCK3 (user).
	// Position of USR_DATA7 field.
	EFUSE_RD_USR_DATA7_USR_DATA7_Pos = 0x0
	// Bit mask of USR_DATA7 field.
	EFUSE_RD_USR_DATA7_USR_DATA7_Msk = 0xffffffff

	// RD_KEY0_DATA0: Register 0 of BLOCK4 (KEY0).
	// Position of KEY0_DATA0 field.
	EFUSE_RD_KEY0_DATA0_KEY0_DATA0_Pos = 0x0
	// Bit mask of KEY0_DATA0 field.
	EFUSE_RD_KEY0_DATA0_KEY0_DATA0_Msk = 0xffffffff

	// RD_KEY0_DATA1: Register 1 of BLOCK4 (KEY0).
	// Position of KEY0_DATA1 field.
	EFUSE_RD_KEY0_DATA1_KEY0_DATA1_Pos = 0x0
	// Bit mask of KEY0_DATA1 field.
	EFUSE_RD_KEY0_DATA1_KEY0_DATA1_Msk = 0xffffffff

	// RD_KEY0_DATA2: Register 2 of BLOCK4 (KEY0).
	// Position of KEY0_DATA2 field.
	EFUSE_RD_KEY0_DATA2_KEY0_DATA2_Pos = 0x0
	// Bit mask of KEY0_DATA2 field.
	EFUSE_RD_KEY0_DATA2_KEY0_DATA2_Msk = 0xffffffff

	// RD_KEY0_DATA3: Register 3 of BLOCK4 (KEY0).
	// Position of KEY0_DATA3 field.
	EFUSE_RD_KEY0_DATA3_KEY0_DATA3_Pos = 0x0
	// Bit mask of KEY0_DATA3 field.
	EFUSE_RD_KEY0_DATA3_KEY0_DATA3_Msk = 0xffffffff

	// RD_KEY0_DATA4: Register 4 of BLOCK4 (KEY0).
	// Position of KEY0_DATA4 field.
	EFUSE_RD_KEY0_DATA4_KEY0_DATA4_Pos = 0x0
	// Bit mask of KEY0_DATA4 field.
	EFUSE_RD_KEY0_DATA4_KEY0_DATA4_Msk = 0xffffffff

	// RD_KEY0_DATA5: Register 5 of BLOCK4 (KEY0).
	// Position of KEY0_DATA5 field.
	EFUSE_RD_KEY0_DATA5_KEY0_DATA5_Pos = 0x0
	// Bit mask of KEY0_DATA5 field.
	EFUSE_RD_KEY0_DATA5_KEY0_DATA5_Msk = 0xffffffff

	// RD_KEY0_DATA6: Register 6 of BLOCK4 (KEY0).
	// Position of KEY0_DATA6 field.
	EFUSE_RD_KEY0_DATA6_KEY0_DATA6_Pos = 0x0
	// Bit mask of KEY0_DATA6 field.
	EFUSE_RD_KEY0_DATA6_KEY0_DATA6_Msk = 0xffffffff

	// RD_KEY0_DATA7: Register 7 of BLOCK4 (KEY0).
	// Position of KEY0_DATA7 field.
	EFUSE_RD_KEY0_DATA7_KEY0_DATA7_Pos = 0x0
	// Bit mask of KEY0_DATA7 field.
	EFUSE_RD_KEY0_DATA7_KEY0_DATA7_Msk = 0xffffffff

	// RD_KEY1_DATA0: Register 0 of BLOCK5 (KEY1).
	// Position of KEY1_DATA0 field.
	EFUSE_RD_KEY1_DATA0_KEY1_DATA0_Pos = 0x0
	// Bit mask of KEY1_DATA0 field.
	EFUSE_RD_KEY1_DATA0_KEY1_DATA0_Msk = 0xffffffff

	// RD_KEY1_DATA1: Register 1 of BLOCK5 (KEY1).
	// Position of KEY1_DATA1 field.
	EFUSE_RD_KEY1_DATA1_KEY1_DATA1_Pos = 0x0
	// Bit mask of KEY1_DATA1 field.
	EFUSE_RD_KEY1_DATA1_KEY1_DATA1_Msk = 0xffffffff

	// RD_KEY1_DATA2: Register 2 of BLOCK5 (KEY1).
	// Position of KEY1_DATA2 field.
	EFUSE_RD_KEY1_DATA2_KEY1_DATA2_Pos = 0x0
	// Bit mask of KEY1_DATA2 field.
	EFUSE_RD_KEY1_DATA2_KEY1_DATA2_Msk = 0xffffffff

	// RD_KEY1_DATA3: Register 3 of BLOCK5 (KEY1).
	// Position of KEY1_DATA3 field.
	EFUSE_RD_KEY1_DATA3_KEY1_DATA3_Pos = 0x0
	// Bit mask of KEY1_DATA3 field.
	EFUSE_RD_KEY1_DATA3_KEY1_DATA3_Msk = 0xffffffff

	// RD_KEY1_DATA4: Register 4 of BLOCK5 (KEY1).
	// Position of KEY1_DATA4 field.
	EFUSE_RD_KEY1_DATA4_KEY1_DATA4_Pos = 0x0
	// Bit mask of KEY1_DATA4 field.
	EFUSE_RD_KEY1_DATA4_KEY1_DATA4_Msk = 0xffffffff

	// RD_KEY1_DATA5: Register 5 of BLOCK5 (KEY1).
	// Position of KEY1_DATA5 field.
	EFUSE_RD_KEY1_DATA5_KEY1_DATA5_Pos = 0x0
	// Bit mask of KEY1_DATA5 field.
	EFUSE_RD_KEY1_DATA5_KEY1_DATA5_Msk = 0xffffffff

	// RD_KEY1_DATA6: Register 6 of BLOCK5 (KEY1).
	// Position of KEY1_DATA6 field.
	EFUSE_RD_KEY1_DATA6_KEY1_DATA6_Pos = 0x0
	// Bit mask of KEY1_DATA6 field.
	EFUSE_RD_KEY1_DATA6_KEY1_DATA6_Msk = 0xffffffff

	// RD_KEY1_DATA7: Register 7 of BLOCK5 (KEY1).
	// Position of KEY1_DATA7 field.
	EFUSE_RD_KEY1_DATA7_KEY1_DATA7_Pos = 0x0
	// Bit mask of KEY1_DATA7 field.
	EFUSE_RD_KEY1_DATA7_KEY1_DATA7_Msk = 0xffffffff

	// RD_KEY2_DATA0: Register 0 of BLOCK6 (KEY2).
	// Position of KEY2_DATA0 field.
	EFUSE_RD_KEY2_DATA0_KEY2_DATA0_Pos = 0x0
	// Bit mask of KEY2_DATA0 field.
	EFUSE_RD_KEY2_DATA0_KEY2_DATA0_Msk = 0xffffffff

	// RD_KEY2_DATA1: Register 1 of BLOCK6 (KEY2).
	// Position of KEY2_DATA1 field.
	EFUSE_RD_KEY2_DATA1_KEY2_DATA1_Pos = 0x0
	// Bit mask of KEY2_DATA1 field.
	EFUSE_RD_KEY2_DATA1_KEY2_DATA1_Msk = 0xffffffff

	// RD_KEY2_DATA2: Register 2 of BLOCK6 (KEY2).
	// Position of KEY2_DATA2 field.
	EFUSE_RD_KEY2_DATA2_KEY2_DATA2_Pos = 0x0
	// Bit mask of KEY2_DATA2 field.
	EFUSE_RD_KEY2_DATA2_KEY2_DATA2_Msk = 0xffffffff

	// RD_KEY2_DATA3: Register 3 of BLOCK6 (KEY2).
	// Position of KEY2_DATA3 field.
	EFUSE_RD_KEY2_DATA3_KEY2_DATA3_Pos = 0x0
	// Bit mask of KEY2_DATA3 field.
	EFUSE_RD_KEY2_DATA3_KEY2_DATA3_Msk = 0xffffffff

	// RD_KEY2_DATA4: Register 4 of BLOCK6 (KEY2).
	// Position of KEY2_DATA4 field.
	EFUSE_RD_KEY2_DATA4_KEY2_DATA4_Pos = 0x0
	// Bit mask of KEY2_DATA4 field.
	EFUSE_RD_KEY2_DATA4_KEY2_DATA4_Msk = 0xffffffff

	// RD_KEY2_DATA5: Register 5 of BLOCK6 (KEY2).
	// Position of KEY2_DATA5 field.
	EFUSE_RD_KEY2_DATA5_KEY2_DATA5_Pos = 0x0
	// Bit mask of KEY2_DATA5 field.
	EFUSE_RD_KEY2_DATA5_KEY2_DATA5_Msk = 0xffffffff

	// RD_KEY2_DATA6: Register 6 of BLOCK6 (KEY2).
	// Position of KEY2_DATA6 field.
	EFUSE_RD_KEY2_DATA6_KEY2_DATA6_Pos = 0x0
	// Bit mask of KEY2_DATA6 field.
	EFUSE_RD_KEY2_DATA6_KEY2_DATA6_Msk = 0xffffffff

	// RD_KEY2_DATA7: Register 7 of BLOCK6 (KEY2).
	// Position of KEY2_DATA7 field.
	EFUSE_RD_KEY2_DATA7_KEY2_DATA7_Pos = 0x0
	// Bit mask of KEY2_DATA7 field.
	EFUSE_RD_KEY2_DATA7_KEY2_DATA7_Msk = 0xffffffff

	// RD_KEY3_DATA0: Register 0 of BLOCK7 (KEY3).
	// Position of KEY3_DATA0 field.
	EFUSE_RD_KEY3_DATA0_KEY3_DATA0_Pos = 0x0
	// Bit mask of KEY3_DATA0 field.
	EFUSE_RD_KEY3_DATA0_KEY3_DATA0_Msk = 0xffffffff

	// RD_KEY3_DATA1: Register 1 of BLOCK7 (KEY3).
	// Position of KEY3_DATA1 field.
	EFUSE_RD_KEY3_DATA1_KEY3_DATA1_Pos = 0x0
	// Bit mask of KEY3_DATA1 field.
	EFUSE_RD_KEY3_DATA1_KEY3_DATA1_Msk = 0xffffffff

	// RD_KEY3_DATA2: Register 2 of BLOCK7 (KEY3).
	// Position of KEY3_DATA2 field.
	EFUSE_RD_KEY3_DATA2_KEY3_DATA2_Pos = 0x0
	// Bit mask of KEY3_DATA2 field.
	EFUSE_RD_KEY3_DATA2_KEY3_DATA2_Msk = 0xffffffff

	// RD_KEY3_DATA3: Register 3 of BLOCK7 (KEY3).
	// Position of KEY3_DATA3 field.
	EFUSE_RD_KEY3_DATA3_KEY3_DATA3_Pos = 0x0
	// Bit mask of KEY3_DATA3 field.
	EFUSE_RD_KEY3_DATA3_KEY3_DATA3_Msk = 0xffffffff

	// RD_KEY3_DATA4: Register 4 of BLOCK7 (KEY3).
	// Position of KEY3_DATA4 field.
	EFUSE_RD_KEY3_DATA4_KEY3_DATA4_Pos = 0x0
	// Bit mask of KEY3_DATA4 field.
	EFUSE_RD_KEY3_DATA4_KEY3_DATA4_Msk = 0xffffffff

	// RD_KEY3_DATA5: Register 5 of BLOCK7 (KEY3).
	// Position of KEY3_DATA5 field.
	EFUSE_RD_KEY3_DATA5_KEY3_DATA5_Pos = 0x0
	// Bit mask of KEY3_DATA5 field.
	EFUSE_RD_KEY3_DATA5_KEY3_DATA5_Msk = 0xffffffff

	// RD_KEY3_DATA6: Register 6 of BLOCK7 (KEY3).
	// Position of KEY3_DATA6 field.
	EFUSE_RD_KEY3_DATA6_KEY3_DATA6_Pos = 0x0
	// Bit mask of KEY3_DATA6 field.
	EFUSE_RD_KEY3_DATA6_KEY3_DATA6_Msk = 0xffffffff

	// RD_KEY3_DATA7: Register 7 of BLOCK7 (KEY3).
	// Position of KEY3_DATA7 field.
	EFUSE_RD_KEY3_DATA7_KEY3_DATA7_Pos = 0x0
	// Bit mask of KEY3_DATA7 field.
	EFUSE_RD_KEY3_DATA7_KEY3_DATA7_Msk = 0xffffffff

	// RD_KEY4_DATA0: Register 0 of BLOCK8 (KEY4).
	// Position of KEY4_DATA0 field.
	EFUSE_RD_KEY4_DATA0_KEY4_DATA0_Pos = 0x0
	// Bit mask of KEY4_DATA0 field.
	EFUSE_RD_KEY4_DATA0_KEY4_DATA0_Msk = 0xffffffff

	// RD_KEY4_DATA1: Register 1 of BLOCK8 (KEY4).
	// Position of KEY4_DATA1 field.
	EFUSE_RD_KEY4_DATA1_KEY4_DATA1_Pos = 0x0
	// Bit mask of KEY4_DATA1 field.
	EFUSE_RD_KEY4_DATA1_KEY4_DATA1_Msk = 0xffffffff

	// RD_KEY4_DATA2: Register 2 of BLOCK8 (KEY4).
	// Position of KEY4_DATA2 field.
	EFUSE_RD_KEY4_DATA2_KEY4_DATA2_Pos = 0x0
	// Bit mask of KEY4_DATA2 field.
	EFUSE_RD_KEY4_DATA2_KEY4_DATA2_Msk = 0xffffffff

	// RD_KEY4_DATA3: Register 3 of BLOCK8 (KEY4).
	// Position of KEY4_DATA3 field.
	EFUSE_RD_KEY4_DATA3_KEY4_DATA3_Pos = 0x0
	// Bit mask of KEY4_DATA3 field.
	EFUSE_RD_KEY4_DATA3_KEY4_DATA3_Msk = 0xffffffff

	// RD_KEY4_DATA4: Register 4 of BLOCK8 (KEY4).
	// Position of KEY4_DATA4 field.
	EFUSE_RD_KEY4_DATA4_KEY4_DATA4_Pos = 0x0
	// Bit mask of KEY4_DATA4 field.
	EFUSE_RD_KEY4_DATA4_KEY4_DATA4_Msk = 0xffffffff

	// RD_KEY4_DATA5: Register 5 of BLOCK8 (KEY4).
	// Position of KEY4_DATA5 field.
	EFUSE_RD_KEY4_DATA5_KEY4_DATA5_Pos = 0x0
	// Bit mask of KEY4_DATA5 field.
	EFUSE_RD_KEY4_DATA5_KEY4_DATA5_Msk = 0xffffffff

	// RD_KEY4_DATA6: Register 6 of BLOCK8 (KEY4).
	// Position of KEY4_DATA6 field.
	EFUSE_RD_KEY4_DATA6_KEY4_DATA6_Pos = 0x0
	// Bit mask of KEY4_DATA6 field.
	EFUSE_RD_KEY4_DATA6_KEY4_DATA6_Msk = 0xffffffff

	// RD_KEY4_DATA7: Register 7 of BLOCK8 (KEY4).
	// Position of KEY4_DATA7 field.
	EFUSE_RD_KEY4_DATA7_KEY4_DATA7_Pos = 0x0
	// Bit mask of KEY4_DATA7 field.
	EFUSE_RD_KEY4_DATA7_KEY4_DATA7_Msk = 0xffffffff

	// RD_KEY5_DATA0: Register 0 of BLOCK9 (KEY5).
	// Position of KEY5_DATA0 field.
	EFUSE_RD_KEY5_DATA0_KEY5_DATA0_Pos = 0x0
	// Bit mask of KEY5_DATA0 field.
	EFUSE_RD_KEY5_DATA0_KEY5_DATA0_Msk = 0xffffffff

	// RD_KEY5_DATA1: Register 1 of BLOCK9 (KEY5).
	// Position of KEY5_DATA1 field.
	EFUSE_RD_KEY5_DATA1_KEY5_DATA1_Pos = 0x0
	// Bit mask of KEY5_DATA1 field.
	EFUSE_RD_KEY5_DATA1_KEY5_DATA1_Msk = 0xffffffff

	// RD_KEY5_DATA2: Register 2 of BLOCK9 (KEY5).
	// Position of KEY5_DATA2 field.
	EFUSE_RD_KEY5_DATA2_KEY5_DATA2_Pos = 0x0
	// Bit mask of KEY5_DATA2 field.
	EFUSE_RD_KEY5_DATA2_KEY5_DATA2_Msk = 0xffffffff

	// RD_KEY5_DATA3: Register 3 of BLOCK9 (KEY5).
	// Position of KEY5_DATA3 field.
	EFUSE_RD_KEY5_DATA3_KEY5_DATA3_Pos = 0x0
	// Bit mask of KEY5_DATA3 field.
	EFUSE_RD_KEY5_DATA3_KEY5_DATA3_Msk = 0xffffffff

	// RD_KEY5_DATA4: Register 4 of BLOCK9 (KEY5).
	// Position of KEY5_DATA4 field.
	EFUSE_RD_KEY5_DATA4_KEY5_DATA4_Pos = 0x0
	// Bit mask of KEY5_DATA4 field.
	EFUSE_RD_KEY5_DATA4_KEY5_DATA4_Msk = 0xffffffff

	// RD_KEY5_DATA5: Register 5 of BLOCK9 (KEY5).
	// Position of KEY5_DATA5 field.
	EFUSE_RD_KEY5_DATA5_KEY5_DATA5_Pos = 0x0
	// Bit mask of KEY5_DATA5 field.
	EFUSE_RD_KEY5_DATA5_KEY5_DATA5_Msk = 0xffffffff

	// RD_KEY5_DATA6: Register 6 of BLOCK9 (KEY5).
	// Position of KEY5_DATA6 field.
	EFUSE_RD_KEY5_DATA6_KEY5_DATA6_Pos = 0x0
	// Bit mask of KEY5_DATA6 field.
	EFUSE_RD_KEY5_DATA6_KEY5_DATA6_Msk = 0xffffffff

	// RD_KEY5_DATA7: Register 7 of BLOCK9 (KEY5).
	// Position of KEY5_DATA7 field.
	EFUSE_RD_KEY5_DATA7_KEY5_DATA7_Pos = 0x0
	// Bit mask of KEY5_DATA7 field.
	EFUSE_RD_KEY5_DATA7_KEY5_DATA7_Msk = 0xffffffff

	// RD_SYS_PART2_DATA0: Register 0 of BLOCK10 (system).
	// Position of SYS_DATA_PART2_0 field.
	EFUSE_RD_SYS_PART2_DATA0_SYS_DATA_PART2_0_Pos = 0x0
	// Bit mask of SYS_DATA_PART2_0 field.
	EFUSE_RD_SYS_PART2_DATA0_SYS_DATA_PART2_0_Msk = 0xffffffff

	// RD_SYS_PART2_DATA1: Register 1 of BLOCK9 (KEY5).
	// Position of SYS_DATA_PART2_1 field.
	EFUSE_RD_SYS_PART2_DATA1_SYS_DATA_PART2_1_Pos = 0x0
	// Bit mask of SYS_DATA_PART2_1 field.
	EFUSE_RD_SYS_PART2_DATA1_SYS_DATA_PART2_1_Msk = 0xffffffff

	// RD_SYS_PART2_DATA2: Register 2 of BLOCK10 (system).
	// Position of SYS_DATA_PART2_2 field.
	EFUSE_RD_SYS_PART2_DATA2_SYS_DATA_PART2_2_Pos = 0x0
	// Bit mask of SYS_DATA_PART2_2 field.
	EFUSE_RD_SYS_PART2_DATA2_SYS_DATA_PART2_2_Msk = 0xffffffff

	// RD_SYS_PART2_DATA3: Register 3 of BLOCK10 (system).
	// Position of SYS_DATA_PART2_3 field.
	EFUSE_RD_SYS_PART2_DATA3_SYS_DATA_PART2_3_Pos = 0x0
	// Bit mask of SYS_DATA_PART2_3 field.
	EFUSE_RD_SYS_PART2_DATA3_SYS_DATA_PART2_3_Msk = 0xffffffff

	// RD_SYS_PART2_DATA4: Register 4 of BLOCK10 (system).
	// Position of SYS_DATA_PART2_4 field.
	EFUSE_RD_SYS_PART2_DATA4_SYS_DATA_PART2_4_Pos = 0x0
	// Bit mask of SYS_DATA_PART2_4 field.
	EFUSE_RD_SYS_PART2_DATA4_SYS_DATA_PART2_4_Msk = 0xffffffff

	// RD_SYS_PART2_DATA5: Register 5 of BLOCK10 (system).
	// Position of SYS_DATA_PART2_5 field.
	EFUSE_RD_SYS_PART2_DATA5_SYS_DATA_PART2_5_Pos = 0x0
	// Bit mask of SYS_DATA_PART2_5 field.
	EFUSE_RD_SYS_PART2_DATA5_SYS_DATA_PART2_5_Msk = 0xffffffff

	// RD_SYS_PART2_DATA6: Register 6 of BLOCK10 (system).
	// Position of SYS_DATA_PART2_6 field.
	EFUSE_RD_SYS_PART2_DATA6_SYS_DATA_PART2_6_Pos = 0x0
	// Bit mask of SYS_DATA_PART2_6 field.
	EFUSE_RD_SYS_PART2_DATA6_SYS_DATA_PART2_6_Msk = 0xffffffff

	// RD_SYS_PART2_DATA7: Register 7 of BLOCK10 (system).
	// Position of SYS_DATA_PART2_7 field.
	EFUSE_RD_SYS_PART2_DATA7_SYS_DATA_PART2_7_Pos = 0x0
	// Bit mask of SYS_DATA_PART2_7 field.
	EFUSE_RD_SYS_PART2_DATA7_SYS_DATA_PART2_7_Msk = 0xffffffff

	// RD_REPEAT_ERR0: Programming error record register 0 of BLOCK0.
	// Position of RD_DIS_ERR field.
	EFUSE_RD_REPEAT_ERR0_RD_DIS_ERR_Pos = 0x0
	// Bit mask of RD_DIS_ERR field.
	EFUSE_RD_REPEAT_ERR0_RD_DIS_ERR_Msk = 0x7f
	// Position of DIS_RTC_RAM_BOOT_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_RTC_RAM_BOOT_ERR_Pos = 0x7
	// Bit mask of DIS_RTC_RAM_BOOT_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_RTC_RAM_BOOT_ERR_Msk = 0x80
	// Bit DIS_RTC_RAM_BOOT_ERR.
	EFUSE_RD_REPEAT_ERR0_DIS_RTC_RAM_BOOT_ERR = 0x80
	// Position of DIS_ICACHE_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_ICACHE_ERR_Pos = 0x8
	// Bit mask of DIS_ICACHE_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_ICACHE_ERR_Msk = 0x100
	// Bit DIS_ICACHE_ERR.
	EFUSE_RD_REPEAT_ERR0_DIS_ICACHE_ERR = 0x100
	// Position of DIS_USB_JTAG_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_USB_JTAG_ERR_Pos = 0x9
	// Bit mask of DIS_USB_JTAG_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_USB_JTAG_ERR_Msk = 0x200
	// Bit DIS_USB_JTAG_ERR.
	EFUSE_RD_REPEAT_ERR0_DIS_USB_JTAG_ERR = 0x200
	// Position of DIS_DOWNLOAD_ICACHE_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_DOWNLOAD_ICACHE_ERR_Pos = 0xa
	// Bit mask of DIS_DOWNLOAD_ICACHE_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_DOWNLOAD_ICACHE_ERR_Msk = 0x400
	// Bit DIS_DOWNLOAD_ICACHE_ERR.
	EFUSE_RD_REPEAT_ERR0_DIS_DOWNLOAD_ICACHE_ERR = 0x400
	// Position of DIS_USB_DEVICE_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_USB_DEVICE_ERR_Pos = 0xb
	// Bit mask of DIS_USB_DEVICE_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_USB_DEVICE_ERR_Msk = 0x800
	// Bit DIS_USB_DEVICE_ERR.
	EFUSE_RD_REPEAT_ERR0_DIS_USB_DEVICE_ERR = 0x800
	// Position of DIS_FORCE_DOWNLOAD_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_FORCE_DOWNLOAD_ERR_Pos = 0xc
	// Bit mask of DIS_FORCE_DOWNLOAD_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_FORCE_DOWNLOAD_ERR_Msk = 0x1000
	// Bit DIS_FORCE_DOWNLOAD_ERR.
	EFUSE_RD_REPEAT_ERR0_DIS_FORCE_DOWNLOAD_ERR = 0x1000
	// Position of RPT4_RESERVED6_ERR field.
	EFUSE_RD_REPEAT_ERR0_RPT4_RESERVED6_ERR_Pos = 0xd
	// Bit mask of RPT4_RESERVED6_ERR field.
	EFUSE_RD_REPEAT_ERR0_RPT4_RESERVED6_ERR_Msk = 0x2000
	// Bit RPT4_RESERVED6_ERR.
	EFUSE_RD_REPEAT_ERR0_RPT4_RESERVED6_ERR = 0x2000
	// Position of DIS_CAN_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_CAN_ERR_Pos = 0xe
	// Bit mask of DIS_CAN_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_CAN_ERR_Msk = 0x4000
	// Bit DIS_CAN_ERR.
	EFUSE_RD_REPEAT_ERR0_DIS_CAN_ERR = 0x4000
	// Position of JTAG_SEL_ENABLE_ERR field.
	EFUSE_RD_REPEAT_ERR0_JTAG_SEL_ENABLE_ERR_Pos = 0xf
	// Bit mask of JTAG_SEL_ENABLE_ERR field.
	EFUSE_RD_REPEAT_ERR0_JTAG_SEL_ENABLE_ERR_Msk = 0x8000
	// Bit JTAG_SEL_ENABLE_ERR.
	EFUSE_RD_REPEAT_ERR0_JTAG_SEL_ENABLE_ERR = 0x8000
	// Position of SOFT_DIS_JTAG_ERR field.
	EFUSE_RD_REPEAT_ERR0_SOFT_DIS_JTAG_ERR_Pos = 0x10
	// Bit mask of SOFT_DIS_JTAG_ERR field.
	EFUSE_RD_REPEAT_ERR0_SOFT_DIS_JTAG_ERR_Msk = 0x70000
	// Position of DIS_PAD_JTAG_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_PAD_JTAG_ERR_Pos = 0x13
	// Bit mask of DIS_PAD_JTAG_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_PAD_JTAG_ERR_Msk = 0x80000
	// Bit DIS_PAD_JTAG_ERR.
	EFUSE_RD_REPEAT_ERR0_DIS_PAD_JTAG_ERR = 0x80000
	// Position of DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR_Pos = 0x14
	// Bit mask of DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR field.
	EFUSE_RD_REPEAT_ERR0_DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR_Msk = 0x100000
	// Bit DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR.
	EFUSE_RD_REPEAT_ERR0_DIS_DOWNLOAD_MANUAL_ENCRYPT_ERR = 0x100000
	// Position of USB_DREFH_ERR field.
	EFUSE_RD_REPEAT_ERR0_USB_DREFH_ERR_Pos = 0x15
	// Bit mask of USB_DREFH_ERR field.
	EFUSE_RD_REPEAT_ERR0_USB_DREFH_ERR_Msk = 0x600000
	// Position of USB_DREFL_ERR field.
	EFUSE_RD_REPEAT_ERR0_USB_DREFL_ERR_Pos = 0x17
	// Bit mask of USB_DREFL_ERR field.
	EFUSE_RD_REPEAT_ERR0_USB_DREFL_ERR_Msk = 0x1800000
	// Position of USB_EXCHG_PINS_ERR field.
	EFUSE_RD_REPEAT_ERR0_USB_EXCHG_PINS_ERR_Pos = 0x19
	// Bit mask of USB_EXCHG_PINS_ERR field.
	EFUSE_RD_REPEAT_ERR0_USB_EXCHG_PINS_ERR_Msk = 0x2000000
	// Bit USB_EXCHG_PINS_ERR.
	EFUSE_RD_REPEAT_ERR0_USB_EXCHG_PINS_ERR = 0x2000000
	// Position of VDD_SPI_AS_GPIO_ERR field.
	EFUSE_RD_REPEAT_ERR0_VDD_SPI_AS_GPIO_ERR_Pos = 0x1a
	// Bit mask of VDD_SPI_AS_GPIO_ERR field.
	EFUSE_RD_REPEAT_ERR0_VDD_SPI_AS_GPIO_ERR_Msk = 0x4000000
	// Bit VDD_SPI_AS_GPIO_ERR.
	EFUSE_RD_REPEAT_ERR0_VDD_SPI_AS_GPIO_ERR = 0x4000000
	// Position of BTLC_GPIO_ENABLE_ERR field.
	EFUSE_RD_REPEAT_ERR0_BTLC_GPIO_ENABLE_ERR_Pos = 0x1b
	// Bit mask of BTLC_GPIO_ENABLE_ERR field.
	EFUSE_RD_REPEAT_ERR0_BTLC_GPIO_ENABLE_ERR_Msk = 0x18000000
	// Position of POWERGLITCH_EN_ERR field.
	EFUSE_RD_REPEAT_ERR0_POWERGLITCH_EN_ERR_Pos = 0x1d
	// Bit mask of POWERGLITCH_EN_ERR field.
	EFUSE_RD_REPEAT_ERR0_POWERGLITCH_EN_ERR_Msk = 0x20000000
	// Bit POWERGLITCH_EN_ERR.
	EFUSE_RD_REPEAT_ERR0_POWERGLITCH_EN_ERR = 0x20000000
	// Position of POWER_GLITCH_DSENSE_ERR field.
	EFUSE_RD_REPEAT_ERR0_POWER_GLITCH_DSENSE_ERR_Pos = 0x1e
	// Bit mask of POWER_GLITCH_DSENSE_ERR field.
	EFUSE_RD_REPEAT_ERR0_POWER_GLITCH_DSENSE_ERR_Msk = 0xc0000000

	// RD_REPEAT_ERR1: Programming error record register 1 of BLOCK0.
	// Position of RPT4_RESERVED2_ERR field.
	EFUSE_RD_REPEAT_ERR1_RPT4_RESERVED2_ERR_Pos = 0x0
	// Bit mask of RPT4_RESERVED2_ERR field.
	EFUSE_RD_REPEAT_ERR1_RPT4_RESERVED2_ERR_Msk = 0xffff
	// Position of WDT_DELAY_SEL_ERR field.
	EFUSE_RD_REPEAT_ERR1_WDT_DELAY_SEL_ERR_Pos = 0x10
	// Bit mask of WDT_DELAY_SEL_ERR field.
	EFUSE_RD_REPEAT_ERR1_WDT_DELAY_SEL_ERR_Msk = 0x30000
	// Position of SPI_BOOT_CRYPT_CNT_ERR field.
	EFUSE_RD_REPEAT_ERR1_SPI_BOOT_CRYPT_CNT_ERR_Pos = 0x12
	// Bit mask of SPI_BOOT_CRYPT_CNT_ERR field.
	EFUSE_RD_REPEAT_ERR1_SPI_BOOT_CRYPT_CNT_ERR_Msk = 0x1c0000
	// Position of SECURE_BOOT_KEY_REVOKE0_ERR field.
	EFUSE_RD_REPEAT_ERR1_SECURE_BOOT_KEY_REVOKE0_ERR_Pos = 0x15
	// Bit mask of SECURE_BOOT_KEY_REVOKE0_ERR field.
	EFUSE_RD_REPEAT_ERR1_SECURE_BOOT_KEY_REVOKE0_ERR_Msk = 0x200000
	// Bit SECURE_BOOT_KEY_REVOKE0_ERR.
	EFUSE_RD_REPEAT_ERR1_SECURE_BOOT_KEY_REVOKE0_ERR = 0x200000
	// Position of SECURE_BOOT_KEY_REVOKE1_ERR field.
	EFUSE_RD_REPEAT_ERR1_SECURE_BOOT_KEY_REVOKE1_ERR_Pos = 0x16
	// Bit mask of SECURE_BOOT_KEY_REVOKE1_ERR field.
	EFUSE_RD_REPEAT_ERR1_SECURE_BOOT_KEY_REVOKE1_ERR_Msk = 0x400000
	// Bit SECURE_BOOT_KEY_REVOKE1_ERR.
	EFUSE_RD_REPEAT_ERR1_SECURE_BOOT_KEY_REVOKE1_ERR = 0x400000
	// Position of SECURE_BOOT_KEY_REVOKE2_ERR field.
	EFUSE_RD_REPEAT_ERR1_SECURE_BOOT_KEY_REVOKE2_ERR_Pos = 0x17
	// Bit mask of SECURE_BOOT_KEY_REVOKE2_ERR field.
	EFUSE_RD_REPEAT_ERR1_SECURE_BOOT_KEY_REVOKE2_ERR_Msk = 0x800000
	// Bit SECURE_BOOT_KEY_REVOKE2_ERR.
	EFUSE_RD_REPEAT_ERR1_SECURE_BOOT_KEY_REVOKE2_ERR = 0x800000
	// Position of KEY_PURPOSE_0_ERR field.
	EFUSE_RD_REPEAT_ERR1_KEY_PURPOSE_0_ERR_Pos = 0x18
	// Bit mask of KEY_PURPOSE_0_ERR field.
	EFUSE_RD_REPEAT_ERR1_KEY_PURPOSE_0_ERR_Msk = 0xf000000
	// Position of KEY_PURPOSE_1_ERR field.
	EFUSE_RD_REPEAT_ERR1_KEY_PURPOSE_1_ERR_Pos = 0x1c
	// Bit mask of KEY_PURPOSE_1_ERR field.
	EFUSE_RD_REPEAT_ERR1_KEY_PURPOSE_1_ERR_Msk = 0xf0000000

	// RD_REPEAT_ERR2: Programming error record register 2 of BLOCK0.
	// Position of KEY_PURPOSE_2_ERR field.
	EFUSE_RD_REPEAT_ERR2_KEY_PURPOSE_2_ERR_Pos = 0x0
	// Bit mask of KEY_PURPOSE_2_ERR field.
	EFUSE_RD_REPEAT_ERR2_KEY_PURPOSE_2_ERR_Msk = 0xf
	// Position of KEY_PURPOSE_3_ERR field.
	EFUSE_RD_REPEAT_ERR2_KEY_PURPOSE_3_ERR_Pos = 0x4
	// Bit mask of KEY_PURPOSE_3_ERR field.
	EFUSE_RD_REPEAT_ERR2_KEY_PURPOSE_3_ERR_Msk = 0xf0
	// Position of KEY_PURPOSE_4_ERR field.
	EFUSE_RD_REPEAT_ERR2_KEY_PURPOSE_4_ERR_Pos = 0x8
	// Bit mask of KEY_PURPOSE_4_ERR field.
	EFUSE_RD_REPEAT_ERR2_KEY_PURPOSE_4_ERR_Msk = 0xf00
	// Position of KEY_PURPOSE_5_ERR field.
	EFUSE_RD_REPEAT_ERR2_KEY_PURPOSE_5_ERR_Pos = 0xc
	// Bit mask of KEY_PURPOSE_5_ERR field.
	EFUSE_RD_REPEAT_ERR2_KEY_PURPOSE_5_ERR_Msk = 0xf000
	// Position of RPT4_RESERVED3_ERR field.
	EFUSE_RD_REPEAT_ERR2_RPT4_RESERVED3_ERR_Pos = 0x10
	// Bit mask of RPT4_RESERVED3_ERR field.
	EFUSE_RD_REPEAT_ERR2_RPT4_RESERVED3_ERR_Msk = 0xf0000
	// Position of SECURE_BOOT_EN_ERR field.
	EFUSE_RD_REPEAT_ERR2_SECURE_BOOT_EN_ERR_Pos = 0x14
	// Bit mask of SECURE_BOOT_EN_ERR field.
	EFUSE_RD_REPEAT_ERR2_SECURE_BOOT_EN_ERR_Msk = 0x100000
	// Bit SECURE_BOOT_EN_ERR.
	EFUSE_RD_REPEAT_ERR2_SECURE_BOOT_EN_ERR = 0x100000
	// Position of SECURE_BOOT_AGGRESSIVE_REVOKE_ERR field.
	EFUSE_RD_REPEAT_ERR2_SECURE_BOOT_AGGRESSIVE_REVOKE_ERR_Pos = 0x15
	// Bit mask of SECURE_BOOT_AGGRESSIVE_REVOKE_ERR field.
	EFUSE_RD_REPEAT_ERR2_SECURE_BOOT_AGGRESSIVE_REVOKE_ERR_Msk = 0x200000
	// Bit SECURE_BOOT_AGGRESSIVE_REVOKE_ERR.
	EFUSE_RD_REPEAT_ERR2_SECURE_BOOT_AGGRESSIVE_REVOKE_ERR = 0x200000
	// Position of RPT4_RESERVED0_ERR field.
	EFUSE_RD_REPEAT_ERR2_RPT4_RESERVED0_ERR_Pos = 0x16
	// Bit mask of RPT4_RESERVED0_ERR field.
	EFUSE_RD_REPEAT_ERR2_RPT4_RESERVED0_ERR_Msk = 0xfc00000
	// Position of FLASH_TPUW_ERR field.
	EFUSE_RD_REPEAT_ERR2_FLASH_TPUW_ERR_Pos = 0x1c
	// Bit mask of FLASH_TPUW_ERR field.
	EFUSE_RD_REPEAT_ERR2_FLASH_TPUW_ERR_Msk = 0xf0000000

	// RD_REPEAT_ERR3: Programming error record register 3 of BLOCK0.
	// Position of DIS_DOWNLOAD_MODE_ERR field.
	EFUSE_RD_REPEAT_ERR3_DIS_DOWNLOAD_MODE_ERR_Pos = 0x0
	// Bit mask of DIS_DOWNLOAD_MODE_ERR field.
	EFUSE_RD_REPEAT_ERR3_DIS_DOWNLOAD_MODE_ERR_Msk = 0x1
	// Bit DIS_DOWNLOAD_MODE_ERR.
	EFUSE_RD_REPEAT_ERR3_DIS_DOWNLOAD_MODE_ERR = 0x1
	// Position of DIS_LEGACY_SPI_BOOT_ERR field.
	EFUSE_RD_REPEAT_ERR3_DIS_LEGACY_SPI_BOOT_ERR_Pos = 0x1
	// Bit mask of DIS_LEGACY_SPI_BOOT_ERR field.
	EFUSE_RD_REPEAT_ERR3_DIS_LEGACY_SPI_BOOT_ERR_Msk = 0x2
	// Bit DIS_LEGACY_SPI_BOOT_ERR.
	EFUSE_RD_REPEAT_ERR3_DIS_LEGACY_SPI_BOOT_ERR = 0x2
	// Position of UART_PRINT_CHANNEL_ERR field.
	EFUSE_RD_REPEAT_ERR3_UART_PRINT_CHANNEL_ERR_Pos = 0x2
	// Bit mask of UART_PRINT_CHANNEL_ERR field.
	EFUSE_RD_REPEAT_ERR3_UART_PRINT_CHANNEL_ERR_Msk = 0x4
	// Bit UART_PRINT_CHANNEL_ERR.
	EFUSE_RD_REPEAT_ERR3_UART_PRINT_CHANNEL_ERR = 0x4
	// Position of FLASH_ECC_MODE_ERR field.
	EFUSE_RD_REPEAT_ERR3_FLASH_ECC_MODE_ERR_Pos = 0x3
	// Bit mask of FLASH_ECC_MODE_ERR field.
	EFUSE_RD_REPEAT_ERR3_FLASH_ECC_MODE_ERR_Msk = 0x8
	// Bit FLASH_ECC_MODE_ERR.
	EFUSE_RD_REPEAT_ERR3_FLASH_ECC_MODE_ERR = 0x8
	// Position of DIS_USB_DOWNLOAD_MODE_ERR field.
	EFUSE_RD_REPEAT_ERR3_DIS_USB_DOWNLOAD_MODE_ERR_Pos = 0x4
	// Bit mask of DIS_USB_DOWNLOAD_MODE_ERR field.
	EFUSE_RD_REPEAT_ERR3_DIS_USB_DOWNLOAD_MODE_ERR_Msk = 0x10
	// Bit DIS_USB_DOWNLOAD_MODE_ERR.
	EFUSE_RD_REPEAT_ERR3_DIS_USB_DOWNLOAD_MODE_ERR = 0x10
	// Position of ENABLE_SECURITY_DOWNLOAD_ERR field.
	EFUSE_RD_REPEAT_ERR3_ENABLE_SECURITY_DOWNLOAD_ERR_Pos = 0x5
	// Bit mask of ENABLE_SECURITY_DOWNLOAD_ERR field.
	EFUSE_RD_REPEAT_ERR3_ENABLE_SECURITY_DOWNLOAD_ERR_Msk = 0x20
	// Bit ENABLE_SECURITY_DOWNLOAD_ERR.
	EFUSE_RD_REPEAT_ERR3_ENABLE_SECURITY_DOWNLOAD_ERR = 0x20
	// Position of UART_PRINT_CONTROL_ERR field.
	EFUSE_RD_REPEAT_ERR3_UART_PRINT_CONTROL_ERR_Pos = 0x6
	// Bit mask of UART_PRINT_CONTROL_ERR field.
	EFUSE_RD_REPEAT_ERR3_UART_PRINT_CONTROL_ERR_Msk = 0xc0
	// Position of PIN_POWER_SELECTION_ERR field.
	EFUSE_RD_REPEAT_ERR3_PIN_POWER_SELECTION_ERR_Pos = 0x8
	// Bit mask of PIN_POWER_SELECTION_ERR field.
	EFUSE_RD_REPEAT_ERR3_PIN_POWER_SELECTION_ERR_Msk = 0x100
	// Bit PIN_POWER_SELECTION_ERR.
	EFUSE_RD_REPEAT_ERR3_PIN_POWER_SELECTION_ERR = 0x100
	// Position of FLASH_TYPE_ERR field.
	EFUSE_RD_REPEAT_ERR3_FLASH_TYPE_ERR_Pos = 0x9
	// Bit mask of FLASH_TYPE_ERR field.
	EFUSE_RD_REPEAT_ERR3_FLASH_TYPE_ERR_Msk = 0x200
	// Bit FLASH_TYPE_ERR.
	EFUSE_RD_REPEAT_ERR3_FLASH_TYPE_ERR = 0x200
	// Position of FLASH_PAGE_SIZE_ERR field.
	EFUSE_RD_REPEAT_ERR3_FLASH_PAGE_SIZE_ERR_Pos = 0xa
	// Bit mask of FLASH_PAGE_SIZE_ERR field.
	EFUSE_RD_REPEAT_ERR3_FLASH_PAGE_SIZE_ERR_Msk = 0xc00
	// Position of FLASH_ECC_EN_ERR field.
	EFUSE_RD_REPEAT_ERR3_FLASH_ECC_EN_ERR_Pos = 0xc
	// Bit mask of FLASH_ECC_EN_ERR field.
	EFUSE_RD_REPEAT_ERR3_FLASH_ECC_EN_ERR_Msk = 0x1000
	// Bit FLASH_ECC_EN_ERR.
	EFUSE_RD_REPEAT_ERR3_FLASH_ECC_EN_ERR = 0x1000
	// Position of FORCE_SEND_RESUME_ERR field.
	EFUSE_RD_REPEAT_ERR3_FORCE_SEND_RESUME_ERR_Pos = 0xd
	// Bit mask of FORCE_SEND_RESUME_ERR field.
	EFUSE_RD_REPEAT_ERR3_FORCE_SEND_RESUME_ERR_Msk = 0x2000
	// Bit FORCE_SEND_RESUME_ERR.
	EFUSE_RD_REPEAT_ERR3_FORCE_SEND_RESUME_ERR = 0x2000
	// Position of SECURE_VERSION_ERR field.
	EFUSE_RD_REPEAT_ERR3_SECURE_VERSION_ERR_Pos = 0xe
	// Bit mask of SECURE_VERSION_ERR field.
	EFUSE_RD_REPEAT_ERR3_SECURE_VERSION_ERR_Msk = 0x3fffc000
	// Position of RPT4_RESERVED1_ERR field.
	EFUSE_RD_REPEAT_ERR3_RPT4_RESERVED1_ERR_Pos = 0x1e
	// Bit mask of RPT4_RESERVED1_ERR field.
	EFUSE_RD_REPEAT_ERR3_RPT4_RESERVED1_ERR_Msk = 0xc0000000

	// RD_REPEAT_ERR4: Programming error record register 4 of BLOCK0.
	// Position of RPT4_RESERVED4_ERR field.
	EFUSE_RD_REPEAT_ERR4_RPT4_RESERVED4_ERR_Pos = 0x0
	// Bit mask of RPT4_RESERVED4_ERR field.
	EFUSE_RD_REPEAT_ERR4_RPT4_RESERVED4_ERR_Msk = 0xffffff

	// RD_RS_ERR0: Programming error record register 0 of BLOCK1-10.
	// Position of MAC_SPI_8M_ERR_NUM field.
	EFUSE_RD_RS_ERR0_MAC_SPI_8M_ERR_NUM_Pos = 0x0
	// Bit mask of MAC_SPI_8M_ERR_NUM field.
	EFUSE_RD_RS_ERR0_MAC_SPI_8M_ERR_NUM_Msk = 0x7
	// Position of MAC_SPI_8M_FAIL field.
	EFUSE_RD_RS_ERR0_MAC_SPI_8M_FAIL_Pos = 0x3
	// Bit mask of MAC_SPI_8M_FAIL field.
	EFUSE_RD_RS_ERR0_MAC_SPI_8M_FAIL_Msk = 0x8
	// Bit MAC_SPI_8M_FAIL.
	EFUSE_RD_RS_ERR0_MAC_SPI_8M_FAIL = 0x8
	// Position of SYS_PART1_NUM field.
	EFUSE_RD_RS_ERR0_SYS_PART1_NUM_Pos = 0x4
	// Bit mask of SYS_PART1_NUM field.
	EFUSE_RD_RS_ERR0_SYS_PART1_NUM_Msk = 0x70
	// Position of SYS_PART1_FAIL field.
	EFUSE_RD_RS_ERR0_SYS_PART1_FAIL_Pos = 0x7
	// Bit mask of SYS_PART1_FAIL field.
	EFUSE_RD_RS_ERR0_SYS_PART1_FAIL_Msk = 0x80
	// Bit SYS_PART1_FAIL.
	EFUSE_RD_RS_ERR0_SYS_PART1_FAIL = 0x80
	// Position of USR_DATA_ERR_NUM field.
	EFUSE_RD_RS_ERR0_USR_DATA_ERR_NUM_Pos = 0x8
	// Bit mask of USR_DATA_ERR_NUM field.
	EFUSE_RD_RS_ERR0_USR_DATA_ERR_NUM_Msk = 0x700
	// Position of USR_DATA_FAIL field.
	EFUSE_RD_RS_ERR0_USR_DATA_FAIL_Pos = 0xb
	// Bit mask of USR_DATA_FAIL field.
	EFUSE_RD_RS_ERR0_USR_DATA_FAIL_Msk = 0x800
	// Bit USR_DATA_FAIL.
	EFUSE_RD_RS_ERR0_USR_DATA_FAIL = 0x800
	// Position of KEY0_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY0_ERR_NUM_Pos = 0xc
	// Bit mask of KEY0_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY0_ERR_NUM_Msk = 0x7000
	// Position of KEY0_FAIL field.
	EFUSE_RD_RS_ERR0_KEY0_FAIL_Pos = 0xf
	// Bit mask of KEY0_FAIL field.
	EFUSE_RD_RS_ERR0_KEY0_FAIL_Msk = 0x8000
	// Bit KEY0_FAIL.
	EFUSE_RD_RS_ERR0_KEY0_FAIL = 0x8000
	// Position of KEY1_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY1_ERR_NUM_Pos = 0x10
	// Bit mask of KEY1_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY1_ERR_NUM_Msk = 0x70000
	// Position of KEY1_FAIL field.
	EFUSE_RD_RS_ERR0_KEY1_FAIL_Pos = 0x13
	// Bit mask of KEY1_FAIL field.
	EFUSE_RD_RS_ERR0_KEY1_FAIL_Msk = 0x80000
	// Bit KEY1_FAIL.
	EFUSE_RD_RS_ERR0_KEY1_FAIL = 0x80000
	// Position of KEY2_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY2_ERR_NUM_Pos = 0x14
	// Bit mask of KEY2_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY2_ERR_NUM_Msk = 0x700000
	// Position of KEY2_FAIL field.
	EFUSE_RD_RS_ERR0_KEY2_FAIL_Pos = 0x17
	// Bit mask of KEY2_FAIL field.
	EFUSE_RD_RS_ERR0_KEY2_FAIL_Msk = 0x800000
	// Bit KEY2_FAIL.
	EFUSE_RD_RS_ERR0_KEY2_FAIL = 0x800000
	// Position of KEY3_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY3_ERR_NUM_Pos = 0x18
	// Bit mask of KEY3_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY3_ERR_NUM_Msk = 0x7000000
	// Position of KEY3_FAIL field.
	EFUSE_RD_RS_ERR0_KEY3_FAIL_Pos = 0x1b
	// Bit mask of KEY3_FAIL field.
	EFUSE_RD_RS_ERR0_KEY3_FAIL_Msk = 0x8000000
	// Bit KEY3_FAIL.
	EFUSE_RD_RS_ERR0_KEY3_FAIL = 0x8000000
	// Position of KEY4_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY4_ERR_NUM_Pos = 0x1c
	// Bit mask of KEY4_ERR_NUM field.
	EFUSE_RD_RS_ERR0_KEY4_ERR_NUM_Msk = 0x70000000
	// Position of KEY4_FAIL field.
	EFUSE_RD_RS_ERR0_KEY4_FAIL_Pos = 0x1f
	// Bit mask of KEY4_FAIL field.
	EFUSE_RD_RS_ERR0_KEY4_FAIL_Msk = 0x80000000
	// Bit KEY4_FAIL.
	EFUSE_RD_RS_ERR0_KEY4_FAIL = 0x80000000

	// RD_RS_ERR1: Programming error record register 1 of BLOCK1-10.
	// Position of KEY5_ERR_NUM field.
	EFUSE_RD_RS_ERR1_KEY5_ERR_NUM_Pos = 0x0
	// Bit mask of KEY5_ERR_NUM field.
	EFUSE_RD_RS_ERR1_KEY5_ERR_NUM_Msk = 0x7
	// Position of KEY5_FAIL field.
	EFUSE_RD_RS_ERR1_KEY5_FAIL_Pos = 0x3
	// Bit mask of KEY5_FAIL field.
	EFUSE_RD_RS_ERR1_KEY5_FAIL_Msk = 0x8
	// Bit KEY5_FAIL.
	EFUSE_RD_RS_ERR1_KEY5_FAIL = 0x8
	// Position of SYS_PART2_ERR_NUM field.
	EFUSE_RD_RS_ERR1_SYS_PART2_ERR_NUM_Pos = 0x4
	// Bit mask of SYS_PART2_ERR_NUM field.
	EFUSE_RD_RS_ERR1_SYS_PART2_ERR_NUM_Msk = 0x70
	// Position of SYS_PART2_FAIL field.
	EFUSE_RD_RS_ERR1_SYS_PART2_FAIL_Pos = 0x7
	// Bit mask of SYS_PART2_FAIL field.
	EFUSE_RD_RS_ERR1_SYS_PART2_FAIL_Msk = 0x80
	// Bit SYS_PART2_FAIL.
	EFUSE_RD_RS_ERR1_SYS_PART2_FAIL = 0x80

	// CLK: eFuse clcok configuration register.
	// Position of EFUSE_MEM_FORCE_PD field.
	EFUSE_CLK_EFUSE_MEM_FORCE_PD_Pos = 0x0
	// Bit mask of EFUSE_MEM_FORCE_PD field.
	EFUSE_CLK_EFUSE_MEM_FORCE_PD_Msk = 0x1
	// Bit EFUSE_MEM_FORCE_PD.
	EFUSE_CLK_EFUSE_MEM_FORCE_PD = 0x1
	// Position of MEM_CLK_FORCE_ON field.
	EFUSE_CLK_MEM_CLK_FORCE_ON_Pos = 0x1
	// Bit mask of MEM_CLK_FORCE_ON field.
	EFUSE_CLK_MEM_CLK_FORCE_ON_Msk = 0x2
	// Bit MEM_CLK_FORCE_ON.
	EFUSE_CLK_MEM_CLK_FORCE_ON = 0x2
	// Position of EFUSE_MEM_FORCE_PU field.
	EFUSE_CLK_EFUSE_MEM_FORCE_PU_Pos = 0x2
	// Bit mask of EFUSE_MEM_FORCE_PU field.
	EFUSE_CLK_EFUSE_MEM_FORCE_PU_Msk = 0x4
	// Bit EFUSE_MEM_FORCE_PU.
	EFUSE_CLK_EFUSE_MEM_FORCE_PU = 0x4
	// Position of EN field.
	EFUSE_CLK_EN_Pos = 0x10
	// Bit mask of EN field.
	EFUSE_CLK_EN_Msk = 0x10000
	// Bit EN.
	EFUSE_CLK_EN = 0x10000

	// CONF: eFuse operation mode configuraiton register;
	// Position of OP_CODE field.
	EFUSE_CONF_OP_CODE_Pos = 0x0
	// Bit mask of OP_CODE field.
	EFUSE_CONF_OP_CODE_Msk = 0xffff

	// STATUS: eFuse status register.
	// Position of STATE field.
	EFUSE_STATUS_STATE_Pos = 0x0
	// Bit mask of STATE field.
	EFUSE_STATUS_STATE_Msk = 0xf
	// Position of OTP_LOAD_SW field.
	EFUSE_STATUS_OTP_LOAD_SW_Pos = 0x4
	// Bit mask of OTP_LOAD_SW field.
	EFUSE_STATUS_OTP_LOAD_SW_Msk = 0x10
	// Bit OTP_LOAD_SW.
	EFUSE_STATUS_OTP_LOAD_SW = 0x10
	// Position of OTP_VDDQ_C_SYNC2 field.
	EFUSE_STATUS_OTP_VDDQ_C_SYNC2_Pos = 0x5
	// Bit mask of OTP_VDDQ_C_SYNC2 field.
	EFUSE_STATUS_OTP_VDDQ_C_SYNC2_Msk = 0x20
	// Bit OTP_VDDQ_C_SYNC2.
	EFUSE_STATUS_OTP_VDDQ_C_SYNC2 = 0x20
	// Position of OTP_STROBE_SW field.
	EFUSE_STATUS_OTP_STROBE_SW_Pos = 0x6
	// Bit mask of OTP_STROBE_SW field.
	EFUSE_STATUS_OTP_STROBE_SW_Msk = 0x40
	// Bit OTP_STROBE_SW.
	EFUSE_STATUS_OTP_STROBE_SW = 0x40
	// Position of OTP_CSB_SW field.
	EFUSE_STATUS_OTP_CSB_SW_Pos = 0x7
	// Bit mask of OTP_CSB_SW field.
	EFUSE_STATUS_OTP_CSB_SW_Msk = 0x80
	// Bit OTP_CSB_SW.
	EFUSE_STATUS_OTP_CSB_SW = 0x80
	// Position of OTP_PGENB_SW field.
	EFUSE_STATUS_OTP_PGENB_SW_Pos = 0x8
	// Bit mask of OTP_PGENB_SW field.
	EFUSE_STATUS_OTP_PGENB_SW_Msk = 0x100
	// Bit OTP_PGENB_SW.
	EFUSE_STATUS_OTP_PGENB_SW = 0x100
	// Position of OTP_VDDQ_IS_SW field.
	EFUSE_STATUS_OTP_VDDQ_IS_SW_Pos = 0x9
	// Bit mask of OTP_VDDQ_IS_SW field.
	EFUSE_STATUS_OTP_VDDQ_IS_SW_Msk = 0x200
	// Bit OTP_VDDQ_IS_SW.
	EFUSE_STATUS_OTP_VDDQ_IS_SW = 0x200
	// Position of REPEAT_ERR_CNT field.
	EFUSE_STATUS_REPEAT_ERR_CNT_Pos = 0xa
	// Bit mask of REPEAT_ERR_CNT field.
	EFUSE_STATUS_REPEAT_ERR_CNT_Msk = 0x3fc00

	// CMD: eFuse command register.
	// Position of READ_CMD field.
	EFUSE_CMD_READ_CMD_Pos = 0x0
	// Bit mask of READ_CMD field.
	EFUSE_CMD_READ_CMD_Msk = 0x1
	// Bit READ_CMD.
	EFUSE_CMD_READ_CMD = 0x1
	// Position of PGM_CMD field.
	EFUSE_CMD_PGM_CMD_Pos = 0x1
	// Bit mask of PGM_CMD field.
	EFUSE_CMD_PGM_CMD_Msk = 0x2
	// Bit PGM_CMD.
	EFUSE_CMD_PGM_CMD = 0x2
	// Position of BLK_NUM field.
	EFUSE_CMD_BLK_NUM_Pos = 0x2
	// Bit mask of BLK_NUM field.
	EFUSE_CMD_BLK_NUM_Msk = 0x3c

	// INT_RAW: eFuse raw interrupt register.
	// Position of READ_DONE_INT_RAW field.
	EFUSE_INT_RAW_READ_DONE_INT_RAW_Pos = 0x0
	// Bit mask of READ_DONE_INT_RAW field.
	EFUSE_INT_RAW_READ_DONE_INT_RAW_Msk = 0x1
	// Bit READ_DONE_INT_RAW.
	EFUSE_INT_RAW_READ_DONE_INT_RAW = 0x1
	// Position of PGM_DONE_INT_RAW field.
	EFUSE_INT_RAW_PGM_DONE_INT_RAW_Pos = 0x1
	// Bit mask of PGM_DONE_INT_RAW field.
	EFUSE_INT_RAW_PGM_DONE_INT_RAW_Msk = 0x2
	// Bit PGM_DONE_INT_RAW.
	EFUSE_INT_RAW_PGM_DONE_INT_RAW = 0x2

	// INT_ST: eFuse interrupt status register.
	// Position of READ_DONE_INT_ST field.
	EFUSE_INT_ST_READ_DONE_INT_ST_Pos = 0x0
	// Bit mask of READ_DONE_INT_ST field.
	EFUSE_INT_ST_READ_DONE_INT_ST_Msk = 0x1
	// Bit READ_DONE_INT_ST.
	EFUSE_INT_ST_READ_DONE_INT_ST = 0x1
	// Position of PGM_DONE_INT_ST field.
	EFUSE_INT_ST_PGM_DONE_INT_ST_Pos = 0x1
	// Bit mask of PGM_DONE_INT_ST field.
	EFUSE_INT_ST_PGM_DONE_INT_ST_Msk = 0x2
	// Bit PGM_DONE_INT_ST.
	EFUSE_INT_ST_PGM_DONE_INT_ST = 0x2

	// INT_ENA: eFuse interrupt enable register.
	// Position of READ_DONE_INT_ENA field.
	EFUSE_INT_ENA_READ_DONE_INT_ENA_Pos = 0x0
	// Bit mask of READ_DONE_INT_ENA field.
	EFUSE_INT_ENA_READ_DONE_INT_ENA_Msk = 0x1
	// Bit READ_DONE_INT_ENA.
	EFUSE_INT_ENA_READ_DONE_INT_ENA = 0x1
	// Position of PGM_DONE_INT_ENA field.
	EFUSE_INT_ENA_PGM_DONE_INT_ENA_Pos = 0x1
	// Bit mask of PGM_DONE_INT_ENA field.
	EFUSE_INT_ENA_PGM_DONE_INT_ENA_Msk = 0x2
	// Bit PGM_DONE_INT_ENA.
	EFUSE_INT_ENA_PGM_DONE_INT_ENA = 0x2

	// INT_CLR: eFuse interrupt clear register.
	// Position of READ_DONE_INT_CLR field.
	EFUSE_INT_CLR_READ_DONE_INT_CLR_Pos = 0x0
	// Bit mask of READ_DONE_INT_CLR field.
	EFUSE_INT_CLR_READ_DONE_INT_CLR_Msk = 0x1
	// Bit READ_DONE_INT_CLR.
	EFUSE_INT_CLR_READ_DONE_INT_CLR = 0x1
	// Position of PGM_DONE_INT_CLR field.
	EFUSE_INT_CLR_PGM_DONE_INT_CLR_Pos = 0x1
	// Bit mask of PGM_DONE_INT_CLR field.
	EFUSE_INT_CLR_PGM_DONE_INT_CLR_Msk = 0x2
	// Bit PGM_DONE_INT_CLR.
	EFUSE_INT_CLR_PGM_DONE_INT_CLR = 0x2

	// DAC_CONF: Controls the eFuse programming voltage.
	// Position of DAC_CLK_DIV field.
	EFUSE_DAC_CONF_DAC_CLK_DIV_Pos = 0x0
	// Bit mask of DAC_CLK_DIV field.
	EFUSE_DAC_CONF_DAC_CLK_DIV_Msk = 0xff
	// Position of DAC_CLK_PAD_SEL field.
	EFUSE_DAC_CONF_DAC_CLK_PAD_SEL_Pos = 0x8
	// Bit mask of DAC_CLK_PAD_SEL field.
	EFUSE_DAC_CONF_DAC_CLK_PAD_SEL_Msk = 0x100
	// Bit DAC_CLK_PAD_SEL.
	EFUSE_DAC_CONF_DAC_CLK_PAD_SEL = 0x100
	// Position of DAC_NUM field.
	EFUSE_DAC_CONF_DAC_NUM_Pos = 0x9
	// Bit mask of DAC_NUM field.
	EFUSE_DAC_CONF_DAC_NUM_Msk = 0x1fe00
	// Position of OE_CLR field.
	EFUSE_DAC_CONF_OE_CLR_Pos = 0x11
	// Bit mask of OE_CLR field.
	EFUSE_DAC_CONF_OE_CLR_Msk = 0x20000
	// Bit OE_CLR.
	EFUSE_DAC_CONF_OE_CLR = 0x20000

	// RD_TIM_CONF: Configures read timing parameters.
	// Position of READ_INIT_NUM field.
	EFUSE_RD_TIM_CONF_READ_INIT_NUM_Pos = 0x18
	// Bit mask of READ_INIT_NUM field.
	EFUSE_RD_TIM_CONF_READ_INIT_NUM_Msk = 0xff000000

	// WR_TIM_CONF1: Configurarion register 1 of eFuse programming timing parameters.
	// Position of PWR_ON_NUM field.
	EFUSE_WR_TIM_CONF1_PWR_ON_NUM_Pos = 0x8
	// Bit mask of PWR_ON_NUM field.
	EFUSE_WR_TIM_CONF1_PWR_ON_NUM_Msk = 0xffff00

	// WR_TIM_CONF2: Configurarion register 2 of eFuse programming timing parameters.
	// Position of PWR_OFF_NUM field.
	EFUSE_WR_TIM_CONF2_PWR_OFF_NUM_Pos = 0x0
	// Bit mask of PWR_OFF_NUM field.
	EFUSE_WR_TIM_CONF2_PWR_OFF_NUM_Msk = 0xffff

	// DATE: eFuse version register.
	// Position of DATE field.
	EFUSE_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	EFUSE_DATE_DATE_Msk = 0xfffffff
)

// Bitfields for GPIO: Peripheral GPIO
const (
	// BT_SELECT: GPIO bit select register
	// Position of BT_SEL field.
	GPIO_BT_SELECT_BT_SEL_Pos = 0x0
	// Bit mask of BT_SEL field.
	GPIO_BT_SELECT_BT_SEL_Msk = 0xffffffff

	// OUT: GPIO output register
	// Position of DATA_ORIG field.
	GPIO_OUT_DATA_ORIG_Pos = 0x0
	// Bit mask of DATA_ORIG field.
	GPIO_OUT_DATA_ORIG_Msk = 0x3ffffff

	// OUT_W1TS: GPIO output set register
	// Position of OUT_W1TS field.
	GPIO_OUT_W1TS_OUT_W1TS_Pos = 0x0
	// Bit mask of OUT_W1TS field.
	GPIO_OUT_W1TS_OUT_W1TS_Msk = 0x3ffffff

	// OUT_W1TC: GPIO output clear register
	// Position of OUT_W1TC field.
	GPIO_OUT_W1TC_OUT_W1TC_Pos = 0x0
	// Bit mask of OUT_W1TC field.
	GPIO_OUT_W1TC_OUT_W1TC_Msk = 0x3ffffff

	// SDIO_SELECT: GPIO sdio select register
	// Position of SDIO_SEL field.
	GPIO_SDIO_SELECT_SDIO_SEL_Pos = 0x0
	// Bit mask of SDIO_SEL field.
	GPIO_SDIO_SELECT_SDIO_SEL_Msk = 0xff

	// ENABLE: GPIO output enable register
	// Position of DATA field.
	GPIO_ENABLE_DATA_Pos = 0x0
	// Bit mask of DATA field.
	GPIO_ENABLE_DATA_Msk = 0x3ffffff

	// ENABLE_W1TS: GPIO output enable set register
	// Position of ENABLE_W1TS field.
	GPIO_ENABLE_W1TS_ENABLE_W1TS_Pos = 0x0
	// Bit mask of ENABLE_W1TS field.
	GPIO_ENABLE_W1TS_ENABLE_W1TS_Msk = 0x3ffffff

	// ENABLE_W1TC: GPIO output enable clear register
	// Position of ENABLE_W1TC field.
	GPIO_ENABLE_W1TC_ENABLE_W1TC_Pos = 0x0
	// Bit mask of ENABLE_W1TC field.
	GPIO_ENABLE_W1TC_ENABLE_W1TC_Msk = 0x3ffffff

	// STRAP: pad strapping register
	// Position of STRAPPING field.
	GPIO_STRAP_STRAPPING_Pos = 0x0
	// Bit mask of STRAPPING field.
	GPIO_STRAP_STRAPPING_Msk = 0xffff

	// IN: GPIO input register
	// Position of DATA_NEXT field.
	GPIO_IN_DATA_NEXT_Pos = 0x0
	// Bit mask of DATA_NEXT field.
	GPIO_IN_DATA_NEXT_Msk = 0x3ffffff

	// STATUS: GPIO interrupt status register
	// Position of INTERRUPT field.
	GPIO_STATUS_INTERRUPT_Pos = 0x0
	// Bit mask of INTERRUPT field.
	GPIO_STATUS_INTERRUPT_Msk = 0x3ffffff

	// STATUS_W1TS: GPIO interrupt status set register
	// Position of STATUS_W1TS field.
	GPIO_STATUS_W1TS_STATUS_W1TS_Pos = 0x0
	// Bit mask of STATUS_W1TS field.
	GPIO_STATUS_W1TS_STATUS_W1TS_Msk = 0x3ffffff

	// STATUS_W1TC: GPIO interrupt status clear register
	// Position of STATUS_W1TC field.
	GPIO_STATUS_W1TC_STATUS_W1TC_Pos = 0x0
	// Bit mask of STATUS_W1TC field.
	GPIO_STATUS_W1TC_STATUS_W1TC_Msk = 0x3ffffff

	// PCPU_INT: GPIO PRO_CPU interrupt status register
	// Position of PROCPU_INT field.
	GPIO_PCPU_INT_PROCPU_INT_Pos = 0x0
	// Bit mask of PROCPU_INT field.
	GPIO_PCPU_INT_PROCPU_INT_Msk = 0x3ffffff

	// PCPU_NMI_INT: GPIO PRO_CPU(not shielded) interrupt status register
	// Position of PROCPU_NMI_INT field.
	GPIO_PCPU_NMI_INT_PROCPU_NMI_INT_Pos = 0x0
	// Bit mask of PROCPU_NMI_INT field.
	GPIO_PCPU_NMI_INT_PROCPU_NMI_INT_Msk = 0x3ffffff

	// CPUSDIO_INT: GPIO CPUSDIO interrupt status register
	// Position of SDIO_INT field.
	GPIO_CPUSDIO_INT_SDIO_INT_Pos = 0x0
	// Bit mask of SDIO_INT field.
	GPIO_CPUSDIO_INT_SDIO_INT_Msk = 0x3ffffff

	// PIN0: GPIO pin configuration register
	// Position of PIN_SYNC2_BYPASS field.
	GPIO_PIN_PIN_SYNC2_BYPASS_Pos = 0x0
	// Bit mask of PIN_SYNC2_BYPASS field.
	GPIO_PIN_PIN_SYNC2_BYPASS_Msk = 0x3
	// Position of PIN_PAD_DRIVER field.
	GPIO_PIN_PIN_PAD_DRIVER_Pos = 0x2
	// Bit mask of PIN_PAD_DRIVER field.
	GPIO_PIN_PIN_PAD_DRIVER_Msk = 0x4
	// Bit PIN_PAD_DRIVER.
	GPIO_PIN_PIN_PAD_DRIVER = 0x4
	// Position of PIN_SYNC1_BYPASS field.
	GPIO_PIN_PIN_SYNC1_BYPASS_Pos = 0x3
	// Bit mask of PIN_SYNC1_BYPASS field.
	GPIO_PIN_PIN_SYNC1_BYPASS_Msk = 0x18
	// Position of PIN_INT_TYPE field.
	GPIO_PIN_PIN_INT_TYPE_Pos = 0x7
	// Bit mask of PIN_INT_TYPE field.
	GPIO_PIN_PIN_INT_TYPE_Msk = 0x380
	// Position of PIN_WAKEUP_ENABLE field.
	GPIO_PIN_PIN_WAKEUP_ENABLE_Pos = 0xa
	// Bit mask of PIN_WAKEUP_ENABLE field.
	GPIO_PIN_PIN_WAKEUP_ENABLE_Msk = 0x400
	// Bit PIN_WAKEUP_ENABLE.
	GPIO_PIN_PIN_WAKEUP_ENABLE = 0x400
	// Position of PIN_CONFIG field.
	GPIO_PIN_PIN_CONFIG_Pos = 0xb
	// Bit mask of PIN_CONFIG field.
	GPIO_PIN_PIN_CONFIG_Msk = 0x1800
	// Position of PIN_INT_ENA field.
	GPIO_PIN_PIN_INT_ENA_Pos = 0xd
	// Bit mask of PIN_INT_ENA field.
	GPIO_PIN_PIN_INT_ENA_Msk = 0x3e000

	// STATUS_NEXT: GPIO interrupt source register
	// Position of STATUS_INTERRUPT_NEXT field.
	GPIO_STATUS_NEXT_STATUS_INTERRUPT_NEXT_Pos = 0x0
	// Bit mask of STATUS_INTERRUPT_NEXT field.
	GPIO_STATUS_NEXT_STATUS_INTERRUPT_NEXT_Msk = 0x3ffffff

	// FUNC0_IN_SEL_CFG: GPIO input function configuration register
	// Position of FUNC_IN_SEL field.
	GPIO_FUNC_IN_SEL_CFG_FUNC_IN_SEL_Pos = 0x0
	// Bit mask of FUNC_IN_SEL field.
	GPIO_FUNC_IN_SEL_CFG_FUNC_IN_SEL_Msk = 0x1f
	// Position of FUNC_IN_INV_SEL field.
	GPIO_FUNC_IN_SEL_CFG_FUNC_IN_INV_SEL_Pos = 0x5
	// Bit mask of FUNC_IN_INV_SEL field.
	GPIO_FUNC_IN_SEL_CFG_FUNC_IN_INV_SEL_Msk = 0x20
	// Bit FUNC_IN_INV_SEL.
	GPIO_FUNC_IN_SEL_CFG_FUNC_IN_INV_SEL = 0x20
	// Position of SIG_IN_SEL field.
	GPIO_FUNC_IN_SEL_CFG_SIG_IN_SEL_Pos = 0x6
	// Bit mask of SIG_IN_SEL field.
	GPIO_FUNC_IN_SEL_CFG_SIG_IN_SEL_Msk = 0x40
	// Bit SIG_IN_SEL.
	GPIO_FUNC_IN_SEL_CFG_SIG_IN_SEL = 0x40

	// FUNC0_OUT_SEL_CFG: GPIO output function select register
	// Position of FUNC_OUT_SEL field.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OUT_SEL_Pos = 0x0
	// Bit mask of FUNC_OUT_SEL field.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OUT_SEL_Msk = 0xff
	// Position of FUNC_OUT_INV_SEL field.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OUT_INV_SEL_Pos = 0x8
	// Bit mask of FUNC_OUT_INV_SEL field.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OUT_INV_SEL_Msk = 0x100
	// Bit FUNC_OUT_INV_SEL.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OUT_INV_SEL = 0x100
	// Position of FUNC_OEN_SEL field.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OEN_SEL_Pos = 0x9
	// Bit mask of FUNC_OEN_SEL field.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OEN_SEL_Msk = 0x200
	// Bit FUNC_OEN_SEL.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OEN_SEL = 0x200
	// Position of FUNC_OEN_INV_SEL field.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OEN_INV_SEL_Pos = 0xa
	// Bit mask of FUNC_OEN_INV_SEL field.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OEN_INV_SEL_Msk = 0x400
	// Bit FUNC_OEN_INV_SEL.
	GPIO_FUNC_OUT_SEL_CFG_FUNC_OEN_INV_SEL = 0x400

	// CLOCK_GATE: GPIO clock gate register
	// Position of CLK_EN field.
	GPIO_CLOCK_GATE_CLK_EN_Pos = 0x0
	// Bit mask of CLK_EN field.
	GPIO_CLOCK_GATE_CLK_EN_Msk = 0x1
	// Bit CLK_EN.
	GPIO_CLOCK_GATE_CLK_EN = 0x1

	// REG_DATE: GPIO version register
	// Position of REG_DATE field.
	GPIO_REG_DATE_REG_DATE_Pos = 0x0
	// Bit mask of REG_DATE field.
	GPIO_REG_DATE_REG_DATE_Msk = 0xfffffff
)

// Bitfields for GPIOSD: Peripheral GPIOSD
const (
	// SIGMADELTA0: Duty Cycle Configure Register of SDM%s
	// Position of SD0_IN field.
	GPIOSD_SIGMADELTA_SD0_IN_Pos = 0x0
	// Bit mask of SD0_IN field.
	GPIOSD_SIGMADELTA_SD0_IN_Msk = 0xff
	// Position of SD0_PRESCALE field.
	GPIOSD_SIGMADELTA_SD0_PRESCALE_Pos = 0x8
	// Bit mask of SD0_PRESCALE field.
	GPIOSD_SIGMADELTA_SD0_PRESCALE_Msk = 0xff00

	// SIGMADELTA_CG: Clock Gating Configure Register
	// Position of CLK_EN field.
	GPIOSD_SIGMADELTA_CG_CLK_EN_Pos = 0x1f
	// Bit mask of CLK_EN field.
	GPIOSD_SIGMADELTA_CG_CLK_EN_Msk = 0x80000000
	// Bit CLK_EN.
	GPIOSD_SIGMADELTA_CG_CLK_EN = 0x80000000

	// SIGMADELTA_MISC: MISC Register
	// Position of FUNCTION_CLK_EN field.
	GPIOSD_SIGMADELTA_MISC_FUNCTION_CLK_EN_Pos = 0x1e
	// Bit mask of FUNCTION_CLK_EN field.
	GPIOSD_SIGMADELTA_MISC_FUNCTION_CLK_EN_Msk = 0x40000000
	// Bit FUNCTION_CLK_EN.
	GPIOSD_SIGMADELTA_MISC_FUNCTION_CLK_EN = 0x40000000
	// Position of SPI_SWAP field.
	GPIOSD_SIGMADELTA_MISC_SPI_SWAP_Pos = 0x1f
	// Bit mask of SPI_SWAP field.
	GPIOSD_SIGMADELTA_MISC_SPI_SWAP_Msk = 0x80000000
	// Bit SPI_SWAP.
	GPIOSD_SIGMADELTA_MISC_SPI_SWAP = 0x80000000

	// SIGMADELTA_VERSION: Version Control Register
	// Position of GPIO_SD_DATE field.
	GPIOSD_SIGMADELTA_VERSION_GPIO_SD_DATE_Pos = 0x0
	// Bit mask of GPIO_SD_DATE field.
	GPIOSD_SIGMADELTA_VERSION_GPIO_SD_DATE_Msk = 0xfffffff
)

// Bitfields for HMAC: Peripheral HMAC
const (
	// SET_START: Process control register 0.
	// Position of SET_START field.
	HMAC_SET_START_SET_START_Pos = 0x0
	// Bit mask of SET_START field.
	HMAC_SET_START_SET_START_Msk = 0x1
	// Bit SET_START.
	HMAC_SET_START_SET_START = 0x1

	// SET_PARA_PURPOSE: Configure purpose.
	// Position of PURPOSE_SET field.
	HMAC_SET_PARA_PURPOSE_PURPOSE_SET_Pos = 0x0
	// Bit mask of PURPOSE_SET field.
	HMAC_SET_PARA_PURPOSE_PURPOSE_SET_Msk = 0xf

	// SET_PARA_KEY: Configure key.
	// Position of KEY_SET field.
	HMAC_SET_PARA_KEY_KEY_SET_Pos = 0x0
	// Bit mask of KEY_SET field.
	HMAC_SET_PARA_KEY_KEY_SET_Msk = 0x7

	// SET_PARA_FINISH: Finish initial configuration.
	// Position of SET_PARA_END field.
	HMAC_SET_PARA_FINISH_SET_PARA_END_Pos = 0x0
	// Bit mask of SET_PARA_END field.
	HMAC_SET_PARA_FINISH_SET_PARA_END_Msk = 0x1
	// Bit SET_PARA_END.
	HMAC_SET_PARA_FINISH_SET_PARA_END = 0x1

	// SET_MESSAGE_ONE: Process control register 1.
	// Position of SET_TEXT_ONE field.
	HMAC_SET_MESSAGE_ONE_SET_TEXT_ONE_Pos = 0x0
	// Bit mask of SET_TEXT_ONE field.
	HMAC_SET_MESSAGE_ONE_SET_TEXT_ONE_Msk = 0x1
	// Bit SET_TEXT_ONE.
	HMAC_SET_MESSAGE_ONE_SET_TEXT_ONE = 0x1

	// SET_MESSAGE_ING: Process control register 2.
	// Position of SET_TEXT_ING field.
	HMAC_SET_MESSAGE_ING_SET_TEXT_ING_Pos = 0x0
	// Bit mask of SET_TEXT_ING field.
	HMAC_SET_MESSAGE_ING_SET_TEXT_ING_Msk = 0x1
	// Bit SET_TEXT_ING.
	HMAC_SET_MESSAGE_ING_SET_TEXT_ING = 0x1

	// SET_MESSAGE_END: Process control register 3.
	// Position of SET_TEXT_END field.
	HMAC_SET_MESSAGE_END_SET_TEXT_END_Pos = 0x0
	// Bit mask of SET_TEXT_END field.
	HMAC_SET_MESSAGE_END_SET_TEXT_END_Msk = 0x1
	// Bit SET_TEXT_END.
	HMAC_SET_MESSAGE_END_SET_TEXT_END = 0x1

	// SET_RESULT_FINISH: Process control register 4.
	// Position of SET_RESULT_END field.
	HMAC_SET_RESULT_FINISH_SET_RESULT_END_Pos = 0x0
	// Bit mask of SET_RESULT_END field.
	HMAC_SET_RESULT_FINISH_SET_RESULT_END_Msk = 0x1
	// Bit SET_RESULT_END.
	HMAC_SET_RESULT_FINISH_SET_RESULT_END = 0x1

	// SET_INVALIDATE_JTAG: Invalidate register 0.
	// Position of SET_INVALIDATE_JTAG field.
	HMAC_SET_INVALIDATE_JTAG_SET_INVALIDATE_JTAG_Pos = 0x0
	// Bit mask of SET_INVALIDATE_JTAG field.
	HMAC_SET_INVALIDATE_JTAG_SET_INVALIDATE_JTAG_Msk = 0x1
	// Bit SET_INVALIDATE_JTAG.
	HMAC_SET_INVALIDATE_JTAG_SET_INVALIDATE_JTAG = 0x1

	// SET_INVALIDATE_DS: Invalidate register 1.
	// Position of SET_INVALIDATE_DS field.
	HMAC_SET_INVALIDATE_DS_SET_INVALIDATE_DS_Pos = 0x0
	// Bit mask of SET_INVALIDATE_DS field.
	HMAC_SET_INVALIDATE_DS_SET_INVALIDATE_DS_Msk = 0x1
	// Bit SET_INVALIDATE_DS.
	HMAC_SET_INVALIDATE_DS_SET_INVALIDATE_DS = 0x1

	// QUERY_ERROR: Error register.
	// Position of QUREY_CHECK field.
	HMAC_QUERY_ERROR_QUREY_CHECK_Pos = 0x0
	// Bit mask of QUREY_CHECK field.
	HMAC_QUERY_ERROR_QUREY_CHECK_Msk = 0x1
	// Bit QUREY_CHECK.
	HMAC_QUERY_ERROR_QUREY_CHECK = 0x1

	// QUERY_BUSY: Busy register.
	// Position of BUSY_STATE field.
	HMAC_QUERY_BUSY_BUSY_STATE_Pos = 0x0
	// Bit mask of BUSY_STATE field.
	HMAC_QUERY_BUSY_BUSY_STATE_Msk = 0x1
	// Bit BUSY_STATE.
	HMAC_QUERY_BUSY_BUSY_STATE = 0x1

	// SET_MESSAGE_PAD: Process control register 5.
	// Position of SET_TEXT_PAD field.
	HMAC_SET_MESSAGE_PAD_SET_TEXT_PAD_Pos = 0x0
	// Bit mask of SET_TEXT_PAD field.
	HMAC_SET_MESSAGE_PAD_SET_TEXT_PAD_Msk = 0x1
	// Bit SET_TEXT_PAD.
	HMAC_SET_MESSAGE_PAD_SET_TEXT_PAD = 0x1

	// ONE_BLOCK: Process control register 6.
	// Position of SET_ONE_BLOCK field.
	HMAC_ONE_BLOCK_SET_ONE_BLOCK_Pos = 0x0
	// Bit mask of SET_ONE_BLOCK field.
	HMAC_ONE_BLOCK_SET_ONE_BLOCK_Msk = 0x1
	// Bit SET_ONE_BLOCK.
	HMAC_ONE_BLOCK_SET_ONE_BLOCK = 0x1

	// SOFT_JTAG_CTRL: Jtag register 0.
	// Position of SOFT_JTAG_CTRL field.
	HMAC_SOFT_JTAG_CTRL_SOFT_JTAG_CTRL_Pos = 0x0
	// Bit mask of SOFT_JTAG_CTRL field.
	HMAC_SOFT_JTAG_CTRL_SOFT_JTAG_CTRL_Msk = 0x1
	// Bit SOFT_JTAG_CTRL.
	HMAC_SOFT_JTAG_CTRL_SOFT_JTAG_CTRL = 0x1

	// WR_JTAG: Jtag register 1.
	// Position of WR_JTAG field.
	HMAC_WR_JTAG_WR_JTAG_Pos = 0x0
	// Bit mask of WR_JTAG field.
	HMAC_WR_JTAG_WR_JTAG_Msk = 0xffffffff
)

// Bitfields for I2C: Peripheral I2C
const (
	// SCL_LOW_PERIOD: I2C_SCL_LOW_PERIOD_REG
	// Position of SCL_LOW_PERIOD field.
	I2C_SCL_LOW_PERIOD_SCL_LOW_PERIOD_Pos = 0x0
	// Bit mask of SCL_LOW_PERIOD field.
	I2C_SCL_LOW_PERIOD_SCL_LOW_PERIOD_Msk = 0x1ff

	// CTR: I2C_CTR_REG
	// Position of SDA_FORCE_OUT field.
	I2C_CTR_SDA_FORCE_OUT_Pos = 0x0
	// Bit mask of SDA_FORCE_OUT field.
	I2C_CTR_SDA_FORCE_OUT_Msk = 0x1
	// Bit SDA_FORCE_OUT.
	I2C_CTR_SDA_FORCE_OUT = 0x1
	// Position of SCL_FORCE_OUT field.
	I2C_CTR_SCL_FORCE_OUT_Pos = 0x1
	// Bit mask of SCL_FORCE_OUT field.
	I2C_CTR_SCL_FORCE_OUT_Msk = 0x2
	// Bit SCL_FORCE_OUT.
	I2C_CTR_SCL_FORCE_OUT = 0x2
	// Position of SAMPLE_SCL_LEVEL field.
	I2C_CTR_SAMPLE_SCL_LEVEL_Pos = 0x2
	// Bit mask of SAMPLE_SCL_LEVEL field.
	I2C_CTR_SAMPLE_SCL_LEVEL_Msk = 0x4
	// Bit SAMPLE_SCL_LEVEL.
	I2C_CTR_SAMPLE_SCL_LEVEL = 0x4
	// Position of RX_FULL_ACK_LEVEL field.
	I2C_CTR_RX_FULL_ACK_LEVEL_Pos = 0x3
	// Bit mask of RX_FULL_ACK_LEVEL field.
	I2C_CTR_RX_FULL_ACK_LEVEL_Msk = 0x8
	// Bit RX_FULL_ACK_LEVEL.
	I2C_CTR_RX_FULL_ACK_LEVEL = 0x8
	// Position of MS_MODE field.
	I2C_CTR_MS_MODE_Pos = 0x4
	// Bit mask of MS_MODE field.
	I2C_CTR_MS_MODE_Msk = 0x10
	// Bit MS_MODE.
	I2C_CTR_MS_MODE = 0x10
	// Position of TRANS_START field.
	I2C_CTR_TRANS_START_Pos = 0x5
	// Bit mask of TRANS_START field.
	I2C_CTR_TRANS_START_Msk = 0x20
	// Bit TRANS_START.
	I2C_CTR_TRANS_START = 0x20
	// Position of TX_LSB_FIRST field.
	I2C_CTR_TX_LSB_FIRST_Pos = 0x6
	// Bit mask of TX_LSB_FIRST field.
	I2C_CTR_TX_LSB_FIRST_Msk = 0x40
	// Bit TX_LSB_FIRST.
	I2C_CTR_TX_LSB_FIRST = 0x40
	// Position of RX_LSB_FIRST field.
	I2C_CTR_RX_LSB_FIRST_Pos = 0x7
	// Bit mask of RX_LSB_FIRST field.
	I2C_CTR_RX_LSB_FIRST_Msk = 0x80
	// Bit RX_LSB_FIRST.
	I2C_CTR_RX_LSB_FIRST = 0x80
	// Position of CLK_EN field.
	I2C_CTR_CLK_EN_Pos = 0x8
	// Bit mask of CLK_EN field.
	I2C_CTR_CLK_EN_Msk = 0x100
	// Bit CLK_EN.
	I2C_CTR_CLK_EN = 0x100
	// Position of ARBITRATION_EN field.
	I2C_CTR_ARBITRATION_EN_Pos = 0x9
	// Bit mask of ARBITRATION_EN field.
	I2C_CTR_ARBITRATION_EN_Msk = 0x200
	// Bit ARBITRATION_EN.
	I2C_CTR_ARBITRATION_EN = 0x200
	// Position of FSM_RST field.
	I2C_CTR_FSM_RST_Pos = 0xa
	// Bit mask of FSM_RST field.
	I2C_CTR_FSM_RST_Msk = 0x400
	// Bit FSM_RST.
	I2C_CTR_FSM_RST = 0x400
	// Position of CONF_UPGATE field.
	I2C_CTR_CONF_UPGATE_Pos = 0xb
	// Bit mask of CONF_UPGATE field.
	I2C_CTR_CONF_UPGATE_Msk = 0x800
	// Bit CONF_UPGATE.
	I2C_CTR_CONF_UPGATE = 0x800
	// Position of SLV_TX_AUTO_START_EN field.
	I2C_CTR_SLV_TX_AUTO_START_EN_Pos = 0xc
	// Bit mask of SLV_TX_AUTO_START_EN field.
	I2C_CTR_SLV_TX_AUTO_START_EN_Msk = 0x1000
	// Bit SLV_TX_AUTO_START_EN.
	I2C_CTR_SLV_TX_AUTO_START_EN = 0x1000
	// Position of ADDR_10BIT_RW_CHECK_EN field.
	I2C_CTR_ADDR_10BIT_RW_CHECK_EN_Pos = 0xd
	// Bit mask of ADDR_10BIT_RW_CHECK_EN field.
	I2C_CTR_ADDR_10BIT_RW_CHECK_EN_Msk = 0x2000
	// Bit ADDR_10BIT_RW_CHECK_EN.
	I2C_CTR_ADDR_10BIT_RW_CHECK_EN = 0x2000
	// Position of ADDR_BROADCASTING_EN field.
	I2C_CTR_ADDR_BROADCASTING_EN_Pos = 0xe
	// Bit mask of ADDR_BROADCASTING_EN field.
	I2C_CTR_ADDR_BROADCASTING_EN_Msk = 0x4000
	// Bit ADDR_BROADCASTING_EN.
	I2C_CTR_ADDR_BROADCASTING_EN = 0x4000

	// SR: I2C_SR_REG
	// Position of RESP_REC field.
	I2C_SR_RESP_REC_Pos = 0x0
	// Bit mask of RESP_REC field.
	I2C_SR_RESP_REC_Msk = 0x1
	// Bit RESP_REC.
	I2C_SR_RESP_REC = 0x1
	// Position of SLAVE_RW field.
	I2C_SR_SLAVE_RW_Pos = 0x1
	// Bit mask of SLAVE_RW field.
	I2C_SR_SLAVE_RW_Msk = 0x2
	// Bit SLAVE_RW.
	I2C_SR_SLAVE_RW = 0x2
	// Position of ARB_LOST field.
	I2C_SR_ARB_LOST_Pos = 0x3
	// Bit mask of ARB_LOST field.
	I2C_SR_ARB_LOST_Msk = 0x8
	// Bit ARB_LOST.
	I2C_SR_ARB_LOST = 0x8
	// Position of BUS_BUSY field.
	I2C_SR_BUS_BUSY_Pos = 0x4
	// Bit mask of BUS_BUSY field.
	I2C_SR_BUS_BUSY_Msk = 0x10
	// Bit BUS_BUSY.
	I2C_SR_BUS_BUSY = 0x10
	// Position of SLAVE_ADDRESSED field.
	I2C_SR_SLAVE_ADDRESSED_Pos = 0x5
	// Bit mask of SLAVE_ADDRESSED field.
	I2C_SR_SLAVE_ADDRESSED_Msk = 0x20
	// Bit SLAVE_ADDRESSED.
	I2C_SR_SLAVE_ADDRESSED = 0x20
	// Position of RXFIFO_CNT field.
	I2C_SR_RXFIFO_CNT_Pos = 0x8
	// Bit mask of RXFIFO_CNT field.
	I2C_SR_RXFIFO_CNT_Msk = 0x3f00
	// Position of STRETCH_CAUSE field.
	I2C_SR_STRETCH_CAUSE_Pos = 0xe
	// Bit mask of STRETCH_CAUSE field.
	I2C_SR_STRETCH_CAUSE_Msk = 0xc000
	// Position of TXFIFO_CNT field.
	I2C_SR_TXFIFO_CNT_Pos = 0x12
	// Bit mask of TXFIFO_CNT field.
	I2C_SR_TXFIFO_CNT_Msk = 0xfc0000
	// Position of SCL_MAIN_STATE_LAST field.
	I2C_SR_SCL_MAIN_STATE_LAST_Pos = 0x18
	// Bit mask of SCL_MAIN_STATE_LAST field.
	I2C_SR_SCL_MAIN_STATE_LAST_Msk = 0x7000000
	// Position of SCL_STATE_LAST field.
	I2C_SR_SCL_STATE_LAST_Pos = 0x1c
	// Bit mask of SCL_STATE_LAST field.
	I2C_SR_SCL_STATE_LAST_Msk = 0x70000000

	// TO: I2C_TO_REG
	// Position of TIME_OUT_VALUE field.
	I2C_TO_TIME_OUT_VALUE_Pos = 0x0
	// Bit mask of TIME_OUT_VALUE field.
	I2C_TO_TIME_OUT_VALUE_Msk = 0x1f
	// Position of TIME_OUT_EN field.
	I2C_TO_TIME_OUT_EN_Pos = 0x5
	// Bit mask of TIME_OUT_EN field.
	I2C_TO_TIME_OUT_EN_Msk = 0x20
	// Bit TIME_OUT_EN.
	I2C_TO_TIME_OUT_EN = 0x20

	// SLAVE_ADDR: I2C_SLAVE_ADDR_REG
	// Position of SLAVE_ADDR field.
	I2C_SLAVE_ADDR_SLAVE_ADDR_Pos = 0x0
	// Bit mask of SLAVE_ADDR field.
	I2C_SLAVE_ADDR_SLAVE_ADDR_Msk = 0x7fff
	// Position of ADDR_10BIT_EN field.
	I2C_SLAVE_ADDR_ADDR_10BIT_EN_Pos = 0x1f
	// Bit mask of ADDR_10BIT_EN field.
	I2C_SLAVE_ADDR_ADDR_10BIT_EN_Msk = 0x80000000
	// Bit ADDR_10BIT_EN.
	I2C_SLAVE_ADDR_ADDR_10BIT_EN = 0x80000000

	// FIFO_ST: I2C_FIFO_ST_REG
	// Position of RXFIFO_RADDR field.
	I2C_FIFO_ST_RXFIFO_RADDR_Pos = 0x0
	// Bit mask of RXFIFO_RADDR field.
	I2C_FIFO_ST_RXFIFO_RADDR_Msk = 0x1f
	// Position of RXFIFO_WADDR field.
	I2C_FIFO_ST_RXFIFO_WADDR_Pos = 0x5
	// Bit mask of RXFIFO_WADDR field.
	I2C_FIFO_ST_RXFIFO_WADDR_Msk = 0x3e0
	// Position of TXFIFO_RADDR field.
	I2C_FIFO_ST_TXFIFO_RADDR_Pos = 0xa
	// Bit mask of TXFIFO_RADDR field.
	I2C_FIFO_ST_TXFIFO_RADDR_Msk = 0x7c00
	// Position of TXFIFO_WADDR field.
	I2C_FIFO_ST_TXFIFO_WADDR_Pos = 0xf
	// Bit mask of TXFIFO_WADDR field.
	I2C_FIFO_ST_TXFIFO_WADDR_Msk = 0xf8000
	// Position of SLAVE_RW_POINT field.
	I2C_FIFO_ST_SLAVE_RW_POINT_Pos = 0x16
	// Bit mask of SLAVE_RW_POINT field.
	I2C_FIFO_ST_SLAVE_RW_POINT_Msk = 0x3fc00000

	// FIFO_CONF: I2C_FIFO_CONF_REG
	// Position of RXFIFO_WM_THRHD field.
	I2C_FIFO_CONF_RXFIFO_WM_THRHD_Pos = 0x0
	// Bit mask of RXFIFO_WM_THRHD field.
	I2C_FIFO_CONF_RXFIFO_WM_THRHD_Msk = 0x1f
	// Position of TXFIFO_WM_THRHD field.
	I2C_FIFO_CONF_TXFIFO_WM_THRHD_Pos = 0x5
	// Bit mask of TXFIFO_WM_THRHD field.
	I2C_FIFO_CONF_TXFIFO_WM_THRHD_Msk = 0x3e0
	// Position of NONFIFO_EN field.
	I2C_FIFO_CONF_NONFIFO_EN_Pos = 0xa
	// Bit mask of NONFIFO_EN field.
	I2C_FIFO_CONF_NONFIFO_EN_Msk = 0x400
	// Bit NONFIFO_EN.
	I2C_FIFO_CONF_NONFIFO_EN = 0x400
	// Position of FIFO_ADDR_CFG_EN field.
	I2C_FIFO_CONF_FIFO_ADDR_CFG_EN_Pos = 0xb
	// Bit mask of FIFO_ADDR_CFG_EN field.
	I2C_FIFO_CONF_FIFO_ADDR_CFG_EN_Msk = 0x800
	// Bit FIFO_ADDR_CFG_EN.
	I2C_FIFO_CONF_FIFO_ADDR_CFG_EN = 0x800
	// Position of RX_FIFO_RST field.
	I2C_FIFO_CONF_RX_FIFO_RST_Pos = 0xc
	// Bit mask of RX_FIFO_RST field.
	I2C_FIFO_CONF_RX_FIFO_RST_Msk = 0x1000
	// Bit RX_FIFO_RST.
	I2C_FIFO_CONF_RX_FIFO_RST = 0x1000
	// Position of TX_FIFO_RST field.
	I2C_FIFO_CONF_TX_FIFO_RST_Pos = 0xd
	// Bit mask of TX_FIFO_RST field.
	I2C_FIFO_CONF_TX_FIFO_RST_Msk = 0x2000
	// Bit TX_FIFO_RST.
	I2C_FIFO_CONF_TX_FIFO_RST = 0x2000
	// Position of FIFO_PRT_EN field.
	I2C_FIFO_CONF_FIFO_PRT_EN_Pos = 0xe
	// Bit mask of FIFO_PRT_EN field.
	I2C_FIFO_CONF_FIFO_PRT_EN_Msk = 0x4000
	// Bit FIFO_PRT_EN.
	I2C_FIFO_CONF_FIFO_PRT_EN = 0x4000

	// FIFO_DATA: I2C_FIFO_DATA_REG
	// Position of FIFO_RDATA field.
	I2C_FIFO_DATA_FIFO_RDATA_Pos = 0x0
	// Bit mask of FIFO_RDATA field.
	I2C_FIFO_DATA_FIFO_RDATA_Msk = 0xff

	// INT_RAW: I2C_INT_RAW_REG
	// Position of RXFIFO_WM_INT_RAW field.
	I2C_INT_RAW_RXFIFO_WM_INT_RAW_Pos = 0x0
	// Bit mask of RXFIFO_WM_INT_RAW field.
	I2C_INT_RAW_RXFIFO_WM_INT_RAW_Msk = 0x1
	// Bit RXFIFO_WM_INT_RAW.
	I2C_INT_RAW_RXFIFO_WM_INT_RAW = 0x1
	// Position of TXFIFO_WM_INT_RAW field.
	I2C_INT_RAW_TXFIFO_WM_INT_RAW_Pos = 0x1
	// Bit mask of TXFIFO_WM_INT_RAW field.
	I2C_INT_RAW_TXFIFO_WM_INT_RAW_Msk = 0x2
	// Bit TXFIFO_WM_INT_RAW.
	I2C_INT_RAW_TXFIFO_WM_INT_RAW = 0x2
	// Position of RXFIFO_OVF_INT_RAW field.
	I2C_INT_RAW_RXFIFO_OVF_INT_RAW_Pos = 0x2
	// Bit mask of RXFIFO_OVF_INT_RAW field.
	I2C_INT_RAW_RXFIFO_OVF_INT_RAW_Msk = 0x4
	// Bit RXFIFO_OVF_INT_RAW.
	I2C_INT_RAW_RXFIFO_OVF_INT_RAW = 0x4
	// Position of END_DETECT_INT_RAW field.
	I2C_INT_RAW_END_DETECT_INT_RAW_Pos = 0x3
	// Bit mask of END_DETECT_INT_RAW field.
	I2C_INT_RAW_END_DETECT_INT_RAW_Msk = 0x8
	// Bit END_DETECT_INT_RAW.
	I2C_INT_RAW_END_DETECT_INT_RAW = 0x8
	// Position of BYTE_TRANS_DONE_INT_RAW field.
	I2C_INT_RAW_BYTE_TRANS_DONE_INT_RAW_Pos = 0x4
	// Bit mask of BYTE_TRANS_DONE_INT_RAW field.
	I2C_INT_RAW_BYTE_TRANS_DONE_INT_RAW_Msk = 0x10
	// Bit BYTE_TRANS_DONE_INT_RAW.
	I2C_INT_RAW_BYTE_TRANS_DONE_INT_RAW = 0x10
	// Position of ARBITRATION_LOST_INT_RAW field.
	I2C_INT_RAW_ARBITRATION_LOST_INT_RAW_Pos = 0x5
	// Bit mask of ARBITRATION_LOST_INT_RAW field.
	I2C_INT_RAW_ARBITRATION_LOST_INT_RAW_Msk = 0x20
	// Bit ARBITRATION_LOST_INT_RAW.
	I2C_INT_RAW_ARBITRATION_LOST_INT_RAW = 0x20
	// Position of MST_TXFIFO_UDF_INT_RAW field.
	I2C_INT_RAW_MST_TXFIFO_UDF_INT_RAW_Pos = 0x6
	// Bit mask of MST_TXFIFO_UDF_INT_RAW field.
	I2C_INT_RAW_MST_TXFIFO_UDF_INT_RAW_Msk = 0x40
	// Bit MST_TXFIFO_UDF_INT_RAW.
	I2C_INT_RAW_MST_TXFIFO_UDF_INT_RAW = 0x40
	// Position of TRANS_COMPLETE_INT_RAW field.
	I2C_INT_RAW_TRANS_COMPLETE_INT_RAW_Pos = 0x7
	// Bit mask of TRANS_COMPLETE_INT_RAW field.
	I2C_INT_RAW_TRANS_COMPLETE_INT_RAW_Msk = 0x80
	// Bit TRANS_COMPLETE_INT_RAW.
	I2C_INT_RAW_TRANS_COMPLETE_INT_RAW = 0x80
	// Position of TIME_OUT_INT_RAW field.
	I2C_INT_RAW_TIME_OUT_INT_RAW_Pos = 0x8
	// Bit mask of TIME_OUT_INT_RAW field.
	I2C_INT_RAW_TIME_OUT_INT_RAW_Msk = 0x100
	// Bit TIME_OUT_INT_RAW.
	I2C_INT_RAW_TIME_OUT_INT_RAW = 0x100
	// Position of TRANS_START_INT_RAW field.
	I2C_INT_RAW_TRANS_START_INT_RAW_Pos = 0x9
	// Bit mask of TRANS_START_INT_RAW field.
	I2C_INT_RAW_TRANS_START_INT_RAW_Msk = 0x200
	// Bit TRANS_START_INT_RAW.
	I2C_INT_RAW_TRANS_START_INT_RAW = 0x200
	// Position of NACK_INT_RAW field.
	I2C_INT_RAW_NACK_INT_RAW_Pos = 0xa
	// Bit mask of NACK_INT_RAW field.
	I2C_INT_RAW_NACK_INT_RAW_Msk = 0x400
	// Bit NACK_INT_RAW.
	I2C_INT_RAW_NACK_INT_RAW = 0x400
	// Position of TXFIFO_OVF_INT_RAW field.
	I2C_INT_RAW_TXFIFO_OVF_INT_RAW_Pos = 0xb
	// Bit mask of TXFIFO_OVF_INT_RAW field.
	I2C_INT_RAW_TXFIFO_OVF_INT_RAW_Msk = 0x800
	// Bit TXFIFO_OVF_INT_RAW.
	I2C_INT_RAW_TXFIFO_OVF_INT_RAW = 0x800
	// Position of RXFIFO_UDF_INT_RAW field.
	I2C_INT_RAW_RXFIFO_UDF_INT_RAW_Pos = 0xc
	// Bit mask of RXFIFO_UDF_INT_RAW field.
	I2C_INT_RAW_RXFIFO_UDF_INT_RAW_Msk = 0x1000
	// Bit RXFIFO_UDF_INT_RAW.
	I2C_INT_RAW_RXFIFO_UDF_INT_RAW = 0x1000
	// Position of SCL_ST_TO_INT_RAW field.
	I2C_INT_RAW_SCL_ST_TO_INT_RAW_Pos = 0xd
	// Bit mask of SCL_ST_TO_INT_RAW field.
	I2C_INT_RAW_SCL_ST_TO_INT_RAW_Msk = 0x2000
	// Bit SCL_ST_TO_INT_RAW.
	I2C_INT_RAW_SCL_ST_TO_INT_RAW = 0x2000
	// Position of SCL_MAIN_ST_TO_INT_RAW field.
	I2C_INT_RAW_SCL_MAIN_ST_TO_INT_RAW_Pos = 0xe
	// Bit mask of SCL_MAIN_ST_TO_INT_RAW field.
	I2C_INT_RAW_SCL_MAIN_ST_TO_INT_RAW_Msk = 0x4000
	// Bit SCL_MAIN_ST_TO_INT_RAW.
	I2C_INT_RAW_SCL_MAIN_ST_TO_INT_RAW = 0x4000
	// Position of DET_START_INT_RAW field.
	I2C_INT_RAW_DET_START_INT_RAW_Pos = 0xf
	// Bit mask of DET_START_INT_RAW field.
	I2C_INT_RAW_DET_START_INT_RAW_Msk = 0x8000
	// Bit DET_START_INT_RAW.
	I2C_INT_RAW_DET_START_INT_RAW = 0x8000
	// Position of SLAVE_STRETCH_INT_RAW field.
	I2C_INT_RAW_SLAVE_STRETCH_INT_RAW_Pos = 0x10
	// Bit mask of SLAVE_STRETCH_INT_RAW field.
	I2C_INT_RAW_SLAVE_STRETCH_INT_RAW_Msk = 0x10000
	// Bit SLAVE_STRETCH_INT_RAW.
	I2C_INT_RAW_SLAVE_STRETCH_INT_RAW = 0x10000
	// Position of GENERAL_CALL_INT_RAW field.
	I2C_INT_RAW_GENERAL_CALL_INT_RAW_Pos = 0x11
	// Bit mask of GENERAL_CALL_INT_RAW field.
	I2C_INT_RAW_GENERAL_CALL_INT_RAW_Msk = 0x20000
	// Bit GENERAL_CALL_INT_RAW.
	I2C_INT_RAW_GENERAL_CALL_INT_RAW = 0x20000

	// INT_CLR: I2C_INT_CLR_REG
	// Position of RXFIFO_WM_INT_CLR field.
	I2C_INT_CLR_RXFIFO_WM_INT_CLR_Pos = 0x0
	// Bit mask of RXFIFO_WM_INT_CLR field.
	I2C_INT_CLR_RXFIFO_WM_INT_CLR_Msk = 0x1
	// Bit RXFIFO_WM_INT_CLR.
	I2C_INT_CLR_RXFIFO_WM_INT_CLR = 0x1
	// Position of TXFIFO_WM_INT_CLR field.
	I2C_INT_CLR_TXFIFO_WM_INT_CLR_Pos = 0x1
	// Bit mask of TXFIFO_WM_INT_CLR field.
	I2C_INT_CLR_TXFIFO_WM_INT_CLR_Msk = 0x2
	// Bit TXFIFO_WM_INT_CLR.
	I2C_INT_CLR_TXFIFO_WM_INT_CLR = 0x2
	// Position of RXFIFO_OVF_INT_CLR field.
	I2C_INT_CLR_RXFIFO_OVF_INT_CLR_Pos = 0x2
	// Bit mask of RXFIFO_OVF_INT_CLR field.
	I2C_INT_CLR_RXFIFO_OVF_INT_CLR_Msk = 0x4
	// Bit RXFIFO_OVF_INT_CLR.
	I2C_INT_CLR_RXFIFO_OVF_INT_CLR = 0x4
	// Position of END_DETECT_INT_CLR field.
	I2C_INT_CLR_END_DETECT_INT_CLR_Pos = 0x3
	// Bit mask of END_DETECT_INT_CLR field.
	I2C_INT_CLR_END_DETECT_INT_CLR_Msk = 0x8
	// Bit END_DETECT_INT_CLR.
	I2C_INT_CLR_END_DETECT_INT_CLR = 0x8
	// Position of BYTE_TRANS_DONE_INT_CLR field.
	I2C_INT_CLR_BYTE_TRANS_DONE_INT_CLR_Pos = 0x4
	// Bit mask of BYTE_TRANS_DONE_INT_CLR field.
	I2C_INT_CLR_BYTE_TRANS_DONE_INT_CLR_Msk = 0x10
	// Bit BYTE_TRANS_DONE_INT_CLR.
	I2C_INT_CLR_BYTE_TRANS_DONE_INT_CLR = 0x10
	// Position of ARBITRATION_LOST_INT_CLR field.
	I2C_INT_CLR_ARBITRATION_LOST_INT_CLR_Pos = 0x5
	// Bit mask of ARBITRATION_LOST_INT_CLR field.
	I2C_INT_CLR_ARBITRATION_LOST_INT_CLR_Msk = 0x20
	// Bit ARBITRATION_LOST_INT_CLR.
	I2C_INT_CLR_ARBITRATION_LOST_INT_CLR = 0x20
	// Position of MST_TXFIFO_UDF_INT_CLR field.
	I2C_INT_CLR_MST_TXFIFO_UDF_INT_CLR_Pos = 0x6
	// Bit mask of MST_TXFIFO_UDF_INT_CLR field.
	I2C_INT_CLR_MST_TXFIFO_UDF_INT_CLR_Msk = 0x40
	// Bit MST_TXFIFO_UDF_INT_CLR.
	I2C_INT_CLR_MST_TXFIFO_UDF_INT_CLR = 0x40
	// Position of TRANS_COMPLETE_INT_CLR field.
	I2C_INT_CLR_TRANS_COMPLETE_INT_CLR_Pos = 0x7
	// Bit mask of TRANS_COMPLETE_INT_CLR field.
	I2C_INT_CLR_TRANS_COMPLETE_INT_CLR_Msk = 0x80
	// Bit TRANS_COMPLETE_INT_CLR.
	I2C_INT_CLR_TRANS_COMPLETE_INT_CLR = 0x80
	// Position of TIME_OUT_INT_CLR field.
	I2C_INT_CLR_TIME_OUT_INT_CLR_Pos = 0x8
	// Bit mask of TIME_OUT_INT_CLR field.
	I2C_INT_CLR_TIME_OUT_INT_CLR_Msk = 0x100
	// Bit TIME_OUT_INT_CLR.
	I2C_INT_CLR_TIME_OUT_INT_CLR = 0x100
	// Position of TRANS_START_INT_CLR field.
	I2C_INT_CLR_TRANS_START_INT_CLR_Pos = 0x9
	// Bit mask of TRANS_START_INT_CLR field.
	I2C_INT_CLR_TRANS_START_INT_CLR_Msk = 0x200
	// Bit TRANS_START_INT_CLR.
	I2C_INT_CLR_TRANS_START_INT_CLR = 0x200
	// Position of NACK_INT_CLR field.
	I2C_INT_CLR_NACK_INT_CLR_Pos = 0xa
	// Bit mask of NACK_INT_CLR field.
	I2C_INT_CLR_NACK_INT_CLR_Msk = 0x400
	// Bit NACK_INT_CLR.
	I2C_INT_CLR_NACK_INT_CLR = 0x400
	// Position of TXFIFO_OVF_INT_CLR field.
	I2C_INT_CLR_TXFIFO_OVF_INT_CLR_Pos = 0xb
	// Bit mask of TXFIFO_OVF_INT_CLR field.
	I2C_INT_CLR_TXFIFO_OVF_INT_CLR_Msk = 0x800
	// Bit TXFIFO_OVF_INT_CLR.
	I2C_INT_CLR_TXFIFO_OVF_INT_CLR = 0x800
	// Position of RXFIFO_UDF_INT_CLR field.
	I2C_INT_CLR_RXFIFO_UDF_INT_CLR_Pos = 0xc
	// Bit mask of RXFIFO_UDF_INT_CLR field.
	I2C_INT_CLR_RXFIFO_UDF_INT_CLR_Msk = 0x1000
	// Bit RXFIFO_UDF_INT_CLR.
	I2C_INT_CLR_RXFIFO_UDF_INT_CLR = 0x1000
	// Position of SCL_ST_TO_INT_CLR field.
	I2C_INT_CLR_SCL_ST_TO_INT_CLR_Pos = 0xd
	// Bit mask of SCL_ST_TO_INT_CLR field.
	I2C_INT_CLR_SCL_ST_TO_INT_CLR_Msk = 0x2000
	// Bit SCL_ST_TO_INT_CLR.
	I2C_INT_CLR_SCL_ST_TO_INT_CLR = 0x2000
	// Position of SCL_MAIN_ST_TO_INT_CLR field.
	I2C_INT_CLR_SCL_MAIN_ST_TO_INT_CLR_Pos = 0xe
	// Bit mask of SCL_MAIN_ST_TO_INT_CLR field.
	I2C_INT_CLR_SCL_MAIN_ST_TO_INT_CLR_Msk = 0x4000
	// Bit SCL_MAIN_ST_TO_INT_CLR.
	I2C_INT_CLR_SCL_MAIN_ST_TO_INT_CLR = 0x4000
	// Position of DET_START_INT_CLR field.
	I2C_INT_CLR_DET_START_INT_CLR_Pos = 0xf
	// Bit mask of DET_START_INT_CLR field.
	I2C_INT_CLR_DET_START_INT_CLR_Msk = 0x8000
	// Bit DET_START_INT_CLR.
	I2C_INT_CLR_DET_START_INT_CLR = 0x8000
	// Position of SLAVE_STRETCH_INT_CLR field.
	I2C_INT_CLR_SLAVE_STRETCH_INT_CLR_Pos = 0x10
	// Bit mask of SLAVE_STRETCH_INT_CLR field.
	I2C_INT_CLR_SLAVE_STRETCH_INT_CLR_Msk = 0x10000
	// Bit SLAVE_STRETCH_INT_CLR.
	I2C_INT_CLR_SLAVE_STRETCH_INT_CLR = 0x10000
	// Position of GENERAL_CALL_INT_CLR field.
	I2C_INT_CLR_GENERAL_CALL_INT_CLR_Pos = 0x11
	// Bit mask of GENERAL_CALL_INT_CLR field.
	I2C_INT_CLR_GENERAL_CALL_INT_CLR_Msk = 0x20000
	// Bit GENERAL_CALL_INT_CLR.
	I2C_INT_CLR_GENERAL_CALL_INT_CLR = 0x20000

	// INT_ENA: I2C_INT_ENA_REG
	// Position of RXFIFO_WM_INT_ENA field.
	I2C_INT_ENA_RXFIFO_WM_INT_ENA_Pos = 0x0
	// Bit mask of RXFIFO_WM_INT_ENA field.
	I2C_INT_ENA_RXFIFO_WM_INT_ENA_Msk = 0x1
	// Bit RXFIFO_WM_INT_ENA.
	I2C_INT_ENA_RXFIFO_WM_INT_ENA = 0x1
	// Position of TXFIFO_WM_INT_ENA field.
	I2C_INT_ENA_TXFIFO_WM_INT_ENA_Pos = 0x1
	// Bit mask of TXFIFO_WM_INT_ENA field.
	I2C_INT_ENA_TXFIFO_WM_INT_ENA_Msk = 0x2
	// Bit TXFIFO_WM_INT_ENA.
	I2C_INT_ENA_TXFIFO_WM_INT_ENA = 0x2
	// Position of RXFIFO_OVF_INT_ENA field.
	I2C_INT_ENA_RXFIFO_OVF_INT_ENA_Pos = 0x2
	// Bit mask of RXFIFO_OVF_INT_ENA field.
	I2C_INT_ENA_RXFIFO_OVF_INT_ENA_Msk = 0x4
	// Bit RXFIFO_OVF_INT_ENA.
	I2C_INT_ENA_RXFIFO_OVF_INT_ENA = 0x4
	// Position of END_DETECT_INT_ENA field.
	I2C_INT_ENA_END_DETECT_INT_ENA_Pos = 0x3
	// Bit mask of END_DETECT_INT_ENA field.
	I2C_INT_ENA_END_DETECT_INT_ENA_Msk = 0x8
	// Bit END_DETECT_INT_ENA.
	I2C_INT_ENA_END_DETECT_INT_ENA = 0x8
	// Position of BYTE_TRANS_DONE_INT_ENA field.
	I2C_INT_ENA_BYTE_TRANS_DONE_INT_ENA_Pos = 0x4
	// Bit mask of BYTE_TRANS_DONE_INT_ENA field.
	I2C_INT_ENA_BYTE_TRANS_DONE_INT_ENA_Msk = 0x10
	// Bit BYTE_TRANS_DONE_INT_ENA.
	I2C_INT_ENA_BYTE_TRANS_DONE_INT_ENA = 0x10
	// Position of ARBITRATION_LOST_INT_ENA field.
	I2C_INT_ENA_ARBITRATION_LOST_INT_ENA_Pos = 0x5
	// Bit mask of ARBITRATION_LOST_INT_ENA field.
	I2C_INT_ENA_ARBITRATION_LOST_INT_ENA_Msk = 0x20
	// Bit ARBITRATION_LOST_INT_ENA.
	I2C_INT_ENA_ARBITRATION_LOST_INT_ENA = 0x20
	// Position of MST_TXFIFO_UDF_INT_ENA field.
	I2C_INT_ENA_MST_TXFIFO_UDF_INT_ENA_Pos = 0x6
	// Bit mask of MST_TXFIFO_UDF_INT_ENA field.
	I2C_INT_ENA_MST_TXFIFO_UDF_INT_ENA_Msk = 0x40
	// Bit MST_TXFIFO_UDF_INT_ENA.
	I2C_INT_ENA_MST_TXFIFO_UDF_INT_ENA = 0x40
	// Position of TRANS_COMPLETE_INT_ENA field.
	I2C_INT_ENA_TRANS_COMPLETE_INT_ENA_Pos = 0x7
	// Bit mask of TRANS_COMPLETE_INT_ENA field.
	I2C_INT_ENA_TRANS_COMPLETE_INT_ENA_Msk = 0x80
	// Bit TRANS_COMPLETE_INT_ENA.
	I2C_INT_ENA_TRANS_COMPLETE_INT_ENA = 0x80
	// Position of TIME_OUT_INT_ENA field.
	I2C_INT_ENA_TIME_OUT_INT_ENA_Pos = 0x8
	// Bit mask of TIME_OUT_INT_ENA field.
	I2C_INT_ENA_TIME_OUT_INT_ENA_Msk = 0x100
	// Bit TIME_OUT_INT_ENA.
	I2C_INT_ENA_TIME_OUT_INT_ENA = 0x100
	// Position of TRANS_START_INT_ENA field.
	I2C_INT_ENA_TRANS_START_INT_ENA_Pos = 0x9
	// Bit mask of TRANS_START_INT_ENA field.
	I2C_INT_ENA_TRANS_START_INT_ENA_Msk = 0x200
	// Bit TRANS_START_INT_ENA.
	I2C_INT_ENA_TRANS_START_INT_ENA = 0x200
	// Position of NACK_INT_ENA field.
	I2C_INT_ENA_NACK_INT_ENA_Pos = 0xa
	// Bit mask of NACK_INT_ENA field.
	I2C_INT_ENA_NACK_INT_ENA_Msk = 0x400
	// Bit NACK_INT_ENA.
	I2C_INT_ENA_NACK_INT_ENA = 0x400
	// Position of TXFIFO_OVF_INT_ENA field.
	I2C_INT_ENA_TXFIFO_OVF_INT_ENA_Pos = 0xb
	// Bit mask of TXFIFO_OVF_INT_ENA field.
	I2C_INT_ENA_TXFIFO_OVF_INT_ENA_Msk = 0x800
	// Bit TXFIFO_OVF_INT_ENA.
	I2C_INT_ENA_TXFIFO_OVF_INT_ENA = 0x800
	// Position of RXFIFO_UDF_INT_ENA field.
	I2C_INT_ENA_RXFIFO_UDF_INT_ENA_Pos = 0xc
	// Bit mask of RXFIFO_UDF_INT_ENA field.
	I2C_INT_ENA_RXFIFO_UDF_INT_ENA_Msk = 0x1000
	// Bit RXFIFO_UDF_INT_ENA.
	I2C_INT_ENA_RXFIFO_UDF_INT_ENA = 0x1000
	// Position of SCL_ST_TO_INT_ENA field.
	I2C_INT_ENA_SCL_ST_TO_INT_ENA_Pos = 0xd
	// Bit mask of SCL_ST_TO_INT_ENA field.
	I2C_INT_ENA_SCL_ST_TO_INT_ENA_Msk = 0x2000
	// Bit SCL_ST_TO_INT_ENA.
	I2C_INT_ENA_SCL_ST_TO_INT_ENA = 0x2000
	// Position of SCL_MAIN_ST_TO_INT_ENA field.
	I2C_INT_ENA_SCL_MAIN_ST_TO_INT_ENA_Pos = 0xe
	// Bit mask of SCL_MAIN_ST_TO_INT_ENA field.
	I2C_INT_ENA_SCL_MAIN_ST_TO_INT_ENA_Msk = 0x4000
	// Bit SCL_MAIN_ST_TO_INT_ENA.
	I2C_INT_ENA_SCL_MAIN_ST_TO_INT_ENA = 0x4000
	// Position of DET_START_INT_ENA field.
	I2C_INT_ENA_DET_START_INT_ENA_Pos = 0xf
	// Bit mask of DET_START_INT_ENA field.
	I2C_INT_ENA_DET_START_INT_ENA_Msk = 0x8000
	// Bit DET_START_INT_ENA.
	I2C_INT_ENA_DET_START_INT_ENA = 0x8000
	// Position of SLAVE_STRETCH_INT_ENA field.
	I2C_INT_ENA_SLAVE_STRETCH_INT_ENA_Pos = 0x10
	// Bit mask of SLAVE_STRETCH_INT_ENA field.
	I2C_INT_ENA_SLAVE_STRETCH_INT_ENA_Msk = 0x10000
	// Bit SLAVE_STRETCH_INT_ENA.
	I2C_INT_ENA_SLAVE_STRETCH_INT_ENA = 0x10000
	// Position of GENERAL_CALL_INT_ENA field.
	I2C_INT_ENA_GENERAL_CALL_INT_ENA_Pos = 0x11
	// Bit mask of GENERAL_CALL_INT_ENA field.
	I2C_INT_ENA_GENERAL_CALL_INT_ENA_Msk = 0x20000
	// Bit GENERAL_CALL_INT_ENA.
	I2C_INT_ENA_GENERAL_CALL_INT_ENA = 0x20000

	// INT_STATUS: I2C_INT_STATUS_REG
	// Position of RXFIFO_WM_INT_ST field.
	I2C_INT_STATUS_RXFIFO_WM_INT_ST_Pos = 0x0
	// Bit mask of RXFIFO_WM_INT_ST field.
	I2C_INT_STATUS_RXFIFO_WM_INT_ST_Msk = 0x1
	// Bit RXFIFO_WM_INT_ST.
	I2C_INT_STATUS_RXFIFO_WM_INT_ST = 0x1
	// Position of TXFIFO_WM_INT_ST field.
	I2C_INT_STATUS_TXFIFO_WM_INT_ST_Pos = 0x1
	// Bit mask of TXFIFO_WM_INT_ST field.
	I2C_INT_STATUS_TXFIFO_WM_INT_ST_Msk = 0x2
	// Bit TXFIFO_WM_INT_ST.
	I2C_INT_STATUS_TXFIFO_WM_INT_ST = 0x2
	// Position of RXFIFO_OVF_INT_ST field.
	I2C_INT_STATUS_RXFIFO_OVF_INT_ST_Pos = 0x2
	// Bit mask of RXFIFO_OVF_INT_ST field.
	I2C_INT_STATUS_RXFIFO_OVF_INT_ST_Msk = 0x4
	// Bit RXFIFO_OVF_INT_ST.
	I2C_INT_STATUS_RXFIFO_OVF_INT_ST = 0x4
	// Position of END_DETECT_INT_ST field.
	I2C_INT_STATUS_END_DETECT_INT_ST_Pos = 0x3
	// Bit mask of END_DETECT_INT_ST field.
	I2C_INT_STATUS_END_DETECT_INT_ST_Msk = 0x8
	// Bit END_DETECT_INT_ST.
	I2C_INT_STATUS_END_DETECT_INT_ST = 0x8
	// Position of BYTE_TRANS_DONE_INT_ST field.
	I2C_INT_STATUS_BYTE_TRANS_DONE_INT_ST_Pos = 0x4
	// Bit mask of BYTE_TRANS_DONE_INT_ST field.
	I2C_INT_STATUS_BYTE_TRANS_DONE_INT_ST_Msk = 0x10
	// Bit BYTE_TRANS_DONE_INT_ST.
	I2C_INT_STATUS_BYTE_TRANS_DONE_INT_ST = 0x10
	// Position of ARBITRATION_LOST_INT_ST field.
	I2C_INT_STATUS_ARBITRATION_LOST_INT_ST_Pos = 0x5
	// Bit mask of ARBITRATION_LOST_INT_ST field.
	I2C_INT_STATUS_ARBITRATION_LOST_INT_ST_Msk = 0x20
	// Bit ARBITRATION_LOST_INT_ST.
	I2C_INT_STATUS_ARBITRATION_LOST_INT_ST = 0x20
	// Position of MST_TXFIFO_UDF_INT_ST field.
	I2C_INT_STATUS_MST_TXFIFO_UDF_INT_ST_Pos = 0x6
	// Bit mask of MST_TXFIFO_UDF_INT_ST field.
	I2C_INT_STATUS_MST_TXFIFO_UDF_INT_ST_Msk = 0x40
	// Bit MST_TXFIFO_UDF_INT_ST.
	I2C_INT_STATUS_MST_TXFIFO_UDF_INT_ST = 0x40
	// Position of TRANS_COMPLETE_INT_ST field.
	I2C_INT_STATUS_TRANS_COMPLETE_INT_ST_Pos = 0x7
	// Bit mask of TRANS_COMPLETE_INT_ST field.
	I2C_INT_STATUS_TRANS_COMPLETE_INT_ST_Msk = 0x80
	// Bit TRANS_COMPLETE_INT_ST.
	I2C_INT_STATUS_TRANS_COMPLETE_INT_ST = 0x80
	// Position of TIME_OUT_INT_ST field.
	I2C_INT_STATUS_TIME_OUT_INT_ST_Pos = 0x8
	// Bit mask of TIME_OUT_INT_ST field.
	I2C_INT_STATUS_TIME_OUT_INT_ST_Msk = 0x100
	// Bit TIME_OUT_INT_ST.
	I2C_INT_STATUS_TIME_OUT_INT_ST = 0x100
	// Position of TRANS_START_INT_ST field.
	I2C_INT_STATUS_TRANS_START_INT_ST_Pos = 0x9
	// Bit mask of TRANS_START_INT_ST field.
	I2C_INT_STATUS_TRANS_START_INT_ST_Msk = 0x200
	// Bit TRANS_START_INT_ST.
	I2C_INT_STATUS_TRANS_START_INT_ST = 0x200
	// Position of NACK_INT_ST field.
	I2C_INT_STATUS_NACK_INT_ST_Pos = 0xa
	// Bit mask of NACK_INT_ST field.
	I2C_INT_STATUS_NACK_INT_ST_Msk = 0x400
	// Bit NACK_INT_ST.
	I2C_INT_STATUS_NACK_INT_ST = 0x400
	// Position of TXFIFO_OVF_INT_ST field.
	I2C_INT_STATUS_TXFIFO_OVF_INT_ST_Pos = 0xb
	// Bit mask of TXFIFO_OVF_INT_ST field.
	I2C_INT_STATUS_TXFIFO_OVF_INT_ST_Msk = 0x800
	// Bit TXFIFO_OVF_INT_ST.
	I2C_INT_STATUS_TXFIFO_OVF_INT_ST = 0x800
	// Position of RXFIFO_UDF_INT_ST field.
	I2C_INT_STATUS_RXFIFO_UDF_INT_ST_Pos = 0xc
	// Bit mask of RXFIFO_UDF_INT_ST field.
	I2C_INT_STATUS_RXFIFO_UDF_INT_ST_Msk = 0x1000
	// Bit RXFIFO_UDF_INT_ST.
	I2C_INT_STATUS_RXFIFO_UDF_INT_ST = 0x1000
	// Position of SCL_ST_TO_INT_ST field.
	I2C_INT_STATUS_SCL_ST_TO_INT_ST_Pos = 0xd
	// Bit mask of SCL_ST_TO_INT_ST field.
	I2C_INT_STATUS_SCL_ST_TO_INT_ST_Msk = 0x2000
	// Bit SCL_ST_TO_INT_ST.
	I2C_INT_STATUS_SCL_ST_TO_INT_ST = 0x2000
	// Position of SCL_MAIN_ST_TO_INT_ST field.
	I2C_INT_STATUS_SCL_MAIN_ST_TO_INT_ST_Pos = 0xe
	// Bit mask of SCL_MAIN_ST_TO_INT_ST field.
	I2C_INT_STATUS_SCL_MAIN_ST_TO_INT_ST_Msk = 0x4000
	// Bit SCL_MAIN_ST_TO_INT_ST.
	I2C_INT_STATUS_SCL_MAIN_ST_TO_INT_ST = 0x4000
	// Position of DET_START_INT_ST field.
	I2C_INT_STATUS_DET_START_INT_ST_Pos = 0xf
	// Bit mask of DET_START_INT_ST field.
	I2C_INT_STATUS_DET_START_INT_ST_Msk = 0x8000
	// Bit DET_START_INT_ST.
	I2C_INT_STATUS_DET_START_INT_ST = 0x8000
	// Position of SLAVE_STRETCH_INT_ST field.
	I2C_INT_STATUS_SLAVE_STRETCH_INT_ST_Pos = 0x10
	// Bit mask of SLAVE_STRETCH_INT_ST field.
	I2C_INT_STATUS_SLAVE_STRETCH_INT_ST_Msk = 0x10000
	// Bit SLAVE_STRETCH_INT_ST.
	I2C_INT_STATUS_SLAVE_STRETCH_INT_ST = 0x10000
	// Position of GENERAL_CALL_INT_ST field.
	I2C_INT_STATUS_GENERAL_CALL_INT_ST_Pos = 0x11
	// Bit mask of GENERAL_CALL_INT_ST field.
	I2C_INT_STATUS_GENERAL_CALL_INT_ST_Msk = 0x20000
	// Bit GENERAL_CALL_INT_ST.
	I2C_INT_STATUS_GENERAL_CALL_INT_ST = 0x20000

	// SDA_HOLD: I2C_SDA_HOLD_REG
	// Position of TIME field.
	I2C_SDA_HOLD_TIME_Pos = 0x0
	// Bit mask of TIME field.
	I2C_SDA_HOLD_TIME_Msk = 0x1ff

	// SDA_SAMPLE: I2C_SDA_SAMPLE_REG
	// Position of TIME field.
	I2C_SDA_SAMPLE_TIME_Pos = 0x0
	// Bit mask of TIME field.
	I2C_SDA_SAMPLE_TIME_Msk = 0x1ff

	// SCL_HIGH_PERIOD: I2C_SCL_HIGH_PERIOD_REG
	// Position of SCL_HIGH_PERIOD field.
	I2C_SCL_HIGH_PERIOD_SCL_HIGH_PERIOD_Pos = 0x0
	// Bit mask of SCL_HIGH_PERIOD field.
	I2C_SCL_HIGH_PERIOD_SCL_HIGH_PERIOD_Msk = 0x1ff
	// Position of SCL_WAIT_HIGH_PERIOD field.
	I2C_SCL_HIGH_PERIOD_SCL_WAIT_HIGH_PERIOD_Pos = 0x9
	// Bit mask of SCL_WAIT_HIGH_PERIOD field.
	I2C_SCL_HIGH_PERIOD_SCL_WAIT_HIGH_PERIOD_Msk = 0xfe00

	// SCL_START_HOLD: I2C_SCL_START_HOLD_REG
	// Position of TIME field.
	I2C_SCL_START_HOLD_TIME_Pos = 0x0
	// Bit mask of TIME field.
	I2C_SCL_START_HOLD_TIME_Msk = 0x1ff

	// SCL_RSTART_SETUP: I2C_SCL_RSTART_SETUP_REG
	// Position of TIME field.
	I2C_SCL_RSTART_SETUP_TIME_Pos = 0x0
	// Bit mask of TIME field.
	I2C_SCL_RSTART_SETUP_TIME_Msk = 0x1ff

	// SCL_STOP_HOLD: I2C_SCL_STOP_HOLD_REG
	// Position of TIME field.
	I2C_SCL_STOP_HOLD_TIME_Pos = 0x0
	// Bit mask of TIME field.
	I2C_SCL_STOP_HOLD_TIME_Msk = 0x1ff

	// SCL_STOP_SETUP: I2C_SCL_STOP_SETUP_REG
	// Position of TIME field.
	I2C_SCL_STOP_SETUP_TIME_Pos = 0x0
	// Bit mask of TIME field.
	I2C_SCL_STOP_SETUP_TIME_Msk = 0x1ff

	// FILTER_CFG: I2C_FILTER_CFG_REG
	// Position of SCL_FILTER_THRES field.
	I2C_FILTER_CFG_SCL_FILTER_THRES_Pos = 0x0
	// Bit mask of SCL_FILTER_THRES field.
	I2C_FILTER_CFG_SCL_FILTER_THRES_Msk = 0xf
	// Position of SDA_FILTER_THRES field.
	I2C_FILTER_CFG_SDA_FILTER_THRES_Pos = 0x4
	// Bit mask of SDA_FILTER_THRES field.
	I2C_FILTER_CFG_SDA_FILTER_THRES_Msk = 0xf0
	// Position of SCL_FILTER_EN field.
	I2C_FILTER_CFG_SCL_FILTER_EN_Pos = 0x8
	// Bit mask of SCL_FILTER_EN field.
	I2C_FILTER_CFG_SCL_FILTER_EN_Msk = 0x100
	// Bit SCL_FILTER_EN.
	I2C_FILTER_CFG_SCL_FILTER_EN = 0x100
	// Position of SDA_FILTER_EN field.
	I2C_FILTER_CFG_SDA_FILTER_EN_Pos = 0x9
	// Bit mask of SDA_FILTER_EN field.
	I2C_FILTER_CFG_SDA_FILTER_EN_Msk = 0x200
	// Bit SDA_FILTER_EN.
	I2C_FILTER_CFG_SDA_FILTER_EN = 0x200

	// CLK_CONF: I2C_CLK_CONF_REG
	// Position of SCLK_DIV_NUM field.
	I2C_CLK_CONF_SCLK_DIV_NUM_Pos = 0x0
	// Bit mask of SCLK_DIV_NUM field.
	I2C_CLK_CONF_SCLK_DIV_NUM_Msk = 0xff
	// Position of SCLK_DIV_A field.
	I2C_CLK_CONF_SCLK_DIV_A_Pos = 0x8
	// Bit mask of SCLK_DIV_A field.
	I2C_CLK_CONF_SCLK_DIV_A_Msk = 0x3f00
	// Position of SCLK_DIV_B field.
	I2C_CLK_CONF_SCLK_DIV_B_Pos = 0xe
	// Bit mask of SCLK_DIV_B field.
	I2C_CLK_CONF_SCLK_DIV_B_Msk = 0xfc000
	// Position of SCLK_SEL field.
	I2C_CLK_CONF_SCLK_SEL_Pos = 0x14
	// Bit mask of SCLK_SEL field.
	I2C_CLK_CONF_SCLK_SEL_Msk = 0x100000
	// Bit SCLK_SEL.
	I2C_CLK_CONF_SCLK_SEL = 0x100000
	// Position of SCLK_ACTIVE field.
	I2C_CLK_CONF_SCLK_ACTIVE_Pos = 0x15
	// Bit mask of SCLK_ACTIVE field.
	I2C_CLK_CONF_SCLK_ACTIVE_Msk = 0x200000
	// Bit SCLK_ACTIVE.
	I2C_CLK_CONF_SCLK_ACTIVE = 0x200000

	// COMD0: I2C_COMD%s_REG
	// Position of COMMAND field.
	I2C_COMD_COMMAND_Pos = 0x0
	// Bit mask of COMMAND field.
	I2C_COMD_COMMAND_Msk = 0x3fff
	// Position of COMMAND_DONE field.
	I2C_COMD_COMMAND_DONE_Pos = 0x1f
	// Bit mask of COMMAND_DONE field.
	I2C_COMD_COMMAND_DONE_Msk = 0x80000000
	// Bit COMMAND_DONE.
	I2C_COMD_COMMAND_DONE = 0x80000000

	// SCL_ST_TIME_OUT: I2C_SCL_ST_TIME_OUT_REG
	// Position of SCL_ST_TO_I2C field.
	I2C_SCL_ST_TIME_OUT_SCL_ST_TO_I2C_Pos = 0x0
	// Bit mask of SCL_ST_TO_I2C field.
	I2C_SCL_ST_TIME_OUT_SCL_ST_TO_I2C_Msk = 0x1f

	// SCL_MAIN_ST_TIME_OUT: I2C_SCL_MAIN_ST_TIME_OUT_REG
	// Position of SCL_MAIN_ST_TO_I2C field.
	I2C_SCL_MAIN_ST_TIME_OUT_SCL_MAIN_ST_TO_I2C_Pos = 0x0
	// Bit mask of SCL_MAIN_ST_TO_I2C field.
	I2C_SCL_MAIN_ST_TIME_OUT_SCL_MAIN_ST_TO_I2C_Msk = 0x1f

	// SCL_SP_CONF: I2C_SCL_SP_CONF_REG
	// Position of SCL_RST_SLV_EN field.
	I2C_SCL_SP_CONF_SCL_RST_SLV_EN_Pos = 0x0
	// Bit mask of SCL_RST_SLV_EN field.
	I2C_SCL_SP_CONF_SCL_RST_SLV_EN_Msk = 0x1
	// Bit SCL_RST_SLV_EN.
	I2C_SCL_SP_CONF_SCL_RST_SLV_EN = 0x1
	// Position of SCL_RST_SLV_NUM field.
	I2C_SCL_SP_CONF_SCL_RST_SLV_NUM_Pos = 0x1
	// Bit mask of SCL_RST_SLV_NUM field.
	I2C_SCL_SP_CONF_SCL_RST_SLV_NUM_Msk = 0x3e
	// Position of SCL_PD_EN field.
	I2C_SCL_SP_CONF_SCL_PD_EN_Pos = 0x6
	// Bit mask of SCL_PD_EN field.
	I2C_SCL_SP_CONF_SCL_PD_EN_Msk = 0x40
	// Bit SCL_PD_EN.
	I2C_SCL_SP_CONF_SCL_PD_EN = 0x40
	// Position of SDA_PD_EN field.
	I2C_SCL_SP_CONF_SDA_PD_EN_Pos = 0x7
	// Bit mask of SDA_PD_EN field.
	I2C_SCL_SP_CONF_SDA_PD_EN_Msk = 0x80
	// Bit SDA_PD_EN.
	I2C_SCL_SP_CONF_SDA_PD_EN = 0x80

	// SCL_STRETCH_CONF: I2C_SCL_STRETCH_CONF_REG
	// Position of STRETCH_PROTECT_NUM field.
	I2C_SCL_STRETCH_CONF_STRETCH_PROTECT_NUM_Pos = 0x0
	// Bit mask of STRETCH_PROTECT_NUM field.
	I2C_SCL_STRETCH_CONF_STRETCH_PROTECT_NUM_Msk = 0x3ff
	// Position of SLAVE_SCL_STRETCH_EN field.
	I2C_SCL_STRETCH_CONF_SLAVE_SCL_STRETCH_EN_Pos = 0xa
	// Bit mask of SLAVE_SCL_STRETCH_EN field.
	I2C_SCL_STRETCH_CONF_SLAVE_SCL_STRETCH_EN_Msk = 0x400
	// Bit SLAVE_SCL_STRETCH_EN.
	I2C_SCL_STRETCH_CONF_SLAVE_SCL_STRETCH_EN = 0x400
	// Position of SLAVE_SCL_STRETCH_CLR field.
	I2C_SCL_STRETCH_CONF_SLAVE_SCL_STRETCH_CLR_Pos = 0xb
	// Bit mask of SLAVE_SCL_STRETCH_CLR field.
	I2C_SCL_STRETCH_CONF_SLAVE_SCL_STRETCH_CLR_Msk = 0x800
	// Bit SLAVE_SCL_STRETCH_CLR.
	I2C_SCL_STRETCH_CONF_SLAVE_SCL_STRETCH_CLR = 0x800
	// Position of SLAVE_BYTE_ACK_CTL_EN field.
	I2C_SCL_STRETCH_CONF_SLAVE_BYTE_ACK_CTL_EN_Pos = 0xc
	// Bit mask of SLAVE_BYTE_ACK_CTL_EN field.
	I2C_SCL_STRETCH_CONF_SLAVE_BYTE_ACK_CTL_EN_Msk = 0x1000
	// Bit SLAVE_BYTE_ACK_CTL_EN.
	I2C_SCL_STRETCH_CONF_SLAVE_BYTE_ACK_CTL_EN = 0x1000
	// Position of SLAVE_BYTE_ACK_LVL field.
	I2C_SCL_STRETCH_CONF_SLAVE_BYTE_ACK_LVL_Pos = 0xd
	// Bit mask of SLAVE_BYTE_ACK_LVL field.
	I2C_SCL_STRETCH_CONF_SLAVE_BYTE_ACK_LVL_Msk = 0x2000
	// Bit SLAVE_BYTE_ACK_LVL.
	I2C_SCL_STRETCH_CONF_SLAVE_BYTE_ACK_LVL = 0x2000

	// DATE: I2C_DATE_REG
	// Position of DATE field.
	I2C_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	I2C_DATE_DATE_Msk = 0xffffffff

	// TXFIFO_START_ADDR: I2C_TXFIFO_START_ADDR_REG
	// Position of TXFIFO_START_ADDR field.
	I2C_TXFIFO_START_ADDR_TXFIFO_START_ADDR_Pos = 0x0
	// Bit mask of TXFIFO_START_ADDR field.
	I2C_TXFIFO_START_ADDR_TXFIFO_START_ADDR_Msk = 0xffffffff

	// RXFIFO_START_ADDR: I2C_RXFIFO_START_ADDR_REG
	// Position of RXFIFO_START_ADDR field.
	I2C_RXFIFO_START_ADDR_RXFIFO_START_ADDR_Pos = 0x0
	// Bit mask of RXFIFO_START_ADDR field.
	I2C_RXFIFO_START_ADDR_RXFIFO_START_ADDR_Msk = 0xffffffff
)

// Bitfields for I2S: Peripheral I2S
const (
	// INT_RAW: I2S interrupt raw register, valid in level.
	// Position of RX_DONE_INT_RAW field.
	I2S_INT_RAW_RX_DONE_INT_RAW_Pos = 0x0
	// Bit mask of RX_DONE_INT_RAW field.
	I2S_INT_RAW_RX_DONE_INT_RAW_Msk = 0x1
	// Bit RX_DONE_INT_RAW.
	I2S_INT_RAW_RX_DONE_INT_RAW = 0x1
	// Position of TX_DONE_INT_RAW field.
	I2S_INT_RAW_TX_DONE_INT_RAW_Pos = 0x1
	// Bit mask of TX_DONE_INT_RAW field.
	I2S_INT_RAW_TX_DONE_INT_RAW_Msk = 0x2
	// Bit TX_DONE_INT_RAW.
	I2S_INT_RAW_TX_DONE_INT_RAW = 0x2
	// Position of RX_HUNG_INT_RAW field.
	I2S_INT_RAW_RX_HUNG_INT_RAW_Pos = 0x2
	// Bit mask of RX_HUNG_INT_RAW field.
	I2S_INT_RAW_RX_HUNG_INT_RAW_Msk = 0x4
	// Bit RX_HUNG_INT_RAW.
	I2S_INT_RAW_RX_HUNG_INT_RAW = 0x4
	// Position of TX_HUNG_INT_RAW field.
	I2S_INT_RAW_TX_HUNG_INT_RAW_Pos = 0x3
	// Bit mask of TX_HUNG_INT_RAW field.
	I2S_INT_RAW_TX_HUNG_INT_RAW_Msk = 0x8
	// Bit TX_HUNG_INT_RAW.
	I2S_INT_RAW_TX_HUNG_INT_RAW = 0x8

	// INT_ST: I2S interrupt status register.
	// Position of RX_DONE_INT_ST field.
	I2S_INT_ST_RX_DONE_INT_ST_Pos = 0x0
	// Bit mask of RX_DONE_INT_ST field.
	I2S_INT_ST_RX_DONE_INT_ST_Msk = 0x1
	// Bit RX_DONE_INT_ST.
	I2S_INT_ST_RX_DONE_INT_ST = 0x1
	// Position of TX_DONE_INT_ST field.
	I2S_INT_ST_TX_DONE_INT_ST_Pos = 0x1
	// Bit mask of TX_DONE_INT_ST field.
	I2S_INT_ST_TX_DONE_INT_ST_Msk = 0x2
	// Bit TX_DONE_INT_ST.
	I2S_INT_ST_TX_DONE_INT_ST = 0x2
	// Position of RX_HUNG_INT_ST field.
	I2S_INT_ST_RX_HUNG_INT_ST_Pos = 0x2
	// Bit mask of RX_HUNG_INT_ST field.
	I2S_INT_ST_RX_HUNG_INT_ST_Msk = 0x4
	// Bit RX_HUNG_INT_ST.
	I2S_INT_ST_RX_HUNG_INT_ST = 0x4
	// Position of TX_HUNG_INT_ST field.
	I2S_INT_ST_TX_HUNG_INT_ST_Pos = 0x3
	// Bit mask of TX_HUNG_INT_ST field.
	I2S_INT_ST_TX_HUNG_INT_ST_Msk = 0x8
	// Bit TX_HUNG_INT_ST.
	I2S_INT_ST_TX_HUNG_INT_ST = 0x8

	// INT_ENA: I2S interrupt enable register.
	// Position of RX_DONE_INT_ENA field.
	I2S_INT_ENA_RX_DONE_INT_ENA_Pos = 0x0
	// Bit mask of RX_DONE_INT_ENA field.
	I2S_INT_ENA_RX_DONE_INT_ENA_Msk = 0x1
	// Bit RX_DONE_INT_ENA.
	I2S_INT_ENA_RX_DONE_INT_ENA = 0x1
	// Position of TX_DONE_INT_ENA field.
	I2S_INT_ENA_TX_DONE_INT_ENA_Pos = 0x1
	// Bit mask of TX_DONE_INT_ENA field.
	I2S_INT_ENA_TX_DONE_INT_ENA_Msk = 0x2
	// Bit TX_DONE_INT_ENA.
	I2S_INT_ENA_TX_DONE_INT_ENA = 0x2
	// Position of RX_HUNG_INT_ENA field.
	I2S_INT_ENA_RX_HUNG_INT_ENA_Pos = 0x2
	// Bit mask of RX_HUNG_INT_ENA field.
	I2S_INT_ENA_RX_HUNG_INT_ENA_Msk = 0x4
	// Bit RX_HUNG_INT_ENA.
	I2S_INT_ENA_RX_HUNG_INT_ENA = 0x4
	// Position of TX_HUNG_INT_ENA field.
	I2S_INT_ENA_TX_HUNG_INT_ENA_Pos = 0x3
	// Bit mask of TX_HUNG_INT_ENA field.
	I2S_INT_ENA_TX_HUNG_INT_ENA_Msk = 0x8
	// Bit TX_HUNG_INT_ENA.
	I2S_INT_ENA_TX_HUNG_INT_ENA = 0x8

	// INT_CLR: I2S interrupt clear register.
	// Position of RX_DONE_INT_CLR field.
	I2S_INT_CLR_RX_DONE_INT_CLR_Pos = 0x0
	// Bit mask of RX_DONE_INT_CLR field.
	I2S_INT_CLR_RX_DONE_INT_CLR_Msk = 0x1
	// Bit RX_DONE_INT_CLR.
	I2S_INT_CLR_RX_DONE_INT_CLR = 0x1
	// Position of TX_DONE_INT_CLR field.
	I2S_INT_CLR_TX_DONE_INT_CLR_Pos = 0x1
	// Bit mask of TX_DONE_INT_CLR field.
	I2S_INT_CLR_TX_DONE_INT_CLR_Msk = 0x2
	// Bit TX_DONE_INT_CLR.
	I2S_INT_CLR_TX_DONE_INT_CLR = 0x2
	// Position of RX_HUNG_INT_CLR field.
	I2S_INT_CLR_RX_HUNG_INT_CLR_Pos = 0x2
	// Bit mask of RX_HUNG_INT_CLR field.
	I2S_INT_CLR_RX_HUNG_INT_CLR_Msk = 0x4
	// Bit RX_HUNG_INT_CLR.
	I2S_INT_CLR_RX_HUNG_INT_CLR = 0x4
	// Position of TX_HUNG_INT_CLR field.
	I2S_INT_CLR_TX_HUNG_INT_CLR_Pos = 0x3
	// Bit mask of TX_HUNG_INT_CLR field.
	I2S_INT_CLR_TX_HUNG_INT_CLR_Msk = 0x8
	// Bit TX_HUNG_INT_CLR.
	I2S_INT_CLR_TX_HUNG_INT_CLR = 0x8

	// RX_CONF: I2S RX configure register
	// Position of RX_RESET field.
	I2S_RX_CONF_RX_RESET_Pos = 0x0
	// Bit mask of RX_RESET field.
	I2S_RX_CONF_RX_RESET_Msk = 0x1
	// Bit RX_RESET.
	I2S_RX_CONF_RX_RESET = 0x1
	// Position of RX_FIFO_RESET field.
	I2S_RX_CONF_RX_FIFO_RESET_Pos = 0x1
	// Bit mask of RX_FIFO_RESET field.
	I2S_RX_CONF_RX_FIFO_RESET_Msk = 0x2
	// Bit RX_FIFO_RESET.
	I2S_RX_CONF_RX_FIFO_RESET = 0x2
	// Position of RX_START field.
	I2S_RX_CONF_RX_START_Pos = 0x2
	// Bit mask of RX_START field.
	I2S_RX_CONF_RX_START_Msk = 0x4
	// Bit RX_START.
	I2S_RX_CONF_RX_START = 0x4
	// Position of RX_SLAVE_MOD field.
	I2S_RX_CONF_RX_SLAVE_MOD_Pos = 0x3
	// Bit mask of RX_SLAVE_MOD field.
	I2S_RX_CONF_RX_SLAVE_MOD_Msk = 0x8
	// Bit RX_SLAVE_MOD.
	I2S_RX_CONF_RX_SLAVE_MOD = 0x8
	// Position of RX_MONO field.
	I2S_RX_CONF_RX_MONO_Pos = 0x5
	// Bit mask of RX_MONO field.
	I2S_RX_CONF_RX_MONO_Msk = 0x20
	// Bit RX_MONO.
	I2S_RX_CONF_RX_MONO = 0x20
	// Position of RX_BIG_ENDIAN field.
	I2S_RX_CONF_RX_BIG_ENDIAN_Pos = 0x7
	// Bit mask of RX_BIG_ENDIAN field.
	I2S_RX_CONF_RX_BIG_ENDIAN_Msk = 0x80
	// Bit RX_BIG_ENDIAN.
	I2S_RX_CONF_RX_BIG_ENDIAN = 0x80
	// Position of RX_UPDATE field.
	I2S_RX_CONF_RX_UPDATE_Pos = 0x8
	// Bit mask of RX_UPDATE field.
	I2S_RX_CONF_RX_UPDATE_Msk = 0x100
	// Bit RX_UPDATE.
	I2S_RX_CONF_RX_UPDATE = 0x100
	// Position of RX_MONO_FST_VLD field.
	I2S_RX_CONF_RX_MONO_FST_VLD_Pos = 0x9
	// Bit mask of RX_MONO_FST_VLD field.
	I2S_RX_CONF_RX_MONO_FST_VLD_Msk = 0x200
	// Bit RX_MONO_FST_VLD.
	I2S_RX_CONF_RX_MONO_FST_VLD = 0x200
	// Position of RX_PCM_CONF field.
	I2S_RX_CONF_RX_PCM_CONF_Pos = 0xa
	// Bit mask of RX_PCM_CONF field.
	I2S_RX_CONF_RX_PCM_CONF_Msk = 0xc00
	// Position of RX_PCM_BYPASS field.
	I2S_RX_CONF_RX_PCM_BYPASS_Pos = 0xc
	// Bit mask of RX_PCM_BYPASS field.
	I2S_RX_CONF_RX_PCM_BYPASS_Msk = 0x1000
	// Bit RX_PCM_BYPASS.
	I2S_RX_CONF_RX_PCM_BYPASS = 0x1000
	// Position of RX_STOP_MODE field.
	I2S_RX_CONF_RX_STOP_MODE_Pos = 0xd
	// Bit mask of RX_STOP_MODE field.
	I2S_RX_CONF_RX_STOP_MODE_Msk = 0x6000
	// Position of RX_LEFT_ALIGN field.
	I2S_RX_CONF_RX_LEFT_ALIGN_Pos = 0xf
	// Bit mask of RX_LEFT_ALIGN field.
	I2S_RX_CONF_RX_LEFT_ALIGN_Msk = 0x8000
	// Bit RX_LEFT_ALIGN.
	I2S_RX_CONF_RX_LEFT_ALIGN = 0x8000
	// Position of RX_24_FILL_EN field.
	I2S_RX_CONF_RX_24_FILL_EN_Pos = 0x10
	// Bit mask of RX_24_FILL_EN field.
	I2S_RX_CONF_RX_24_FILL_EN_Msk = 0x10000
	// Bit RX_24_FILL_EN.
	I2S_RX_CONF_RX_24_FILL_EN = 0x10000
	// Position of RX_WS_IDLE_POL field.
	I2S_RX_CONF_RX_WS_IDLE_POL_Pos = 0x11
	// Bit mask of RX_WS_IDLE_POL field.
	I2S_RX_CONF_RX_WS_IDLE_POL_Msk = 0x20000
	// Bit RX_WS_IDLE_POL.
	I2S_RX_CONF_RX_WS_IDLE_POL = 0x20000
	// Position of RX_BIT_ORDER field.
	I2S_RX_CONF_RX_BIT_ORDER_Pos = 0x12
	// Bit mask of RX_BIT_ORDER field.
	I2S_RX_CONF_RX_BIT_ORDER_Msk = 0x40000
	// Bit RX_BIT_ORDER.
	I2S_RX_CONF_RX_BIT_ORDER = 0x40000
	// Position of RX_TDM_EN field.
	I2S_RX_CONF_RX_TDM_EN_Pos = 0x13
	// Bit mask of RX_TDM_EN field.
	I2S_RX_CONF_RX_TDM_EN_Msk = 0x80000
	// Bit RX_TDM_EN.
	I2S_RX_CONF_RX_TDM_EN = 0x80000
	// Position of RX_PDM_EN field.
	I2S_RX_CONF_RX_PDM_EN_Pos = 0x14
	// Bit mask of RX_PDM_EN field.
	I2S_RX_CONF_RX_PDM_EN_Msk = 0x100000
	// Bit RX_PDM_EN.
	I2S_RX_CONF_RX_PDM_EN = 0x100000

	// TX_CONF: I2S TX configure register
	// Position of TX_RESET field.
	I2S_TX_CONF_TX_RESET_Pos = 0x0
	// Bit mask of TX_RESET field.
	I2S_TX_CONF_TX_RESET_Msk = 0x1
	// Bit TX_RESET.
	I2S_TX_CONF_TX_RESET = 0x1
	// Position of TX_FIFO_RESET field.
	I2S_TX_CONF_TX_FIFO_RESET_Pos = 0x1
	// Bit mask of TX_FIFO_RESET field.
	I2S_TX_CONF_TX_FIFO_RESET_Msk = 0x2
	// Bit TX_FIFO_RESET.
	I2S_TX_CONF_TX_FIFO_RESET = 0x2
	// Position of TX_START field.
	I2S_TX_CONF_TX_START_Pos = 0x2
	// Bit mask of TX_START field.
	I2S_TX_CONF_TX_START_Msk = 0x4
	// Bit TX_START.
	I2S_TX_CONF_TX_START = 0x4
	// Position of TX_SLAVE_MOD field.
	I2S_TX_CONF_TX_SLAVE_MOD_Pos = 0x3
	// Bit mask of TX_SLAVE_MOD field.
	I2S_TX_CONF_TX_SLAVE_MOD_Msk = 0x8
	// Bit TX_SLAVE_MOD.
	I2S_TX_CONF_TX_SLAVE_MOD = 0x8
	// Position of TX_MONO field.
	I2S_TX_CONF_TX_MONO_Pos = 0x5
	// Bit mask of TX_MONO field.
	I2S_TX_CONF_TX_MONO_Msk = 0x20
	// Bit TX_MONO.
	I2S_TX_CONF_TX_MONO = 0x20
	// Position of TX_CHAN_EQUAL field.
	I2S_TX_CONF_TX_CHAN_EQUAL_Pos = 0x6
	// Bit mask of TX_CHAN_EQUAL field.
	I2S_TX_CONF_TX_CHAN_EQUAL_Msk = 0x40
	// Bit TX_CHAN_EQUAL.
	I2S_TX_CONF_TX_CHAN_EQUAL = 0x40
	// Position of TX_BIG_ENDIAN field.
	I2S_TX_CONF_TX_BIG_ENDIAN_Pos = 0x7
	// Bit mask of TX_BIG_ENDIAN field.
	I2S_TX_CONF_TX_BIG_ENDIAN_Msk = 0x80
	// Bit TX_BIG_ENDIAN.
	I2S_TX_CONF_TX_BIG_ENDIAN = 0x80
	// Position of TX_UPDATE field.
	I2S_TX_CONF_TX_UPDATE_Pos = 0x8
	// Bit mask of TX_UPDATE field.
	I2S_TX_CONF_TX_UPDATE_Msk = 0x100
	// Bit TX_UPDATE.
	I2S_TX_CONF_TX_UPDATE = 0x100
	// Position of TX_MONO_FST_VLD field.
	I2S_TX_CONF_TX_MONO_FST_VLD_Pos = 0x9
	// Bit mask of TX_MONO_FST_VLD field.
	I2S_TX_CONF_TX_MONO_FST_VLD_Msk = 0x200
	// Bit TX_MONO_FST_VLD.
	I2S_TX_CONF_TX_MONO_FST_VLD = 0x200
	// Position of TX_PCM_CONF field.
	I2S_TX_CONF_TX_PCM_CONF_Pos = 0xa
	// Bit mask of TX_PCM_CONF field.
	I2S_TX_CONF_TX_PCM_CONF_Msk = 0xc00
	// Position of TX_PCM_BYPASS field.
	I2S_TX_CONF_TX_PCM_BYPASS_Pos = 0xc
	// Bit mask of TX_PCM_BYPASS field.
	I2S_TX_CONF_TX_PCM_BYPASS_Msk = 0x1000
	// Bit TX_PCM_BYPASS.
	I2S_TX_CONF_TX_PCM_BYPASS = 0x1000
	// Position of TX_STOP_EN field.
	I2S_TX_CONF_TX_STOP_EN_Pos = 0xd
	// Bit mask of TX_STOP_EN field.
	I2S_TX_CONF_TX_STOP_EN_Msk = 0x2000
	// Bit TX_STOP_EN.
	I2S_TX_CONF_TX_STOP_EN = 0x2000
	// Position of TX_LEFT_ALIGN field.
	I2S_TX_CONF_TX_LEFT_ALIGN_Pos = 0xf
	// Bit mask of TX_LEFT_ALIGN field.
	I2S_TX_CONF_TX_LEFT_ALIGN_Msk = 0x8000
	// Bit TX_LEFT_ALIGN.
	I2S_TX_CONF_TX_LEFT_ALIGN = 0x8000
	// Position of TX_24_FILL_EN field.
	I2S_TX_CONF_TX_24_FILL_EN_Pos = 0x10
	// Bit mask of TX_24_FILL_EN field.
	I2S_TX_CONF_TX_24_FILL_EN_Msk = 0x10000
	// Bit TX_24_FILL_EN.
	I2S_TX_CONF_TX_24_FILL_EN = 0x10000
	// Position of TX_WS_IDLE_POL field.
	I2S_TX_CONF_TX_WS_IDLE_POL_Pos = 0x11
	// Bit mask of TX_WS_IDLE_POL field.
	I2S_TX_CONF_TX_WS_IDLE_POL_Msk = 0x20000
	// Bit TX_WS_IDLE_POL.
	I2S_TX_CONF_TX_WS_IDLE_POL = 0x20000
	// Position of TX_BIT_ORDER field.
	I2S_TX_CONF_TX_BIT_ORDER_Pos = 0x12
	// Bit mask of TX_BIT_ORDER field.
	I2S_TX_CONF_TX_BIT_ORDER_Msk = 0x40000
	// Bit TX_BIT_ORDER.
	I2S_TX_CONF_TX_BIT_ORDER = 0x40000
	// Position of TX_TDM_EN field.
	I2S_TX_CONF_TX_TDM_EN_Pos = 0x13
	// Bit mask of TX_TDM_EN field.
	I2S_TX_CONF_TX_TDM_EN_Msk = 0x80000
	// Bit TX_TDM_EN.
	I2S_TX_CONF_TX_TDM_EN = 0x80000
	// Position of TX_PDM_EN field.
	I2S_TX_CONF_TX_PDM_EN_Pos = 0x14
	// Bit mask of TX_PDM_EN field.
	I2S_TX_CONF_TX_PDM_EN_Msk = 0x100000
	// Bit TX_PDM_EN.
	I2S_TX_CONF_TX_PDM_EN = 0x100000
	// Position of TX_CHAN_MOD field.
	I2S_TX_CONF_TX_CHAN_MOD_Pos = 0x18
	// Bit mask of TX_CHAN_MOD field.
	I2S_TX_CONF_TX_CHAN_MOD_Msk = 0x7000000
	// Position of SIG_LOOPBACK field.
	I2S_TX_CONF_SIG_LOOPBACK_Pos = 0x1b
	// Bit mask of SIG_LOOPBACK field.
	I2S_TX_CONF_SIG_LOOPBACK_Msk = 0x8000000
	// Bit SIG_LOOPBACK.
	I2S_TX_CONF_SIG_LOOPBACK = 0x8000000

	// RX_CONF1: I2S RX configure register 1
	// Position of RX_TDM_WS_WIDTH field.
	I2S_RX_CONF1_RX_TDM_WS_WIDTH_Pos = 0x0
	// Bit mask of RX_TDM_WS_WIDTH field.
	I2S_RX_CONF1_RX_TDM_WS_WIDTH_Msk = 0x7f
	// Position of RX_BCK_DIV_NUM field.
	I2S_RX_CONF1_RX_BCK_DIV_NUM_Pos = 0x7
	// Bit mask of RX_BCK_DIV_NUM field.
	I2S_RX_CONF1_RX_BCK_DIV_NUM_Msk = 0x1f80
	// Position of RX_BITS_MOD field.
	I2S_RX_CONF1_RX_BITS_MOD_Pos = 0xd
	// Bit mask of RX_BITS_MOD field.
	I2S_RX_CONF1_RX_BITS_MOD_Msk = 0x3e000
	// Position of RX_HALF_SAMPLE_BITS field.
	I2S_RX_CONF1_RX_HALF_SAMPLE_BITS_Pos = 0x12
	// Bit mask of RX_HALF_SAMPLE_BITS field.
	I2S_RX_CONF1_RX_HALF_SAMPLE_BITS_Msk = 0xfc0000
	// Position of RX_TDM_CHAN_BITS field.
	I2S_RX_CONF1_RX_TDM_CHAN_BITS_Pos = 0x18
	// Bit mask of RX_TDM_CHAN_BITS field.
	I2S_RX_CONF1_RX_TDM_CHAN_BITS_Msk = 0x1f000000
	// Position of RX_MSB_SHIFT field.
	I2S_RX_CONF1_RX_MSB_SHIFT_Pos = 0x1d
	// Bit mask of RX_MSB_SHIFT field.
	I2S_RX_CONF1_RX_MSB_SHIFT_Msk = 0x20000000
	// Bit RX_MSB_SHIFT.
	I2S_RX_CONF1_RX_MSB_SHIFT = 0x20000000

	// TX_CONF1: I2S TX configure register 1
	// Position of TX_TDM_WS_WIDTH field.
	I2S_TX_CONF1_TX_TDM_WS_WIDTH_Pos = 0x0
	// Bit mask of TX_TDM_WS_WIDTH field.
	I2S_TX_CONF1_TX_TDM_WS_WIDTH_Msk = 0x7f
	// Position of TX_BCK_DIV_NUM field.
	I2S_TX_CONF1_TX_BCK_DIV_NUM_Pos = 0x7
	// Bit mask of TX_BCK_DIV_NUM field.
	I2S_TX_CONF1_TX_BCK_DIV_NUM_Msk = 0x1f80
	// Position of TX_BITS_MOD field.
	I2S_TX_CONF1_TX_BITS_MOD_Pos = 0xd
	// Bit mask of TX_BITS_MOD field.
	I2S_TX_CONF1_TX_BITS_MOD_Msk = 0x3e000
	// Position of TX_HALF_SAMPLE_BITS field.
	I2S_TX_CONF1_TX_HALF_SAMPLE_BITS_Pos = 0x12
	// Bit mask of TX_HALF_SAMPLE_BITS field.
	I2S_TX_CONF1_TX_HALF_SAMPLE_BITS_Msk = 0xfc0000
	// Position of TX_TDM_CHAN_BITS field.
	I2S_TX_CONF1_TX_TDM_CHAN_BITS_Pos = 0x18
	// Bit mask of TX_TDM_CHAN_BITS field.
	I2S_TX_CONF1_TX_TDM_CHAN_BITS_Msk = 0x1f000000
	// Position of TX_MSB_SHIFT field.
	I2S_TX_CONF1_TX_MSB_SHIFT_Pos = 0x1d
	// Bit mask of TX_MSB_SHIFT field.
	I2S_TX_CONF1_TX_MSB_SHIFT_Msk = 0x20000000
	// Bit TX_MSB_SHIFT.
	I2S_TX_CONF1_TX_MSB_SHIFT = 0x20000000
	// Position of TX_BCK_NO_DLY field.
	I2S_TX_CONF1_TX_BCK_NO_DLY_Pos = 0x1e
	// Bit mask of TX_BCK_NO_DLY field.
	I2S_TX_CONF1_TX_BCK_NO_DLY_Msk = 0x40000000
	// Bit TX_BCK_NO_DLY.
	I2S_TX_CONF1_TX_BCK_NO_DLY = 0x40000000

	// RX_CLKM_CONF: I2S RX clock configure register
	// Position of RX_CLKM_DIV_NUM field.
	I2S_RX_CLKM_CONF_RX_CLKM_DIV_NUM_Pos = 0x0
	// Bit mask of RX_CLKM_DIV_NUM field.
	I2S_RX_CLKM_CONF_RX_CLKM_DIV_NUM_Msk = 0xff
	// Position of RX_CLK_ACTIVE field.
	I2S_RX_CLKM_CONF_RX_CLK_ACTIVE_Pos = 0x1a
	// Bit mask of RX_CLK_ACTIVE field.
	I2S_RX_CLKM_CONF_RX_CLK_ACTIVE_Msk = 0x4000000
	// Bit RX_CLK_ACTIVE.
	I2S_RX_CLKM_CONF_RX_CLK_ACTIVE = 0x4000000
	// Position of RX_CLK_SEL field.
	I2S_RX_CLKM_CONF_RX_CLK_SEL_Pos = 0x1b
	// Bit mask of RX_CLK_SEL field.
	I2S_RX_CLKM_CONF_RX_CLK_SEL_Msk = 0x18000000
	// Position of MCLK_SEL field.
	I2S_RX_CLKM_CONF_MCLK_SEL_Pos = 0x1d
	// Bit mask of MCLK_SEL field.
	I2S_RX_CLKM_CONF_MCLK_SEL_Msk = 0x20000000
	// Bit MCLK_SEL.
	I2S_RX_CLKM_CONF_MCLK_SEL = 0x20000000

	// TX_CLKM_CONF: I2S TX clock configure register
	// Position of TX_CLKM_DIV_NUM field.
	I2S_TX_CLKM_CONF_TX_CLKM_DIV_NUM_Pos = 0x0
	// Bit mask of TX_CLKM_DIV_NUM field.
	I2S_TX_CLKM_CONF_TX_CLKM_DIV_NUM_Msk = 0xff
	// Position of TX_CLK_ACTIVE field.
	I2S_TX_CLKM_CONF_TX_CLK_ACTIVE_Pos = 0x1a
	// Bit mask of TX_CLK_ACTIVE field.
	I2S_TX_CLKM_CONF_TX_CLK_ACTIVE_Msk = 0x4000000
	// Bit TX_CLK_ACTIVE.
	I2S_TX_CLKM_CONF_TX_CLK_ACTIVE = 0x4000000
	// Position of TX_CLK_SEL field.
	I2S_TX_CLKM_CONF_TX_CLK_SEL_Pos = 0x1b
	// Bit mask of TX_CLK_SEL field.
	I2S_TX_CLKM_CONF_TX_CLK_SEL_Msk = 0x18000000
	// Position of CLK_EN field.
	I2S_TX_CLKM_CONF_CLK_EN_Pos = 0x1d
	// Bit mask of CLK_EN field.
	I2S_TX_CLKM_CONF_CLK_EN_Msk = 0x20000000
	// Bit CLK_EN.
	I2S_TX_CLKM_CONF_CLK_EN = 0x20000000

	// RX_CLKM_DIV_CONF: I2S RX module clock divider configure register
	// Position of RX_CLKM_DIV_Z field.
	I2S_RX_CLKM_DIV_CONF_RX_CLKM_DIV_Z_Pos = 0x0
	// Bit mask of RX_CLKM_DIV_Z field.
	I2S_RX_CLKM_DIV_CONF_RX_CLKM_DIV_Z_Msk = 0x1ff
	// Position of RX_CLKM_DIV_Y field.
	I2S_RX_CLKM_DIV_CONF_RX_CLKM_DIV_Y_Pos = 0x9
	// Bit mask of RX_CLKM_DIV_Y field.
	I2S_RX_CLKM_DIV_CONF_RX_CLKM_DIV_Y_Msk = 0x3fe00
	// Position of RX_CLKM_DIV_X field.
	I2S_RX_CLKM_DIV_CONF_RX_CLKM_DIV_X_Pos = 0x12
	// Bit mask of RX_CLKM_DIV_X field.
	I2S_RX_CLKM_DIV_CONF_RX_CLKM_DIV_X_Msk = 0x7fc0000
	// Position of RX_CLKM_DIV_YN1 field.
	I2S_RX_CLKM_DIV_CONF_RX_CLKM_DIV_YN1_Pos = 0x1b
	// Bit mask of RX_CLKM_DIV_YN1 field.
	I2S_RX_CLKM_DIV_CONF_RX_CLKM_DIV_YN1_Msk = 0x8000000
	// Bit RX_CLKM_DIV_YN1.
	I2S_RX_CLKM_DIV_CONF_RX_CLKM_DIV_YN1 = 0x8000000

	// TX_CLKM_DIV_CONF: I2S TX module clock divider configure register
	// Position of TX_CLKM_DIV_Z field.
	I2S_TX_CLKM_DIV_CONF_TX_CLKM_DIV_Z_Pos = 0x0
	// Bit mask of TX_CLKM_DIV_Z field.
	I2S_TX_CLKM_DIV_CONF_TX_CLKM_DIV_Z_Msk = 0x1ff
	// Position of TX_CLKM_DIV_Y field.
	I2S_TX_CLKM_DIV_CONF_TX_CLKM_DIV_Y_Pos = 0x9
	// Bit mask of TX_CLKM_DIV_Y field.
	I2S_TX_CLKM_DIV_CONF_TX_CLKM_DIV_Y_Msk = 0x3fe00
	// Position of TX_CLKM_DIV_X field.
	I2S_TX_CLKM_DIV_CONF_TX_CLKM_DIV_X_Pos = 0x12
	// Bit mask of TX_CLKM_DIV_X field.
	I2S_TX_CLKM_DIV_CONF_TX_CLKM_DIV_X_Msk = 0x7fc0000
	// Position of TX_CLKM_DIV_YN1 field.
	I2S_TX_CLKM_DIV_CONF_TX_CLKM_DIV_YN1_Pos = 0x1b
	// Bit mask of TX_CLKM_DIV_YN1 field.
	I2S_TX_CLKM_DIV_CONF_TX_CLKM_DIV_YN1_Msk = 0x8000000
	// Bit TX_CLKM_DIV_YN1.
	I2S_TX_CLKM_DIV_CONF_TX_CLKM_DIV_YN1 = 0x8000000

	// TX_PCM2PDM_CONF: I2S TX PCM2PDM configuration register
	// Position of TX_PDM_HP_BYPASS field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_HP_BYPASS_Pos = 0x0
	// Bit mask of TX_PDM_HP_BYPASS field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_HP_BYPASS_Msk = 0x1
	// Bit TX_PDM_HP_BYPASS.
	I2S_TX_PCM2PDM_CONF_TX_PDM_HP_BYPASS = 0x1
	// Position of TX_PDM_SINC_OSR2 field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SINC_OSR2_Pos = 0x1
	// Bit mask of TX_PDM_SINC_OSR2 field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SINC_OSR2_Msk = 0x1e
	// Position of TX_PDM_PRESCALE field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_PRESCALE_Pos = 0x5
	// Bit mask of TX_PDM_PRESCALE field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_PRESCALE_Msk = 0x1fe0
	// Position of TX_PDM_HP_IN_SHIFT field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_HP_IN_SHIFT_Pos = 0xd
	// Bit mask of TX_PDM_HP_IN_SHIFT field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_HP_IN_SHIFT_Msk = 0x6000
	// Position of TX_PDM_LP_IN_SHIFT field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_LP_IN_SHIFT_Pos = 0xf
	// Bit mask of TX_PDM_LP_IN_SHIFT field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_LP_IN_SHIFT_Msk = 0x18000
	// Position of TX_PDM_SINC_IN_SHIFT field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SINC_IN_SHIFT_Pos = 0x11
	// Bit mask of TX_PDM_SINC_IN_SHIFT field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SINC_IN_SHIFT_Msk = 0x60000
	// Position of TX_PDM_SIGMADELTA_IN_SHIFT field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SIGMADELTA_IN_SHIFT_Pos = 0x13
	// Bit mask of TX_PDM_SIGMADELTA_IN_SHIFT field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SIGMADELTA_IN_SHIFT_Msk = 0x180000
	// Position of TX_PDM_SIGMADELTA_DITHER2 field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SIGMADELTA_DITHER2_Pos = 0x15
	// Bit mask of TX_PDM_SIGMADELTA_DITHER2 field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SIGMADELTA_DITHER2_Msk = 0x200000
	// Bit TX_PDM_SIGMADELTA_DITHER2.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SIGMADELTA_DITHER2 = 0x200000
	// Position of TX_PDM_SIGMADELTA_DITHER field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SIGMADELTA_DITHER_Pos = 0x16
	// Bit mask of TX_PDM_SIGMADELTA_DITHER field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SIGMADELTA_DITHER_Msk = 0x400000
	// Bit TX_PDM_SIGMADELTA_DITHER.
	I2S_TX_PCM2PDM_CONF_TX_PDM_SIGMADELTA_DITHER = 0x400000
	// Position of TX_PDM_DAC_2OUT_EN field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_DAC_2OUT_EN_Pos = 0x17
	// Bit mask of TX_PDM_DAC_2OUT_EN field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_DAC_2OUT_EN_Msk = 0x800000
	// Bit TX_PDM_DAC_2OUT_EN.
	I2S_TX_PCM2PDM_CONF_TX_PDM_DAC_2OUT_EN = 0x800000
	// Position of TX_PDM_DAC_MODE_EN field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_DAC_MODE_EN_Pos = 0x18
	// Bit mask of TX_PDM_DAC_MODE_EN field.
	I2S_TX_PCM2PDM_CONF_TX_PDM_DAC_MODE_EN_Msk = 0x1000000
	// Bit TX_PDM_DAC_MODE_EN.
	I2S_TX_PCM2PDM_CONF_TX_PDM_DAC_MODE_EN = 0x1000000
	// Position of PCM2PDM_CONV_EN field.
	I2S_TX_PCM2PDM_CONF_PCM2PDM_CONV_EN_Pos = 0x19
	// Bit mask of PCM2PDM_CONV_EN field.
	I2S_TX_PCM2PDM_CONF_PCM2PDM_CONV_EN_Msk = 0x2000000
	// Bit PCM2PDM_CONV_EN.
	I2S_TX_PCM2PDM_CONF_PCM2PDM_CONV_EN = 0x2000000

	// TX_PCM2PDM_CONF1: I2S TX PCM2PDM configuration register
	// Position of TX_PDM_FP field.
	I2S_TX_PCM2PDM_CONF1_TX_PDM_FP_Pos = 0x0
	// Bit mask of TX_PDM_FP field.
	I2S_TX_PCM2PDM_CONF1_TX_PDM_FP_Msk = 0x3ff
	// Position of TX_PDM_FS field.
	I2S_TX_PCM2PDM_CONF1_TX_PDM_FS_Pos = 0xa
	// Bit mask of TX_PDM_FS field.
	I2S_TX_PCM2PDM_CONF1_TX_PDM_FS_Msk = 0xffc00
	// Position of TX_IIR_HP_MULT12_5 field.
	I2S_TX_PCM2PDM_CONF1_TX_IIR_HP_MULT12_5_Pos = 0x14
	// Bit mask of TX_IIR_HP_MULT12_5 field.
	I2S_TX_PCM2PDM_CONF1_TX_IIR_HP_MULT12_5_Msk = 0x700000
	// Position of TX_IIR_HP_MULT12_0 field.
	I2S_TX_PCM2PDM_CONF1_TX_IIR_HP_MULT12_0_Pos = 0x17
	// Bit mask of TX_IIR_HP_MULT12_0 field.
	I2S_TX_PCM2PDM_CONF1_TX_IIR_HP_MULT12_0_Msk = 0x3800000

	// RX_TDM_CTRL: I2S TX TDM mode control register
	// Position of RX_TDM_PDM_CHAN0_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN0_EN_Pos = 0x0
	// Bit mask of RX_TDM_PDM_CHAN0_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN0_EN_Msk = 0x1
	// Bit RX_TDM_PDM_CHAN0_EN.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN0_EN = 0x1
	// Position of RX_TDM_PDM_CHAN1_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN1_EN_Pos = 0x1
	// Bit mask of RX_TDM_PDM_CHAN1_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN1_EN_Msk = 0x2
	// Bit RX_TDM_PDM_CHAN1_EN.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN1_EN = 0x2
	// Position of RX_TDM_PDM_CHAN2_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN2_EN_Pos = 0x2
	// Bit mask of RX_TDM_PDM_CHAN2_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN2_EN_Msk = 0x4
	// Bit RX_TDM_PDM_CHAN2_EN.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN2_EN = 0x4
	// Position of RX_TDM_PDM_CHAN3_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN3_EN_Pos = 0x3
	// Bit mask of RX_TDM_PDM_CHAN3_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN3_EN_Msk = 0x8
	// Bit RX_TDM_PDM_CHAN3_EN.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN3_EN = 0x8
	// Position of RX_TDM_PDM_CHAN4_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN4_EN_Pos = 0x4
	// Bit mask of RX_TDM_PDM_CHAN4_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN4_EN_Msk = 0x10
	// Bit RX_TDM_PDM_CHAN4_EN.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN4_EN = 0x10
	// Position of RX_TDM_PDM_CHAN5_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN5_EN_Pos = 0x5
	// Bit mask of RX_TDM_PDM_CHAN5_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN5_EN_Msk = 0x20
	// Bit RX_TDM_PDM_CHAN5_EN.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN5_EN = 0x20
	// Position of RX_TDM_PDM_CHAN6_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN6_EN_Pos = 0x6
	// Bit mask of RX_TDM_PDM_CHAN6_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN6_EN_Msk = 0x40
	// Bit RX_TDM_PDM_CHAN6_EN.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN6_EN = 0x40
	// Position of RX_TDM_PDM_CHAN7_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN7_EN_Pos = 0x7
	// Bit mask of RX_TDM_PDM_CHAN7_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN7_EN_Msk = 0x80
	// Bit RX_TDM_PDM_CHAN7_EN.
	I2S_RX_TDM_CTRL_RX_TDM_PDM_CHAN7_EN = 0x80
	// Position of RX_TDM_CHAN8_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN8_EN_Pos = 0x8
	// Bit mask of RX_TDM_CHAN8_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN8_EN_Msk = 0x100
	// Bit RX_TDM_CHAN8_EN.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN8_EN = 0x100
	// Position of RX_TDM_CHAN9_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN9_EN_Pos = 0x9
	// Bit mask of RX_TDM_CHAN9_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN9_EN_Msk = 0x200
	// Bit RX_TDM_CHAN9_EN.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN9_EN = 0x200
	// Position of RX_TDM_CHAN10_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN10_EN_Pos = 0xa
	// Bit mask of RX_TDM_CHAN10_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN10_EN_Msk = 0x400
	// Bit RX_TDM_CHAN10_EN.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN10_EN = 0x400
	// Position of RX_TDM_CHAN11_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN11_EN_Pos = 0xb
	// Bit mask of RX_TDM_CHAN11_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN11_EN_Msk = 0x800
	// Bit RX_TDM_CHAN11_EN.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN11_EN = 0x800
	// Position of RX_TDM_CHAN12_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN12_EN_Pos = 0xc
	// Bit mask of RX_TDM_CHAN12_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN12_EN_Msk = 0x1000
	// Bit RX_TDM_CHAN12_EN.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN12_EN = 0x1000
	// Position of RX_TDM_CHAN13_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN13_EN_Pos = 0xd
	// Bit mask of RX_TDM_CHAN13_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN13_EN_Msk = 0x2000
	// Bit RX_TDM_CHAN13_EN.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN13_EN = 0x2000
	// Position of RX_TDM_CHAN14_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN14_EN_Pos = 0xe
	// Bit mask of RX_TDM_CHAN14_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN14_EN_Msk = 0x4000
	// Bit RX_TDM_CHAN14_EN.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN14_EN = 0x4000
	// Position of RX_TDM_CHAN15_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN15_EN_Pos = 0xf
	// Bit mask of RX_TDM_CHAN15_EN field.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN15_EN_Msk = 0x8000
	// Bit RX_TDM_CHAN15_EN.
	I2S_RX_TDM_CTRL_RX_TDM_CHAN15_EN = 0x8000
	// Position of RX_TDM_TOT_CHAN_NUM field.
	I2S_RX_TDM_CTRL_RX_TDM_TOT_CHAN_NUM_Pos = 0x10
	// Bit mask of RX_TDM_TOT_CHAN_NUM field.
	I2S_RX_TDM_CTRL_RX_TDM_TOT_CHAN_NUM_Msk = 0xf0000

	// TX_TDM_CTRL: I2S TX TDM mode control register
	// Position of TX_TDM_CHAN0_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN0_EN_Pos = 0x0
	// Bit mask of TX_TDM_CHAN0_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN0_EN_Msk = 0x1
	// Bit TX_TDM_CHAN0_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN0_EN = 0x1
	// Position of TX_TDM_CHAN1_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN1_EN_Pos = 0x1
	// Bit mask of TX_TDM_CHAN1_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN1_EN_Msk = 0x2
	// Bit TX_TDM_CHAN1_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN1_EN = 0x2
	// Position of TX_TDM_CHAN2_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN2_EN_Pos = 0x2
	// Bit mask of TX_TDM_CHAN2_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN2_EN_Msk = 0x4
	// Bit TX_TDM_CHAN2_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN2_EN = 0x4
	// Position of TX_TDM_CHAN3_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN3_EN_Pos = 0x3
	// Bit mask of TX_TDM_CHAN3_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN3_EN_Msk = 0x8
	// Bit TX_TDM_CHAN3_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN3_EN = 0x8
	// Position of TX_TDM_CHAN4_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN4_EN_Pos = 0x4
	// Bit mask of TX_TDM_CHAN4_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN4_EN_Msk = 0x10
	// Bit TX_TDM_CHAN4_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN4_EN = 0x10
	// Position of TX_TDM_CHAN5_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN5_EN_Pos = 0x5
	// Bit mask of TX_TDM_CHAN5_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN5_EN_Msk = 0x20
	// Bit TX_TDM_CHAN5_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN5_EN = 0x20
	// Position of TX_TDM_CHAN6_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN6_EN_Pos = 0x6
	// Bit mask of TX_TDM_CHAN6_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN6_EN_Msk = 0x40
	// Bit TX_TDM_CHAN6_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN6_EN = 0x40
	// Position of TX_TDM_CHAN7_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN7_EN_Pos = 0x7
	// Bit mask of TX_TDM_CHAN7_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN7_EN_Msk = 0x80
	// Bit TX_TDM_CHAN7_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN7_EN = 0x80
	// Position of TX_TDM_CHAN8_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN8_EN_Pos = 0x8
	// Bit mask of TX_TDM_CHAN8_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN8_EN_Msk = 0x100
	// Bit TX_TDM_CHAN8_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN8_EN = 0x100
	// Position of TX_TDM_CHAN9_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN9_EN_Pos = 0x9
	// Bit mask of TX_TDM_CHAN9_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN9_EN_Msk = 0x200
	// Bit TX_TDM_CHAN9_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN9_EN = 0x200
	// Position of TX_TDM_CHAN10_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN10_EN_Pos = 0xa
	// Bit mask of TX_TDM_CHAN10_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN10_EN_Msk = 0x400
	// Bit TX_TDM_CHAN10_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN10_EN = 0x400
	// Position of TX_TDM_CHAN11_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN11_EN_Pos = 0xb
	// Bit mask of TX_TDM_CHAN11_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN11_EN_Msk = 0x800
	// Bit TX_TDM_CHAN11_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN11_EN = 0x800
	// Position of TX_TDM_CHAN12_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN12_EN_Pos = 0xc
	// Bit mask of TX_TDM_CHAN12_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN12_EN_Msk = 0x1000
	// Bit TX_TDM_CHAN12_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN12_EN = 0x1000
	// Position of TX_TDM_CHAN13_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN13_EN_Pos = 0xd
	// Bit mask of TX_TDM_CHAN13_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN13_EN_Msk = 0x2000
	// Bit TX_TDM_CHAN13_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN13_EN = 0x2000
	// Position of TX_TDM_CHAN14_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN14_EN_Pos = 0xe
	// Bit mask of TX_TDM_CHAN14_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN14_EN_Msk = 0x4000
	// Bit TX_TDM_CHAN14_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN14_EN = 0x4000
	// Position of TX_TDM_CHAN15_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN15_EN_Pos = 0xf
	// Bit mask of TX_TDM_CHAN15_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN15_EN_Msk = 0x8000
	// Bit TX_TDM_CHAN15_EN.
	I2S_TX_TDM_CTRL_TX_TDM_CHAN15_EN = 0x8000
	// Position of TX_TDM_TOT_CHAN_NUM field.
	I2S_TX_TDM_CTRL_TX_TDM_TOT_CHAN_NUM_Pos = 0x10
	// Bit mask of TX_TDM_TOT_CHAN_NUM field.
	I2S_TX_TDM_CTRL_TX_TDM_TOT_CHAN_NUM_Msk = 0xf0000
	// Position of TX_TDM_SKIP_MSK_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_SKIP_MSK_EN_Pos = 0x14
	// Bit mask of TX_TDM_SKIP_MSK_EN field.
	I2S_TX_TDM_CTRL_TX_TDM_SKIP_MSK_EN_Msk = 0x100000
	// Bit TX_TDM_SKIP_MSK_EN.
	I2S_TX_TDM_CTRL_TX_TDM_SKIP_MSK_EN = 0x100000

	// RX_TIMING: I2S RX timing control register
	// Position of RX_SD_IN_DM field.
	I2S_RX_TIMING_RX_SD_IN_DM_Pos = 0x0
	// Bit mask of RX_SD_IN_DM field.
	I2S_RX_TIMING_RX_SD_IN_DM_Msk = 0x3
	// Position of RX_WS_OUT_DM field.
	I2S_RX_TIMING_RX_WS_OUT_DM_Pos = 0x10
	// Bit mask of RX_WS_OUT_DM field.
	I2S_RX_TIMING_RX_WS_OUT_DM_Msk = 0x30000
	// Position of RX_BCK_OUT_DM field.
	I2S_RX_TIMING_RX_BCK_OUT_DM_Pos = 0x14
	// Bit mask of RX_BCK_OUT_DM field.
	I2S_RX_TIMING_RX_BCK_OUT_DM_Msk = 0x300000
	// Position of RX_WS_IN_DM field.
	I2S_RX_TIMING_RX_WS_IN_DM_Pos = 0x18
	// Bit mask of RX_WS_IN_DM field.
	I2S_RX_TIMING_RX_WS_IN_DM_Msk = 0x3000000
	// Position of RX_BCK_IN_DM field.
	I2S_RX_TIMING_RX_BCK_IN_DM_Pos = 0x1c
	// Bit mask of RX_BCK_IN_DM field.
	I2S_RX_TIMING_RX_BCK_IN_DM_Msk = 0x30000000

	// TX_TIMING: I2S TX timing control register
	// Position of TX_SD_OUT_DM field.
	I2S_TX_TIMING_TX_SD_OUT_DM_Pos = 0x0
	// Bit mask of TX_SD_OUT_DM field.
	I2S_TX_TIMING_TX_SD_OUT_DM_Msk = 0x3
	// Position of TX_SD1_OUT_DM field.
	I2S_TX_TIMING_TX_SD1_OUT_DM_Pos = 0x4
	// Bit mask of TX_SD1_OUT_DM field.
	I2S_TX_TIMING_TX_SD1_OUT_DM_Msk = 0x30
	// Position of TX_WS_OUT_DM field.
	I2S_TX_TIMING_TX_WS_OUT_DM_Pos = 0x10
	// Bit mask of TX_WS_OUT_DM field.
	I2S_TX_TIMING_TX_WS_OUT_DM_Msk = 0x30000
	// Position of TX_BCK_OUT_DM field.
	I2S_TX_TIMING_TX_BCK_OUT_DM_Pos = 0x14
	// Bit mask of TX_BCK_OUT_DM field.
	I2S_TX_TIMING_TX_BCK_OUT_DM_Msk = 0x300000
	// Position of TX_WS_IN_DM field.
	I2S_TX_TIMING_TX_WS_IN_DM_Pos = 0x18
	// Bit mask of TX_WS_IN_DM field.
	I2S_TX_TIMING_TX_WS_IN_DM_Msk = 0x3000000
	// Position of TX_BCK_IN_DM field.
	I2S_TX_TIMING_TX_BCK_IN_DM_Pos = 0x1c
	// Bit mask of TX_BCK_IN_DM field.
	I2S_TX_TIMING_TX_BCK_IN_DM_Msk = 0x30000000

	// LC_HUNG_CONF: I2S HUNG configure register.
	// Position of LC_FIFO_TIMEOUT field.
	I2S_LC_HUNG_CONF_LC_FIFO_TIMEOUT_Pos = 0x0
	// Bit mask of LC_FIFO_TIMEOUT field.
	I2S_LC_HUNG_CONF_LC_FIFO_TIMEOUT_Msk = 0xff
	// Position of LC_FIFO_TIMEOUT_SHIFT field.
	I2S_LC_HUNG_CONF_LC_FIFO_TIMEOUT_SHIFT_Pos = 0x8
	// Bit mask of LC_FIFO_TIMEOUT_SHIFT field.
	I2S_LC_HUNG_CONF_LC_FIFO_TIMEOUT_SHIFT_Msk = 0x700
	// Position of LC_FIFO_TIMEOUT_ENA field.
	I2S_LC_HUNG_CONF_LC_FIFO_TIMEOUT_ENA_Pos = 0xb
	// Bit mask of LC_FIFO_TIMEOUT_ENA field.
	I2S_LC_HUNG_CONF_LC_FIFO_TIMEOUT_ENA_Msk = 0x800
	// Bit LC_FIFO_TIMEOUT_ENA.
	I2S_LC_HUNG_CONF_LC_FIFO_TIMEOUT_ENA = 0x800

	// RXEOF_NUM: I2S RX data number control register.
	// Position of RX_EOF_NUM field.
	I2S_RXEOF_NUM_RX_EOF_NUM_Pos = 0x0
	// Bit mask of RX_EOF_NUM field.
	I2S_RXEOF_NUM_RX_EOF_NUM_Msk = 0xfff

	// CONF_SIGLE_DATA: I2S signal data register
	// Position of SINGLE_DATA field.
	I2S_CONF_SIGLE_DATA_SINGLE_DATA_Pos = 0x0
	// Bit mask of SINGLE_DATA field.
	I2S_CONF_SIGLE_DATA_SINGLE_DATA_Msk = 0xffffffff

	// STATE: I2S TX status register
	// Position of TX_IDLE field.
	I2S_STATE_TX_IDLE_Pos = 0x0
	// Bit mask of TX_IDLE field.
	I2S_STATE_TX_IDLE_Msk = 0x1
	// Bit TX_IDLE.
	I2S_STATE_TX_IDLE = 0x1

	// DATE: Version control register
	// Position of DATE field.
	I2S_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	I2S_DATE_DATE_Msk = 0xfffffff
)

// Bitfields for INTERRUPT_CORE0: Peripheral INTERRUPT_CORE0
const (
	// MAC_INTR_MAP: mac intr map register
	// Position of MAC_INTR_MAP field.
	INTERRUPT_CORE0_MAC_INTR_MAP_MAC_INTR_MAP_Pos = 0x0
	// Bit mask of MAC_INTR_MAP field.
	INTERRUPT_CORE0_MAC_INTR_MAP_MAC_INTR_MAP_Msk = 0x1f

	// MAC_NMI_MAP: mac nmi_intr map register
	// Position of MAC_NMI_MAP field.
	INTERRUPT_CORE0_MAC_NMI_MAP_MAC_NMI_MAP_Pos = 0x0
	// Bit mask of MAC_NMI_MAP field.
	INTERRUPT_CORE0_MAC_NMI_MAP_MAC_NMI_MAP_Msk = 0x1f

	// PWR_INTR_MAP: pwr intr map register
	// Position of PWR_INTR_MAP field.
	INTERRUPT_CORE0_PWR_INTR_MAP_PWR_INTR_MAP_Pos = 0x0
	// Bit mask of PWR_INTR_MAP field.
	INTERRUPT_CORE0_PWR_INTR_MAP_PWR_INTR_MAP_Msk = 0x1f

	// BB_INT_MAP: bb intr map register
	// Position of BB_INT_MAP field.
	INTERRUPT_CORE0_BB_INT_MAP_BB_INT_MAP_Pos = 0x0
	// Bit mask of BB_INT_MAP field.
	INTERRUPT_CORE0_BB_INT_MAP_BB_INT_MAP_Msk = 0x1f

	// BT_MAC_INT_MAP: bt intr map register
	// Position of BT_MAC_INT_MAP field.
	INTERRUPT_CORE0_BT_MAC_INT_MAP_BT_MAC_INT_MAP_Pos = 0x0
	// Bit mask of BT_MAC_INT_MAP field.
	INTERRUPT_CORE0_BT_MAC_INT_MAP_BT_MAC_INT_MAP_Msk = 0x1f

	// BT_BB_INT_MAP: bb_bt intr map register
	// Position of BT_BB_INT_MAP field.
	INTERRUPT_CORE0_BT_BB_INT_MAP_BT_BB_INT_MAP_Pos = 0x0
	// Bit mask of BT_BB_INT_MAP field.
	INTERRUPT_CORE0_BT_BB_INT_MAP_BT_BB_INT_MAP_Msk = 0x1f

	// BT_BB_NMI_MAP: bb_bt_nmi intr map register
	// Position of BT_BB_NMI_MAP field.
	INTERRUPT_CORE0_BT_BB_NMI_MAP_BT_BB_NMI_MAP_Pos = 0x0
	// Bit mask of BT_BB_NMI_MAP field.
	INTERRUPT_CORE0_BT_BB_NMI_MAP_BT_BB_NMI_MAP_Msk = 0x1f

	// RWBT_IRQ_MAP: rwbt intr map register
	// Position of RWBT_IRQ_MAP field.
	INTERRUPT_CORE0_RWBT_IRQ_MAP_RWBT_IRQ_MAP_Pos = 0x0
	// Bit mask of RWBT_IRQ_MAP field.
	INTERRUPT_CORE0_RWBT_IRQ_MAP_RWBT_IRQ_MAP_Msk = 0x1f

	// RWBLE_IRQ_MAP: rwble intr map register
	// Position of RWBLE_IRQ_MAP field.
	INTERRUPT_CORE0_RWBLE_IRQ_MAP_RWBLE_IRQ_MAP_Pos = 0x0
	// Bit mask of RWBLE_IRQ_MAP field.
	INTERRUPT_CORE0_RWBLE_IRQ_MAP_RWBLE_IRQ_MAP_Msk = 0x1f

	// RWBT_NMI_MAP: rwbt_nmi intr map register
	// Position of RWBT_NMI_MAP field.
	INTERRUPT_CORE0_RWBT_NMI_MAP_RWBT_NMI_MAP_Pos = 0x0
	// Bit mask of RWBT_NMI_MAP field.
	INTERRUPT_CORE0_RWBT_NMI_MAP_RWBT_NMI_MAP_Msk = 0x1f

	// RWBLE_NMI_MAP: rwble_nmi intr map register
	// Position of RWBLE_NMI_MAP field.
	INTERRUPT_CORE0_RWBLE_NMI_MAP_RWBLE_NMI_MAP_Pos = 0x0
	// Bit mask of RWBLE_NMI_MAP field.
	INTERRUPT_CORE0_RWBLE_NMI_MAP_RWBLE_NMI_MAP_Msk = 0x1f

	// I2C_MST_INT_MAP: i2c intr map register
	// Position of I2C_MST_INT_MAP field.
	INTERRUPT_CORE0_I2C_MST_INT_MAP_I2C_MST_INT_MAP_Pos = 0x0
	// Bit mask of I2C_MST_INT_MAP field.
	INTERRUPT_CORE0_I2C_MST_INT_MAP_I2C_MST_INT_MAP_Msk = 0x1f

	// SLC0_INTR_MAP: slc0 intr map register
	// Position of SLC0_INTR_MAP field.
	INTERRUPT_CORE0_SLC0_INTR_MAP_SLC0_INTR_MAP_Pos = 0x0
	// Bit mask of SLC0_INTR_MAP field.
	INTERRUPT_CORE0_SLC0_INTR_MAP_SLC0_INTR_MAP_Msk = 0x1f

	// SLC1_INTR_MAP: slc1 intr map register
	// Position of SLC1_INTR_MAP field.
	INTERRUPT_CORE0_SLC1_INTR_MAP_SLC1_INTR_MAP_Pos = 0x0
	// Bit mask of SLC1_INTR_MAP field.
	INTERRUPT_CORE0_SLC1_INTR_MAP_SLC1_INTR_MAP_Msk = 0x1f

	// APB_CTRL_INTR_MAP: apb_ctrl intr map register
	// Position of APB_CTRL_INTR_MAP field.
	INTERRUPT_CORE0_APB_CTRL_INTR_MAP_APB_CTRL_INTR_MAP_Pos = 0x0
	// Bit mask of APB_CTRL_INTR_MAP field.
	INTERRUPT_CORE0_APB_CTRL_INTR_MAP_APB_CTRL_INTR_MAP_Msk = 0x1f

	// UHCI0_INTR_MAP: uchi0 intr map register
	// Position of UHCI0_INTR_MAP field.
	INTERRUPT_CORE0_UHCI0_INTR_MAP_UHCI0_INTR_MAP_Pos = 0x0
	// Bit mask of UHCI0_INTR_MAP field.
	INTERRUPT_CORE0_UHCI0_INTR_MAP_UHCI0_INTR_MAP_Msk = 0x1f

	// GPIO_INTERRUPT_PRO_MAP: gpio intr map register
	// Position of GPIO_INTERRUPT_PRO_MAP field.
	INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_MAP_GPIO_INTERRUPT_PRO_MAP_Pos = 0x0
	// Bit mask of GPIO_INTERRUPT_PRO_MAP field.
	INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_MAP_GPIO_INTERRUPT_PRO_MAP_Msk = 0x1f

	// GPIO_INTERRUPT_PRO_NMI_MAP: gpio_pro intr map register
	// Position of GPIO_INTERRUPT_PRO_NMI_MAP field.
	INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_NMI_MAP_GPIO_INTERRUPT_PRO_NMI_MAP_Pos = 0x0
	// Bit mask of GPIO_INTERRUPT_PRO_NMI_MAP field.
	INTERRUPT_CORE0_GPIO_INTERRUPT_PRO_NMI_MAP_GPIO_INTERRUPT_PRO_NMI_MAP_Msk = 0x1f

	// SPI_INTR_1_MAP: gpio_pro_nmi intr map register
	// Position of SPI_INTR_1_MAP field.
	INTERRUPT_CORE0_SPI_INTR_1_MAP_SPI_INTR_1_MAP_Pos = 0x0
	// Bit mask of SPI_INTR_1_MAP field.
	INTERRUPT_CORE0_SPI_INTR_1_MAP_SPI_INTR_1_MAP_Msk = 0x1f

	// SPI_INTR_2_MAP: spi1 intr map register
	// Position of SPI_INTR_2_MAP field.
	INTERRUPT_CORE0_SPI_INTR_2_MAP_SPI_INTR_2_MAP_Pos = 0x0
	// Bit mask of SPI_INTR_2_MAP field.
	INTERRUPT_CORE0_SPI_INTR_2_MAP_SPI_INTR_2_MAP_Msk = 0x1f

	// I2S1_INT_MAP: spi2 intr map register
	// Position of I2S1_INT_MAP field.
	INTERRUPT_CORE0_I2S1_INT_MAP_I2S1_INT_MAP_Pos = 0x0
	// Bit mask of I2S1_INT_MAP field.
	INTERRUPT_CORE0_I2S1_INT_MAP_I2S1_INT_MAP_Msk = 0x1f

	// UART_INTR_MAP: i2s1 intr map register
	// Position of UART_INTR_MAP field.
	INTERRUPT_CORE0_UART_INTR_MAP_UART_INTR_MAP_Pos = 0x0
	// Bit mask of UART_INTR_MAP field.
	INTERRUPT_CORE0_UART_INTR_MAP_UART_INTR_MAP_Msk = 0x1f

	// UART1_INTR_MAP: uart1 intr map register
	// Position of UART1_INTR_MAP field.
	INTERRUPT_CORE0_UART1_INTR_MAP_UART1_INTR_MAP_Pos = 0x0
	// Bit mask of UART1_INTR_MAP field.
	INTERRUPT_CORE0_UART1_INTR_MAP_UART1_INTR_MAP_Msk = 0x1f

	// LEDC_INT_MAP: ledc intr map register
	// Position of LEDC_INT_MAP field.
	INTERRUPT_CORE0_LEDC_INT_MAP_LEDC_INT_MAP_Pos = 0x0
	// Bit mask of LEDC_INT_MAP field.
	INTERRUPT_CORE0_LEDC_INT_MAP_LEDC_INT_MAP_Msk = 0x1f

	// EFUSE_INT_MAP: efuse intr map register
	// Position of EFUSE_INT_MAP field.
	INTERRUPT_CORE0_EFUSE_INT_MAP_EFUSE_INT_MAP_Pos = 0x0
	// Bit mask of EFUSE_INT_MAP field.
	INTERRUPT_CORE0_EFUSE_INT_MAP_EFUSE_INT_MAP_Msk = 0x1f

	// CAN_INT_MAP: can intr map register
	// Position of CAN_INT_MAP field.
	INTERRUPT_CORE0_CAN_INT_MAP_CAN_INT_MAP_Pos = 0x0
	// Bit mask of CAN_INT_MAP field.
	INTERRUPT_CORE0_CAN_INT_MAP_CAN_INT_MAP_Msk = 0x1f

	// USB_INTR_MAP: usb intr map register
	// Position of USB_INTR_MAP field.
	INTERRUPT_CORE0_USB_INTR_MAP_USB_INTR_MAP_Pos = 0x0
	// Bit mask of USB_INTR_MAP field.
	INTERRUPT_CORE0_USB_INTR_MAP_USB_INTR_MAP_Msk = 0x1f

	// RTC_CORE_INTR_MAP: rtc intr map register
	// Position of RTC_CORE_INTR_MAP field.
	INTERRUPT_CORE0_RTC_CORE_INTR_MAP_RTC_CORE_INTR_MAP_Pos = 0x0
	// Bit mask of RTC_CORE_INTR_MAP field.
	INTERRUPT_CORE0_RTC_CORE_INTR_MAP_RTC_CORE_INTR_MAP_Msk = 0x1f

	// RMT_INTR_MAP: rmt intr map register
	// Position of RMT_INTR_MAP field.
	INTERRUPT_CORE0_RMT_INTR_MAP_RMT_INTR_MAP_Pos = 0x0
	// Bit mask of RMT_INTR_MAP field.
	INTERRUPT_CORE0_RMT_INTR_MAP_RMT_INTR_MAP_Msk = 0x1f

	// I2C_EXT0_INTR_MAP: i2c intr map register
	// Position of I2C_EXT0_INTR_MAP field.
	INTERRUPT_CORE0_I2C_EXT0_INTR_MAP_I2C_EXT0_INTR_MAP_Pos = 0x0
	// Bit mask of I2C_EXT0_INTR_MAP field.
	INTERRUPT_CORE0_I2C_EXT0_INTR_MAP_I2C_EXT0_INTR_MAP_Msk = 0x1f

	// TIMER_INT1_MAP: timer1 intr map register
	// Position of TIMER_INT1_MAP field.
	INTERRUPT_CORE0_TIMER_INT1_MAP_TIMER_INT1_MAP_Pos = 0x0
	// Bit mask of TIMER_INT1_MAP field.
	INTERRUPT_CORE0_TIMER_INT1_MAP_TIMER_INT1_MAP_Msk = 0x1f

	// TIMER_INT2_MAP: timer2 intr map register
	// Position of TIMER_INT2_MAP field.
	INTERRUPT_CORE0_TIMER_INT2_MAP_TIMER_INT2_MAP_Pos = 0x0
	// Bit mask of TIMER_INT2_MAP field.
	INTERRUPT_CORE0_TIMER_INT2_MAP_TIMER_INT2_MAP_Msk = 0x1f

	// TG_T0_INT_MAP: tg to intr map register
	// Position of TG_T0_INT_MAP field.
	INTERRUPT_CORE0_TG_T0_INT_MAP_TG_T0_INT_MAP_Pos = 0x0
	// Bit mask of TG_T0_INT_MAP field.
	INTERRUPT_CORE0_TG_T0_INT_MAP_TG_T0_INT_MAP_Msk = 0x1f

	// TG_WDT_INT_MAP: tg wdt intr map register
	// Position of TG_WDT_INT_MAP field.
	INTERRUPT_CORE0_TG_WDT_INT_MAP_TG_WDT_INT_MAP_Pos = 0x0
	// Bit mask of TG_WDT_INT_MAP field.
	INTERRUPT_CORE0_TG_WDT_INT_MAP_TG_WDT_INT_MAP_Msk = 0x1f

	// TG1_T0_INT_MAP: tg1 to intr map register
	// Position of TG1_T0_INT_MAP field.
	INTERRUPT_CORE0_TG1_T0_INT_MAP_TG1_T0_INT_MAP_Pos = 0x0
	// Bit mask of TG1_T0_INT_MAP field.
	INTERRUPT_CORE0_TG1_T0_INT_MAP_TG1_T0_INT_MAP_Msk = 0x1f

	// TG1_WDT_INT_MAP: tg1 wdt intr map register
	// Position of TG1_WDT_INT_MAP field.
	INTERRUPT_CORE0_TG1_WDT_INT_MAP_TG1_WDT_INT_MAP_Pos = 0x0
	// Bit mask of TG1_WDT_INT_MAP field.
	INTERRUPT_CORE0_TG1_WDT_INT_MAP_TG1_WDT_INT_MAP_Msk = 0x1f

	// CACHE_IA_INT_MAP: cache ia intr map register
	// Position of CACHE_IA_INT_MAP field.
	INTERRUPT_CORE0_CACHE_IA_INT_MAP_CACHE_IA_INT_MAP_Pos = 0x0
	// Bit mask of CACHE_IA_INT_MAP field.
	INTERRUPT_CORE0_CACHE_IA_INT_MAP_CACHE_IA_INT_MAP_Msk = 0x1f

	// SYSTIMER_TARGET0_INT_MAP: systimer intr map register
	// Position of SYSTIMER_TARGET0_INT_MAP field.
	INTERRUPT_CORE0_SYSTIMER_TARGET0_INT_MAP_SYSTIMER_TARGET0_INT_MAP_Pos = 0x0
	// Bit mask of SYSTIMER_TARGET0_INT_MAP field.
	INTERRUPT_CORE0_SYSTIMER_TARGET0_INT_MAP_SYSTIMER_TARGET0_INT_MAP_Msk = 0x1f

	// SYSTIMER_TARGET1_INT_MAP: systimer target1 intr map register
	// Position of SYSTIMER_TARGET1_INT_MAP field.
	INTERRUPT_CORE0_SYSTIMER_TARGET1_INT_MAP_SYSTIMER_TARGET1_INT_MAP_Pos = 0x0
	// Bit mask of SYSTIMER_TARGET1_INT_MAP field.
	INTERRUPT_CORE0_SYSTIMER_TARGET1_INT_MAP_SYSTIMER_TARGET1_INT_MAP_Msk = 0x1f

	// SYSTIMER_TARGET2_INT_MAP: systimer target2 intr map register
	// Position of SYSTIMER_TARGET2_INT_MAP field.
	INTERRUPT_CORE0_SYSTIMER_TARGET2_INT_MAP_SYSTIMER_TARGET2_INT_MAP_Pos = 0x0
	// Bit mask of SYSTIMER_TARGET2_INT_MAP field.
	INTERRUPT_CORE0_SYSTIMER_TARGET2_INT_MAP_SYSTIMER_TARGET2_INT_MAP_Msk = 0x1f

	// SPI_MEM_REJECT_INTR_MAP: spi mem reject intr map register
	// Position of SPI_MEM_REJECT_INTR_MAP field.
	INTERRUPT_CORE0_SPI_MEM_REJECT_INTR_MAP_SPI_MEM_REJECT_INTR_MAP_Pos = 0x0
	// Bit mask of SPI_MEM_REJECT_INTR_MAP field.
	INTERRUPT_CORE0_SPI_MEM_REJECT_INTR_MAP_SPI_MEM_REJECT_INTR_MAP_Msk = 0x1f

	// ICACHE_PRELOAD_INT_MAP: icache perload intr map register
	// Position of ICACHE_PRELOAD_INT_MAP field.
	INTERRUPT_CORE0_ICACHE_PRELOAD_INT_MAP_ICACHE_PRELOAD_INT_MAP_Pos = 0x0
	// Bit mask of ICACHE_PRELOAD_INT_MAP field.
	INTERRUPT_CORE0_ICACHE_PRELOAD_INT_MAP_ICACHE_PRELOAD_INT_MAP_Msk = 0x1f

	// ICACHE_SYNC_INT_MAP: icache sync intr map register
	// Position of ICACHE_SYNC_INT_MAP field.
	INTERRUPT_CORE0_ICACHE_SYNC_INT_MAP_ICACHE_SYNC_INT_MAP_Pos = 0x0
	// Bit mask of ICACHE_SYNC_INT_MAP field.
	INTERRUPT_CORE0_ICACHE_SYNC_INT_MAP_ICACHE_SYNC_INT_MAP_Msk = 0x1f

	// APB_ADC_INT_MAP: adc intr map register
	// Position of APB_ADC_INT_MAP field.
	INTERRUPT_CORE0_APB_ADC_INT_MAP_APB_ADC_INT_MAP_Pos = 0x0
	// Bit mask of APB_ADC_INT_MAP field.
	INTERRUPT_CORE0_APB_ADC_INT_MAP_APB_ADC_INT_MAP_Msk = 0x1f

	// DMA_CH0_INT_MAP: dma ch0 intr map register
	// Position of DMA_CH0_INT_MAP field.
	INTERRUPT_CORE0_DMA_CH0_INT_MAP_DMA_CH0_INT_MAP_Pos = 0x0
	// Bit mask of DMA_CH0_INT_MAP field.
	INTERRUPT_CORE0_DMA_CH0_INT_MAP_DMA_CH0_INT_MAP_Msk = 0x1f

	// DMA_CH1_INT_MAP: dma ch1 intr map register
	// Position of DMA_CH1_INT_MAP field.
	INTERRUPT_CORE0_DMA_CH1_INT_MAP_DMA_CH1_INT_MAP_Pos = 0x0
	// Bit mask of DMA_CH1_INT_MAP field.
	INTERRUPT_CORE0_DMA_CH1_INT_MAP_DMA_CH1_INT_MAP_Msk = 0x1f

	// DMA_CH2_INT_MAP: dma ch2 intr map register
	// Position of DMA_CH2_INT_MAP field.
	INTERRUPT_CORE0_DMA_CH2_INT_MAP_DMA_CH2_INT_MAP_Pos = 0x0
	// Bit mask of DMA_CH2_INT_MAP field.
	INTERRUPT_CORE0_DMA_CH2_INT_MAP_DMA_CH2_INT_MAP_Msk = 0x1f

	// RSA_INT_MAP: rsa intr map register
	// Position of RSA_INT_MAP field.
	INTERRUPT_CORE0_RSA_INT_MAP_RSA_INT_MAP_Pos = 0x0
	// Bit mask of RSA_INT_MAP field.
	INTERRUPT_CORE0_RSA_INT_MAP_RSA_INT_MAP_Msk = 0x1f

	// AES_INT_MAP: aes intr map register
	// Position of AES_INT_MAP field.
	INTERRUPT_CORE0_AES_INT_MAP_AES_INT_MAP_Pos = 0x0
	// Bit mask of AES_INT_MAP field.
	INTERRUPT_CORE0_AES_INT_MAP_AES_INT_MAP_Msk = 0x1f

	// SHA_INT_MAP: sha intr map register
	// Position of SHA_INT_MAP field.
	INTERRUPT_CORE0_SHA_INT_MAP_SHA_INT_MAP_Pos = 0x0
	// Bit mask of SHA_INT_MAP field.
	INTERRUPT_CORE0_SHA_INT_MAP_SHA_INT_MAP_Msk = 0x1f

	// CPU_INTR_FROM_CPU_0_MAP: cpu from cpu 0 intr map register
	// Position of CPU_INTR_FROM_CPU_0_MAP field.
	INTERRUPT_CORE0_CPU_INTR_FROM_CPU_0_MAP_CPU_INTR_FROM_CPU_0_MAP_Pos = 0x0
	// Bit mask of CPU_INTR_FROM_CPU_0_MAP field.
	INTERRUPT_CORE0_CPU_INTR_FROM_CPU_0_MAP_CPU_INTR_FROM_CPU_0_MAP_Msk = 0x1f

	// CPU_INTR_FROM_CPU_1_MAP: cpu from cpu 0 intr map register
	// Position of CPU_INTR_FROM_CPU_1_MAP field.
	INTERRUPT_CORE0_CPU_INTR_FROM_CPU_1_MAP_CPU_INTR_FROM_CPU_1_MAP_Pos = 0x0
	// Bit mask of CPU_INTR_FROM_CPU_1_MAP field.
	INTERRUPT_CORE0_CPU_INTR_FROM_CPU_1_MAP_CPU_INTR_FROM_CPU_1_MAP_Msk = 0x1f

	// CPU_INTR_FROM_CPU_2_MAP: cpu from cpu 1 intr map register
	// Position of CPU_INTR_FROM_CPU_2_MAP field.
	INTERRUPT_CORE0_CPU_INTR_FROM_CPU_2_MAP_CPU_INTR_FROM_CPU_2_MAP_Pos = 0x0
	// Bit mask of CPU_INTR_FROM_CPU_2_MAP field.
	INTERRUPT_CORE0_CPU_INTR_FROM_CPU_2_MAP_CPU_INTR_FROM_CPU_2_MAP_Msk = 0x1f

	// CPU_INTR_FROM_CPU_3_MAP: cpu from cpu 3 intr map register
	// Position of CPU_INTR_FROM_CPU_3_MAP field.
	INTERRUPT_CORE0_CPU_INTR_FROM_CPU_3_MAP_CPU_INTR_FROM_CPU_3_MAP_Pos = 0x0
	// Bit mask of CPU_INTR_FROM_CPU_3_MAP field.
	INTERRUPT_CORE0_CPU_INTR_FROM_CPU_3_MAP_CPU_INTR_FROM_CPU_3_MAP_Msk = 0x1f

	// ASSIST_DEBUG_INTR_MAP: assist debug intr map register
	// Position of ASSIST_DEBUG_INTR_MAP field.
	INTERRUPT_CORE0_ASSIST_DEBUG_INTR_MAP_ASSIST_DEBUG_INTR_MAP_Pos = 0x0
	// Bit mask of ASSIST_DEBUG_INTR_MAP field.
	INTERRUPT_CORE0_ASSIST_DEBUG_INTR_MAP_ASSIST_DEBUG_INTR_MAP_Msk = 0x1f

	// DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP: dma pms violatile intr map register
	// Position of DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP_Pos = 0x0
	// Bit mask of DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_MAP_Msk = 0x1f

	// CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP: iram0 pms violatile intr map register
	// Position of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_Pos = 0x0
	// Bit mask of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_Msk = 0x1f

	// CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP: mac intr map register
	// Position of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_Pos = 0x0
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_MAP_Msk = 0x1f

	// CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP: mac intr map register
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_MAP_Msk = 0x1f

	// CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP: mac intr map register
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP field.
	INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP field.
	INTERRUPT_CORE0_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP_CORE_0_PIF_PMS_MONITOR_VIOLATE_SIZE_INTR_MAP_Msk = 0x1f

	// BACKUP_PMS_VIOLATE_INTR_MAP: mac intr map register
	// Position of BACKUP_PMS_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_BACKUP_PMS_VIOLATE_INTR_MAP_BACKUP_PMS_VIOLATE_INTR_MAP_Pos = 0x0
	// Bit mask of BACKUP_PMS_VIOLATE_INTR_MAP field.
	INTERRUPT_CORE0_BACKUP_PMS_VIOLATE_INTR_MAP_BACKUP_PMS_VIOLATE_INTR_MAP_Msk = 0x1f

	// CACHE_CORE0_ACS_INT_MAP: mac intr map register
	// Position of CACHE_CORE0_ACS_INT_MAP field.
	INTERRUPT_CORE0_CACHE_CORE0_ACS_INT_MAP_CACHE_CORE0_ACS_INT_MAP_Pos = 0x0
	// Bit mask of CACHE_CORE0_ACS_INT_MAP field.
	INTERRUPT_CORE0_CACHE_CORE0_ACS_INT_MAP_CACHE_CORE0_ACS_INT_MAP_Msk = 0x1f

	// INTR_STATUS_REG_0: mac intr map register
	// Position of INTR_STATUS_0 field.
	INTERRUPT_CORE0_INTR_STATUS_REG_0_INTR_STATUS_0_Pos = 0x0
	// Bit mask of INTR_STATUS_0 field.
	INTERRUPT_CORE0_INTR_STATUS_REG_0_INTR_STATUS_0_Msk = 0xffffffff

	// INTR_STATUS_REG_1: mac intr map register
	// Position of INTR_STATUS_1 field.
	INTERRUPT_CORE0_INTR_STATUS_REG_1_INTR_STATUS_1_Pos = 0x0
	// Bit mask of INTR_STATUS_1 field.
	INTERRUPT_CORE0_INTR_STATUS_REG_1_INTR_STATUS_1_Msk = 0xffffffff

	// CLOCK_GATE: mac intr map register
	// Position of REG_CLK_EN field.
	INTERRUPT_CORE0_CLOCK_GATE_REG_CLK_EN_Pos = 0x0
	// Bit mask of REG_CLK_EN field.
	INTERRUPT_CORE0_CLOCK_GATE_REG_CLK_EN_Msk = 0x1
	// Bit REG_CLK_EN.
	INTERRUPT_CORE0_CLOCK_GATE_REG_CLK_EN = 0x1

	// CPU_INT_ENABLE: mac intr map register
	// Position of CPU_INT_ENABLE field.
	INTERRUPT_CORE0_CPU_INT_ENABLE_CPU_INT_ENABLE_Pos = 0x0
	// Bit mask of CPU_INT_ENABLE field.
	INTERRUPT_CORE0_CPU_INT_ENABLE_CPU_INT_ENABLE_Msk = 0xffffffff

	// CPU_INT_TYPE: mac intr map register
	// Position of CPU_INT_TYPE field.
	INTERRUPT_CORE0_CPU_INT_TYPE_CPU_INT_TYPE_Pos = 0x0
	// Bit mask of CPU_INT_TYPE field.
	INTERRUPT_CORE0_CPU_INT_TYPE_CPU_INT_TYPE_Msk = 0xffffffff

	// CPU_INT_CLEAR: mac intr map register
	// Position of CPU_INT_CLEAR field.
	INTERRUPT_CORE0_CPU_INT_CLEAR_CPU_INT_CLEAR_Pos = 0x0
	// Bit mask of CPU_INT_CLEAR field.
	INTERRUPT_CORE0_CPU_INT_CLEAR_CPU_INT_CLEAR_Msk = 0xffffffff

	// CPU_INT_EIP_STATUS: mac intr map register
	// Position of CPU_INT_EIP_STATUS field.
	INTERRUPT_CORE0_CPU_INT_EIP_STATUS_CPU_INT_EIP_STATUS_Pos = 0x0
	// Bit mask of CPU_INT_EIP_STATUS field.
	INTERRUPT_CORE0_CPU_INT_EIP_STATUS_CPU_INT_EIP_STATUS_Msk = 0xffffffff

	// CPU_INT_PRI_0: mac intr map register
	// Position of CPU_PRI_0_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_0_CPU_PRI_0_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_0_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_0_CPU_PRI_0_MAP_Msk = 0xf

	// CPU_INT_PRI_1: mac intr map register
	// Position of CPU_PRI_1_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_1_CPU_PRI_1_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_1_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_1_CPU_PRI_1_MAP_Msk = 0xf

	// CPU_INT_PRI_2: mac intr map register
	// Position of CPU_PRI_2_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_2_CPU_PRI_2_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_2_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_2_CPU_PRI_2_MAP_Msk = 0xf

	// CPU_INT_PRI_3: mac intr map register
	// Position of CPU_PRI_3_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_3_CPU_PRI_3_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_3_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_3_CPU_PRI_3_MAP_Msk = 0xf

	// CPU_INT_PRI_4: mac intr map register
	// Position of CPU_PRI_4_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_4_CPU_PRI_4_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_4_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_4_CPU_PRI_4_MAP_Msk = 0xf

	// CPU_INT_PRI_5: mac intr map register
	// Position of CPU_PRI_5_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_5_CPU_PRI_5_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_5_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_5_CPU_PRI_5_MAP_Msk = 0xf

	// CPU_INT_PRI_6: mac intr map register
	// Position of CPU_PRI_6_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_6_CPU_PRI_6_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_6_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_6_CPU_PRI_6_MAP_Msk = 0xf

	// CPU_INT_PRI_7: mac intr map register
	// Position of CPU_PRI_7_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_7_CPU_PRI_7_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_7_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_7_CPU_PRI_7_MAP_Msk = 0xf

	// CPU_INT_PRI_8: mac intr map register
	// Position of CPU_PRI_8_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_8_CPU_PRI_8_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_8_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_8_CPU_PRI_8_MAP_Msk = 0xf

	// CPU_INT_PRI_9: mac intr map register
	// Position of CPU_PRI_9_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_9_CPU_PRI_9_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_9_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_9_CPU_PRI_9_MAP_Msk = 0xf

	// CPU_INT_PRI_10: mac intr map register
	// Position of CPU_PRI_10_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_10_CPU_PRI_10_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_10_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_10_CPU_PRI_10_MAP_Msk = 0xf

	// CPU_INT_PRI_11: mac intr map register
	// Position of CPU_PRI_11_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_11_CPU_PRI_11_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_11_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_11_CPU_PRI_11_MAP_Msk = 0xf

	// CPU_INT_PRI_12: mac intr map register
	// Position of CPU_PRI_12_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_12_CPU_PRI_12_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_12_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_12_CPU_PRI_12_MAP_Msk = 0xf

	// CPU_INT_PRI_13: mac intr map register
	// Position of CPU_PRI_13_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_13_CPU_PRI_13_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_13_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_13_CPU_PRI_13_MAP_Msk = 0xf

	// CPU_INT_PRI_14: mac intr map register
	// Position of CPU_PRI_14_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_14_CPU_PRI_14_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_14_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_14_CPU_PRI_14_MAP_Msk = 0xf

	// CPU_INT_PRI_15: mac intr map register
	// Position of CPU_PRI_15_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_15_CPU_PRI_15_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_15_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_15_CPU_PRI_15_MAP_Msk = 0xf

	// CPU_INT_PRI_16: mac intr map register
	// Position of CPU_PRI_16_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_16_CPU_PRI_16_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_16_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_16_CPU_PRI_16_MAP_Msk = 0xf

	// CPU_INT_PRI_17: mac intr map register
	// Position of CPU_PRI_17_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_17_CPU_PRI_17_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_17_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_17_CPU_PRI_17_MAP_Msk = 0xf

	// CPU_INT_PRI_18: mac intr map register
	// Position of CPU_PRI_18_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_18_CPU_PRI_18_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_18_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_18_CPU_PRI_18_MAP_Msk = 0xf

	// CPU_INT_PRI_19: mac intr map register
	// Position of CPU_PRI_19_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_19_CPU_PRI_19_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_19_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_19_CPU_PRI_19_MAP_Msk = 0xf

	// CPU_INT_PRI_20: mac intr map register
	// Position of CPU_PRI_20_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_20_CPU_PRI_20_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_20_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_20_CPU_PRI_20_MAP_Msk = 0xf

	// CPU_INT_PRI_21: mac intr map register
	// Position of CPU_PRI_21_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_21_CPU_PRI_21_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_21_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_21_CPU_PRI_21_MAP_Msk = 0xf

	// CPU_INT_PRI_22: mac intr map register
	// Position of CPU_PRI_22_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_22_CPU_PRI_22_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_22_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_22_CPU_PRI_22_MAP_Msk = 0xf

	// CPU_INT_PRI_23: mac intr map register
	// Position of CPU_PRI_23_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_23_CPU_PRI_23_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_23_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_23_CPU_PRI_23_MAP_Msk = 0xf

	// CPU_INT_PRI_24: mac intr map register
	// Position of CPU_PRI_24_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_24_CPU_PRI_24_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_24_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_24_CPU_PRI_24_MAP_Msk = 0xf

	// CPU_INT_PRI_25: mac intr map register
	// Position of CPU_PRI_25_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_25_CPU_PRI_25_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_25_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_25_CPU_PRI_25_MAP_Msk = 0xf

	// CPU_INT_PRI_26: mac intr map register
	// Position of CPU_PRI_26_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_26_CPU_PRI_26_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_26_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_26_CPU_PRI_26_MAP_Msk = 0xf

	// CPU_INT_PRI_27: mac intr map register
	// Position of CPU_PRI_27_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_27_CPU_PRI_27_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_27_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_27_CPU_PRI_27_MAP_Msk = 0xf

	// CPU_INT_PRI_28: mac intr map register
	// Position of CPU_PRI_28_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_28_CPU_PRI_28_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_28_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_28_CPU_PRI_28_MAP_Msk = 0xf

	// CPU_INT_PRI_29: mac intr map register
	// Position of CPU_PRI_29_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_29_CPU_PRI_29_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_29_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_29_CPU_PRI_29_MAP_Msk = 0xf

	// CPU_INT_PRI_30: mac intr map register
	// Position of CPU_PRI_30_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_30_CPU_PRI_30_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_30_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_30_CPU_PRI_30_MAP_Msk = 0xf

	// CPU_INT_PRI_31: mac intr map register
	// Position of CPU_PRI_31_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_31_CPU_PRI_31_MAP_Pos = 0x0
	// Bit mask of CPU_PRI_31_MAP field.
	INTERRUPT_CORE0_CPU_INT_PRI_31_CPU_PRI_31_MAP_Msk = 0xf

	// CPU_INT_THRESH: mac intr map register
	// Position of CPU_INT_THRESH field.
	INTERRUPT_CORE0_CPU_INT_THRESH_CPU_INT_THRESH_Pos = 0x0
	// Bit mask of CPU_INT_THRESH field.
	INTERRUPT_CORE0_CPU_INT_THRESH_CPU_INT_THRESH_Msk = 0xf

	// INTERRUPT_REG_DATE: mac intr map register
	// Position of INTERRUPT_REG_DATE field.
	INTERRUPT_CORE0_INTERRUPT_REG_DATE_INTERRUPT_REG_DATE_Pos = 0x0
	// Bit mask of INTERRUPT_REG_DATE field.
	INTERRUPT_CORE0_INTERRUPT_REG_DATE_INTERRUPT_REG_DATE_Msk = 0xfffffff
)

// Bitfields for IO_MUX: Peripheral IO_MUX
const (
	// PIN_CTRL: Clock Output Configuration Register
	// Position of CLK_OUT1 field.
	IO_MUX_PIN_CTRL_CLK_OUT1_Pos = 0x0
	// Bit mask of CLK_OUT1 field.
	IO_MUX_PIN_CTRL_CLK_OUT1_Msk = 0xf
	// Position of CLK_OUT2 field.
	IO_MUX_PIN_CTRL_CLK_OUT2_Pos = 0x4
	// Bit mask of CLK_OUT2 field.
	IO_MUX_PIN_CTRL_CLK_OUT2_Msk = 0xf0
	// Position of CLK_OUT3 field.
	IO_MUX_PIN_CTRL_CLK_OUT3_Pos = 0x8
	// Bit mask of CLK_OUT3 field.
	IO_MUX_PIN_CTRL_CLK_OUT3_Msk = 0xf00

	// GPIO0: IO MUX Configure Register for pad XTAL_32K_P
	// Position of MCU_OE field.
	IO_MUX_GPIO_MCU_OE_Pos = 0x0
	// Bit mask of MCU_OE field.
	IO_MUX_GPIO_MCU_OE_Msk = 0x1
	// Bit MCU_OE.
	IO_MUX_GPIO_MCU_OE = 0x1
	// Position of SLP_SEL field.
	IO_MUX_GPIO_SLP_SEL_Pos = 0x1
	// Bit mask of SLP_SEL field.
	IO_MUX_GPIO_SLP_SEL_Msk = 0x2
	// Bit SLP_SEL.
	IO_MUX_GPIO_SLP_SEL = 0x2
	// Position of MCU_WPD field.
	IO_MUX_GPIO_MCU_WPD_Pos = 0x2
	// Bit mask of MCU_WPD field.
	IO_MUX_GPIO_MCU_WPD_Msk = 0x4
	// Bit MCU_WPD.
	IO_MUX_GPIO_MCU_WPD = 0x4
	// Position of MCU_WPU field.
	IO_MUX_GPIO_MCU_WPU_Pos = 0x3
	// Bit mask of MCU_WPU field.
	IO_MUX_GPIO_MCU_WPU_Msk = 0x8
	// Bit MCU_WPU.
	IO_MUX_GPIO_MCU_WPU = 0x8
	// Position of MCU_IE field.
	IO_MUX_GPIO_MCU_IE_Pos = 0x4
	// Bit mask of MCU_IE field.
	IO_MUX_GPIO_MCU_IE_Msk = 0x10
	// Bit MCU_IE.
	IO_MUX_GPIO_MCU_IE = 0x10
	// Position of FUN_WPD field.
	IO_MUX_GPIO_FUN_WPD_Pos = 0x7
	// Bit mask of FUN_WPD field.
	IO_MUX_GPIO_FUN_WPD_Msk = 0x80
	// Bit FUN_WPD.
	IO_MUX_GPIO_FUN_WPD = 0x80
	// Position of FUN_WPU field.
	IO_MUX_GPIO_FUN_WPU_Pos = 0x8
	// Bit mask of FUN_WPU field.
	IO_MUX_GPIO_FUN_WPU_Msk = 0x100
	// Bit FUN_WPU.
	IO_MUX_GPIO_FUN_WPU = 0x100
	// Position of FUN_IE field.
	IO_MUX_GPIO_FUN_IE_Pos = 0x9
	// Bit mask of FUN_IE field.
	IO_MUX_GPIO_FUN_IE_Msk = 0x200
	// Bit FUN_IE.
	IO_MUX_GPIO_FUN_IE = 0x200
	// Position of FUN_DRV field.
	IO_MUX_GPIO_FUN_DRV_Pos = 0xa
	// Bit mask of FUN_DRV field.
	IO_MUX_GPIO_FUN_DRV_Msk = 0xc00
	// Position of MCU_SEL field.
	IO_MUX_GPIO_MCU_SEL_Pos = 0xc
	// Bit mask of MCU_SEL field.
	IO_MUX_GPIO_MCU_SEL_Msk = 0x7000
	// Position of FILTER_EN field.
	IO_MUX_GPIO_FILTER_EN_Pos = 0xf
	// Bit mask of FILTER_EN field.
	IO_MUX_GPIO_FILTER_EN_Msk = 0x8000
	// Bit FILTER_EN.
	IO_MUX_GPIO_FILTER_EN = 0x8000

	// DATE: IO MUX Version Control Register
	// Position of REG_DATE field.
	IO_MUX_DATE_REG_DATE_Pos = 0x0
	// Bit mask of REG_DATE field.
	IO_MUX_DATE_REG_DATE_Msk = 0xfffffff
)

// Bitfields for LEDC: Peripheral LEDC
const (
	// LSCH0_CONF0: LEDC_LSCH0_CONF0.
	// Position of TIMER_SEL_LSCH0 field.
	LEDC_LSCH0_CONF0_TIMER_SEL_LSCH0_Pos = 0x0
	// Bit mask of TIMER_SEL_LSCH0 field.
	LEDC_LSCH0_CONF0_TIMER_SEL_LSCH0_Msk = 0x3
	// Position of SIG_OUT_EN_LSCH0 field.
	LEDC_LSCH0_CONF0_SIG_OUT_EN_LSCH0_Pos = 0x2
	// Bit mask of SIG_OUT_EN_LSCH0 field.
	LEDC_LSCH0_CONF0_SIG_OUT_EN_LSCH0_Msk = 0x4
	// Bit SIG_OUT_EN_LSCH0.
	LEDC_LSCH0_CONF0_SIG_OUT_EN_LSCH0 = 0x4
	// Position of IDLE_LV_LSCH0 field.
	LEDC_LSCH0_CONF0_IDLE_LV_LSCH0_Pos = 0x3
	// Bit mask of IDLE_LV_LSCH0 field.
	LEDC_LSCH0_CONF0_IDLE_LV_LSCH0_Msk = 0x8
	// Bit IDLE_LV_LSCH0.
	LEDC_LSCH0_CONF0_IDLE_LV_LSCH0 = 0x8
	// Position of PARA_UP_LSCH0 field.
	LEDC_LSCH0_CONF0_PARA_UP_LSCH0_Pos = 0x4
	// Bit mask of PARA_UP_LSCH0 field.
	LEDC_LSCH0_CONF0_PARA_UP_LSCH0_Msk = 0x10
	// Bit PARA_UP_LSCH0.
	LEDC_LSCH0_CONF0_PARA_UP_LSCH0 = 0x10
	// Position of OVF_NUM_LSCH0 field.
	LEDC_LSCH0_CONF0_OVF_NUM_LSCH0_Pos = 0x5
	// Bit mask of OVF_NUM_LSCH0 field.
	LEDC_LSCH0_CONF0_OVF_NUM_LSCH0_Msk = 0x7fe0
	// Position of OVF_CNT_EN_LSCH0 field.
	LEDC_LSCH0_CONF0_OVF_CNT_EN_LSCH0_Pos = 0xf
	// Bit mask of OVF_CNT_EN_LSCH0 field.
	LEDC_LSCH0_CONF0_OVF_CNT_EN_LSCH0_Msk = 0x8000
	// Bit OVF_CNT_EN_LSCH0.
	LEDC_LSCH0_CONF0_OVF_CNT_EN_LSCH0 = 0x8000
	// Position of OVF_CNT_RESET_LSCH0 field.
	LEDC_LSCH0_CONF0_OVF_CNT_RESET_LSCH0_Pos = 0x10
	// Bit mask of OVF_CNT_RESET_LSCH0 field.
	LEDC_LSCH0_CONF0_OVF_CNT_RESET_LSCH0_Msk = 0x10000
	// Bit OVF_CNT_RESET_LSCH0.
	LEDC_LSCH0_CONF0_OVF_CNT_RESET_LSCH0 = 0x10000

	// LSCH0_HPOINT: LEDC_LSCH0_HPOINT.
	// Position of HPOINT_LSCH0 field.
	LEDC_LSCH0_HPOINT_HPOINT_LSCH0_Pos = 0x0
	// Bit mask of HPOINT_LSCH0 field.
	LEDC_LSCH0_HPOINT_HPOINT_LSCH0_Msk = 0x3fff

	// LSCH0_DUTY: LEDC_LSCH0_DUTY.
	// Position of DUTY_LSCH0 field.
	LEDC_LSCH0_DUTY_DUTY_LSCH0_Pos = 0x0
	// Bit mask of DUTY_LSCH0 field.
	LEDC_LSCH0_DUTY_DUTY_LSCH0_Msk = 0x7ffff

	// LSCH0_CONF1: LEDC_LSCH0_CONF1.
	// Position of DUTY_SCALE_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_SCALE_LSCH0_Pos = 0x0
	// Bit mask of DUTY_SCALE_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_SCALE_LSCH0_Msk = 0x3ff
	// Position of DUTY_CYCLE_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_CYCLE_LSCH0_Pos = 0xa
	// Bit mask of DUTY_CYCLE_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_CYCLE_LSCH0_Msk = 0xffc00
	// Position of DUTY_NUM_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_NUM_LSCH0_Pos = 0x14
	// Bit mask of DUTY_NUM_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_NUM_LSCH0_Msk = 0x3ff00000
	// Position of DUTY_INC_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_INC_LSCH0_Pos = 0x1e
	// Bit mask of DUTY_INC_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_INC_LSCH0_Msk = 0x40000000
	// Bit DUTY_INC_LSCH0.
	LEDC_LSCH0_CONF1_DUTY_INC_LSCH0 = 0x40000000
	// Position of DUTY_START_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_START_LSCH0_Pos = 0x1f
	// Bit mask of DUTY_START_LSCH0 field.
	LEDC_LSCH0_CONF1_DUTY_START_LSCH0_Msk = 0x80000000
	// Bit DUTY_START_LSCH0.
	LEDC_LSCH0_CONF1_DUTY_START_LSCH0 = 0x80000000

	// LSCH0_DUTY_R: LEDC_LSCH0_DUTY_R.
	// Position of DUTY_LSCH0_R field.
	LEDC_LSCH0_DUTY_R_DUTY_LSCH0_R_Pos = 0x0
	// Bit mask of DUTY_LSCH0_R field.
	LEDC_LSCH0_DUTY_R_DUTY_LSCH0_R_Msk = 0x7ffff

	// LSCH1_CONF0: LEDC_LSCH1_CONF0.
	// Position of TIMER_SEL_LSCH1 field.
	LEDC_LSCH1_CONF0_TIMER_SEL_LSCH1_Pos = 0x0
	// Bit mask of TIMER_SEL_LSCH1 field.
	LEDC_LSCH1_CONF0_TIMER_SEL_LSCH1_Msk = 0x3
	// Position of SIG_OUT_EN_LSCH1 field.
	LEDC_LSCH1_CONF0_SIG_OUT_EN_LSCH1_Pos = 0x2
	// Bit mask of SIG_OUT_EN_LSCH1 field.
	LEDC_LSCH1_CONF0_SIG_OUT_EN_LSCH1_Msk = 0x4
	// Bit SIG_OUT_EN_LSCH1.
	LEDC_LSCH1_CONF0_SIG_OUT_EN_LSCH1 = 0x4
	// Position of IDLE_LV_LSCH1 field.
	LEDC_LSCH1_CONF0_IDLE_LV_LSCH1_Pos = 0x3
	// Bit mask of IDLE_LV_LSCH1 field.
	LEDC_LSCH1_CONF0_IDLE_LV_LSCH1_Msk = 0x8
	// Bit IDLE_LV_LSCH1.
	LEDC_LSCH1_CONF0_IDLE_LV_LSCH1 = 0x8
	// Position of PARA_UP_LSCH1 field.
	LEDC_LSCH1_CONF0_PARA_UP_LSCH1_Pos = 0x4
	// Bit mask of PARA_UP_LSCH1 field.
	LEDC_LSCH1_CONF0_PARA_UP_LSCH1_Msk = 0x10
	// Bit PARA_UP_LSCH1.
	LEDC_LSCH1_CONF0_PARA_UP_LSCH1 = 0x10
	// Position of OVF_NUM_LSCH1 field.
	LEDC_LSCH1_CONF0_OVF_NUM_LSCH1_Pos = 0x5
	// Bit mask of OVF_NUM_LSCH1 field.
	LEDC_LSCH1_CONF0_OVF_NUM_LSCH1_Msk = 0x7fe0
	// Position of OVF_CNT_EN_LSCH1 field.
	LEDC_LSCH1_CONF0_OVF_CNT_EN_LSCH1_Pos = 0xf
	// Bit mask of OVF_CNT_EN_LSCH1 field.
	LEDC_LSCH1_CONF0_OVF_CNT_EN_LSCH1_Msk = 0x8000
	// Bit OVF_CNT_EN_LSCH1.
	LEDC_LSCH1_CONF0_OVF_CNT_EN_LSCH1 = 0x8000
	// Position of OVF_CNT_RESET_LSCH1 field.
	LEDC_LSCH1_CONF0_OVF_CNT_RESET_LSCH1_Pos = 0x10
	// Bit mask of OVF_CNT_RESET_LSCH1 field.
	LEDC_LSCH1_CONF0_OVF_CNT_RESET_LSCH1_Msk = 0x10000
	// Bit OVF_CNT_RESET_LSCH1.
	LEDC_LSCH1_CONF0_OVF_CNT_RESET_LSCH1 = 0x10000

	// LSCH1_HPOINT: LEDC_LSCH1_HPOINT.
	// Position of HPOINT_LSCH1 field.
	LEDC_LSCH1_HPOINT_HPOINT_LSCH1_Pos = 0x0
	// Bit mask of HPOINT_LSCH1 field.
	LEDC_LSCH1_HPOINT_HPOINT_LSCH1_Msk = 0x3fff

	// LSCH1_DUTY: LEDC_LSCH1_DUTY.
	// Position of DUTY_LSCH1 field.
	LEDC_LSCH1_DUTY_DUTY_LSCH1_Pos = 0x0
	// Bit mask of DUTY_LSCH1 field.
	LEDC_LSCH1_DUTY_DUTY_LSCH1_Msk = 0x7ffff

	// LSCH1_CONF1: LEDC_LSCH1_CONF1.
	// Position of DUTY_SCALE_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_SCALE_LSCH1_Pos = 0x0
	// Bit mask of DUTY_SCALE_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_SCALE_LSCH1_Msk = 0x3ff
	// Position of DUTY_CYCLE_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_CYCLE_LSCH1_Pos = 0xa
	// Bit mask of DUTY_CYCLE_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_CYCLE_LSCH1_Msk = 0xffc00
	// Position of DUTY_NUM_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_NUM_LSCH1_Pos = 0x14
	// Bit mask of DUTY_NUM_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_NUM_LSCH1_Msk = 0x3ff00000
	// Position of DUTY_INC_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_INC_LSCH1_Pos = 0x1e
	// Bit mask of DUTY_INC_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_INC_LSCH1_Msk = 0x40000000
	// Bit DUTY_INC_LSCH1.
	LEDC_LSCH1_CONF1_DUTY_INC_LSCH1 = 0x40000000
	// Position of DUTY_START_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_START_LSCH1_Pos = 0x1f
	// Bit mask of DUTY_START_LSCH1 field.
	LEDC_LSCH1_CONF1_DUTY_START_LSCH1_Msk = 0x80000000
	// Bit DUTY_START_LSCH1.
	LEDC_LSCH1_CONF1_DUTY_START_LSCH1 = 0x80000000

	// LSCH1_DUTY_R: LEDC_LSCH1_DUTY_R.
	// Position of DUTY_LSCH1_R field.
	LEDC_LSCH1_DUTY_R_DUTY_LSCH1_R_Pos = 0x0
	// Bit mask of DUTY_LSCH1_R field.
	LEDC_LSCH1_DUTY_R_DUTY_LSCH1_R_Msk = 0x7ffff

	// LSCH2_CONF0: LEDC_LSCH2_CONF0.
	// Position of TIMER_SEL_LSCH2 field.
	LEDC_LSCH2_CONF0_TIMER_SEL_LSCH2_Pos = 0x0
	// Bit mask of TIMER_SEL_LSCH2 field.
	LEDC_LSCH2_CONF0_TIMER_SEL_LSCH2_Msk = 0x3
	// Position of SIG_OUT_EN_LSCH2 field.
	LEDC_LSCH2_CONF0_SIG_OUT_EN_LSCH2_Pos = 0x2
	// Bit mask of SIG_OUT_EN_LSCH2 field.
	LEDC_LSCH2_CONF0_SIG_OUT_EN_LSCH2_Msk = 0x4
	// Bit SIG_OUT_EN_LSCH2.
	LEDC_LSCH2_CONF0_SIG_OUT_EN_LSCH2 = 0x4
	// Position of IDLE_LV_LSCH2 field.
	LEDC_LSCH2_CONF0_IDLE_LV_LSCH2_Pos = 0x3
	// Bit mask of IDLE_LV_LSCH2 field.
	LEDC_LSCH2_CONF0_IDLE_LV_LSCH2_Msk = 0x8
	// Bit IDLE_LV_LSCH2.
	LEDC_LSCH2_CONF0_IDLE_LV_LSCH2 = 0x8
	// Position of PARA_UP_LSCH2 field.
	LEDC_LSCH2_CONF0_PARA_UP_LSCH2_Pos = 0x4
	// Bit mask of PARA_UP_LSCH2 field.
	LEDC_LSCH2_CONF0_PARA_UP_LSCH2_Msk = 0x10
	// Bit PARA_UP_LSCH2.
	LEDC_LSCH2_CONF0_PARA_UP_LSCH2 = 0x10
	// Position of OVF_NUM_LSCH2 field.
	LEDC_LSCH2_CONF0_OVF_NUM_LSCH2_Pos = 0x5
	// Bit mask of OVF_NUM_LSCH2 field.
	LEDC_LSCH2_CONF0_OVF_NUM_LSCH2_Msk = 0x7fe0
	// Position of OVF_CNT_EN_LSCH2 field.
	LEDC_LSCH2_CONF0_OVF_CNT_EN_LSCH2_Pos = 0xf
	// Bit mask of OVF_CNT_EN_LSCH2 field.
	LEDC_LSCH2_CONF0_OVF_CNT_EN_LSCH2_Msk = 0x8000
	// Bit OVF_CNT_EN_LSCH2.
	LEDC_LSCH2_CONF0_OVF_CNT_EN_LSCH2 = 0x8000
	// Position of OVF_CNT_RESET_LSCH2 field.
	LEDC_LSCH2_CONF0_OVF_CNT_RESET_LSCH2_Pos = 0x10
	// Bit mask of OVF_CNT_RESET_LSCH2 field.
	LEDC_LSCH2_CONF0_OVF_CNT_RESET_LSCH2_Msk = 0x10000
	// Bit OVF_CNT_RESET_LSCH2.
	LEDC_LSCH2_CONF0_OVF_CNT_RESET_LSCH2 = 0x10000

	// LSCH2_HPOINT: LEDC_LSCH2_HPOINT.
	// Position of HPOINT_LSCH2 field.
	LEDC_LSCH2_HPOINT_HPOINT_LSCH2_Pos = 0x0
	// Bit mask of HPOINT_LSCH2 field.
	LEDC_LSCH2_HPOINT_HPOINT_LSCH2_Msk = 0x3fff

	// LSCH2_DUTY: LEDC_LSCH2_DUTY.
	// Position of DUTY_LSCH2 field.
	LEDC_LSCH2_DUTY_DUTY_LSCH2_Pos = 0x0
	// Bit mask of DUTY_LSCH2 field.
	LEDC_LSCH2_DUTY_DUTY_LSCH2_Msk = 0x7ffff

	// LSCH2_CONF1: LEDC_LSCH2_CONF1.
	// Position of DUTY_SCALE_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_SCALE_LSCH2_Pos = 0x0
	// Bit mask of DUTY_SCALE_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_SCALE_LSCH2_Msk = 0x3ff
	// Position of DUTY_CYCLE_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_CYCLE_LSCH2_Pos = 0xa
	// Bit mask of DUTY_CYCLE_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_CYCLE_LSCH2_Msk = 0xffc00
	// Position of DUTY_NUM_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_NUM_LSCH2_Pos = 0x14
	// Bit mask of DUTY_NUM_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_NUM_LSCH2_Msk = 0x3ff00000
	// Position of DUTY_INC_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_INC_LSCH2_Pos = 0x1e
	// Bit mask of DUTY_INC_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_INC_LSCH2_Msk = 0x40000000
	// Bit DUTY_INC_LSCH2.
	LEDC_LSCH2_CONF1_DUTY_INC_LSCH2 = 0x40000000
	// Position of DUTY_START_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_START_LSCH2_Pos = 0x1f
	// Bit mask of DUTY_START_LSCH2 field.
	LEDC_LSCH2_CONF1_DUTY_START_LSCH2_Msk = 0x80000000
	// Bit DUTY_START_LSCH2.
	LEDC_LSCH2_CONF1_DUTY_START_LSCH2 = 0x80000000

	// LSCH2_DUTY_R: LEDC_LSCH2_DUTY_R.
	// Position of DUTY_LSCH2_R field.
	LEDC_LSCH2_DUTY_R_DUTY_LSCH2_R_Pos = 0x0
	// Bit mask of DUTY_LSCH2_R field.
	LEDC_LSCH2_DUTY_R_DUTY_LSCH2_R_Msk = 0x7ffff

	// LSCH3_CONF0: LEDC_LSCH3_CONF0.
	// Position of TIMER_SEL_LSCH3 field.
	LEDC_LSCH3_CONF0_TIMER_SEL_LSCH3_Pos = 0x0
	// Bit mask of TIMER_SEL_LSCH3 field.
	LEDC_LSCH3_CONF0_TIMER_SEL_LSCH3_Msk = 0x3
	// Position of SIG_OUT_EN_LSCH3 field.
	LEDC_LSCH3_CONF0_SIG_OUT_EN_LSCH3_Pos = 0x2
	// Bit mask of SIG_OUT_EN_LSCH3 field.
	LEDC_LSCH3_CONF0_SIG_OUT_EN_LSCH3_Msk = 0x4
	// Bit SIG_OUT_EN_LSCH3.
	LEDC_LSCH3_CONF0_SIG_OUT_EN_LSCH3 = 0x4
	// Position of IDLE_LV_LSCH3 field.
	LEDC_LSCH3_CONF0_IDLE_LV_LSCH3_Pos = 0x3
	// Bit mask of IDLE_LV_LSCH3 field.
	LEDC_LSCH3_CONF0_IDLE_LV_LSCH3_Msk = 0x8
	// Bit IDLE_LV_LSCH3.
	LEDC_LSCH3_CONF0_IDLE_LV_LSCH3 = 0x8
	// Position of PARA_UP_LSCH3 field.
	LEDC_LSCH3_CONF0_PARA_UP_LSCH3_Pos = 0x4
	// Bit mask of PARA_UP_LSCH3 field.
	LEDC_LSCH3_CONF0_PARA_UP_LSCH3_Msk = 0x10
	// Bit PARA_UP_LSCH3.
	LEDC_LSCH3_CONF0_PARA_UP_LSCH3 = 0x10
	// Position of OVF_NUM_LSCH3 field.
	LEDC_LSCH3_CONF0_OVF_NUM_LSCH3_Pos = 0x5
	// Bit mask of OVF_NUM_LSCH3 field.
	LEDC_LSCH3_CONF0_OVF_NUM_LSCH3_Msk = 0x7fe0
	// Position of OVF_CNT_EN_LSCH3 field.
	LEDC_LSCH3_CONF0_OVF_CNT_EN_LSCH3_Pos = 0xf
	// Bit mask of OVF_CNT_EN_LSCH3 field.
	LEDC_LSCH3_CONF0_OVF_CNT_EN_LSCH3_Msk = 0x8000
	// Bit OVF_CNT_EN_LSCH3.
	LEDC_LSCH3_CONF0_OVF_CNT_EN_LSCH3 = 0x8000
	// Position of OVF_CNT_RESET_LSCH3 field.
	LEDC_LSCH3_CONF0_OVF_CNT_RESET_LSCH3_Pos = 0x10
	// Bit mask of OVF_CNT_RESET_LSCH3 field.
	LEDC_LSCH3_CONF0_OVF_CNT_RESET_LSCH3_Msk = 0x10000
	// Bit OVF_CNT_RESET_LSCH3.
	LEDC_LSCH3_CONF0_OVF_CNT_RESET_LSCH3 = 0x10000

	// LSCH3_HPOINT: LEDC_LSCH3_HPOINT.
	// Position of HPOINT_LSCH3 field.
	LEDC_LSCH3_HPOINT_HPOINT_LSCH3_Pos = 0x0
	// Bit mask of HPOINT_LSCH3 field.
	LEDC_LSCH3_HPOINT_HPOINT_LSCH3_Msk = 0x3fff

	// LSCH3_DUTY: LEDC_LSCH3_DUTY.
	// Position of DUTY_LSCH3 field.
	LEDC_LSCH3_DUTY_DUTY_LSCH3_Pos = 0x0
	// Bit mask of DUTY_LSCH3 field.
	LEDC_LSCH3_DUTY_DUTY_LSCH3_Msk = 0x7ffff

	// LSCH3_CONF1: LEDC_LSCH3_CONF1.
	// Position of DUTY_SCALE_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_SCALE_LSCH3_Pos = 0x0
	// Bit mask of DUTY_SCALE_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_SCALE_LSCH3_Msk = 0x3ff
	// Position of DUTY_CYCLE_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_CYCLE_LSCH3_Pos = 0xa
	// Bit mask of DUTY_CYCLE_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_CYCLE_LSCH3_Msk = 0xffc00
	// Position of DUTY_NUM_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_NUM_LSCH3_Pos = 0x14
	// Bit mask of DUTY_NUM_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_NUM_LSCH3_Msk = 0x3ff00000
	// Position of DUTY_INC_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_INC_LSCH3_Pos = 0x1e
	// Bit mask of DUTY_INC_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_INC_LSCH3_Msk = 0x40000000
	// Bit DUTY_INC_LSCH3.
	LEDC_LSCH3_CONF1_DUTY_INC_LSCH3 = 0x40000000
	// Position of DUTY_START_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_START_LSCH3_Pos = 0x1f
	// Bit mask of DUTY_START_LSCH3 field.
	LEDC_LSCH3_CONF1_DUTY_START_LSCH3_Msk = 0x80000000
	// Bit DUTY_START_LSCH3.
	LEDC_LSCH3_CONF1_DUTY_START_LSCH3 = 0x80000000

	// LSCH3_DUTY_R: LEDC_LSCH3_DUTY_R.
	// Position of DUTY_LSCH3_R field.
	LEDC_LSCH3_DUTY_R_DUTY_LSCH3_R_Pos = 0x0
	// Bit mask of DUTY_LSCH3_R field.
	LEDC_LSCH3_DUTY_R_DUTY_LSCH3_R_Msk = 0x7ffff

	// LSCH4_CONF0: LEDC_LSCH4_CONF0.
	// Position of TIMER_SEL_LSCH4 field.
	LEDC_LSCH4_CONF0_TIMER_SEL_LSCH4_Pos = 0x0
	// Bit mask of TIMER_SEL_LSCH4 field.
	LEDC_LSCH4_CONF0_TIMER_SEL_LSCH4_Msk = 0x3
	// Position of SIG_OUT_EN_LSCH4 field.
	LEDC_LSCH4_CONF0_SIG_OUT_EN_LSCH4_Pos = 0x2
	// Bit mask of SIG_OUT_EN_LSCH4 field.
	LEDC_LSCH4_CONF0_SIG_OUT_EN_LSCH4_Msk = 0x4
	// Bit SIG_OUT_EN_LSCH4.
	LEDC_LSCH4_CONF0_SIG_OUT_EN_LSCH4 = 0x4
	// Position of IDLE_LV_LSCH4 field.
	LEDC_LSCH4_CONF0_IDLE_LV_LSCH4_Pos = 0x3
	// Bit mask of IDLE_LV_LSCH4 field.
	LEDC_LSCH4_CONF0_IDLE_LV_LSCH4_Msk = 0x8
	// Bit IDLE_LV_LSCH4.
	LEDC_LSCH4_CONF0_IDLE_LV_LSCH4 = 0x8
	// Position of PARA_UP_LSCH4 field.
	LEDC_LSCH4_CONF0_PARA_UP_LSCH4_Pos = 0x4
	// Bit mask of PARA_UP_LSCH4 field.
	LEDC_LSCH4_CONF0_PARA_UP_LSCH4_Msk = 0x10
	// Bit PARA_UP_LSCH4.
	LEDC_LSCH4_CONF0_PARA_UP_LSCH4 = 0x10
	// Position of OVF_NUM_LSCH4 field.
	LEDC_LSCH4_CONF0_OVF_NUM_LSCH4_Pos = 0x5
	// Bit mask of OVF_NUM_LSCH4 field.
	LEDC_LSCH4_CONF0_OVF_NUM_LSCH4_Msk = 0x7fe0
	// Position of OVF_CNT_EN_LSCH4 field.
	LEDC_LSCH4_CONF0_OVF_CNT_EN_LSCH4_Pos = 0xf
	// Bit mask of OVF_CNT_EN_LSCH4 field.
	LEDC_LSCH4_CONF0_OVF_CNT_EN_LSCH4_Msk = 0x8000
	// Bit OVF_CNT_EN_LSCH4.
	LEDC_LSCH4_CONF0_OVF_CNT_EN_LSCH4 = 0x8000
	// Position of OVF_CNT_RESET_LSCH4 field.
	LEDC_LSCH4_CONF0_OVF_CNT_RESET_LSCH4_Pos = 0x10
	// Bit mask of OVF_CNT_RESET_LSCH4 field.
	LEDC_LSCH4_CONF0_OVF_CNT_RESET_LSCH4_Msk = 0x10000
	// Bit OVF_CNT_RESET_LSCH4.
	LEDC_LSCH4_CONF0_OVF_CNT_RESET_LSCH4 = 0x10000

	// LSCH4_HPOINT: LEDC_LSCH4_HPOINT.
	// Position of HPOINT_LSCH4 field.
	LEDC_LSCH4_HPOINT_HPOINT_LSCH4_Pos = 0x0
	// Bit mask of HPOINT_LSCH4 field.
	LEDC_LSCH4_HPOINT_HPOINT_LSCH4_Msk = 0x3fff

	// LSCH4_DUTY: LEDC_LSCH4_DUTY.
	// Position of DUTY_LSCH4 field.
	LEDC_LSCH4_DUTY_DUTY_LSCH4_Pos = 0x0
	// Bit mask of DUTY_LSCH4 field.
	LEDC_LSCH4_DUTY_DUTY_LSCH4_Msk = 0x7ffff

	// LSCH4_CONF1: LEDC_LSCH4_CONF1.
	// Position of DUTY_SCALE_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_SCALE_LSCH4_Pos = 0x0
	// Bit mask of DUTY_SCALE_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_SCALE_LSCH4_Msk = 0x3ff
	// Position of DUTY_CYCLE_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_CYCLE_LSCH4_Pos = 0xa
	// Bit mask of DUTY_CYCLE_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_CYCLE_LSCH4_Msk = 0xffc00
	// Position of DUTY_NUM_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_NUM_LSCH4_Pos = 0x14
	// Bit mask of DUTY_NUM_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_NUM_LSCH4_Msk = 0x3ff00000
	// Position of DUTY_INC_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_INC_LSCH4_Pos = 0x1e
	// Bit mask of DUTY_INC_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_INC_LSCH4_Msk = 0x40000000
	// Bit DUTY_INC_LSCH4.
	LEDC_LSCH4_CONF1_DUTY_INC_LSCH4 = 0x40000000
	// Position of DUTY_START_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_START_LSCH4_Pos = 0x1f
	// Bit mask of DUTY_START_LSCH4 field.
	LEDC_LSCH4_CONF1_DUTY_START_LSCH4_Msk = 0x80000000
	// Bit DUTY_START_LSCH4.
	LEDC_LSCH4_CONF1_DUTY_START_LSCH4 = 0x80000000

	// LSCH4_DUTY_R: LEDC_LSCH4_DUTY_R.
	// Position of DUTY_LSCH4_R field.
	LEDC_LSCH4_DUTY_R_DUTY_LSCH4_R_Pos = 0x0
	// Bit mask of DUTY_LSCH4_R field.
	LEDC_LSCH4_DUTY_R_DUTY_LSCH4_R_Msk = 0x7ffff

	// LSCH5_CONF0: LEDC_LSCH5_CONF0.
	// Position of TIMER_SEL_LSCH5 field.
	LEDC_LSCH5_CONF0_TIMER_SEL_LSCH5_Pos = 0x0
	// Bit mask of TIMER_SEL_LSCH5 field.
	LEDC_LSCH5_CONF0_TIMER_SEL_LSCH5_Msk = 0x3
	// Position of SIG_OUT_EN_LSCH5 field.
	LEDC_LSCH5_CONF0_SIG_OUT_EN_LSCH5_Pos = 0x2
	// Bit mask of SIG_OUT_EN_LSCH5 field.
	LEDC_LSCH5_CONF0_SIG_OUT_EN_LSCH5_Msk = 0x4
	// Bit SIG_OUT_EN_LSCH5.
	LEDC_LSCH5_CONF0_SIG_OUT_EN_LSCH5 = 0x4
	// Position of IDLE_LV_LSCH5 field.
	LEDC_LSCH5_CONF0_IDLE_LV_LSCH5_Pos = 0x3
	// Bit mask of IDLE_LV_LSCH5 field.
	LEDC_LSCH5_CONF0_IDLE_LV_LSCH5_Msk = 0x8
	// Bit IDLE_LV_LSCH5.
	LEDC_LSCH5_CONF0_IDLE_LV_LSCH5 = 0x8
	// Position of PARA_UP_LSCH5 field.
	LEDC_LSCH5_CONF0_PARA_UP_LSCH5_Pos = 0x4
	// Bit mask of PARA_UP_LSCH5 field.
	LEDC_LSCH5_CONF0_PARA_UP_LSCH5_Msk = 0x10
	// Bit PARA_UP_LSCH5.
	LEDC_LSCH5_CONF0_PARA_UP_LSCH5 = 0x10
	// Position of OVF_NUM_LSCH5 field.
	LEDC_LSCH5_CONF0_OVF_NUM_LSCH5_Pos = 0x5
	// Bit mask of OVF_NUM_LSCH5 field.
	LEDC_LSCH5_CONF0_OVF_NUM_LSCH5_Msk = 0x7fe0
	// Position of OVF_CNT_EN_LSCH5 field.
	LEDC_LSCH5_CONF0_OVF_CNT_EN_LSCH5_Pos = 0xf
	// Bit mask of OVF_CNT_EN_LSCH5 field.
	LEDC_LSCH5_CONF0_OVF_CNT_EN_LSCH5_Msk = 0x8000
	// Bit OVF_CNT_EN_LSCH5.
	LEDC_LSCH5_CONF0_OVF_CNT_EN_LSCH5 = 0x8000
	// Position of OVF_CNT_RESET_LSCH5 field.
	LEDC_LSCH5_CONF0_OVF_CNT_RESET_LSCH5_Pos = 0x10
	// Bit mask of OVF_CNT_RESET_LSCH5 field.
	LEDC_LSCH5_CONF0_OVF_CNT_RESET_LSCH5_Msk = 0x10000
	// Bit OVF_CNT_RESET_LSCH5.
	LEDC_LSCH5_CONF0_OVF_CNT_RESET_LSCH5 = 0x10000

	// LSCH5_HPOINT: LEDC_LSCH5_HPOINT.
	// Position of HPOINT_LSCH5 field.
	LEDC_LSCH5_HPOINT_HPOINT_LSCH5_Pos = 0x0
	// Bit mask of HPOINT_LSCH5 field.
	LEDC_LSCH5_HPOINT_HPOINT_LSCH5_Msk = 0x3fff

	// LSCH5_DUTY: LEDC_LSCH5_DUTY.
	// Position of DUTY_LSCH5 field.
	LEDC_LSCH5_DUTY_DUTY_LSCH5_Pos = 0x0
	// Bit mask of DUTY_LSCH5 field.
	LEDC_LSCH5_DUTY_DUTY_LSCH5_Msk = 0x7ffff

	// LSCH5_CONF1: LEDC_LSCH5_CONF1.
	// Position of DUTY_SCALE_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_SCALE_LSCH5_Pos = 0x0
	// Bit mask of DUTY_SCALE_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_SCALE_LSCH5_Msk = 0x3ff
	// Position of DUTY_CYCLE_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_CYCLE_LSCH5_Pos = 0xa
	// Bit mask of DUTY_CYCLE_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_CYCLE_LSCH5_Msk = 0xffc00
	// Position of DUTY_NUM_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_NUM_LSCH5_Pos = 0x14
	// Bit mask of DUTY_NUM_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_NUM_LSCH5_Msk = 0x3ff00000
	// Position of DUTY_INC_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_INC_LSCH5_Pos = 0x1e
	// Bit mask of DUTY_INC_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_INC_LSCH5_Msk = 0x40000000
	// Bit DUTY_INC_LSCH5.
	LEDC_LSCH5_CONF1_DUTY_INC_LSCH5 = 0x40000000
	// Position of DUTY_START_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_START_LSCH5_Pos = 0x1f
	// Bit mask of DUTY_START_LSCH5 field.
	LEDC_LSCH5_CONF1_DUTY_START_LSCH5_Msk = 0x80000000
	// Bit DUTY_START_LSCH5.
	LEDC_LSCH5_CONF1_DUTY_START_LSCH5 = 0x80000000

	// LSCH5_DUTY_R: LEDC_LSCH5_DUTY_R.
	// Position of DUTY_LSCH5_R field.
	LEDC_LSCH5_DUTY_R_DUTY_LSCH5_R_Pos = 0x0
	// Bit mask of DUTY_LSCH5_R field.
	LEDC_LSCH5_DUTY_R_DUTY_LSCH5_R_Msk = 0x7ffff

	// LSTIMER0_CONF: LEDC_LSTIMER0_CONF.
	// Position of LSTIMER0_DUTY_RES field.
	LEDC_LSTIMER0_CONF_LSTIMER0_DUTY_RES_Pos = 0x0
	// Bit mask of LSTIMER0_DUTY_RES field.
	LEDC_LSTIMER0_CONF_LSTIMER0_DUTY_RES_Msk = 0xf
	// Position of CLK_DIV_LSTIMER0 field.
	LEDC_LSTIMER0_CONF_CLK_DIV_LSTIMER0_Pos = 0x4
	// Bit mask of CLK_DIV_LSTIMER0 field.
	LEDC_LSTIMER0_CONF_CLK_DIV_LSTIMER0_Msk = 0x3ffff0
	// Position of LSTIMER0_PAUSE field.
	LEDC_LSTIMER0_CONF_LSTIMER0_PAUSE_Pos = 0x16
	// Bit mask of LSTIMER0_PAUSE field.
	LEDC_LSTIMER0_CONF_LSTIMER0_PAUSE_Msk = 0x400000
	// Bit LSTIMER0_PAUSE.
	LEDC_LSTIMER0_CONF_LSTIMER0_PAUSE = 0x400000
	// Position of LSTIMER0_RST field.
	LEDC_LSTIMER0_CONF_LSTIMER0_RST_Pos = 0x17
	// Bit mask of LSTIMER0_RST field.
	LEDC_LSTIMER0_CONF_LSTIMER0_RST_Msk = 0x800000
	// Bit LSTIMER0_RST.
	LEDC_LSTIMER0_CONF_LSTIMER0_RST = 0x800000
	// Position of TICK_SEL_LSTIMER0 field.
	LEDC_LSTIMER0_CONF_TICK_SEL_LSTIMER0_Pos = 0x18
	// Bit mask of TICK_SEL_LSTIMER0 field.
	LEDC_LSTIMER0_CONF_TICK_SEL_LSTIMER0_Msk = 0x1000000
	// Bit TICK_SEL_LSTIMER0.
	LEDC_LSTIMER0_CONF_TICK_SEL_LSTIMER0 = 0x1000000
	// Position of LSTIMER0_PARA_UP field.
	LEDC_LSTIMER0_CONF_LSTIMER0_PARA_UP_Pos = 0x19
	// Bit mask of LSTIMER0_PARA_UP field.
	LEDC_LSTIMER0_CONF_LSTIMER0_PARA_UP_Msk = 0x2000000
	// Bit LSTIMER0_PARA_UP.
	LEDC_LSTIMER0_CONF_LSTIMER0_PARA_UP = 0x2000000

	// LSTIMER0_VALUE: LEDC_LSTIMER0_VALUE.
	// Position of LSTIMER0_CNT field.
	LEDC_LSTIMER0_VALUE_LSTIMER0_CNT_Pos = 0x0
	// Bit mask of LSTIMER0_CNT field.
	LEDC_LSTIMER0_VALUE_LSTIMER0_CNT_Msk = 0x3fff

	// LSTIMER1_CONF: LEDC_LSTIMER1_CONF.
	// Position of LSTIMER1_DUTY_RES field.
	LEDC_LSTIMER1_CONF_LSTIMER1_DUTY_RES_Pos = 0x0
	// Bit mask of LSTIMER1_DUTY_RES field.
	LEDC_LSTIMER1_CONF_LSTIMER1_DUTY_RES_Msk = 0xf
	// Position of CLK_DIV_LSTIMER1 field.
	LEDC_LSTIMER1_CONF_CLK_DIV_LSTIMER1_Pos = 0x4
	// Bit mask of CLK_DIV_LSTIMER1 field.
	LEDC_LSTIMER1_CONF_CLK_DIV_LSTIMER1_Msk = 0x3ffff0
	// Position of LSTIMER1_PAUSE field.
	LEDC_LSTIMER1_CONF_LSTIMER1_PAUSE_Pos = 0x16
	// Bit mask of LSTIMER1_PAUSE field.
	LEDC_LSTIMER1_CONF_LSTIMER1_PAUSE_Msk = 0x400000
	// Bit LSTIMER1_PAUSE.
	LEDC_LSTIMER1_CONF_LSTIMER1_PAUSE = 0x400000
	// Position of LSTIMER1_RST field.
	LEDC_LSTIMER1_CONF_LSTIMER1_RST_Pos = 0x17
	// Bit mask of LSTIMER1_RST field.
	LEDC_LSTIMER1_CONF_LSTIMER1_RST_Msk = 0x800000
	// Bit LSTIMER1_RST.
	LEDC_LSTIMER1_CONF_LSTIMER1_RST = 0x800000
	// Position of TICK_SEL_LSTIMER1 field.
	LEDC_LSTIMER1_CONF_TICK_SEL_LSTIMER1_Pos = 0x18
	// Bit mask of TICK_SEL_LSTIMER1 field.
	LEDC_LSTIMER1_CONF_TICK_SEL_LSTIMER1_Msk = 0x1000000
	// Bit TICK_SEL_LSTIMER1.
	LEDC_LSTIMER1_CONF_TICK_SEL_LSTIMER1 = 0x1000000
	// Position of LSTIMER1_PARA_UP field.
	LEDC_LSTIMER1_CONF_LSTIMER1_PARA_UP_Pos = 0x19
	// Bit mask of LSTIMER1_PARA_UP field.
	LEDC_LSTIMER1_CONF_LSTIMER1_PARA_UP_Msk = 0x2000000
	// Bit LSTIMER1_PARA_UP.
	LEDC_LSTIMER1_CONF_LSTIMER1_PARA_UP = 0x2000000

	// LSTIMER1_VALUE: LEDC_LSTIMER1_VALUE.
	// Position of LSTIMER1_CNT field.
	LEDC_LSTIMER1_VALUE_LSTIMER1_CNT_Pos = 0x0
	// Bit mask of LSTIMER1_CNT field.
	LEDC_LSTIMER1_VALUE_LSTIMER1_CNT_Msk = 0x3fff

	// LSTIMER2_CONF: LEDC_LSTIMER2_CONF.
	// Position of LSTIMER2_DUTY_RES field.
	LEDC_LSTIMER2_CONF_LSTIMER2_DUTY_RES_Pos = 0x0
	// Bit mask of LSTIMER2_DUTY_RES field.
	LEDC_LSTIMER2_CONF_LSTIMER2_DUTY_RES_Msk = 0xf
	// Position of CLK_DIV_LSTIMER2 field.
	LEDC_LSTIMER2_CONF_CLK_DIV_LSTIMER2_Pos = 0x4
	// Bit mask of CLK_DIV_LSTIMER2 field.
	LEDC_LSTIMER2_CONF_CLK_DIV_LSTIMER2_Msk = 0x3ffff0
	// Position of LSTIMER2_PAUSE field.
	LEDC_LSTIMER2_CONF_LSTIMER2_PAUSE_Pos = 0x16
	// Bit mask of LSTIMER2_PAUSE field.
	LEDC_LSTIMER2_CONF_LSTIMER2_PAUSE_Msk = 0x400000
	// Bit LSTIMER2_PAUSE.
	LEDC_LSTIMER2_CONF_LSTIMER2_PAUSE = 0x400000
	// Position of LSTIMER2_RST field.
	LEDC_LSTIMER2_CONF_LSTIMER2_RST_Pos = 0x17
	// Bit mask of LSTIMER2_RST field.
	LEDC_LSTIMER2_CONF_LSTIMER2_RST_Msk = 0x800000
	// Bit LSTIMER2_RST.
	LEDC_LSTIMER2_CONF_LSTIMER2_RST = 0x800000
	// Position of TICK_SEL_LSTIMER2 field.
	LEDC_LSTIMER2_CONF_TICK_SEL_LSTIMER2_Pos = 0x18
	// Bit mask of TICK_SEL_LSTIMER2 field.
	LEDC_LSTIMER2_CONF_TICK_SEL_LSTIMER2_Msk = 0x1000000
	// Bit TICK_SEL_LSTIMER2.
	LEDC_LSTIMER2_CONF_TICK_SEL_LSTIMER2 = 0x1000000
	// Position of LSTIMER2_PARA_UP field.
	LEDC_LSTIMER2_CONF_LSTIMER2_PARA_UP_Pos = 0x19
	// Bit mask of LSTIMER2_PARA_UP field.
	LEDC_LSTIMER2_CONF_LSTIMER2_PARA_UP_Msk = 0x2000000
	// Bit LSTIMER2_PARA_UP.
	LEDC_LSTIMER2_CONF_LSTIMER2_PARA_UP = 0x2000000

	// LSTIMER2_VALUE: LEDC_LSTIMER2_VALUE.
	// Position of LSTIMER2_CNT field.
	LEDC_LSTIMER2_VALUE_LSTIMER2_CNT_Pos = 0x0
	// Bit mask of LSTIMER2_CNT field.
	LEDC_LSTIMER2_VALUE_LSTIMER2_CNT_Msk = 0x3fff

	// LSTIMER3_CONF: LEDC_LSTIMER3_CONF.
	// Position of LSTIMER3_DUTY_RES field.
	LEDC_LSTIMER3_CONF_LSTIMER3_DUTY_RES_Pos = 0x0
	// Bit mask of LSTIMER3_DUTY_RES field.
	LEDC_LSTIMER3_CONF_LSTIMER3_DUTY_RES_Msk = 0xf
	// Position of CLK_DIV_LSTIMER3 field.
	LEDC_LSTIMER3_CONF_CLK_DIV_LSTIMER3_Pos = 0x4
	// Bit mask of CLK_DIV_LSTIMER3 field.
	LEDC_LSTIMER3_CONF_CLK_DIV_LSTIMER3_Msk = 0x3ffff0
	// Position of LSTIMER3_PAUSE field.
	LEDC_LSTIMER3_CONF_LSTIMER3_PAUSE_Pos = 0x16
	// Bit mask of LSTIMER3_PAUSE field.
	LEDC_LSTIMER3_CONF_LSTIMER3_PAUSE_Msk = 0x400000
	// Bit LSTIMER3_PAUSE.
	LEDC_LSTIMER3_CONF_LSTIMER3_PAUSE = 0x400000
	// Position of LSTIMER3_RST field.
	LEDC_LSTIMER3_CONF_LSTIMER3_RST_Pos = 0x17
	// Bit mask of LSTIMER3_RST field.
	LEDC_LSTIMER3_CONF_LSTIMER3_RST_Msk = 0x800000
	// Bit LSTIMER3_RST.
	LEDC_LSTIMER3_CONF_LSTIMER3_RST = 0x800000
	// Position of TICK_SEL_LSTIMER3 field.
	LEDC_LSTIMER3_CONF_TICK_SEL_LSTIMER3_Pos = 0x18
	// Bit mask of TICK_SEL_LSTIMER3 field.
	LEDC_LSTIMER3_CONF_TICK_SEL_LSTIMER3_Msk = 0x1000000
	// Bit TICK_SEL_LSTIMER3.
	LEDC_LSTIMER3_CONF_TICK_SEL_LSTIMER3 = 0x1000000
	// Position of LSTIMER3_PARA_UP field.
	LEDC_LSTIMER3_CONF_LSTIMER3_PARA_UP_Pos = 0x19
	// Bit mask of LSTIMER3_PARA_UP field.
	LEDC_LSTIMER3_CONF_LSTIMER3_PARA_UP_Msk = 0x2000000
	// Bit LSTIMER3_PARA_UP.
	LEDC_LSTIMER3_CONF_LSTIMER3_PARA_UP = 0x2000000

	// LSTIMER3_VALUE: LEDC_LSTIMER3_VALUE.
	// Position of LSTIMER3_CNT field.
	LEDC_LSTIMER3_VALUE_LSTIMER3_CNT_Pos = 0x0
	// Bit mask of LSTIMER3_CNT field.
	LEDC_LSTIMER3_VALUE_LSTIMER3_CNT_Msk = 0x3fff

	// INT_RAW: LEDC_INT_RAW.
	// Position of LSTIMER0_OVF_INT_RAW field.
	LEDC_INT_RAW_LSTIMER0_OVF_INT_RAW_Pos = 0x0
	// Bit mask of LSTIMER0_OVF_INT_RAW field.
	LEDC_INT_RAW_LSTIMER0_OVF_INT_RAW_Msk = 0x1
	// Bit LSTIMER0_OVF_INT_RAW.
	LEDC_INT_RAW_LSTIMER0_OVF_INT_RAW = 0x1
	// Position of LSTIMER1_OVF_INT_RAW field.
	LEDC_INT_RAW_LSTIMER1_OVF_INT_RAW_Pos = 0x1
	// Bit mask of LSTIMER1_OVF_INT_RAW field.
	LEDC_INT_RAW_LSTIMER1_OVF_INT_RAW_Msk = 0x2
	// Bit LSTIMER1_OVF_INT_RAW.
	LEDC_INT_RAW_LSTIMER1_OVF_INT_RAW = 0x2
	// Position of LSTIMER2_OVF_INT_RAW field.
	LEDC_INT_RAW_LSTIMER2_OVF_INT_RAW_Pos = 0x2
	// Bit mask of LSTIMER2_OVF_INT_RAW field.
	LEDC_INT_RAW_LSTIMER2_OVF_INT_RAW_Msk = 0x4
	// Bit LSTIMER2_OVF_INT_RAW.
	LEDC_INT_RAW_LSTIMER2_OVF_INT_RAW = 0x4
	// Position of LSTIMER3_OVF_INT_RAW field.
	LEDC_INT_RAW_LSTIMER3_OVF_INT_RAW_Pos = 0x3
	// Bit mask of LSTIMER3_OVF_INT_RAW field.
	LEDC_INT_RAW_LSTIMER3_OVF_INT_RAW_Msk = 0x8
	// Bit LSTIMER3_OVF_INT_RAW.
	LEDC_INT_RAW_LSTIMER3_OVF_INT_RAW = 0x8
	// Position of DUTY_CHNG_END_LSCH0_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH0_INT_RAW_Pos = 0x4
	// Bit mask of DUTY_CHNG_END_LSCH0_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH0_INT_RAW_Msk = 0x10
	// Bit DUTY_CHNG_END_LSCH0_INT_RAW.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH0_INT_RAW = 0x10
	// Position of DUTY_CHNG_END_LSCH1_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH1_INT_RAW_Pos = 0x5
	// Bit mask of DUTY_CHNG_END_LSCH1_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH1_INT_RAW_Msk = 0x20
	// Bit DUTY_CHNG_END_LSCH1_INT_RAW.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH1_INT_RAW = 0x20
	// Position of DUTY_CHNG_END_LSCH2_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH2_INT_RAW_Pos = 0x6
	// Bit mask of DUTY_CHNG_END_LSCH2_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH2_INT_RAW_Msk = 0x40
	// Bit DUTY_CHNG_END_LSCH2_INT_RAW.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH2_INT_RAW = 0x40
	// Position of DUTY_CHNG_END_LSCH3_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH3_INT_RAW_Pos = 0x7
	// Bit mask of DUTY_CHNG_END_LSCH3_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH3_INT_RAW_Msk = 0x80
	// Bit DUTY_CHNG_END_LSCH3_INT_RAW.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH3_INT_RAW = 0x80
	// Position of DUTY_CHNG_END_LSCH4_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH4_INT_RAW_Pos = 0x8
	// Bit mask of DUTY_CHNG_END_LSCH4_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH4_INT_RAW_Msk = 0x100
	// Bit DUTY_CHNG_END_LSCH4_INT_RAW.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH4_INT_RAW = 0x100
	// Position of DUTY_CHNG_END_LSCH5_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH5_INT_RAW_Pos = 0x9
	// Bit mask of DUTY_CHNG_END_LSCH5_INT_RAW field.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH5_INT_RAW_Msk = 0x200
	// Bit DUTY_CHNG_END_LSCH5_INT_RAW.
	LEDC_INT_RAW_DUTY_CHNG_END_LSCH5_INT_RAW = 0x200
	// Position of OVF_CNT_LSCH0_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH0_INT_RAW_Pos = 0xa
	// Bit mask of OVF_CNT_LSCH0_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH0_INT_RAW_Msk = 0x400
	// Bit OVF_CNT_LSCH0_INT_RAW.
	LEDC_INT_RAW_OVF_CNT_LSCH0_INT_RAW = 0x400
	// Position of OVF_CNT_LSCH1_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH1_INT_RAW_Pos = 0xb
	// Bit mask of OVF_CNT_LSCH1_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH1_INT_RAW_Msk = 0x800
	// Bit OVF_CNT_LSCH1_INT_RAW.
	LEDC_INT_RAW_OVF_CNT_LSCH1_INT_RAW = 0x800
	// Position of OVF_CNT_LSCH2_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH2_INT_RAW_Pos = 0xc
	// Bit mask of OVF_CNT_LSCH2_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH2_INT_RAW_Msk = 0x1000
	// Bit OVF_CNT_LSCH2_INT_RAW.
	LEDC_INT_RAW_OVF_CNT_LSCH2_INT_RAW = 0x1000
	// Position of OVF_CNT_LSCH3_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH3_INT_RAW_Pos = 0xd
	// Bit mask of OVF_CNT_LSCH3_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH3_INT_RAW_Msk = 0x2000
	// Bit OVF_CNT_LSCH3_INT_RAW.
	LEDC_INT_RAW_OVF_CNT_LSCH3_INT_RAW = 0x2000
	// Position of OVF_CNT_LSCH4_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH4_INT_RAW_Pos = 0xe
	// Bit mask of OVF_CNT_LSCH4_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH4_INT_RAW_Msk = 0x4000
	// Bit OVF_CNT_LSCH4_INT_RAW.
	LEDC_INT_RAW_OVF_CNT_LSCH4_INT_RAW = 0x4000
	// Position of OVF_CNT_LSCH5_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH5_INT_RAW_Pos = 0xf
	// Bit mask of OVF_CNT_LSCH5_INT_RAW field.
	LEDC_INT_RAW_OVF_CNT_LSCH5_INT_RAW_Msk = 0x8000
	// Bit OVF_CNT_LSCH5_INT_RAW.
	LEDC_INT_RAW_OVF_CNT_LSCH5_INT_RAW = 0x8000

	// INT_ST: LEDC_INT_ST.
	// Position of LSTIMER0_OVF_INT_ST field.
	LEDC_INT_ST_LSTIMER0_OVF_INT_ST_Pos = 0x0
	// Bit mask of LSTIMER0_OVF_INT_ST field.
	LEDC_INT_ST_LSTIMER0_OVF_INT_ST_Msk = 0x1
	// Bit LSTIMER0_OVF_INT_ST.
	LEDC_INT_ST_LSTIMER0_OVF_INT_ST = 0x1
	// Position of LSTIMER1_OVF_INT_ST field.
	LEDC_INT_ST_LSTIMER1_OVF_INT_ST_Pos = 0x1
	// Bit mask of LSTIMER1_OVF_INT_ST field.
	LEDC_INT_ST_LSTIMER1_OVF_INT_ST_Msk = 0x2
	// Bit LSTIMER1_OVF_INT_ST.
	LEDC_INT_ST_LSTIMER1_OVF_INT_ST = 0x2
	// Position of LSTIMER2_OVF_INT_ST field.
	LEDC_INT_ST_LSTIMER2_OVF_INT_ST_Pos = 0x2
	// Bit mask of LSTIMER2_OVF_INT_ST field.
	LEDC_INT_ST_LSTIMER2_OVF_INT_ST_Msk = 0x4
	// Bit LSTIMER2_OVF_INT_ST.
	LEDC_INT_ST_LSTIMER2_OVF_INT_ST = 0x4
	// Position of LSTIMER3_OVF_INT_ST field.
	LEDC_INT_ST_LSTIMER3_OVF_INT_ST_Pos = 0x3
	// Bit mask of LSTIMER3_OVF_INT_ST field.
	LEDC_INT_ST_LSTIMER3_OVF_INT_ST_Msk = 0x8
	// Bit LSTIMER3_OVF_INT_ST.
	LEDC_INT_ST_LSTIMER3_OVF_INT_ST = 0x8
	// Position of DUTY_CHNG_END_LSCH0_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH0_INT_ST_Pos = 0x4
	// Bit mask of DUTY_CHNG_END_LSCH0_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH0_INT_ST_Msk = 0x10
	// Bit DUTY_CHNG_END_LSCH0_INT_ST.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH0_INT_ST = 0x10
	// Position of DUTY_CHNG_END_LSCH1_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH1_INT_ST_Pos = 0x5
	// Bit mask of DUTY_CHNG_END_LSCH1_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH1_INT_ST_Msk = 0x20
	// Bit DUTY_CHNG_END_LSCH1_INT_ST.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH1_INT_ST = 0x20
	// Position of DUTY_CHNG_END_LSCH2_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH2_INT_ST_Pos = 0x6
	// Bit mask of DUTY_CHNG_END_LSCH2_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH2_INT_ST_Msk = 0x40
	// Bit DUTY_CHNG_END_LSCH2_INT_ST.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH2_INT_ST = 0x40
	// Position of DUTY_CHNG_END_LSCH3_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH3_INT_ST_Pos = 0x7
	// Bit mask of DUTY_CHNG_END_LSCH3_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH3_INT_ST_Msk = 0x80
	// Bit DUTY_CHNG_END_LSCH3_INT_ST.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH3_INT_ST = 0x80
	// Position of DUTY_CHNG_END_LSCH4_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH4_INT_ST_Pos = 0x8
	// Bit mask of DUTY_CHNG_END_LSCH4_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH4_INT_ST_Msk = 0x100
	// Bit DUTY_CHNG_END_LSCH4_INT_ST.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH4_INT_ST = 0x100
	// Position of DUTY_CHNG_END_LSCH5_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH5_INT_ST_Pos = 0x9
	// Bit mask of DUTY_CHNG_END_LSCH5_INT_ST field.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH5_INT_ST_Msk = 0x200
	// Bit DUTY_CHNG_END_LSCH5_INT_ST.
	LEDC_INT_ST_DUTY_CHNG_END_LSCH5_INT_ST = 0x200
	// Position of OVF_CNT_LSCH0_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH0_INT_ST_Pos = 0xa
	// Bit mask of OVF_CNT_LSCH0_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH0_INT_ST_Msk = 0x400
	// Bit OVF_CNT_LSCH0_INT_ST.
	LEDC_INT_ST_OVF_CNT_LSCH0_INT_ST = 0x400
	// Position of OVF_CNT_LSCH1_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH1_INT_ST_Pos = 0xb
	// Bit mask of OVF_CNT_LSCH1_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH1_INT_ST_Msk = 0x800
	// Bit OVF_CNT_LSCH1_INT_ST.
	LEDC_INT_ST_OVF_CNT_LSCH1_INT_ST = 0x800
	// Position of OVF_CNT_LSCH2_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH2_INT_ST_Pos = 0xc
	// Bit mask of OVF_CNT_LSCH2_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH2_INT_ST_Msk = 0x1000
	// Bit OVF_CNT_LSCH2_INT_ST.
	LEDC_INT_ST_OVF_CNT_LSCH2_INT_ST = 0x1000
	// Position of OVF_CNT_LSCH3_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH3_INT_ST_Pos = 0xd
	// Bit mask of OVF_CNT_LSCH3_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH3_INT_ST_Msk = 0x2000
	// Bit OVF_CNT_LSCH3_INT_ST.
	LEDC_INT_ST_OVF_CNT_LSCH3_INT_ST = 0x2000
	// Position of OVF_CNT_LSCH4_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH4_INT_ST_Pos = 0xe
	// Bit mask of OVF_CNT_LSCH4_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH4_INT_ST_Msk = 0x4000
	// Bit OVF_CNT_LSCH4_INT_ST.
	LEDC_INT_ST_OVF_CNT_LSCH4_INT_ST = 0x4000
	// Position of OVF_CNT_LSCH5_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH5_INT_ST_Pos = 0xf
	// Bit mask of OVF_CNT_LSCH5_INT_ST field.
	LEDC_INT_ST_OVF_CNT_LSCH5_INT_ST_Msk = 0x8000
	// Bit OVF_CNT_LSCH5_INT_ST.
	LEDC_INT_ST_OVF_CNT_LSCH5_INT_ST = 0x8000

	// INT_ENA: LEDC_INT_ENA.
	// Position of LSTIMER0_OVF_INT_ENA field.
	LEDC_INT_ENA_LSTIMER0_OVF_INT_ENA_Pos = 0x0
	// Bit mask of LSTIMER0_OVF_INT_ENA field.
	LEDC_INT_ENA_LSTIMER0_OVF_INT_ENA_Msk = 0x1
	// Bit LSTIMER0_OVF_INT_ENA.
	LEDC_INT_ENA_LSTIMER0_OVF_INT_ENA = 0x1
	// Position of LSTIMER1_OVF_INT_ENA field.
	LEDC_INT_ENA_LSTIMER1_OVF_INT_ENA_Pos = 0x1
	// Bit mask of LSTIMER1_OVF_INT_ENA field.
	LEDC_INT_ENA_LSTIMER1_OVF_INT_ENA_Msk = 0x2
	// Bit LSTIMER1_OVF_INT_ENA.
	LEDC_INT_ENA_LSTIMER1_OVF_INT_ENA = 0x2
	// Position of LSTIMER2_OVF_INT_ENA field.
	LEDC_INT_ENA_LSTIMER2_OVF_INT_ENA_Pos = 0x2
	// Bit mask of LSTIMER2_OVF_INT_ENA field.
	LEDC_INT_ENA_LSTIMER2_OVF_INT_ENA_Msk = 0x4
	// Bit LSTIMER2_OVF_INT_ENA.
	LEDC_INT_ENA_LSTIMER2_OVF_INT_ENA = 0x4
	// Position of LSTIMER3_OVF_INT_ENA field.
	LEDC_INT_ENA_LSTIMER3_OVF_INT_ENA_Pos = 0x3
	// Bit mask of LSTIMER3_OVF_INT_ENA field.
	LEDC_INT_ENA_LSTIMER3_OVF_INT_ENA_Msk = 0x8
	// Bit LSTIMER3_OVF_INT_ENA.
	LEDC_INT_ENA_LSTIMER3_OVF_INT_ENA = 0x8
	// Position of DUTY_CHNG_END_LSCH0_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH0_INT_ENA_Pos = 0x4
	// Bit mask of DUTY_CHNG_END_LSCH0_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH0_INT_ENA_Msk = 0x10
	// Bit DUTY_CHNG_END_LSCH0_INT_ENA.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH0_INT_ENA = 0x10
	// Position of DUTY_CHNG_END_LSCH1_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH1_INT_ENA_Pos = 0x5
	// Bit mask of DUTY_CHNG_END_LSCH1_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH1_INT_ENA_Msk = 0x20
	// Bit DUTY_CHNG_END_LSCH1_INT_ENA.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH1_INT_ENA = 0x20
	// Position of DUTY_CHNG_END_LSCH2_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH2_INT_ENA_Pos = 0x6
	// Bit mask of DUTY_CHNG_END_LSCH2_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH2_INT_ENA_Msk = 0x40
	// Bit DUTY_CHNG_END_LSCH2_INT_ENA.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH2_INT_ENA = 0x40
	// Position of DUTY_CHNG_END_LSCH3_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH3_INT_ENA_Pos = 0x7
	// Bit mask of DUTY_CHNG_END_LSCH3_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH3_INT_ENA_Msk = 0x80
	// Bit DUTY_CHNG_END_LSCH3_INT_ENA.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH3_INT_ENA = 0x80
	// Position of DUTY_CHNG_END_LSCH4_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH4_INT_ENA_Pos = 0x8
	// Bit mask of DUTY_CHNG_END_LSCH4_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH4_INT_ENA_Msk = 0x100
	// Bit DUTY_CHNG_END_LSCH4_INT_ENA.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH4_INT_ENA = 0x100
	// Position of DUTY_CHNG_END_LSCH5_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH5_INT_ENA_Pos = 0x9
	// Bit mask of DUTY_CHNG_END_LSCH5_INT_ENA field.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH5_INT_ENA_Msk = 0x200
	// Bit DUTY_CHNG_END_LSCH5_INT_ENA.
	LEDC_INT_ENA_DUTY_CHNG_END_LSCH5_INT_ENA = 0x200
	// Position of OVF_CNT_LSCH0_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH0_INT_ENA_Pos = 0xa
	// Bit mask of OVF_CNT_LSCH0_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH0_INT_ENA_Msk = 0x400
	// Bit OVF_CNT_LSCH0_INT_ENA.
	LEDC_INT_ENA_OVF_CNT_LSCH0_INT_ENA = 0x400
	// Position of OVF_CNT_LSCH1_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH1_INT_ENA_Pos = 0xb
	// Bit mask of OVF_CNT_LSCH1_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH1_INT_ENA_Msk = 0x800
	// Bit OVF_CNT_LSCH1_INT_ENA.
	LEDC_INT_ENA_OVF_CNT_LSCH1_INT_ENA = 0x800
	// Position of OVF_CNT_LSCH2_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH2_INT_ENA_Pos = 0xc
	// Bit mask of OVF_CNT_LSCH2_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH2_INT_ENA_Msk = 0x1000
	// Bit OVF_CNT_LSCH2_INT_ENA.
	LEDC_INT_ENA_OVF_CNT_LSCH2_INT_ENA = 0x1000
	// Position of OVF_CNT_LSCH3_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH3_INT_ENA_Pos = 0xd
	// Bit mask of OVF_CNT_LSCH3_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH3_INT_ENA_Msk = 0x2000
	// Bit OVF_CNT_LSCH3_INT_ENA.
	LEDC_INT_ENA_OVF_CNT_LSCH3_INT_ENA = 0x2000
	// Position of OVF_CNT_LSCH4_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH4_INT_ENA_Pos = 0xe
	// Bit mask of OVF_CNT_LSCH4_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH4_INT_ENA_Msk = 0x4000
	// Bit OVF_CNT_LSCH4_INT_ENA.
	LEDC_INT_ENA_OVF_CNT_LSCH4_INT_ENA = 0x4000
	// Position of OVF_CNT_LSCH5_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH5_INT_ENA_Pos = 0xf
	// Bit mask of OVF_CNT_LSCH5_INT_ENA field.
	LEDC_INT_ENA_OVF_CNT_LSCH5_INT_ENA_Msk = 0x8000
	// Bit OVF_CNT_LSCH5_INT_ENA.
	LEDC_INT_ENA_OVF_CNT_LSCH5_INT_ENA = 0x8000

	// INT_CLR: LEDC_INT_CLR.
	// Position of LSTIMER0_OVF_INT_CLR field.
	LEDC_INT_CLR_LSTIMER0_OVF_INT_CLR_Pos = 0x0
	// Bit mask of LSTIMER0_OVF_INT_CLR field.
	LEDC_INT_CLR_LSTIMER0_OVF_INT_CLR_Msk = 0x1
	// Bit LSTIMER0_OVF_INT_CLR.
	LEDC_INT_CLR_LSTIMER0_OVF_INT_CLR = 0x1
	// Position of LSTIMER1_OVF_INT_CLR field.
	LEDC_INT_CLR_LSTIMER1_OVF_INT_CLR_Pos = 0x1
	// Bit mask of LSTIMER1_OVF_INT_CLR field.
	LEDC_INT_CLR_LSTIMER1_OVF_INT_CLR_Msk = 0x2
	// Bit LSTIMER1_OVF_INT_CLR.
	LEDC_INT_CLR_LSTIMER1_OVF_INT_CLR = 0x2
	// Position of LSTIMER2_OVF_INT_CLR field.
	LEDC_INT_CLR_LSTIMER2_OVF_INT_CLR_Pos = 0x2
	// Bit mask of LSTIMER2_OVF_INT_CLR field.
	LEDC_INT_CLR_LSTIMER2_OVF_INT_CLR_Msk = 0x4
	// Bit LSTIMER2_OVF_INT_CLR.
	LEDC_INT_CLR_LSTIMER2_OVF_INT_CLR = 0x4
	// Position of LSTIMER3_OVF_INT_CLR field.
	LEDC_INT_CLR_LSTIMER3_OVF_INT_CLR_Pos = 0x3
	// Bit mask of LSTIMER3_OVF_INT_CLR field.
	LEDC_INT_CLR_LSTIMER3_OVF_INT_CLR_Msk = 0x8
	// Bit LSTIMER3_OVF_INT_CLR.
	LEDC_INT_CLR_LSTIMER3_OVF_INT_CLR = 0x8
	// Position of DUTY_CHNG_END_LSCH0_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH0_INT_CLR_Pos = 0x4
	// Bit mask of DUTY_CHNG_END_LSCH0_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH0_INT_CLR_Msk = 0x10
	// Bit DUTY_CHNG_END_LSCH0_INT_CLR.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH0_INT_CLR = 0x10
	// Position of DUTY_CHNG_END_LSCH1_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH1_INT_CLR_Pos = 0x5
	// Bit mask of DUTY_CHNG_END_LSCH1_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH1_INT_CLR_Msk = 0x20
	// Bit DUTY_CHNG_END_LSCH1_INT_CLR.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH1_INT_CLR = 0x20
	// Position of DUTY_CHNG_END_LSCH2_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH2_INT_CLR_Pos = 0x6
	// Bit mask of DUTY_CHNG_END_LSCH2_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH2_INT_CLR_Msk = 0x40
	// Bit DUTY_CHNG_END_LSCH2_INT_CLR.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH2_INT_CLR = 0x40
	// Position of DUTY_CHNG_END_LSCH3_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH3_INT_CLR_Pos = 0x7
	// Bit mask of DUTY_CHNG_END_LSCH3_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH3_INT_CLR_Msk = 0x80
	// Bit DUTY_CHNG_END_LSCH3_INT_CLR.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH3_INT_CLR = 0x80
	// Position of DUTY_CHNG_END_LSCH4_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH4_INT_CLR_Pos = 0x8
	// Bit mask of DUTY_CHNG_END_LSCH4_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH4_INT_CLR_Msk = 0x100
	// Bit DUTY_CHNG_END_LSCH4_INT_CLR.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH4_INT_CLR = 0x100
	// Position of DUTY_CHNG_END_LSCH5_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH5_INT_CLR_Pos = 0x9
	// Bit mask of DUTY_CHNG_END_LSCH5_INT_CLR field.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH5_INT_CLR_Msk = 0x200
	// Bit DUTY_CHNG_END_LSCH5_INT_CLR.
	LEDC_INT_CLR_DUTY_CHNG_END_LSCH5_INT_CLR = 0x200
	// Position of OVF_CNT_LSCH0_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH0_INT_CLR_Pos = 0xa
	// Bit mask of OVF_CNT_LSCH0_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH0_INT_CLR_Msk = 0x400
	// Bit OVF_CNT_LSCH0_INT_CLR.
	LEDC_INT_CLR_OVF_CNT_LSCH0_INT_CLR = 0x400
	// Position of OVF_CNT_LSCH1_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH1_INT_CLR_Pos = 0xb
	// Bit mask of OVF_CNT_LSCH1_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH1_INT_CLR_Msk = 0x800
	// Bit OVF_CNT_LSCH1_INT_CLR.
	LEDC_INT_CLR_OVF_CNT_LSCH1_INT_CLR = 0x800
	// Position of OVF_CNT_LSCH2_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH2_INT_CLR_Pos = 0xc
	// Bit mask of OVF_CNT_LSCH2_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH2_INT_CLR_Msk = 0x1000
	// Bit OVF_CNT_LSCH2_INT_CLR.
	LEDC_INT_CLR_OVF_CNT_LSCH2_INT_CLR = 0x1000
	// Position of OVF_CNT_LSCH3_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH3_INT_CLR_Pos = 0xd
	// Bit mask of OVF_CNT_LSCH3_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH3_INT_CLR_Msk = 0x2000
	// Bit OVF_CNT_LSCH3_INT_CLR.
	LEDC_INT_CLR_OVF_CNT_LSCH3_INT_CLR = 0x2000
	// Position of OVF_CNT_LSCH4_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH4_INT_CLR_Pos = 0xe
	// Bit mask of OVF_CNT_LSCH4_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH4_INT_CLR_Msk = 0x4000
	// Bit OVF_CNT_LSCH4_INT_CLR.
	LEDC_INT_CLR_OVF_CNT_LSCH4_INT_CLR = 0x4000
	// Position of OVF_CNT_LSCH5_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH5_INT_CLR_Pos = 0xf
	// Bit mask of OVF_CNT_LSCH5_INT_CLR field.
	LEDC_INT_CLR_OVF_CNT_LSCH5_INT_CLR_Msk = 0x8000
	// Bit OVF_CNT_LSCH5_INT_CLR.
	LEDC_INT_CLR_OVF_CNT_LSCH5_INT_CLR = 0x8000

	// CONF: LEDC_CONF.
	// Position of APB_CLK_SEL field.
	LEDC_CONF_APB_CLK_SEL_Pos = 0x0
	// Bit mask of APB_CLK_SEL field.
	LEDC_CONF_APB_CLK_SEL_Msk = 0x3
	// Position of CLK_EN field.
	LEDC_CONF_CLK_EN_Pos = 0x1f
	// Bit mask of CLK_EN field.
	LEDC_CONF_CLK_EN_Msk = 0x80000000
	// Bit CLK_EN.
	LEDC_CONF_CLK_EN = 0x80000000

	// DATE: LEDC_DATE.
	// Position of LEDC_DATE field.
	LEDC_DATE_LEDC_DATE_Pos = 0x0
	// Bit mask of LEDC_DATE field.
	LEDC_DATE_LEDC_DATE_Msk = 0xffffffff
)

// Bitfields for RMT: Peripheral RMT
const (
	// CH0DATA: RMT_CH0DATA_REG.
	// Position of CH0DATA field.
	RMT_CH0DATA_CH0DATA_Pos = 0x0
	// Bit mask of CH0DATA field.
	RMT_CH0DATA_CH0DATA_Msk = 0xffffffff

	// CH1DATA: RMT_CH1DATA_REG.
	// Position of CH1DATA field.
	RMT_CH1DATA_CH1DATA_Pos = 0x0
	// Bit mask of CH1DATA field.
	RMT_CH1DATA_CH1DATA_Msk = 0xffffffff

	// CH2DATA: RMT_CH2DATA_REG.
	// Position of CH2DATA field.
	RMT_CH2DATA_CH2DATA_Pos = 0x0
	// Bit mask of CH2DATA field.
	RMT_CH2DATA_CH2DATA_Msk = 0xffffffff

	// CH3DATA: RMT_CH3DATA_REG.
	// Position of CH3DATA field.
	RMT_CH3DATA_CH3DATA_Pos = 0x0
	// Bit mask of CH3DATA field.
	RMT_CH3DATA_CH3DATA_Msk = 0xffffffff

	// CH0CONF0: RMT_CH0CONF0_REG.
	// Position of TX_START_CH0 field.
	RMT_CH0CONF0_TX_START_CH0_Pos = 0x0
	// Bit mask of TX_START_CH0 field.
	RMT_CH0CONF0_TX_START_CH0_Msk = 0x1
	// Bit TX_START_CH0.
	RMT_CH0CONF0_TX_START_CH0 = 0x1
	// Position of MEM_RD_RST_CH0 field.
	RMT_CH0CONF0_MEM_RD_RST_CH0_Pos = 0x1
	// Bit mask of MEM_RD_RST_CH0 field.
	RMT_CH0CONF0_MEM_RD_RST_CH0_Msk = 0x2
	// Bit MEM_RD_RST_CH0.
	RMT_CH0CONF0_MEM_RD_RST_CH0 = 0x2
	// Position of APB_MEM_RST_CH0 field.
	RMT_CH0CONF0_APB_MEM_RST_CH0_Pos = 0x2
	// Bit mask of APB_MEM_RST_CH0 field.
	RMT_CH0CONF0_APB_MEM_RST_CH0_Msk = 0x4
	// Bit APB_MEM_RST_CH0.
	RMT_CH0CONF0_APB_MEM_RST_CH0 = 0x4
	// Position of TX_CONTI_MODE_CH0 field.
	RMT_CH0CONF0_TX_CONTI_MODE_CH0_Pos = 0x3
	// Bit mask of TX_CONTI_MODE_CH0 field.
	RMT_CH0CONF0_TX_CONTI_MODE_CH0_Msk = 0x8
	// Bit TX_CONTI_MODE_CH0.
	RMT_CH0CONF0_TX_CONTI_MODE_CH0 = 0x8
	// Position of MEM_TX_WRAP_EN_CH0 field.
	RMT_CH0CONF0_MEM_TX_WRAP_EN_CH0_Pos = 0x4
	// Bit mask of MEM_TX_WRAP_EN_CH0 field.
	RMT_CH0CONF0_MEM_TX_WRAP_EN_CH0_Msk = 0x10
	// Bit MEM_TX_WRAP_EN_CH0.
	RMT_CH0CONF0_MEM_TX_WRAP_EN_CH0 = 0x10
	// Position of IDLE_OUT_LV_CH0 field.
	RMT_CH0CONF0_IDLE_OUT_LV_CH0_Pos = 0x5
	// Bit mask of IDLE_OUT_LV_CH0 field.
	RMT_CH0CONF0_IDLE_OUT_LV_CH0_Msk = 0x20
	// Bit IDLE_OUT_LV_CH0.
	RMT_CH0CONF0_IDLE_OUT_LV_CH0 = 0x20
	// Position of IDLE_OUT_EN_CH0 field.
	RMT_CH0CONF0_IDLE_OUT_EN_CH0_Pos = 0x6
	// Bit mask of IDLE_OUT_EN_CH0 field.
	RMT_CH0CONF0_IDLE_OUT_EN_CH0_Msk = 0x40
	// Bit IDLE_OUT_EN_CH0.
	RMT_CH0CONF0_IDLE_OUT_EN_CH0 = 0x40
	// Position of TX_STOP_CH0 field.
	RMT_CH0CONF0_TX_STOP_CH0_Pos = 0x7
	// Bit mask of TX_STOP_CH0 field.
	RMT_CH0CONF0_TX_STOP_CH0_Msk = 0x80
	// Bit TX_STOP_CH0.
	RMT_CH0CONF0_TX_STOP_CH0 = 0x80
	// Position of DIV_CNT_CH0 field.
	RMT_CH0CONF0_DIV_CNT_CH0_Pos = 0x8
	// Bit mask of DIV_CNT_CH0 field.
	RMT_CH0CONF0_DIV_CNT_CH0_Msk = 0xff00
	// Position of MEM_SIZE_CH0 field.
	RMT_CH0CONF0_MEM_SIZE_CH0_Pos = 0x10
	// Bit mask of MEM_SIZE_CH0 field.
	RMT_CH0CONF0_MEM_SIZE_CH0_Msk = 0x70000
	// Position of CARRIER_EFF_EN_CH0 field.
	RMT_CH0CONF0_CARRIER_EFF_EN_CH0_Pos = 0x14
	// Bit mask of CARRIER_EFF_EN_CH0 field.
	RMT_CH0CONF0_CARRIER_EFF_EN_CH0_Msk = 0x100000
	// Bit CARRIER_EFF_EN_CH0.
	RMT_CH0CONF0_CARRIER_EFF_EN_CH0 = 0x100000
	// Position of CARRIER_EN_CH0 field.
	RMT_CH0CONF0_CARRIER_EN_CH0_Pos = 0x15
	// Bit mask of CARRIER_EN_CH0 field.
	RMT_CH0CONF0_CARRIER_EN_CH0_Msk = 0x200000
	// Bit CARRIER_EN_CH0.
	RMT_CH0CONF0_CARRIER_EN_CH0 = 0x200000
	// Position of CARRIER_OUT_LV_CH0 field.
	RMT_CH0CONF0_CARRIER_OUT_LV_CH0_Pos = 0x16
	// Bit mask of CARRIER_OUT_LV_CH0 field.
	RMT_CH0CONF0_CARRIER_OUT_LV_CH0_Msk = 0x400000
	// Bit CARRIER_OUT_LV_CH0.
	RMT_CH0CONF0_CARRIER_OUT_LV_CH0 = 0x400000
	// Position of AFIFO_RST_CH0 field.
	RMT_CH0CONF0_AFIFO_RST_CH0_Pos = 0x17
	// Bit mask of AFIFO_RST_CH0 field.
	RMT_CH0CONF0_AFIFO_RST_CH0_Msk = 0x800000
	// Bit AFIFO_RST_CH0.
	RMT_CH0CONF0_AFIFO_RST_CH0 = 0x800000
	// Position of REG_CONF_UPDATE_CH0 field.
	RMT_CH0CONF0_REG_CONF_UPDATE_CH0_Pos = 0x18
	// Bit mask of REG_CONF_UPDATE_CH0 field.
	RMT_CH0CONF0_REG_CONF_UPDATE_CH0_Msk = 0x1000000
	// Bit REG_CONF_UPDATE_CH0.
	RMT_CH0CONF0_REG_CONF_UPDATE_CH0 = 0x1000000

	// CH1CONF0: RMT_CH1CONF0_REG.
	// Position of TX_START_CH1 field.
	RMT_CH1CONF0_TX_START_CH1_Pos = 0x0
	// Bit mask of TX_START_CH1 field.
	RMT_CH1CONF0_TX_START_CH1_Msk = 0x1
	// Bit TX_START_CH1.
	RMT_CH1CONF0_TX_START_CH1 = 0x1
	// Position of MEM_RD_RST_CH1 field.
	RMT_CH1CONF0_MEM_RD_RST_CH1_Pos = 0x1
	// Bit mask of MEM_RD_RST_CH1 field.
	RMT_CH1CONF0_MEM_RD_RST_CH1_Msk = 0x2
	// Bit MEM_RD_RST_CH1.
	RMT_CH1CONF0_MEM_RD_RST_CH1 = 0x2
	// Position of APB_MEM_RST_CH1 field.
	RMT_CH1CONF0_APB_MEM_RST_CH1_Pos = 0x2
	// Bit mask of APB_MEM_RST_CH1 field.
	RMT_CH1CONF0_APB_MEM_RST_CH1_Msk = 0x4
	// Bit APB_MEM_RST_CH1.
	RMT_CH1CONF0_APB_MEM_RST_CH1 = 0x4
	// Position of TX_CONTI_MODE_CH1 field.
	RMT_CH1CONF0_TX_CONTI_MODE_CH1_Pos = 0x3
	// Bit mask of TX_CONTI_MODE_CH1 field.
	RMT_CH1CONF0_TX_CONTI_MODE_CH1_Msk = 0x8
	// Bit TX_CONTI_MODE_CH1.
	RMT_CH1CONF0_TX_CONTI_MODE_CH1 = 0x8
	// Position of MEM_TX_WRAP_EN_CH1 field.
	RMT_CH1CONF0_MEM_TX_WRAP_EN_CH1_Pos = 0x4
	// Bit mask of MEM_TX_WRAP_EN_CH1 field.
	RMT_CH1CONF0_MEM_TX_WRAP_EN_CH1_Msk = 0x10
	// Bit MEM_TX_WRAP_EN_CH1.
	RMT_CH1CONF0_MEM_TX_WRAP_EN_CH1 = 0x10
	// Position of IDLE_OUT_LV_CH1 field.
	RMT_CH1CONF0_IDLE_OUT_LV_CH1_Pos = 0x5
	// Bit mask of IDLE_OUT_LV_CH1 field.
	RMT_CH1CONF0_IDLE_OUT_LV_CH1_Msk = 0x20
	// Bit IDLE_OUT_LV_CH1.
	RMT_CH1CONF0_IDLE_OUT_LV_CH1 = 0x20
	// Position of IDLE_OUT_EN_CH1 field.
	RMT_CH1CONF0_IDLE_OUT_EN_CH1_Pos = 0x6
	// Bit mask of IDLE_OUT_EN_CH1 field.
	RMT_CH1CONF0_IDLE_OUT_EN_CH1_Msk = 0x40
	// Bit IDLE_OUT_EN_CH1.
	RMT_CH1CONF0_IDLE_OUT_EN_CH1 = 0x40
	// Position of TX_STOP_CH1 field.
	RMT_CH1CONF0_TX_STOP_CH1_Pos = 0x7
	// Bit mask of TX_STOP_CH1 field.
	RMT_CH1CONF0_TX_STOP_CH1_Msk = 0x80
	// Bit TX_STOP_CH1.
	RMT_CH1CONF0_TX_STOP_CH1 = 0x80
	// Position of DIV_CNT_CH1 field.
	RMT_CH1CONF0_DIV_CNT_CH1_Pos = 0x8
	// Bit mask of DIV_CNT_CH1 field.
	RMT_CH1CONF0_DIV_CNT_CH1_Msk = 0xff00
	// Position of MEM_SIZE_CH1 field.
	RMT_CH1CONF0_MEM_SIZE_CH1_Pos = 0x10
	// Bit mask of MEM_SIZE_CH1 field.
	RMT_CH1CONF0_MEM_SIZE_CH1_Msk = 0x70000
	// Position of CARRIER_EFF_EN_CH1 field.
	RMT_CH1CONF0_CARRIER_EFF_EN_CH1_Pos = 0x14
	// Bit mask of CARRIER_EFF_EN_CH1 field.
	RMT_CH1CONF0_CARRIER_EFF_EN_CH1_Msk = 0x100000
	// Bit CARRIER_EFF_EN_CH1.
	RMT_CH1CONF0_CARRIER_EFF_EN_CH1 = 0x100000
	// Position of CARRIER_EN_CH1 field.
	RMT_CH1CONF0_CARRIER_EN_CH1_Pos = 0x15
	// Bit mask of CARRIER_EN_CH1 field.
	RMT_CH1CONF0_CARRIER_EN_CH1_Msk = 0x200000
	// Bit CARRIER_EN_CH1.
	RMT_CH1CONF0_CARRIER_EN_CH1 = 0x200000
	// Position of CARRIER_OUT_LV_CH1 field.
	RMT_CH1CONF0_CARRIER_OUT_LV_CH1_Pos = 0x16
	// Bit mask of CARRIER_OUT_LV_CH1 field.
	RMT_CH1CONF0_CARRIER_OUT_LV_CH1_Msk = 0x400000
	// Bit CARRIER_OUT_LV_CH1.
	RMT_CH1CONF0_CARRIER_OUT_LV_CH1 = 0x400000
	// Position of AFIFO_RST_CH1 field.
	RMT_CH1CONF0_AFIFO_RST_CH1_Pos = 0x17
	// Bit mask of AFIFO_RST_CH1 field.
	RMT_CH1CONF0_AFIFO_RST_CH1_Msk = 0x800000
	// Bit AFIFO_RST_CH1.
	RMT_CH1CONF0_AFIFO_RST_CH1 = 0x800000
	// Position of CONF_UPDATE_CH1 field.
	RMT_CH1CONF0_CONF_UPDATE_CH1_Pos = 0x18
	// Bit mask of CONF_UPDATE_CH1 field.
	RMT_CH1CONF0_CONF_UPDATE_CH1_Msk = 0x1000000
	// Bit CONF_UPDATE_CH1.
	RMT_CH1CONF0_CONF_UPDATE_CH1 = 0x1000000

	// CH2CONF0: RMT_CH2CONF0_REG.
	// Position of DIV_CNT_CH2 field.
	RMT_CH2CONF0_DIV_CNT_CH2_Pos = 0x0
	// Bit mask of DIV_CNT_CH2 field.
	RMT_CH2CONF0_DIV_CNT_CH2_Msk = 0xff
	// Position of IDLE_THRES_CH2 field.
	RMT_CH2CONF0_IDLE_THRES_CH2_Pos = 0x8
	// Bit mask of IDLE_THRES_CH2 field.
	RMT_CH2CONF0_IDLE_THRES_CH2_Msk = 0x7fff00
	// Position of MEM_SIZE_CH2 field.
	RMT_CH2CONF0_MEM_SIZE_CH2_Pos = 0x17
	// Bit mask of MEM_SIZE_CH2 field.
	RMT_CH2CONF0_MEM_SIZE_CH2_Msk = 0x3800000
	// Position of CARRIER_EN_CH2 field.
	RMT_CH2CONF0_CARRIER_EN_CH2_Pos = 0x1c
	// Bit mask of CARRIER_EN_CH2 field.
	RMT_CH2CONF0_CARRIER_EN_CH2_Msk = 0x10000000
	// Bit CARRIER_EN_CH2.
	RMT_CH2CONF0_CARRIER_EN_CH2 = 0x10000000
	// Position of CARRIER_OUT_LV_CH2 field.
	RMT_CH2CONF0_CARRIER_OUT_LV_CH2_Pos = 0x1d
	// Bit mask of CARRIER_OUT_LV_CH2 field.
	RMT_CH2CONF0_CARRIER_OUT_LV_CH2_Msk = 0x20000000
	// Bit CARRIER_OUT_LV_CH2.
	RMT_CH2CONF0_CARRIER_OUT_LV_CH2 = 0x20000000

	// CH2CONF1: RMT_CH2CONF1_REG.
	// Position of RX_EN_CH2 field.
	RMT_CH2CONF1_RX_EN_CH2_Pos = 0x0
	// Bit mask of RX_EN_CH2 field.
	RMT_CH2CONF1_RX_EN_CH2_Msk = 0x1
	// Bit RX_EN_CH2.
	RMT_CH2CONF1_RX_EN_CH2 = 0x1
	// Position of MEM_WR_RST_CH2 field.
	RMT_CH2CONF1_MEM_WR_RST_CH2_Pos = 0x1
	// Bit mask of MEM_WR_RST_CH2 field.
	RMT_CH2CONF1_MEM_WR_RST_CH2_Msk = 0x2
	// Bit MEM_WR_RST_CH2.
	RMT_CH2CONF1_MEM_WR_RST_CH2 = 0x2
	// Position of APB_MEM_RST_CH2 field.
	RMT_CH2CONF1_APB_MEM_RST_CH2_Pos = 0x2
	// Bit mask of APB_MEM_RST_CH2 field.
	RMT_CH2CONF1_APB_MEM_RST_CH2_Msk = 0x4
	// Bit APB_MEM_RST_CH2.
	RMT_CH2CONF1_APB_MEM_RST_CH2 = 0x4
	// Position of MEM_OWNER_CH2 field.
	RMT_CH2CONF1_MEM_OWNER_CH2_Pos = 0x3
	// Bit mask of MEM_OWNER_CH2 field.
	RMT_CH2CONF1_MEM_OWNER_CH2_Msk = 0x8
	// Bit MEM_OWNER_CH2.
	RMT_CH2CONF1_MEM_OWNER_CH2 = 0x8
	// Position of RX_FILTER_EN_CH2 field.
	RMT_CH2CONF1_RX_FILTER_EN_CH2_Pos = 0x4
	// Bit mask of RX_FILTER_EN_CH2 field.
	RMT_CH2CONF1_RX_FILTER_EN_CH2_Msk = 0x10
	// Bit RX_FILTER_EN_CH2.
	RMT_CH2CONF1_RX_FILTER_EN_CH2 = 0x10
	// Position of RX_FILTER_THRES_CH2 field.
	RMT_CH2CONF1_RX_FILTER_THRES_CH2_Pos = 0x5
	// Bit mask of RX_FILTER_THRES_CH2 field.
	RMT_CH2CONF1_RX_FILTER_THRES_CH2_Msk = 0x1fe0
	// Position of MEM_RX_WRAP_EN_CH2 field.
	RMT_CH2CONF1_MEM_RX_WRAP_EN_CH2_Pos = 0xd
	// Bit mask of MEM_RX_WRAP_EN_CH2 field.
	RMT_CH2CONF1_MEM_RX_WRAP_EN_CH2_Msk = 0x2000
	// Bit MEM_RX_WRAP_EN_CH2.
	RMT_CH2CONF1_MEM_RX_WRAP_EN_CH2 = 0x2000
	// Position of AFIFO_RST_CH2 field.
	RMT_CH2CONF1_AFIFO_RST_CH2_Pos = 0xe
	// Bit mask of AFIFO_RST_CH2 field.
	RMT_CH2CONF1_AFIFO_RST_CH2_Msk = 0x4000
	// Bit AFIFO_RST_CH2.
	RMT_CH2CONF1_AFIFO_RST_CH2 = 0x4000
	// Position of CONF_UPDATE_CH2 field.
	RMT_CH2CONF1_CONF_UPDATE_CH2_Pos = 0xf
	// Bit mask of CONF_UPDATE_CH2 field.
	RMT_CH2CONF1_CONF_UPDATE_CH2_Msk = 0x8000
	// Bit CONF_UPDATE_CH2.
	RMT_CH2CONF1_CONF_UPDATE_CH2 = 0x8000

	// CH3CONF0: RMT_CH3CONF0_REG.
	// Position of DIV_CNT_CH3 field.
	RMT_CH3CONF0_DIV_CNT_CH3_Pos = 0x0
	// Bit mask of DIV_CNT_CH3 field.
	RMT_CH3CONF0_DIV_CNT_CH3_Msk = 0xff
	// Position of IDLE_THRES_CH3 field.
	RMT_CH3CONF0_IDLE_THRES_CH3_Pos = 0x8
	// Bit mask of IDLE_THRES_CH3 field.
	RMT_CH3CONF0_IDLE_THRES_CH3_Msk = 0x7fff00
	// Position of MEM_SIZE_CH3 field.
	RMT_CH3CONF0_MEM_SIZE_CH3_Pos = 0x17
	// Bit mask of MEM_SIZE_CH3 field.
	RMT_CH3CONF0_MEM_SIZE_CH3_Msk = 0x3800000
	// Position of CARRIER_EN_CH3 field.
	RMT_CH3CONF0_CARRIER_EN_CH3_Pos = 0x1c
	// Bit mask of CARRIER_EN_CH3 field.
	RMT_CH3CONF0_CARRIER_EN_CH3_Msk = 0x10000000
	// Bit CARRIER_EN_CH3.
	RMT_CH3CONF0_CARRIER_EN_CH3 = 0x10000000
	// Position of CARRIER_OUT_LV_CH3 field.
	RMT_CH3CONF0_CARRIER_OUT_LV_CH3_Pos = 0x1d
	// Bit mask of CARRIER_OUT_LV_CH3 field.
	RMT_CH3CONF0_CARRIER_OUT_LV_CH3_Msk = 0x20000000
	// Bit CARRIER_OUT_LV_CH3.
	RMT_CH3CONF0_CARRIER_OUT_LV_CH3 = 0x20000000

	// CH3CONF1: RMT_CH3CONF1_REG.
	// Position of RX_EN_CH3 field.
	RMT_CH3CONF1_RX_EN_CH3_Pos = 0x0
	// Bit mask of RX_EN_CH3 field.
	RMT_CH3CONF1_RX_EN_CH3_Msk = 0x1
	// Bit RX_EN_CH3.
	RMT_CH3CONF1_RX_EN_CH3 = 0x1
	// Position of MEM_WR_RST_CH3 field.
	RMT_CH3CONF1_MEM_WR_RST_CH3_Pos = 0x1
	// Bit mask of MEM_WR_RST_CH3 field.
	RMT_CH3CONF1_MEM_WR_RST_CH3_Msk = 0x2
	// Bit MEM_WR_RST_CH3.
	RMT_CH3CONF1_MEM_WR_RST_CH3 = 0x2
	// Position of APB_MEM_RST_CH3 field.
	RMT_CH3CONF1_APB_MEM_RST_CH3_Pos = 0x2
	// Bit mask of APB_MEM_RST_CH3 field.
	RMT_CH3CONF1_APB_MEM_RST_CH3_Msk = 0x4
	// Bit APB_MEM_RST_CH3.
	RMT_CH3CONF1_APB_MEM_RST_CH3 = 0x4
	// Position of MEM_OWNER_CH3 field.
	RMT_CH3CONF1_MEM_OWNER_CH3_Pos = 0x3
	// Bit mask of MEM_OWNER_CH3 field.
	RMT_CH3CONF1_MEM_OWNER_CH3_Msk = 0x8
	// Bit MEM_OWNER_CH3.
	RMT_CH3CONF1_MEM_OWNER_CH3 = 0x8
	// Position of RX_FILTER_EN_CH3 field.
	RMT_CH3CONF1_RX_FILTER_EN_CH3_Pos = 0x4
	// Bit mask of RX_FILTER_EN_CH3 field.
	RMT_CH3CONF1_RX_FILTER_EN_CH3_Msk = 0x10
	// Bit RX_FILTER_EN_CH3.
	RMT_CH3CONF1_RX_FILTER_EN_CH3 = 0x10
	// Position of RX_FILTER_THRES_CH3 field.
	RMT_CH3CONF1_RX_FILTER_THRES_CH3_Pos = 0x5
	// Bit mask of RX_FILTER_THRES_CH3 field.
	RMT_CH3CONF1_RX_FILTER_THRES_CH3_Msk = 0x1fe0
	// Position of MEM_RX_WRAP_EN_CH3 field.
	RMT_CH3CONF1_MEM_RX_WRAP_EN_CH3_Pos = 0xd
	// Bit mask of MEM_RX_WRAP_EN_CH3 field.
	RMT_CH3CONF1_MEM_RX_WRAP_EN_CH3_Msk = 0x2000
	// Bit MEM_RX_WRAP_EN_CH3.
	RMT_CH3CONF1_MEM_RX_WRAP_EN_CH3 = 0x2000
	// Position of AFIFO_RST_CH3 field.
	RMT_CH3CONF1_AFIFO_RST_CH3_Pos = 0xe
	// Bit mask of AFIFO_RST_CH3 field.
	RMT_CH3CONF1_AFIFO_RST_CH3_Msk = 0x4000
	// Bit AFIFO_RST_CH3.
	RMT_CH3CONF1_AFIFO_RST_CH3 = 0x4000
	// Position of CONF_UPDATE_CH3 field.
	RMT_CH3CONF1_CONF_UPDATE_CH3_Pos = 0xf
	// Bit mask of CONF_UPDATE_CH3 field.
	RMT_CH3CONF1_CONF_UPDATE_CH3_Msk = 0x8000
	// Bit CONF_UPDATE_CH3.
	RMT_CH3CONF1_CONF_UPDATE_CH3 = 0x8000

	// CH0STATUS: RMT_CH0STATUS_REG.
	// Position of MEM_RADDR_EX_CH0 field.
	RMT_CH0STATUS_MEM_RADDR_EX_CH0_Pos = 0x0
	// Bit mask of MEM_RADDR_EX_CH0 field.
	RMT_CH0STATUS_MEM_RADDR_EX_CH0_Msk = 0x1ff
	// Position of STATE_CH0 field.
	RMT_CH0STATUS_STATE_CH0_Pos = 0x9
	// Bit mask of STATE_CH0 field.
	RMT_CH0STATUS_STATE_CH0_Msk = 0xe00
	// Position of APB_MEM_WADDR_CH0 field.
	RMT_CH0STATUS_APB_MEM_WADDR_CH0_Pos = 0xc
	// Bit mask of APB_MEM_WADDR_CH0 field.
	RMT_CH0STATUS_APB_MEM_WADDR_CH0_Msk = 0x1ff000
	// Position of APB_MEM_RD_ERR_CH0 field.
	RMT_CH0STATUS_APB_MEM_RD_ERR_CH0_Pos = 0x15
	// Bit mask of APB_MEM_RD_ERR_CH0 field.
	RMT_CH0STATUS_APB_MEM_RD_ERR_CH0_Msk = 0x200000
	// Bit APB_MEM_RD_ERR_CH0.
	RMT_CH0STATUS_APB_MEM_RD_ERR_CH0 = 0x200000
	// Position of MEM_EMPTY_CH0 field.
	RMT_CH0STATUS_MEM_EMPTY_CH0_Pos = 0x16
	// Bit mask of MEM_EMPTY_CH0 field.
	RMT_CH0STATUS_MEM_EMPTY_CH0_Msk = 0x400000
	// Bit MEM_EMPTY_CH0.
	RMT_CH0STATUS_MEM_EMPTY_CH0 = 0x400000
	// Position of APB_MEM_WR_ERR_CH0 field.
	RMT_CH0STATUS_APB_MEM_WR_ERR_CH0_Pos = 0x17
	// Bit mask of APB_MEM_WR_ERR_CH0 field.
	RMT_CH0STATUS_APB_MEM_WR_ERR_CH0_Msk = 0x800000
	// Bit APB_MEM_WR_ERR_CH0.
	RMT_CH0STATUS_APB_MEM_WR_ERR_CH0 = 0x800000
	// Position of APB_MEM_RADDR_CH0 field.
	RMT_CH0STATUS_APB_MEM_RADDR_CH0_Pos = 0x18
	// Bit mask of APB_MEM_RADDR_CH0 field.
	RMT_CH0STATUS_APB_MEM_RADDR_CH0_Msk = 0xff000000

	// CH1STATUS: RMT_CH1STATUS_REG.
	// Position of MEM_RADDR_EX_CH1 field.
	RMT_CH1STATUS_MEM_RADDR_EX_CH1_Pos = 0x0
	// Bit mask of MEM_RADDR_EX_CH1 field.
	RMT_CH1STATUS_MEM_RADDR_EX_CH1_Msk = 0x1ff
	// Position of STATE_CH1 field.
	RMT_CH1STATUS_STATE_CH1_Pos = 0x9
	// Bit mask of STATE_CH1 field.
	RMT_CH1STATUS_STATE_CH1_Msk = 0xe00
	// Position of APB_MEM_WADDR_CH1 field.
	RMT_CH1STATUS_APB_MEM_WADDR_CH1_Pos = 0xc
	// Bit mask of APB_MEM_WADDR_CH1 field.
	RMT_CH1STATUS_APB_MEM_WADDR_CH1_Msk = 0x1ff000
	// Position of APB_MEM_RD_ERR_CH1 field.
	RMT_CH1STATUS_APB_MEM_RD_ERR_CH1_Pos = 0x15
	// Bit mask of APB_MEM_RD_ERR_CH1 field.
	RMT_CH1STATUS_APB_MEM_RD_ERR_CH1_Msk = 0x200000
	// Bit APB_MEM_RD_ERR_CH1.
	RMT_CH1STATUS_APB_MEM_RD_ERR_CH1 = 0x200000
	// Position of MEM_EMPTY_CH1 field.
	RMT_CH1STATUS_MEM_EMPTY_CH1_Pos = 0x16
	// Bit mask of MEM_EMPTY_CH1 field.
	RMT_CH1STATUS_MEM_EMPTY_CH1_Msk = 0x400000
	// Bit MEM_EMPTY_CH1.
	RMT_CH1STATUS_MEM_EMPTY_CH1 = 0x400000
	// Position of APB_MEM_WR_ERR_CH1 field.
	RMT_CH1STATUS_APB_MEM_WR_ERR_CH1_Pos = 0x17
	// Bit mask of APB_MEM_WR_ERR_CH1 field.
	RMT_CH1STATUS_APB_MEM_WR_ERR_CH1_Msk = 0x800000
	// Bit APB_MEM_WR_ERR_CH1.
	RMT_CH1STATUS_APB_MEM_WR_ERR_CH1 = 0x800000
	// Position of APB_MEM_RADDR_CH1 field.
	RMT_CH1STATUS_APB_MEM_RADDR_CH1_Pos = 0x18
	// Bit mask of APB_MEM_RADDR_CH1 field.
	RMT_CH1STATUS_APB_MEM_RADDR_CH1_Msk = 0xff000000

	// CH2STATUS: RMT_CH2STATUS_REG.
	// Position of MEM_WADDR_EX_CH2 field.
	RMT_CH2STATUS_MEM_WADDR_EX_CH2_Pos = 0x0
	// Bit mask of MEM_WADDR_EX_CH2 field.
	RMT_CH2STATUS_MEM_WADDR_EX_CH2_Msk = 0x1ff
	// Position of APB_MEM_RADDR_CH2 field.
	RMT_CH2STATUS_APB_MEM_RADDR_CH2_Pos = 0xc
	// Bit mask of APB_MEM_RADDR_CH2 field.
	RMT_CH2STATUS_APB_MEM_RADDR_CH2_Msk = 0x1ff000
	// Position of STATE_CH2 field.
	RMT_CH2STATUS_STATE_CH2_Pos = 0x16
	// Bit mask of STATE_CH2 field.
	RMT_CH2STATUS_STATE_CH2_Msk = 0x1c00000
	// Position of MEM_OWNER_ERR_CH2 field.
	RMT_CH2STATUS_MEM_OWNER_ERR_CH2_Pos = 0x19
	// Bit mask of MEM_OWNER_ERR_CH2 field.
	RMT_CH2STATUS_MEM_OWNER_ERR_CH2_Msk = 0x2000000
	// Bit MEM_OWNER_ERR_CH2.
	RMT_CH2STATUS_MEM_OWNER_ERR_CH2 = 0x2000000
	// Position of MEM_FULL_CH2 field.
	RMT_CH2STATUS_MEM_FULL_CH2_Pos = 0x1a
	// Bit mask of MEM_FULL_CH2 field.
	RMT_CH2STATUS_MEM_FULL_CH2_Msk = 0x4000000
	// Bit MEM_FULL_CH2.
	RMT_CH2STATUS_MEM_FULL_CH2 = 0x4000000
	// Position of APB_MEM_RD_ERR_CH2 field.
	RMT_CH2STATUS_APB_MEM_RD_ERR_CH2_Pos = 0x1b
	// Bit mask of APB_MEM_RD_ERR_CH2 field.
	RMT_CH2STATUS_APB_MEM_RD_ERR_CH2_Msk = 0x8000000
	// Bit APB_MEM_RD_ERR_CH2.
	RMT_CH2STATUS_APB_MEM_RD_ERR_CH2 = 0x8000000

	// CH3STATUS: RMT_CH3STATUS_REG.
	// Position of MEM_WADDR_EX_CH3 field.
	RMT_CH3STATUS_MEM_WADDR_EX_CH3_Pos = 0x0
	// Bit mask of MEM_WADDR_EX_CH3 field.
	RMT_CH3STATUS_MEM_WADDR_EX_CH3_Msk = 0x1ff
	// Position of APB_MEM_RADDR_CH3 field.
	RMT_CH3STATUS_APB_MEM_RADDR_CH3_Pos = 0xc
	// Bit mask of APB_MEM_RADDR_CH3 field.
	RMT_CH3STATUS_APB_MEM_RADDR_CH3_Msk = 0x1ff000
	// Position of STATE_CH3 field.
	RMT_CH3STATUS_STATE_CH3_Pos = 0x16
	// Bit mask of STATE_CH3 field.
	RMT_CH3STATUS_STATE_CH3_Msk = 0x1c00000
	// Position of MEM_OWNER_ERR_CH3 field.
	RMT_CH3STATUS_MEM_OWNER_ERR_CH3_Pos = 0x19
	// Bit mask of MEM_OWNER_ERR_CH3 field.
	RMT_CH3STATUS_MEM_OWNER_ERR_CH3_Msk = 0x2000000
	// Bit MEM_OWNER_ERR_CH3.
	RMT_CH3STATUS_MEM_OWNER_ERR_CH3 = 0x2000000
	// Position of MEM_FULL_CH3 field.
	RMT_CH3STATUS_MEM_FULL_CH3_Pos = 0x1a
	// Bit mask of MEM_FULL_CH3 field.
	RMT_CH3STATUS_MEM_FULL_CH3_Msk = 0x4000000
	// Bit MEM_FULL_CH3.
	RMT_CH3STATUS_MEM_FULL_CH3 = 0x4000000
	// Position of APB_MEM_RD_ERR_CH3 field.
	RMT_CH3STATUS_APB_MEM_RD_ERR_CH3_Pos = 0x1b
	// Bit mask of APB_MEM_RD_ERR_CH3 field.
	RMT_CH3STATUS_APB_MEM_RD_ERR_CH3_Msk = 0x8000000
	// Bit APB_MEM_RD_ERR_CH3.
	RMT_CH3STATUS_APB_MEM_RD_ERR_CH3 = 0x8000000

	// INT_RAW: RMT_INT_RAW_REG.
	// Position of CH0_TX_END_INT_RAW field.
	RMT_INT_RAW_CH0_TX_END_INT_RAW_Pos = 0x0
	// Bit mask of CH0_TX_END_INT_RAW field.
	RMT_INT_RAW_CH0_TX_END_INT_RAW_Msk = 0x1
	// Bit CH0_TX_END_INT_RAW.
	RMT_INT_RAW_CH0_TX_END_INT_RAW = 0x1
	// Position of CH1_TX_END_INT_RAW field.
	RMT_INT_RAW_CH1_TX_END_INT_RAW_Pos = 0x1
	// Bit mask of CH1_TX_END_INT_RAW field.
	RMT_INT_RAW_CH1_TX_END_INT_RAW_Msk = 0x2
	// Bit CH1_TX_END_INT_RAW.
	RMT_INT_RAW_CH1_TX_END_INT_RAW = 0x2
	// Position of CH2_RX_END_INT_RAW field.
	RMT_INT_RAW_CH2_RX_END_INT_RAW_Pos = 0x2
	// Bit mask of CH2_RX_END_INT_RAW field.
	RMT_INT_RAW_CH2_RX_END_INT_RAW_Msk = 0x4
	// Bit CH2_RX_END_INT_RAW.
	RMT_INT_RAW_CH2_RX_END_INT_RAW = 0x4
	// Position of CH3_RX_END_INT_RAW field.
	RMT_INT_RAW_CH3_RX_END_INT_RAW_Pos = 0x3
	// Bit mask of CH3_RX_END_INT_RAW field.
	RMT_INT_RAW_CH3_RX_END_INT_RAW_Msk = 0x8
	// Bit CH3_RX_END_INT_RAW.
	RMT_INT_RAW_CH3_RX_END_INT_RAW = 0x8
	// Position of CH0_ERR_INT_RAW field.
	RMT_INT_RAW_CH0_ERR_INT_RAW_Pos = 0x4
	// Bit mask of CH0_ERR_INT_RAW field.
	RMT_INT_RAW_CH0_ERR_INT_RAW_Msk = 0x10
	// Bit CH0_ERR_INT_RAW.
	RMT_INT_RAW_CH0_ERR_INT_RAW = 0x10
	// Position of CH1_ERR_INT_RAW field.
	RMT_INT_RAW_CH1_ERR_INT_RAW_Pos = 0x5
	// Bit mask of CH1_ERR_INT_RAW field.
	RMT_INT_RAW_CH1_ERR_INT_RAW_Msk = 0x20
	// Bit CH1_ERR_INT_RAW.
	RMT_INT_RAW_CH1_ERR_INT_RAW = 0x20
	// Position of CH2_ERR_INT_RAW field.
	RMT_INT_RAW_CH2_ERR_INT_RAW_Pos = 0x6
	// Bit mask of CH2_ERR_INT_RAW field.
	RMT_INT_RAW_CH2_ERR_INT_RAW_Msk = 0x40
	// Bit CH2_ERR_INT_RAW.
	RMT_INT_RAW_CH2_ERR_INT_RAW = 0x40
	// Position of CH3_ERR_INT_RAW field.
	RMT_INT_RAW_CH3_ERR_INT_RAW_Pos = 0x7
	// Bit mask of CH3_ERR_INT_RAW field.
	RMT_INT_RAW_CH3_ERR_INT_RAW_Msk = 0x80
	// Bit CH3_ERR_INT_RAW.
	RMT_INT_RAW_CH3_ERR_INT_RAW = 0x80
	// Position of CH0_TX_THR_EVENT_INT_RAW field.
	RMT_INT_RAW_CH0_TX_THR_EVENT_INT_RAW_Pos = 0x8
	// Bit mask of CH0_TX_THR_EVENT_INT_RAW field.
	RMT_INT_RAW_CH0_TX_THR_EVENT_INT_RAW_Msk = 0x100
	// Bit CH0_TX_THR_EVENT_INT_RAW.
	RMT_INT_RAW_CH0_TX_THR_EVENT_INT_RAW = 0x100
	// Position of CH1_TX_THR_EVENT_INT_RAW field.
	RMT_INT_RAW_CH1_TX_THR_EVENT_INT_RAW_Pos = 0x9
	// Bit mask of CH1_TX_THR_EVENT_INT_RAW field.
	RMT_INT_RAW_CH1_TX_THR_EVENT_INT_RAW_Msk = 0x200
	// Bit CH1_TX_THR_EVENT_INT_RAW.
	RMT_INT_RAW_CH1_TX_THR_EVENT_INT_RAW = 0x200
	// Position of CH2_RX_THR_EVENT_INT_RAW field.
	RMT_INT_RAW_CH2_RX_THR_EVENT_INT_RAW_Pos = 0xa
	// Bit mask of CH2_RX_THR_EVENT_INT_RAW field.
	RMT_INT_RAW_CH2_RX_THR_EVENT_INT_RAW_Msk = 0x400
	// Bit CH2_RX_THR_EVENT_INT_RAW.
	RMT_INT_RAW_CH2_RX_THR_EVENT_INT_RAW = 0x400
	// Position of CH3_RX_THR_EVENT_INT_RAW field.
	RMT_INT_RAW_CH3_RX_THR_EVENT_INT_RAW_Pos = 0xb
	// Bit mask of CH3_RX_THR_EVENT_INT_RAW field.
	RMT_INT_RAW_CH3_RX_THR_EVENT_INT_RAW_Msk = 0x800
	// Bit CH3_RX_THR_EVENT_INT_RAW.
	RMT_INT_RAW_CH3_RX_THR_EVENT_INT_RAW = 0x800
	// Position of CH0_TX_LOOP_INT_RAW field.
	RMT_INT_RAW_CH0_TX_LOOP_INT_RAW_Pos = 0xc
	// Bit mask of CH0_TX_LOOP_INT_RAW field.
	RMT_INT_RAW_CH0_TX_LOOP_INT_RAW_Msk = 0x1000
	// Bit CH0_TX_LOOP_INT_RAW.
	RMT_INT_RAW_CH0_TX_LOOP_INT_RAW = 0x1000
	// Position of CH1_TX_LOOP_INT_RAW field.
	RMT_INT_RAW_CH1_TX_LOOP_INT_RAW_Pos = 0xd
	// Bit mask of CH1_TX_LOOP_INT_RAW field.
	RMT_INT_RAW_CH1_TX_LOOP_INT_RAW_Msk = 0x2000
	// Bit CH1_TX_LOOP_INT_RAW.
	RMT_INT_RAW_CH1_TX_LOOP_INT_RAW = 0x2000

	// INT_ST: RMT_INT_ST_REG.
	// Position of CH0_TX_END_INT_ST field.
	RMT_INT_ST_CH0_TX_END_INT_ST_Pos = 0x0
	// Bit mask of CH0_TX_END_INT_ST field.
	RMT_INT_ST_CH0_TX_END_INT_ST_Msk = 0x1
	// Bit CH0_TX_END_INT_ST.
	RMT_INT_ST_CH0_TX_END_INT_ST = 0x1
	// Position of CH1_TX_END_INT_ST field.
	RMT_INT_ST_CH1_TX_END_INT_ST_Pos = 0x1
	// Bit mask of CH1_TX_END_INT_ST field.
	RMT_INT_ST_CH1_TX_END_INT_ST_Msk = 0x2
	// Bit CH1_TX_END_INT_ST.
	RMT_INT_ST_CH1_TX_END_INT_ST = 0x2
	// Position of CH2_RX_END_INT_ST field.
	RMT_INT_ST_CH2_RX_END_INT_ST_Pos = 0x2
	// Bit mask of CH2_RX_END_INT_ST field.
	RMT_INT_ST_CH2_RX_END_INT_ST_Msk = 0x4
	// Bit CH2_RX_END_INT_ST.
	RMT_INT_ST_CH2_RX_END_INT_ST = 0x4
	// Position of CH3_RX_END_INT_ST field.
	RMT_INT_ST_CH3_RX_END_INT_ST_Pos = 0x3
	// Bit mask of CH3_RX_END_INT_ST field.
	RMT_INT_ST_CH3_RX_END_INT_ST_Msk = 0x8
	// Bit CH3_RX_END_INT_ST.
	RMT_INT_ST_CH3_RX_END_INT_ST = 0x8
	// Position of CH0_ERR_INT_ST field.
	RMT_INT_ST_CH0_ERR_INT_ST_Pos = 0x4
	// Bit mask of CH0_ERR_INT_ST field.
	RMT_INT_ST_CH0_ERR_INT_ST_Msk = 0x10
	// Bit CH0_ERR_INT_ST.
	RMT_INT_ST_CH0_ERR_INT_ST = 0x10
	// Position of CH1_ERR_INT_ST field.
	RMT_INT_ST_CH1_ERR_INT_ST_Pos = 0x5
	// Bit mask of CH1_ERR_INT_ST field.
	RMT_INT_ST_CH1_ERR_INT_ST_Msk = 0x20
	// Bit CH1_ERR_INT_ST.
	RMT_INT_ST_CH1_ERR_INT_ST = 0x20
	// Position of CH2_ERR_INT_ST field.
	RMT_INT_ST_CH2_ERR_INT_ST_Pos = 0x6
	// Bit mask of CH2_ERR_INT_ST field.
	RMT_INT_ST_CH2_ERR_INT_ST_Msk = 0x40
	// Bit CH2_ERR_INT_ST.
	RMT_INT_ST_CH2_ERR_INT_ST = 0x40
	// Position of CH3_ERR_INT_ST field.
	RMT_INT_ST_CH3_ERR_INT_ST_Pos = 0x7
	// Bit mask of CH3_ERR_INT_ST field.
	RMT_INT_ST_CH3_ERR_INT_ST_Msk = 0x80
	// Bit CH3_ERR_INT_ST.
	RMT_INT_ST_CH3_ERR_INT_ST = 0x80
	// Position of CH0_TX_THR_EVENT_INT_ST field.
	RMT_INT_ST_CH0_TX_THR_EVENT_INT_ST_Pos = 0x8
	// Bit mask of CH0_TX_THR_EVENT_INT_ST field.
	RMT_INT_ST_CH0_TX_THR_EVENT_INT_ST_Msk = 0x100
	// Bit CH0_TX_THR_EVENT_INT_ST.
	RMT_INT_ST_CH0_TX_THR_EVENT_INT_ST = 0x100
	// Position of CH1_TX_THR_EVENT_INT_ST field.
	RMT_INT_ST_CH1_TX_THR_EVENT_INT_ST_Pos = 0x9
	// Bit mask of CH1_TX_THR_EVENT_INT_ST field.
	RMT_INT_ST_CH1_TX_THR_EVENT_INT_ST_Msk = 0x200
	// Bit CH1_TX_THR_EVENT_INT_ST.
	RMT_INT_ST_CH1_TX_THR_EVENT_INT_ST = 0x200
	// Position of CH2_RX_THR_EVENT_INT_ST field.
	RMT_INT_ST_CH2_RX_THR_EVENT_INT_ST_Pos = 0xa
	// Bit mask of CH2_RX_THR_EVENT_INT_ST field.
	RMT_INT_ST_CH2_RX_THR_EVENT_INT_ST_Msk = 0x400
	// Bit CH2_RX_THR_EVENT_INT_ST.
	RMT_INT_ST_CH2_RX_THR_EVENT_INT_ST = 0x400
	// Position of CH3_RX_THR_EVENT_INT_ST field.
	RMT_INT_ST_CH3_RX_THR_EVENT_INT_ST_Pos = 0xb
	// Bit mask of CH3_RX_THR_EVENT_INT_ST field.
	RMT_INT_ST_CH3_RX_THR_EVENT_INT_ST_Msk = 0x800
	// Bit CH3_RX_THR_EVENT_INT_ST.
	RMT_INT_ST_CH3_RX_THR_EVENT_INT_ST = 0x800
	// Position of CH0_TX_LOOP_INT_ST field.
	RMT_INT_ST_CH0_TX_LOOP_INT_ST_Pos = 0xc
	// Bit mask of CH0_TX_LOOP_INT_ST field.
	RMT_INT_ST_CH0_TX_LOOP_INT_ST_Msk = 0x1000
	// Bit CH0_TX_LOOP_INT_ST.
	RMT_INT_ST_CH0_TX_LOOP_INT_ST = 0x1000
	// Position of CH1_TX_LOOP_INT_ST field.
	RMT_INT_ST_CH1_TX_LOOP_INT_ST_Pos = 0xd
	// Bit mask of CH1_TX_LOOP_INT_ST field.
	RMT_INT_ST_CH1_TX_LOOP_INT_ST_Msk = 0x2000
	// Bit CH1_TX_LOOP_INT_ST.
	RMT_INT_ST_CH1_TX_LOOP_INT_ST = 0x2000

	// INT_ENA: RMT_INT_ENA_REG.
	// Position of CH0_TX_END_INT_ENA field.
	RMT_INT_ENA_CH0_TX_END_INT_ENA_Pos = 0x0
	// Bit mask of CH0_TX_END_INT_ENA field.
	RMT_INT_ENA_CH0_TX_END_INT_ENA_Msk = 0x1
	// Bit CH0_TX_END_INT_ENA.
	RMT_INT_ENA_CH0_TX_END_INT_ENA = 0x1
	// Position of CH1_TX_END_INT_ENA field.
	RMT_INT_ENA_CH1_TX_END_INT_ENA_Pos = 0x1
	// Bit mask of CH1_TX_END_INT_ENA field.
	RMT_INT_ENA_CH1_TX_END_INT_ENA_Msk = 0x2
	// Bit CH1_TX_END_INT_ENA.
	RMT_INT_ENA_CH1_TX_END_INT_ENA = 0x2
	// Position of CH2_RX_END_INT_ENA field.
	RMT_INT_ENA_CH2_RX_END_INT_ENA_Pos = 0x2
	// Bit mask of CH2_RX_END_INT_ENA field.
	RMT_INT_ENA_CH2_RX_END_INT_ENA_Msk = 0x4
	// Bit CH2_RX_END_INT_ENA.
	RMT_INT_ENA_CH2_RX_END_INT_ENA = 0x4
	// Position of CH3_RX_END_INT_ENA field.
	RMT_INT_ENA_CH3_RX_END_INT_ENA_Pos = 0x3
	// Bit mask of CH3_RX_END_INT_ENA field.
	RMT_INT_ENA_CH3_RX_END_INT_ENA_Msk = 0x8
	// Bit CH3_RX_END_INT_ENA.
	RMT_INT_ENA_CH3_RX_END_INT_ENA = 0x8
	// Position of CH0_ERR_INT_ENA field.
	RMT_INT_ENA_CH0_ERR_INT_ENA_Pos = 0x4
	// Bit mask of CH0_ERR_INT_ENA field.
	RMT_INT_ENA_CH0_ERR_INT_ENA_Msk = 0x10
	// Bit CH0_ERR_INT_ENA.
	RMT_INT_ENA_CH0_ERR_INT_ENA = 0x10
	// Position of CH1_ERR_INT_ENA field.
	RMT_INT_ENA_CH1_ERR_INT_ENA_Pos = 0x5
	// Bit mask of CH1_ERR_INT_ENA field.
	RMT_INT_ENA_CH1_ERR_INT_ENA_Msk = 0x20
	// Bit CH1_ERR_INT_ENA.
	RMT_INT_ENA_CH1_ERR_INT_ENA = 0x20
	// Position of CH2_ERR_INT_ENA field.
	RMT_INT_ENA_CH2_ERR_INT_ENA_Pos = 0x6
	// Bit mask of CH2_ERR_INT_ENA field.
	RMT_INT_ENA_CH2_ERR_INT_ENA_Msk = 0x40
	// Bit CH2_ERR_INT_ENA.
	RMT_INT_ENA_CH2_ERR_INT_ENA = 0x40
	// Position of CH3_ERR_INT_ENA field.
	RMT_INT_ENA_CH3_ERR_INT_ENA_Pos = 0x7
	// Bit mask of CH3_ERR_INT_ENA field.
	RMT_INT_ENA_CH3_ERR_INT_ENA_Msk = 0x80
	// Bit CH3_ERR_INT_ENA.
	RMT_INT_ENA_CH3_ERR_INT_ENA = 0x80
	// Position of CH0_TX_THR_EVENT_INT_ENA field.
	RMT_INT_ENA_CH0_TX_THR_EVENT_INT_ENA_Pos = 0x8
	// Bit mask of CH0_TX_THR_EVENT_INT_ENA field.
	RMT_INT_ENA_CH0_TX_THR_EVENT_INT_ENA_Msk = 0x100
	// Bit CH0_TX_THR_EVENT_INT_ENA.
	RMT_INT_ENA_CH0_TX_THR_EVENT_INT_ENA = 0x100
	// Position of CH1_TX_THR_EVENT_INT_ENA field.
	RMT_INT_ENA_CH1_TX_THR_EVENT_INT_ENA_Pos = 0x9
	// Bit mask of CH1_TX_THR_EVENT_INT_ENA field.
	RMT_INT_ENA_CH1_TX_THR_EVENT_INT_ENA_Msk = 0x200
	// Bit CH1_TX_THR_EVENT_INT_ENA.
	RMT_INT_ENA_CH1_TX_THR_EVENT_INT_ENA = 0x200
	// Position of CH2_RX_THR_EVENT_INT_ENA field.
	RMT_INT_ENA_CH2_RX_THR_EVENT_INT_ENA_Pos = 0xa
	// Bit mask of CH2_RX_THR_EVENT_INT_ENA field.
	RMT_INT_ENA_CH2_RX_THR_EVENT_INT_ENA_Msk = 0x400
	// Bit CH2_RX_THR_EVENT_INT_ENA.
	RMT_INT_ENA_CH2_RX_THR_EVENT_INT_ENA = 0x400
	// Position of CH3_RX_THR_EVENT_INT_ENA field.
	RMT_INT_ENA_CH3_RX_THR_EVENT_INT_ENA_Pos = 0xb
	// Bit mask of CH3_RX_THR_EVENT_INT_ENA field.
	RMT_INT_ENA_CH3_RX_THR_EVENT_INT_ENA_Msk = 0x800
	// Bit CH3_RX_THR_EVENT_INT_ENA.
	RMT_INT_ENA_CH3_RX_THR_EVENT_INT_ENA = 0x800
	// Position of CH0_TX_LOOP_INT_ENA field.
	RMT_INT_ENA_CH0_TX_LOOP_INT_ENA_Pos = 0xc
	// Bit mask of CH0_TX_LOOP_INT_ENA field.
	RMT_INT_ENA_CH0_TX_LOOP_INT_ENA_Msk = 0x1000
	// Bit CH0_TX_LOOP_INT_ENA.
	RMT_INT_ENA_CH0_TX_LOOP_INT_ENA = 0x1000
	// Position of CH1_TX_LOOP_INT_ENA field.
	RMT_INT_ENA_CH1_TX_LOOP_INT_ENA_Pos = 0xd
	// Bit mask of CH1_TX_LOOP_INT_ENA field.
	RMT_INT_ENA_CH1_TX_LOOP_INT_ENA_Msk = 0x2000
	// Bit CH1_TX_LOOP_INT_ENA.
	RMT_INT_ENA_CH1_TX_LOOP_INT_ENA = 0x2000

	// INT_CLR: RMT_INT_CLR_REG.
	// Position of CH0_TX_END_INT_CLR field.
	RMT_INT_CLR_CH0_TX_END_INT_CLR_Pos = 0x0
	// Bit mask of CH0_TX_END_INT_CLR field.
	RMT_INT_CLR_CH0_TX_END_INT_CLR_Msk = 0x1
	// Bit CH0_TX_END_INT_CLR.
	RMT_INT_CLR_CH0_TX_END_INT_CLR = 0x1
	// Position of CH1_TX_END_INT_CLR field.
	RMT_INT_CLR_CH1_TX_END_INT_CLR_Pos = 0x1
	// Bit mask of CH1_TX_END_INT_CLR field.
	RMT_INT_CLR_CH1_TX_END_INT_CLR_Msk = 0x2
	// Bit CH1_TX_END_INT_CLR.
	RMT_INT_CLR_CH1_TX_END_INT_CLR = 0x2
	// Position of CH2_RX_END_INT_CLR field.
	RMT_INT_CLR_CH2_RX_END_INT_CLR_Pos = 0x2
	// Bit mask of CH2_RX_END_INT_CLR field.
	RMT_INT_CLR_CH2_RX_END_INT_CLR_Msk = 0x4
	// Bit CH2_RX_END_INT_CLR.
	RMT_INT_CLR_CH2_RX_END_INT_CLR = 0x4
	// Position of CH3_RX_END_INT_CLR field.
	RMT_INT_CLR_CH3_RX_END_INT_CLR_Pos = 0x3
	// Bit mask of CH3_RX_END_INT_CLR field.
	RMT_INT_CLR_CH3_RX_END_INT_CLR_Msk = 0x8
	// Bit CH3_RX_END_INT_CLR.
	RMT_INT_CLR_CH3_RX_END_INT_CLR = 0x8
	// Position of CH0_ERR_INT_CLR field.
	RMT_INT_CLR_CH0_ERR_INT_CLR_Pos = 0x4
	// Bit mask of CH0_ERR_INT_CLR field.
	RMT_INT_CLR_CH0_ERR_INT_CLR_Msk = 0x10
	// Bit CH0_ERR_INT_CLR.
	RMT_INT_CLR_CH0_ERR_INT_CLR = 0x10
	// Position of CH1_ERR_INT_CLR field.
	RMT_INT_CLR_CH1_ERR_INT_CLR_Pos = 0x5
	// Bit mask of CH1_ERR_INT_CLR field.
	RMT_INT_CLR_CH1_ERR_INT_CLR_Msk = 0x20
	// Bit CH1_ERR_INT_CLR.
	RMT_INT_CLR_CH1_ERR_INT_CLR = 0x20
	// Position of CH2_ERR_INT_CLR field.
	RMT_INT_CLR_CH2_ERR_INT_CLR_Pos = 0x6
	// Bit mask of CH2_ERR_INT_CLR field.
	RMT_INT_CLR_CH2_ERR_INT_CLR_Msk = 0x40
	// Bit CH2_ERR_INT_CLR.
	RMT_INT_CLR_CH2_ERR_INT_CLR = 0x40
	// Position of CH3_ERR_INT_CLR field.
	RMT_INT_CLR_CH3_ERR_INT_CLR_Pos = 0x7
	// Bit mask of CH3_ERR_INT_CLR field.
	RMT_INT_CLR_CH3_ERR_INT_CLR_Msk = 0x80
	// Bit CH3_ERR_INT_CLR.
	RMT_INT_CLR_CH3_ERR_INT_CLR = 0x80
	// Position of CH0_TX_THR_EVENT_INT_CLR field.
	RMT_INT_CLR_CH0_TX_THR_EVENT_INT_CLR_Pos = 0x8
	// Bit mask of CH0_TX_THR_EVENT_INT_CLR field.
	RMT_INT_CLR_CH0_TX_THR_EVENT_INT_CLR_Msk = 0x100
	// Bit CH0_TX_THR_EVENT_INT_CLR.
	RMT_INT_CLR_CH0_TX_THR_EVENT_INT_CLR = 0x100
	// Position of CH1_TX_THR_EVENT_INT_CLR field.
	RMT_INT_CLR_CH1_TX_THR_EVENT_INT_CLR_Pos = 0x9
	// Bit mask of CH1_TX_THR_EVENT_INT_CLR field.
	RMT_INT_CLR_CH1_TX_THR_EVENT_INT_CLR_Msk = 0x200
	// Bit CH1_TX_THR_EVENT_INT_CLR.
	RMT_INT_CLR_CH1_TX_THR_EVENT_INT_CLR = 0x200
	// Position of CH2_RX_THR_EVENT_INT_CLR field.
	RMT_INT_CLR_CH2_RX_THR_EVENT_INT_CLR_Pos = 0xa
	// Bit mask of CH2_RX_THR_EVENT_INT_CLR field.
	RMT_INT_CLR_CH2_RX_THR_EVENT_INT_CLR_Msk = 0x400
	// Bit CH2_RX_THR_EVENT_INT_CLR.
	RMT_INT_CLR_CH2_RX_THR_EVENT_INT_CLR = 0x400
	// Position of CH3_RX_THR_EVENT_INT_CLR field.
	RMT_INT_CLR_CH3_RX_THR_EVENT_INT_CLR_Pos = 0xb
	// Bit mask of CH3_RX_THR_EVENT_INT_CLR field.
	RMT_INT_CLR_CH3_RX_THR_EVENT_INT_CLR_Msk = 0x800
	// Bit CH3_RX_THR_EVENT_INT_CLR.
	RMT_INT_CLR_CH3_RX_THR_EVENT_INT_CLR = 0x800
	// Position of CH0_TX_LOOP_INT_CLR field.
	RMT_INT_CLR_CH0_TX_LOOP_INT_CLR_Pos = 0xc
	// Bit mask of CH0_TX_LOOP_INT_CLR field.
	RMT_INT_CLR_CH0_TX_LOOP_INT_CLR_Msk = 0x1000
	// Bit CH0_TX_LOOP_INT_CLR.
	RMT_INT_CLR_CH0_TX_LOOP_INT_CLR = 0x1000
	// Position of CH1_TX_LOOP_INT_CLR field.
	RMT_INT_CLR_CH1_TX_LOOP_INT_CLR_Pos = 0xd
	// Bit mask of CH1_TX_LOOP_INT_CLR field.
	RMT_INT_CLR_CH1_TX_LOOP_INT_CLR_Msk = 0x2000
	// Bit CH1_TX_LOOP_INT_CLR.
	RMT_INT_CLR_CH1_TX_LOOP_INT_CLR = 0x2000

	// CH0CARRIER_DUTY: RMT_CH0CARRIER_DUTY_REG.
	// Position of CARRIER_LOW_CH0 field.
	RMT_CH0CARRIER_DUTY_CARRIER_LOW_CH0_Pos = 0x0
	// Bit mask of CARRIER_LOW_CH0 field.
	RMT_CH0CARRIER_DUTY_CARRIER_LOW_CH0_Msk = 0xffff
	// Position of CARRIER_HIGH_CH0 field.
	RMT_CH0CARRIER_DUTY_CARRIER_HIGH_CH0_Pos = 0x10
	// Bit mask of CARRIER_HIGH_CH0 field.
	RMT_CH0CARRIER_DUTY_CARRIER_HIGH_CH0_Msk = 0xffff0000

	// CH1CARRIER_DUTY: RMT_CH1CARRIER_DUTY_REG.
	// Position of CARRIER_LOW_CH1 field.
	RMT_CH1CARRIER_DUTY_CARRIER_LOW_CH1_Pos = 0x0
	// Bit mask of CARRIER_LOW_CH1 field.
	RMT_CH1CARRIER_DUTY_CARRIER_LOW_CH1_Msk = 0xffff
	// Position of CARRIER_HIGH_CH1 field.
	RMT_CH1CARRIER_DUTY_CARRIER_HIGH_CH1_Pos = 0x10
	// Bit mask of CARRIER_HIGH_CH1 field.
	RMT_CH1CARRIER_DUTY_CARRIER_HIGH_CH1_Msk = 0xffff0000

	// CH2_RX_CARRIER_RM: RMT_CH2_RX_CARRIER_RM_REG.
	// Position of CARRIER_LOW_THRES_CH2 field.
	RMT_CH2_RX_CARRIER_RM_CARRIER_LOW_THRES_CH2_Pos = 0x0
	// Bit mask of CARRIER_LOW_THRES_CH2 field.
	RMT_CH2_RX_CARRIER_RM_CARRIER_LOW_THRES_CH2_Msk = 0xffff
	// Position of CARRIER_HIGH_THRES_CH2 field.
	RMT_CH2_RX_CARRIER_RM_CARRIER_HIGH_THRES_CH2_Pos = 0x10
	// Bit mask of CARRIER_HIGH_THRES_CH2 field.
	RMT_CH2_RX_CARRIER_RM_CARRIER_HIGH_THRES_CH2_Msk = 0xffff0000

	// CH3_RX_CARRIER_RM: RMT_CH3_RX_CARRIER_RM_REG.
	// Position of CARRIER_LOW_THRES_CH3 field.
	RMT_CH3_RX_CARRIER_RM_CARRIER_LOW_THRES_CH3_Pos = 0x0
	// Bit mask of CARRIER_LOW_THRES_CH3 field.
	RMT_CH3_RX_CARRIER_RM_CARRIER_LOW_THRES_CH3_Msk = 0xffff
	// Position of CARRIER_HIGH_THRES_CH3 field.
	RMT_CH3_RX_CARRIER_RM_CARRIER_HIGH_THRES_CH3_Pos = 0x10
	// Bit mask of CARRIER_HIGH_THRES_CH3 field.
	RMT_CH3_RX_CARRIER_RM_CARRIER_HIGH_THRES_CH3_Msk = 0xffff0000

	// CH0_TX_LIM: RMT_CH0_TX_LIM_REG.
	// Position of RMT_TX_LIM_CH0 field.
	RMT_CH0_TX_LIM_RMT_TX_LIM_CH0_Pos = 0x0
	// Bit mask of RMT_TX_LIM_CH0 field.
	RMT_CH0_TX_LIM_RMT_TX_LIM_CH0_Msk = 0x1ff
	// Position of RMT_TX_LOOP_NUM_CH0 field.
	RMT_CH0_TX_LIM_RMT_TX_LOOP_NUM_CH0_Pos = 0x9
	// Bit mask of RMT_TX_LOOP_NUM_CH0 field.
	RMT_CH0_TX_LIM_RMT_TX_LOOP_NUM_CH0_Msk = 0x7fe00
	// Position of RMT_TX_LOOP_CNT_EN_CH0 field.
	RMT_CH0_TX_LIM_RMT_TX_LOOP_CNT_EN_CH0_Pos = 0x13
	// Bit mask of RMT_TX_LOOP_CNT_EN_CH0 field.
	RMT_CH0_TX_LIM_RMT_TX_LOOP_CNT_EN_CH0_Msk = 0x80000
	// Bit RMT_TX_LOOP_CNT_EN_CH0.
	RMT_CH0_TX_LIM_RMT_TX_LOOP_CNT_EN_CH0 = 0x80000
	// Position of LOOP_COUNT_RESET_CH0 field.
	RMT_CH0_TX_LIM_LOOP_COUNT_RESET_CH0_Pos = 0x14
	// Bit mask of LOOP_COUNT_RESET_CH0 field.
	RMT_CH0_TX_LIM_LOOP_COUNT_RESET_CH0_Msk = 0x100000
	// Bit LOOP_COUNT_RESET_CH0.
	RMT_CH0_TX_LIM_LOOP_COUNT_RESET_CH0 = 0x100000

	// CH1_TX_LIM: RMT_CH1_TX_LIM_REG.
	// Position of RMT_TX_LIM_CH1 field.
	RMT_CH1_TX_LIM_RMT_TX_LIM_CH1_Pos = 0x0
	// Bit mask of RMT_TX_LIM_CH1 field.
	RMT_CH1_TX_LIM_RMT_TX_LIM_CH1_Msk = 0x1ff
	// Position of RMT_TX_LOOP_NUM_CH1 field.
	RMT_CH1_TX_LIM_RMT_TX_LOOP_NUM_CH1_Pos = 0x9
	// Bit mask of RMT_TX_LOOP_NUM_CH1 field.
	RMT_CH1_TX_LIM_RMT_TX_LOOP_NUM_CH1_Msk = 0x7fe00
	// Position of RMT_TX_LOOP_CNT_EN_CH1 field.
	RMT_CH1_TX_LIM_RMT_TX_LOOP_CNT_EN_CH1_Pos = 0x13
	// Bit mask of RMT_TX_LOOP_CNT_EN_CH1 field.
	RMT_CH1_TX_LIM_RMT_TX_LOOP_CNT_EN_CH1_Msk = 0x80000
	// Bit RMT_TX_LOOP_CNT_EN_CH1.
	RMT_CH1_TX_LIM_RMT_TX_LOOP_CNT_EN_CH1 = 0x80000
	// Position of LOOP_COUNT_RESET_CH1 field.
	RMT_CH1_TX_LIM_LOOP_COUNT_RESET_CH1_Pos = 0x14
	// Bit mask of LOOP_COUNT_RESET_CH1 field.
	RMT_CH1_TX_LIM_LOOP_COUNT_RESET_CH1_Msk = 0x100000
	// Bit LOOP_COUNT_RESET_CH1.
	RMT_CH1_TX_LIM_LOOP_COUNT_RESET_CH1 = 0x100000

	// CH2_RX_LIM: RMT_CH2_RX_LIM_REG.
	// Position of RMT_RX_LIM_CH2 field.
	RMT_CH2_RX_LIM_RMT_RX_LIM_CH2_Pos = 0x0
	// Bit mask of RMT_RX_LIM_CH2 field.
	RMT_CH2_RX_LIM_RMT_RX_LIM_CH2_Msk = 0x1ff

	// CH3_RX_LIM: RMT_CH3_RX_LIM_REG.
	// Position of RMT_RX_LIM_CH3 field.
	RMT_CH3_RX_LIM_RMT_RX_LIM_CH3_Pos = 0x0
	// Bit mask of RMT_RX_LIM_CH3 field.
	RMT_CH3_RX_LIM_RMT_RX_LIM_CH3_Msk = 0x1ff

	// SYS_CONF: RMT_SYS_CONF_REG.
	// Position of APB_FIFO_MASK field.
	RMT_SYS_CONF_APB_FIFO_MASK_Pos = 0x0
	// Bit mask of APB_FIFO_MASK field.
	RMT_SYS_CONF_APB_FIFO_MASK_Msk = 0x1
	// Bit APB_FIFO_MASK.
	RMT_SYS_CONF_APB_FIFO_MASK = 0x1
	// Position of MEM_CLK_FORCE_ON field.
	RMT_SYS_CONF_MEM_CLK_FORCE_ON_Pos = 0x1
	// Bit mask of MEM_CLK_FORCE_ON field.
	RMT_SYS_CONF_MEM_CLK_FORCE_ON_Msk = 0x2
	// Bit MEM_CLK_FORCE_ON.
	RMT_SYS_CONF_MEM_CLK_FORCE_ON = 0x2
	// Position of RMT_MEM_FORCE_PD field.
	RMT_SYS_CONF_RMT_MEM_FORCE_PD_Pos = 0x2
	// Bit mask of RMT_MEM_FORCE_PD field.
	RMT_SYS_CONF_RMT_MEM_FORCE_PD_Msk = 0x4
	// Bit RMT_MEM_FORCE_PD.
	RMT_SYS_CONF_RMT_MEM_FORCE_PD = 0x4
	// Position of RMT_MEM_FORCE_PU field.
	RMT_SYS_CONF_RMT_MEM_FORCE_PU_Pos = 0x3
	// Bit mask of RMT_MEM_FORCE_PU field.
	RMT_SYS_CONF_RMT_MEM_FORCE_PU_Msk = 0x8
	// Bit RMT_MEM_FORCE_PU.
	RMT_SYS_CONF_RMT_MEM_FORCE_PU = 0x8
	// Position of RMT_SCLK_DIV_NUM field.
	RMT_SYS_CONF_RMT_SCLK_DIV_NUM_Pos = 0x4
	// Bit mask of RMT_SCLK_DIV_NUM field.
	RMT_SYS_CONF_RMT_SCLK_DIV_NUM_Msk = 0xff0
	// Position of RMT_SCLK_DIV_A field.
	RMT_SYS_CONF_RMT_SCLK_DIV_A_Pos = 0xc
	// Bit mask of RMT_SCLK_DIV_A field.
	RMT_SYS_CONF_RMT_SCLK_DIV_A_Msk = 0x3f000
	// Position of RMT_SCLK_DIV_B field.
	RMT_SYS_CONF_RMT_SCLK_DIV_B_Pos = 0x12
	// Bit mask of RMT_SCLK_DIV_B field.
	RMT_SYS_CONF_RMT_SCLK_DIV_B_Msk = 0xfc0000
	// Position of RMT_SCLK_SEL field.
	RMT_SYS_CONF_RMT_SCLK_SEL_Pos = 0x18
	// Bit mask of RMT_SCLK_SEL field.
	RMT_SYS_CONF_RMT_SCLK_SEL_Msk = 0x3000000
	// Position of RMT_SCLK_ACTIVE field.
	RMT_SYS_CONF_RMT_SCLK_ACTIVE_Pos = 0x1a
	// Bit mask of RMT_SCLK_ACTIVE field.
	RMT_SYS_CONF_RMT_SCLK_ACTIVE_Msk = 0x4000000
	// Bit RMT_SCLK_ACTIVE.
	RMT_SYS_CONF_RMT_SCLK_ACTIVE = 0x4000000
	// Position of CLK_EN field.
	RMT_SYS_CONF_CLK_EN_Pos = 0x1f
	// Bit mask of CLK_EN field.
	RMT_SYS_CONF_CLK_EN_Msk = 0x80000000
	// Bit CLK_EN.
	RMT_SYS_CONF_CLK_EN = 0x80000000

	// TX_SIM: RMT_TX_SIM_REG.
	// Position of RMT_TX_SIM_CH0 field.
	RMT_TX_SIM_RMT_TX_SIM_CH0_Pos = 0x0
	// Bit mask of RMT_TX_SIM_CH0 field.
	RMT_TX_SIM_RMT_TX_SIM_CH0_Msk = 0x1
	// Bit RMT_TX_SIM_CH0.
	RMT_TX_SIM_RMT_TX_SIM_CH0 = 0x1
	// Position of RMT_TX_SIM_CH1 field.
	RMT_TX_SIM_RMT_TX_SIM_CH1_Pos = 0x1
	// Bit mask of RMT_TX_SIM_CH1 field.
	RMT_TX_SIM_RMT_TX_SIM_CH1_Msk = 0x2
	// Bit RMT_TX_SIM_CH1.
	RMT_TX_SIM_RMT_TX_SIM_CH1 = 0x2
	// Position of RMT_TX_SIM_EN field.
	RMT_TX_SIM_RMT_TX_SIM_EN_Pos = 0x2
	// Bit mask of RMT_TX_SIM_EN field.
	RMT_TX_SIM_RMT_TX_SIM_EN_Msk = 0x4
	// Bit RMT_TX_SIM_EN.
	RMT_TX_SIM_RMT_TX_SIM_EN = 0x4

	// REF_CNT_RST: RMT_REF_CNT_RST_REG.
	// Position of CH0 field.
	RMT_REF_CNT_RST_CH0_Pos = 0x0
	// Bit mask of CH0 field.
	RMT_REF_CNT_RST_CH0_Msk = 0x1
	// Bit CH0.
	RMT_REF_CNT_RST_CH0 = 0x1
	// Position of CH1 field.
	RMT_REF_CNT_RST_CH1_Pos = 0x1
	// Bit mask of CH1 field.
	RMT_REF_CNT_RST_CH1_Msk = 0x2
	// Bit CH1.
	RMT_REF_CNT_RST_CH1 = 0x2
	// Position of CH2 field.
	RMT_REF_CNT_RST_CH2_Pos = 0x2
	// Bit mask of CH2 field.
	RMT_REF_CNT_RST_CH2_Msk = 0x4
	// Bit CH2.
	RMT_REF_CNT_RST_CH2 = 0x4
	// Position of CH3 field.
	RMT_REF_CNT_RST_CH3_Pos = 0x3
	// Bit mask of CH3 field.
	RMT_REF_CNT_RST_CH3_Msk = 0x8
	// Bit CH3.
	RMT_REF_CNT_RST_CH3 = 0x8

	// DATE: RMT_DATE_REG.
	// Position of RMT_DATE field.
	RMT_DATE_RMT_DATE_Pos = 0x0
	// Bit mask of RMT_DATE field.
	RMT_DATE_RMT_DATE_Msk = 0xfffffff
)

// Bitfields for RSA: Peripheral RSA
const (
	// M_PRIME: RSA M_prime register
	// Position of M_PRIME field.
	RSA_M_PRIME_M_PRIME_Pos = 0x0
	// Bit mask of M_PRIME field.
	RSA_M_PRIME_M_PRIME_Msk = 0xffffffff

	// MODE: RSA mode register
	// Position of MODE field.
	RSA_MODE_MODE_Pos = 0x0
	// Bit mask of MODE field.
	RSA_MODE_MODE_Msk = 0x7f

	// QUERY_CLEAN: RSA query clean register
	// Position of QUERY_CLEAN field.
	RSA_QUERY_CLEAN_QUERY_CLEAN_Pos = 0x0
	// Bit mask of QUERY_CLEAN field.
	RSA_QUERY_CLEAN_QUERY_CLEAN_Msk = 0x1
	// Bit QUERY_CLEAN.
	RSA_QUERY_CLEAN_QUERY_CLEAN = 0x1

	// SET_START_MODEXP: RSA modular exponentiation trigger register.
	// Position of SET_START_MODEXP field.
	RSA_SET_START_MODEXP_SET_START_MODEXP_Pos = 0x0
	// Bit mask of SET_START_MODEXP field.
	RSA_SET_START_MODEXP_SET_START_MODEXP_Msk = 0x1
	// Bit SET_START_MODEXP.
	RSA_SET_START_MODEXP_SET_START_MODEXP = 0x1

	// SET_START_MODMULT: RSA modular multiplication trigger register.
	// Position of SET_START_MODMULT field.
	RSA_SET_START_MODMULT_SET_START_MODMULT_Pos = 0x0
	// Bit mask of SET_START_MODMULT field.
	RSA_SET_START_MODMULT_SET_START_MODMULT_Msk = 0x1
	// Bit SET_START_MODMULT.
	RSA_SET_START_MODMULT_SET_START_MODMULT = 0x1

	// SET_START_MULT: RSA normal multiplication trigger register.
	// Position of SET_START_MULT field.
	RSA_SET_START_MULT_SET_START_MULT_Pos = 0x0
	// Bit mask of SET_START_MULT field.
	RSA_SET_START_MULT_SET_START_MULT_Msk = 0x1
	// Bit SET_START_MULT.
	RSA_SET_START_MULT_SET_START_MULT = 0x1

	// QUERY_IDLE: RSA query idle register
	// Position of QUERY_IDLE field.
	RSA_QUERY_IDLE_QUERY_IDLE_Pos = 0x0
	// Bit mask of QUERY_IDLE field.
	RSA_QUERY_IDLE_QUERY_IDLE_Msk = 0x1
	// Bit QUERY_IDLE.
	RSA_QUERY_IDLE_QUERY_IDLE = 0x1

	// INT_CLR: RSA interrupt clear register
	// Position of CLEAR_INTERRUPT field.
	RSA_INT_CLR_CLEAR_INTERRUPT_Pos = 0x0
	// Bit mask of CLEAR_INTERRUPT field.
	RSA_INT_CLR_CLEAR_INTERRUPT_Msk = 0x1
	// Bit CLEAR_INTERRUPT.
	RSA_INT_CLR_CLEAR_INTERRUPT = 0x1

	// CONSTANT_TIME: RSA constant time option register
	// Position of CONSTANT_TIME field.
	RSA_CONSTANT_TIME_CONSTANT_TIME_Pos = 0x0
	// Bit mask of CONSTANT_TIME field.
	RSA_CONSTANT_TIME_CONSTANT_TIME_Msk = 0x1
	// Bit CONSTANT_TIME.
	RSA_CONSTANT_TIME_CONSTANT_TIME = 0x1

	// SEARCH_ENABLE: RSA search option
	// Position of SEARCH_ENABLE field.
	RSA_SEARCH_ENABLE_SEARCH_ENABLE_Pos = 0x0
	// Bit mask of SEARCH_ENABLE field.
	RSA_SEARCH_ENABLE_SEARCH_ENABLE_Msk = 0x1
	// Bit SEARCH_ENABLE.
	RSA_SEARCH_ENABLE_SEARCH_ENABLE = 0x1

	// SEARCH_POS: RSA search position configure register
	// Position of SEARCH_POS field.
	RSA_SEARCH_POS_SEARCH_POS_Pos = 0x0
	// Bit mask of SEARCH_POS field.
	RSA_SEARCH_POS_SEARCH_POS_Msk = 0xfff

	// INT_ENA: RSA interrupt enable register
	// Position of INT_ENA field.
	RSA_INT_ENA_INT_ENA_Pos = 0x0
	// Bit mask of INT_ENA field.
	RSA_INT_ENA_INT_ENA_Msk = 0x1
	// Bit INT_ENA.
	RSA_INT_ENA_INT_ENA = 0x1

	// DATE: RSA version control register
	// Position of DATE field.
	RSA_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	RSA_DATE_DATE_Msk = 0x3fffffff
)

// Bitfields for RTC_CNTL: Peripheral RTC_CNTL
const (
	// RTC_OPTIONS0: rtc configure register
	// Position of SW_STALL_APPCPU_C0 field.
	RTC_CNTL_RTC_OPTIONS0_SW_STALL_APPCPU_C0_Pos = 0x0
	// Bit mask of SW_STALL_APPCPU_C0 field.
	RTC_CNTL_RTC_OPTIONS0_SW_STALL_APPCPU_C0_Msk = 0x3
	// Position of SW_STALL_PROCPU_C0 field.
	RTC_CNTL_RTC_OPTIONS0_SW_STALL_PROCPU_C0_Pos = 0x2
	// Bit mask of SW_STALL_PROCPU_C0 field.
	RTC_CNTL_RTC_OPTIONS0_SW_STALL_PROCPU_C0_Msk = 0xc
	// Position of SW_APPCPU_RST field.
	RTC_CNTL_RTC_OPTIONS0_SW_APPCPU_RST_Pos = 0x4
	// Bit mask of SW_APPCPU_RST field.
	RTC_CNTL_RTC_OPTIONS0_SW_APPCPU_RST_Msk = 0x10
	// Bit SW_APPCPU_RST.
	RTC_CNTL_RTC_OPTIONS0_SW_APPCPU_RST = 0x10
	// Position of SW_PROCPU_RST field.
	RTC_CNTL_RTC_OPTIONS0_SW_PROCPU_RST_Pos = 0x5
	// Bit mask of SW_PROCPU_RST field.
	RTC_CNTL_RTC_OPTIONS0_SW_PROCPU_RST_Msk = 0x20
	// Bit SW_PROCPU_RST.
	RTC_CNTL_RTC_OPTIONS0_SW_PROCPU_RST = 0x20
	// Position of BB_I2C_FORCE_PD field.
	RTC_CNTL_RTC_OPTIONS0_BB_I2C_FORCE_PD_Pos = 0x6
	// Bit mask of BB_I2C_FORCE_PD field.
	RTC_CNTL_RTC_OPTIONS0_BB_I2C_FORCE_PD_Msk = 0x40
	// Bit BB_I2C_FORCE_PD.
	RTC_CNTL_RTC_OPTIONS0_BB_I2C_FORCE_PD = 0x40
	// Position of BB_I2C_FORCE_PU field.
	RTC_CNTL_RTC_OPTIONS0_BB_I2C_FORCE_PU_Pos = 0x7
	// Bit mask of BB_I2C_FORCE_PU field.
	RTC_CNTL_RTC_OPTIONS0_BB_I2C_FORCE_PU_Msk = 0x80
	// Bit BB_I2C_FORCE_PU.
	RTC_CNTL_RTC_OPTIONS0_BB_I2C_FORCE_PU = 0x80
	// Position of BBPLL_I2C_FORCE_PD field.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_I2C_FORCE_PD_Pos = 0x8
	// Bit mask of BBPLL_I2C_FORCE_PD field.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_I2C_FORCE_PD_Msk = 0x100
	// Bit BBPLL_I2C_FORCE_PD.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_I2C_FORCE_PD = 0x100
	// Position of BBPLL_I2C_FORCE_PU field.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_I2C_FORCE_PU_Pos = 0x9
	// Bit mask of BBPLL_I2C_FORCE_PU field.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_I2C_FORCE_PU_Msk = 0x200
	// Bit BBPLL_I2C_FORCE_PU.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_I2C_FORCE_PU = 0x200
	// Position of BBPLL_FORCE_PD field.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_FORCE_PD_Pos = 0xa
	// Bit mask of BBPLL_FORCE_PD field.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_FORCE_PD_Msk = 0x400
	// Bit BBPLL_FORCE_PD.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_FORCE_PD = 0x400
	// Position of BBPLL_FORCE_PU field.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_FORCE_PU_Pos = 0xb
	// Bit mask of BBPLL_FORCE_PU field.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_FORCE_PU_Msk = 0x800
	// Bit BBPLL_FORCE_PU.
	RTC_CNTL_RTC_OPTIONS0_BBPLL_FORCE_PU = 0x800
	// Position of XTL_FORCE_PD field.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_PD_Pos = 0xc
	// Bit mask of XTL_FORCE_PD field.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_PD_Msk = 0x1000
	// Bit XTL_FORCE_PD.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_PD = 0x1000
	// Position of XTL_FORCE_PU field.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_PU_Pos = 0xd
	// Bit mask of XTL_FORCE_PU field.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_PU_Msk = 0x2000
	// Bit XTL_FORCE_PU.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_PU = 0x2000
	// Position of XTL_EN_WAIT field.
	RTC_CNTL_RTC_OPTIONS0_XTL_EN_WAIT_Pos = 0xe
	// Bit mask of XTL_EN_WAIT field.
	RTC_CNTL_RTC_OPTIONS0_XTL_EN_WAIT_Msk = 0x3c000
	// Position of XTL_EXT_CTR_SEL field.
	RTC_CNTL_RTC_OPTIONS0_XTL_EXT_CTR_SEL_Pos = 0x14
	// Bit mask of XTL_EXT_CTR_SEL field.
	RTC_CNTL_RTC_OPTIONS0_XTL_EXT_CTR_SEL_Msk = 0x700000
	// Position of XTL_FORCE_ISO field.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_ISO_Pos = 0x17
	// Bit mask of XTL_FORCE_ISO field.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_ISO_Msk = 0x800000
	// Bit XTL_FORCE_ISO.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_ISO = 0x800000
	// Position of PLL_FORCE_ISO field.
	RTC_CNTL_RTC_OPTIONS0_PLL_FORCE_ISO_Pos = 0x18
	// Bit mask of PLL_FORCE_ISO field.
	RTC_CNTL_RTC_OPTIONS0_PLL_FORCE_ISO_Msk = 0x1000000
	// Bit PLL_FORCE_ISO.
	RTC_CNTL_RTC_OPTIONS0_PLL_FORCE_ISO = 0x1000000
	// Position of ANALOG_FORCE_ISO field.
	RTC_CNTL_RTC_OPTIONS0_ANALOG_FORCE_ISO_Pos = 0x19
	// Bit mask of ANALOG_FORCE_ISO field.
	RTC_CNTL_RTC_OPTIONS0_ANALOG_FORCE_ISO_Msk = 0x2000000
	// Bit ANALOG_FORCE_ISO.
	RTC_CNTL_RTC_OPTIONS0_ANALOG_FORCE_ISO = 0x2000000
	// Position of XTL_FORCE_NOISO field.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_NOISO_Pos = 0x1a
	// Bit mask of XTL_FORCE_NOISO field.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_NOISO_Msk = 0x4000000
	// Bit XTL_FORCE_NOISO.
	RTC_CNTL_RTC_OPTIONS0_XTL_FORCE_NOISO = 0x4000000
	// Position of PLL_FORCE_NOISO field.
	RTC_CNTL_RTC_OPTIONS0_PLL_FORCE_NOISO_Pos = 0x1b
	// Bit mask of PLL_FORCE_NOISO field.
	RTC_CNTL_RTC_OPTIONS0_PLL_FORCE_NOISO_Msk = 0x8000000
	// Bit PLL_FORCE_NOISO.
	RTC_CNTL_RTC_OPTIONS0_PLL_FORCE_NOISO = 0x8000000
	// Position of ANALOG_FORCE_NOISO field.
	RTC_CNTL_RTC_OPTIONS0_ANALOG_FORCE_NOISO_Pos = 0x1c
	// Bit mask of ANALOG_FORCE_NOISO field.
	RTC_CNTL_RTC_OPTIONS0_ANALOG_FORCE_NOISO_Msk = 0x10000000
	// Bit ANALOG_FORCE_NOISO.
	RTC_CNTL_RTC_OPTIONS0_ANALOG_FORCE_NOISO = 0x10000000
	// Position of DG_WRAP_FORCE_RST field.
	RTC_CNTL_RTC_OPTIONS0_DG_WRAP_FORCE_RST_Pos = 0x1d
	// Bit mask of DG_WRAP_FORCE_RST field.
	RTC_CNTL_RTC_OPTIONS0_DG_WRAP_FORCE_RST_Msk = 0x20000000
	// Bit DG_WRAP_FORCE_RST.
	RTC_CNTL_RTC_OPTIONS0_DG_WRAP_FORCE_RST = 0x20000000
	// Position of DG_WRAP_FORCE_NORST field.
	RTC_CNTL_RTC_OPTIONS0_DG_WRAP_FORCE_NORST_Pos = 0x1e
	// Bit mask of DG_WRAP_FORCE_NORST field.
	RTC_CNTL_RTC_OPTIONS0_DG_WRAP_FORCE_NORST_Msk = 0x40000000
	// Bit DG_WRAP_FORCE_NORST.
	RTC_CNTL_RTC_OPTIONS0_DG_WRAP_FORCE_NORST = 0x40000000
	// Position of SW_SYS_RST field.
	RTC_CNTL_RTC_OPTIONS0_SW_SYS_RST_Pos = 0x1f
	// Bit mask of SW_SYS_RST field.
	RTC_CNTL_RTC_OPTIONS0_SW_SYS_RST_Msk = 0x80000000
	// Bit SW_SYS_RST.
	RTC_CNTL_RTC_OPTIONS0_SW_SYS_RST = 0x80000000

	// RTC_SLP_TIMER0: rtc configure register
	// Position of SLP_VAL_LO field.
	RTC_CNTL_RTC_SLP_TIMER0_SLP_VAL_LO_Pos = 0x0
	// Bit mask of SLP_VAL_LO field.
	RTC_CNTL_RTC_SLP_TIMER0_SLP_VAL_LO_Msk = 0xffffffff

	// RTC_SLP_TIMER1: rtc configure register
	// Position of SLP_VAL_HI field.
	RTC_CNTL_RTC_SLP_TIMER1_SLP_VAL_HI_Pos = 0x0
	// Bit mask of SLP_VAL_HI field.
	RTC_CNTL_RTC_SLP_TIMER1_SLP_VAL_HI_Msk = 0xffff
	// Position of RTC_MAIN_TIMER_ALARM_EN field.
	RTC_CNTL_RTC_SLP_TIMER1_RTC_MAIN_TIMER_ALARM_EN_Pos = 0x10
	// Bit mask of RTC_MAIN_TIMER_ALARM_EN field.
	RTC_CNTL_RTC_SLP_TIMER1_RTC_MAIN_TIMER_ALARM_EN_Msk = 0x10000
	// Bit RTC_MAIN_TIMER_ALARM_EN.
	RTC_CNTL_RTC_SLP_TIMER1_RTC_MAIN_TIMER_ALARM_EN = 0x10000

	// RTC_TIME_UPDATE: rtc configure register
	// Position of TIMER_SYS_STALL field.
	RTC_CNTL_RTC_TIME_UPDATE_TIMER_SYS_STALL_Pos = 0x1b
	// Bit mask of TIMER_SYS_STALL field.
	RTC_CNTL_RTC_TIME_UPDATE_TIMER_SYS_STALL_Msk = 0x8000000
	// Bit TIMER_SYS_STALL.
	RTC_CNTL_RTC_TIME_UPDATE_TIMER_SYS_STALL = 0x8000000
	// Position of TIMER_XTL_OFF field.
	RTC_CNTL_RTC_TIME_UPDATE_TIMER_XTL_OFF_Pos = 0x1c
	// Bit mask of TIMER_XTL_OFF field.
	RTC_CNTL_RTC_TIME_UPDATE_TIMER_XTL_OFF_Msk = 0x10000000
	// Bit TIMER_XTL_OFF.
	RTC_CNTL_RTC_TIME_UPDATE_TIMER_XTL_OFF = 0x10000000
	// Position of TIMER_SYS_RST field.
	RTC_CNTL_RTC_TIME_UPDATE_TIMER_SYS_RST_Pos = 0x1d
	// Bit mask of TIMER_SYS_RST field.
	RTC_CNTL_RTC_TIME_UPDATE_TIMER_SYS_RST_Msk = 0x20000000
	// Bit TIMER_SYS_RST.
	RTC_CNTL_RTC_TIME_UPDATE_TIMER_SYS_RST = 0x20000000
	// Position of RTC_TIME_UPDATE field.
	RTC_CNTL_RTC_TIME_UPDATE_RTC_TIME_UPDATE_Pos = 0x1f
	// Bit mask of RTC_TIME_UPDATE field.
	RTC_CNTL_RTC_TIME_UPDATE_RTC_TIME_UPDATE_Msk = 0x80000000
	// Bit RTC_TIME_UPDATE.
	RTC_CNTL_RTC_TIME_UPDATE_RTC_TIME_UPDATE = 0x80000000

	// RTC_TIME_LOW0: rtc configure register
	// Position of RTC_TIMER_VALUE0_LOW field.
	RTC_CNTL_RTC_TIME_LOW0_RTC_TIMER_VALUE0_LOW_Pos = 0x0
	// Bit mask of RTC_TIMER_VALUE0_LOW field.
	RTC_CNTL_RTC_TIME_LOW0_RTC_TIMER_VALUE0_LOW_Msk = 0xffffffff

	// RTC_TIME_HIGH0: rtc configure register
	// Position of RTC_TIMER_VALUE0_HIGH field.
	RTC_CNTL_RTC_TIME_HIGH0_RTC_TIMER_VALUE0_HIGH_Pos = 0x0
	// Bit mask of RTC_TIMER_VALUE0_HIGH field.
	RTC_CNTL_RTC_TIME_HIGH0_RTC_TIMER_VALUE0_HIGH_Msk = 0xffff

	// RTC_STATE0: rtc configure register
	// Position of RTC_SW_CPU_INT field.
	RTC_CNTL_RTC_STATE0_RTC_SW_CPU_INT_Pos = 0x0
	// Bit mask of RTC_SW_CPU_INT field.
	RTC_CNTL_RTC_STATE0_RTC_SW_CPU_INT_Msk = 0x1
	// Bit RTC_SW_CPU_INT.
	RTC_CNTL_RTC_STATE0_RTC_SW_CPU_INT = 0x1
	// Position of RTC_SLP_REJECT_CAUSE_CLR field.
	RTC_CNTL_RTC_STATE0_RTC_SLP_REJECT_CAUSE_CLR_Pos = 0x1
	// Bit mask of RTC_SLP_REJECT_CAUSE_CLR field.
	RTC_CNTL_RTC_STATE0_RTC_SLP_REJECT_CAUSE_CLR_Msk = 0x2
	// Bit RTC_SLP_REJECT_CAUSE_CLR.
	RTC_CNTL_RTC_STATE0_RTC_SLP_REJECT_CAUSE_CLR = 0x2
	// Position of APB2RTC_BRIDGE_SEL field.
	RTC_CNTL_RTC_STATE0_APB2RTC_BRIDGE_SEL_Pos = 0x16
	// Bit mask of APB2RTC_BRIDGE_SEL field.
	RTC_CNTL_RTC_STATE0_APB2RTC_BRIDGE_SEL_Msk = 0x400000
	// Bit APB2RTC_BRIDGE_SEL.
	RTC_CNTL_RTC_STATE0_APB2RTC_BRIDGE_SEL = 0x400000
	// Position of SDIO_ACTIVE_IND field.
	RTC_CNTL_RTC_STATE0_SDIO_ACTIVE_IND_Pos = 0x1c
	// Bit mask of SDIO_ACTIVE_IND field.
	RTC_CNTL_RTC_STATE0_SDIO_ACTIVE_IND_Msk = 0x10000000
	// Bit SDIO_ACTIVE_IND.
	RTC_CNTL_RTC_STATE0_SDIO_ACTIVE_IND = 0x10000000
	// Position of SLP_WAKEUP field.
	RTC_CNTL_RTC_STATE0_SLP_WAKEUP_Pos = 0x1d
	// Bit mask of SLP_WAKEUP field.
	RTC_CNTL_RTC_STATE0_SLP_WAKEUP_Msk = 0x20000000
	// Bit SLP_WAKEUP.
	RTC_CNTL_RTC_STATE0_SLP_WAKEUP = 0x20000000
	// Position of SLP_REJECT field.
	RTC_CNTL_RTC_STATE0_SLP_REJECT_Pos = 0x1e
	// Bit mask of SLP_REJECT field.
	RTC_CNTL_RTC_STATE0_SLP_REJECT_Msk = 0x40000000
	// Bit SLP_REJECT.
	RTC_CNTL_RTC_STATE0_SLP_REJECT = 0x40000000
	// Position of SLEEP_EN field.
	RTC_CNTL_RTC_STATE0_SLEEP_EN_Pos = 0x1f
	// Bit mask of SLEEP_EN field.
	RTC_CNTL_RTC_STATE0_SLEEP_EN_Msk = 0x80000000
	// Bit SLEEP_EN.
	RTC_CNTL_RTC_STATE0_SLEEP_EN = 0x80000000

	// RTC_TIMER1: rtc configure register
	// Position of CPU_STALL_EN field.
	RTC_CNTL_RTC_TIMER1_CPU_STALL_EN_Pos = 0x0
	// Bit mask of CPU_STALL_EN field.
	RTC_CNTL_RTC_TIMER1_CPU_STALL_EN_Msk = 0x1
	// Bit CPU_STALL_EN.
	RTC_CNTL_RTC_TIMER1_CPU_STALL_EN = 0x1
	// Position of CPU_STALL_WAIT field.
	RTC_CNTL_RTC_TIMER1_CPU_STALL_WAIT_Pos = 0x1
	// Bit mask of CPU_STALL_WAIT field.
	RTC_CNTL_RTC_TIMER1_CPU_STALL_WAIT_Msk = 0x3e
	// Position of CK8M_WAIT field.
	RTC_CNTL_RTC_TIMER1_CK8M_WAIT_Pos = 0x6
	// Bit mask of CK8M_WAIT field.
	RTC_CNTL_RTC_TIMER1_CK8M_WAIT_Msk = 0x3fc0
	// Position of XTL_BUF_WAIT field.
	RTC_CNTL_RTC_TIMER1_XTL_BUF_WAIT_Pos = 0xe
	// Bit mask of XTL_BUF_WAIT field.
	RTC_CNTL_RTC_TIMER1_XTL_BUF_WAIT_Msk = 0xffc000
	// Position of PLL_BUF_WAIT field.
	RTC_CNTL_RTC_TIMER1_PLL_BUF_WAIT_Pos = 0x18
	// Bit mask of PLL_BUF_WAIT field.
	RTC_CNTL_RTC_TIMER1_PLL_BUF_WAIT_Msk = 0xff000000

	// RTC_TIMER2: rtc configure register
	// Position of MIN_TIME_CK8M_OFF field.
	RTC_CNTL_RTC_TIMER2_MIN_TIME_CK8M_OFF_Pos = 0x18
	// Bit mask of MIN_TIME_CK8M_OFF field.
	RTC_CNTL_RTC_TIMER2_MIN_TIME_CK8M_OFF_Msk = 0xff000000

	// RTC_TIMER3: rtc configure register
	// Position of WIFI_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER3_WIFI_WAIT_TIMER_Pos = 0x0
	// Bit mask of WIFI_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER3_WIFI_WAIT_TIMER_Msk = 0x1ff
	// Position of WIFI_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER3_WIFI_POWERUP_TIMER_Pos = 0x9
	// Bit mask of WIFI_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER3_WIFI_POWERUP_TIMER_Msk = 0xfe00
	// Position of BT_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER3_BT_WAIT_TIMER_Pos = 0x10
	// Bit mask of BT_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER3_BT_WAIT_TIMER_Msk = 0x1ff0000
	// Position of BT_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER3_BT_POWERUP_TIMER_Pos = 0x19
	// Bit mask of BT_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER3_BT_POWERUP_TIMER_Msk = 0xfe000000

	// RTC_TIMER4: rtc configure register
	// Position of CPU_TOP_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER4_CPU_TOP_WAIT_TIMER_Pos = 0x0
	// Bit mask of CPU_TOP_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER4_CPU_TOP_WAIT_TIMER_Msk = 0x1ff
	// Position of CPU_TOP_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER4_CPU_TOP_POWERUP_TIMER_Pos = 0x9
	// Bit mask of CPU_TOP_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER4_CPU_TOP_POWERUP_TIMER_Msk = 0xfe00
	// Position of DG_WRAP_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER4_DG_WRAP_WAIT_TIMER_Pos = 0x10
	// Bit mask of DG_WRAP_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER4_DG_WRAP_WAIT_TIMER_Msk = 0x1ff0000
	// Position of DG_WRAP_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER4_DG_WRAP_POWERUP_TIMER_Pos = 0x19
	// Bit mask of DG_WRAP_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER4_DG_WRAP_POWERUP_TIMER_Msk = 0xfe000000

	// RTC_TIMER5: rtc configure register
	// Position of MIN_SLP_VAL field.
	RTC_CNTL_RTC_TIMER5_MIN_SLP_VAL_Pos = 0x8
	// Bit mask of MIN_SLP_VAL field.
	RTC_CNTL_RTC_TIMER5_MIN_SLP_VAL_Msk = 0xff00

	// RTC_TIMER6: rtc configure register
	// Position of DG_PERI_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER6_DG_PERI_WAIT_TIMER_Pos = 0x10
	// Bit mask of DG_PERI_WAIT_TIMER field.
	RTC_CNTL_RTC_TIMER6_DG_PERI_WAIT_TIMER_Msk = 0x1ff0000
	// Position of DG_PERI_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER6_DG_PERI_POWERUP_TIMER_Pos = 0x19
	// Bit mask of DG_PERI_POWERUP_TIMER field.
	RTC_CNTL_RTC_TIMER6_DG_PERI_POWERUP_TIMER_Msk = 0xfe000000

	// RTC_ANA_CONF: rtc configure register
	// Position of RESET_POR_FORCE_PD field.
	RTC_CNTL_RTC_ANA_CONF_RESET_POR_FORCE_PD_Pos = 0x12
	// Bit mask of RESET_POR_FORCE_PD field.
	RTC_CNTL_RTC_ANA_CONF_RESET_POR_FORCE_PD_Msk = 0x40000
	// Bit RESET_POR_FORCE_PD.
	RTC_CNTL_RTC_ANA_CONF_RESET_POR_FORCE_PD = 0x40000
	// Position of RESET_POR_FORCE_PU field.
	RTC_CNTL_RTC_ANA_CONF_RESET_POR_FORCE_PU_Pos = 0x13
	// Bit mask of RESET_POR_FORCE_PU field.
	RTC_CNTL_RTC_ANA_CONF_RESET_POR_FORCE_PU_Msk = 0x80000
	// Bit RESET_POR_FORCE_PU.
	RTC_CNTL_RTC_ANA_CONF_RESET_POR_FORCE_PU = 0x80000
	// Position of GLITCH_RST_EN field.
	RTC_CNTL_RTC_ANA_CONF_GLITCH_RST_EN_Pos = 0x14
	// Bit mask of GLITCH_RST_EN field.
	RTC_CNTL_RTC_ANA_CONF_GLITCH_RST_EN_Msk = 0x100000
	// Bit GLITCH_RST_EN.
	RTC_CNTL_RTC_ANA_CONF_GLITCH_RST_EN = 0x100000
	// Position of SAR_I2C_PU field.
	RTC_CNTL_RTC_ANA_CONF_SAR_I2C_PU_Pos = 0x16
	// Bit mask of SAR_I2C_PU field.
	RTC_CNTL_RTC_ANA_CONF_SAR_I2C_PU_Msk = 0x400000
	// Bit SAR_I2C_PU.
	RTC_CNTL_RTC_ANA_CONF_SAR_I2C_PU = 0x400000
	// Position of PLLA_FORCE_PD field.
	RTC_CNTL_RTC_ANA_CONF_PLLA_FORCE_PD_Pos = 0x17
	// Bit mask of PLLA_FORCE_PD field.
	RTC_CNTL_RTC_ANA_CONF_PLLA_FORCE_PD_Msk = 0x800000
	// Bit PLLA_FORCE_PD.
	RTC_CNTL_RTC_ANA_CONF_PLLA_FORCE_PD = 0x800000
	// Position of PLLA_FORCE_PU field.
	RTC_CNTL_RTC_ANA_CONF_PLLA_FORCE_PU_Pos = 0x18
	// Bit mask of PLLA_FORCE_PU field.
	RTC_CNTL_RTC_ANA_CONF_PLLA_FORCE_PU_Msk = 0x1000000
	// Bit PLLA_FORCE_PU.
	RTC_CNTL_RTC_ANA_CONF_PLLA_FORCE_PU = 0x1000000
	// Position of BBPLL_CAL_SLP_START field.
	RTC_CNTL_RTC_ANA_CONF_BBPLL_CAL_SLP_START_Pos = 0x19
	// Bit mask of BBPLL_CAL_SLP_START field.
	RTC_CNTL_RTC_ANA_CONF_BBPLL_CAL_SLP_START_Msk = 0x2000000
	// Bit BBPLL_CAL_SLP_START.
	RTC_CNTL_RTC_ANA_CONF_BBPLL_CAL_SLP_START = 0x2000000
	// Position of PVTMON_PU field.
	RTC_CNTL_RTC_ANA_CONF_PVTMON_PU_Pos = 0x1a
	// Bit mask of PVTMON_PU field.
	RTC_CNTL_RTC_ANA_CONF_PVTMON_PU_Msk = 0x4000000
	// Bit PVTMON_PU.
	RTC_CNTL_RTC_ANA_CONF_PVTMON_PU = 0x4000000
	// Position of TXRF_I2C_PU field.
	RTC_CNTL_RTC_ANA_CONF_TXRF_I2C_PU_Pos = 0x1b
	// Bit mask of TXRF_I2C_PU field.
	RTC_CNTL_RTC_ANA_CONF_TXRF_I2C_PU_Msk = 0x8000000
	// Bit TXRF_I2C_PU.
	RTC_CNTL_RTC_ANA_CONF_TXRF_I2C_PU = 0x8000000
	// Position of RFRX_PBUS_PU field.
	RTC_CNTL_RTC_ANA_CONF_RFRX_PBUS_PU_Pos = 0x1c
	// Bit mask of RFRX_PBUS_PU field.
	RTC_CNTL_RTC_ANA_CONF_RFRX_PBUS_PU_Msk = 0x10000000
	// Bit RFRX_PBUS_PU.
	RTC_CNTL_RTC_ANA_CONF_RFRX_PBUS_PU = 0x10000000
	// Position of CKGEN_I2C_PU field.
	RTC_CNTL_RTC_ANA_CONF_CKGEN_I2C_PU_Pos = 0x1e
	// Bit mask of CKGEN_I2C_PU field.
	RTC_CNTL_RTC_ANA_CONF_CKGEN_I2C_PU_Msk = 0x40000000
	// Bit CKGEN_I2C_PU.
	RTC_CNTL_RTC_ANA_CONF_CKGEN_I2C_PU = 0x40000000
	// Position of PLL_I2C_PU field.
	RTC_CNTL_RTC_ANA_CONF_PLL_I2C_PU_Pos = 0x1f
	// Bit mask of PLL_I2C_PU field.
	RTC_CNTL_RTC_ANA_CONF_PLL_I2C_PU_Msk = 0x80000000
	// Bit PLL_I2C_PU.
	RTC_CNTL_RTC_ANA_CONF_PLL_I2C_PU = 0x80000000

	// RTC_RESET_STATE: rtc configure register
	// Position of RESET_CAUSE_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_RESET_CAUSE_PROCPU_Pos = 0x0
	// Bit mask of RESET_CAUSE_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_RESET_CAUSE_PROCPU_Msk = 0x3f
	// Position of RESET_CAUSE_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_RESET_CAUSE_APPCPU_Pos = 0x6
	// Bit mask of RESET_CAUSE_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_RESET_CAUSE_APPCPU_Msk = 0xfc0
	// Position of STAT_VECTOR_SEL_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_STAT_VECTOR_SEL_APPCPU_Pos = 0xc
	// Bit mask of STAT_VECTOR_SEL_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_STAT_VECTOR_SEL_APPCPU_Msk = 0x1000
	// Bit STAT_VECTOR_SEL_APPCPU.
	RTC_CNTL_RTC_RESET_STATE_STAT_VECTOR_SEL_APPCPU = 0x1000
	// Position of STAT_VECTOR_SEL_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_STAT_VECTOR_SEL_PROCPU_Pos = 0xd
	// Bit mask of STAT_VECTOR_SEL_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_STAT_VECTOR_SEL_PROCPU_Msk = 0x2000
	// Bit STAT_VECTOR_SEL_PROCPU.
	RTC_CNTL_RTC_RESET_STATE_STAT_VECTOR_SEL_PROCPU = 0x2000
	// Position of ALL_RESET_FLAG_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_PROCPU_Pos = 0xe
	// Bit mask of ALL_RESET_FLAG_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_PROCPU_Msk = 0x4000
	// Bit ALL_RESET_FLAG_PROCPU.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_PROCPU = 0x4000
	// Position of ALL_RESET_FLAG_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_APPCPU_Pos = 0xf
	// Bit mask of ALL_RESET_FLAG_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_APPCPU_Msk = 0x8000
	// Bit ALL_RESET_FLAG_APPCPU.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_APPCPU = 0x8000
	// Position of ALL_RESET_FLAG_CLR_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_CLR_PROCPU_Pos = 0x10
	// Bit mask of ALL_RESET_FLAG_CLR_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_CLR_PROCPU_Msk = 0x10000
	// Bit ALL_RESET_FLAG_CLR_PROCPU.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_CLR_PROCPU = 0x10000
	// Position of ALL_RESET_FLAG_CLR_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_CLR_APPCPU_Pos = 0x11
	// Bit mask of ALL_RESET_FLAG_CLR_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_CLR_APPCPU_Msk = 0x20000
	// Bit ALL_RESET_FLAG_CLR_APPCPU.
	RTC_CNTL_RTC_RESET_STATE_ALL_RESET_FLAG_CLR_APPCPU = 0x20000
	// Position of OCD_HALT_ON_RESET_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_OCD_HALT_ON_RESET_APPCPU_Pos = 0x12
	// Bit mask of OCD_HALT_ON_RESET_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_OCD_HALT_ON_RESET_APPCPU_Msk = 0x40000
	// Bit OCD_HALT_ON_RESET_APPCPU.
	RTC_CNTL_RTC_RESET_STATE_OCD_HALT_ON_RESET_APPCPU = 0x40000
	// Position of OCD_HALT_ON_RESET_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_OCD_HALT_ON_RESET_PROCPU_Pos = 0x13
	// Bit mask of OCD_HALT_ON_RESET_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_OCD_HALT_ON_RESET_PROCPU_Msk = 0x80000
	// Bit OCD_HALT_ON_RESET_PROCPU.
	RTC_CNTL_RTC_RESET_STATE_OCD_HALT_ON_RESET_PROCPU = 0x80000
	// Position of JTAG_RESET_FLAG_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_PROCPU_Pos = 0x14
	// Bit mask of JTAG_RESET_FLAG_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_PROCPU_Msk = 0x100000
	// Bit JTAG_RESET_FLAG_PROCPU.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_PROCPU = 0x100000
	// Position of JTAG_RESET_FLAG_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_APPCPU_Pos = 0x15
	// Bit mask of JTAG_RESET_FLAG_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_APPCPU_Msk = 0x200000
	// Bit JTAG_RESET_FLAG_APPCPU.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_APPCPU = 0x200000
	// Position of JTAG_RESET_FLAG_CLR_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_CLR_PROCPU_Pos = 0x16
	// Bit mask of JTAG_RESET_FLAG_CLR_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_CLR_PROCPU_Msk = 0x400000
	// Bit JTAG_RESET_FLAG_CLR_PROCPU.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_CLR_PROCPU = 0x400000
	// Position of JTAG_RESET_FLAG_CLR_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_CLR_APPCPU_Pos = 0x17
	// Bit mask of JTAG_RESET_FLAG_CLR_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_CLR_APPCPU_Msk = 0x800000
	// Bit JTAG_RESET_FLAG_CLR_APPCPU.
	RTC_CNTL_RTC_RESET_STATE_JTAG_RESET_FLAG_CLR_APPCPU = 0x800000
	// Position of RTC_DRESET_MASK_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_RTC_DRESET_MASK_APPCPU_Pos = 0x18
	// Bit mask of RTC_DRESET_MASK_APPCPU field.
	RTC_CNTL_RTC_RESET_STATE_RTC_DRESET_MASK_APPCPU_Msk = 0x1000000
	// Bit RTC_DRESET_MASK_APPCPU.
	RTC_CNTL_RTC_RESET_STATE_RTC_DRESET_MASK_APPCPU = 0x1000000
	// Position of RTC_DRESET_MASK_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_RTC_DRESET_MASK_PROCPU_Pos = 0x19
	// Bit mask of RTC_DRESET_MASK_PROCPU field.
	RTC_CNTL_RTC_RESET_STATE_RTC_DRESET_MASK_PROCPU_Msk = 0x2000000
	// Bit RTC_DRESET_MASK_PROCPU.
	RTC_CNTL_RTC_RESET_STATE_RTC_DRESET_MASK_PROCPU = 0x2000000

	// RTC_WAKEUP_STATE: rtc configure register
	// Position of RTC_WAKEUP_ENA field.
	RTC_CNTL_RTC_WAKEUP_STATE_RTC_WAKEUP_ENA_Pos = 0xf
	// Bit mask of RTC_WAKEUP_ENA field.
	RTC_CNTL_RTC_WAKEUP_STATE_RTC_WAKEUP_ENA_Msk = 0xffff8000

	// INT_ENA_RTC: rtc configure register
	// Position of SLP_WAKEUP_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_SLP_WAKEUP_INT_ENA_Pos = 0x0
	// Bit mask of SLP_WAKEUP_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_SLP_WAKEUP_INT_ENA_Msk = 0x1
	// Bit SLP_WAKEUP_INT_ENA.
	RTC_CNTL_INT_ENA_RTC_SLP_WAKEUP_INT_ENA = 0x1
	// Position of SLP_REJECT_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_SLP_REJECT_INT_ENA_Pos = 0x1
	// Bit mask of SLP_REJECT_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_SLP_REJECT_INT_ENA_Msk = 0x2
	// Bit SLP_REJECT_INT_ENA.
	RTC_CNTL_INT_ENA_RTC_SLP_REJECT_INT_ENA = 0x2
	// Position of RTC_WDT_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_WDT_INT_ENA_Pos = 0x3
	// Bit mask of RTC_WDT_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_WDT_INT_ENA_Msk = 0x8
	// Bit RTC_WDT_INT_ENA.
	RTC_CNTL_INT_ENA_RTC_RTC_WDT_INT_ENA = 0x8
	// Position of RTC_BROWN_OUT_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_BROWN_OUT_INT_ENA_Pos = 0x9
	// Bit mask of RTC_BROWN_OUT_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_BROWN_OUT_INT_ENA_Msk = 0x200
	// Bit RTC_BROWN_OUT_INT_ENA.
	RTC_CNTL_INT_ENA_RTC_RTC_BROWN_OUT_INT_ENA = 0x200
	// Position of RTC_MAIN_TIMER_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_MAIN_TIMER_INT_ENA_Pos = 0xa
	// Bit mask of RTC_MAIN_TIMER_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_MAIN_TIMER_INT_ENA_Msk = 0x400
	// Bit RTC_MAIN_TIMER_INT_ENA.
	RTC_CNTL_INT_ENA_RTC_RTC_MAIN_TIMER_INT_ENA = 0x400
	// Position of RTC_SWD_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_SWD_INT_ENA_Pos = 0xf
	// Bit mask of RTC_SWD_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_SWD_INT_ENA_Msk = 0x8000
	// Bit RTC_SWD_INT_ENA.
	RTC_CNTL_INT_ENA_RTC_RTC_SWD_INT_ENA = 0x8000
	// Position of RTC_XTAL32K_DEAD_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_XTAL32K_DEAD_INT_ENA_Pos = 0x10
	// Bit mask of RTC_XTAL32K_DEAD_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_XTAL32K_DEAD_INT_ENA_Msk = 0x10000
	// Bit RTC_XTAL32K_DEAD_INT_ENA.
	RTC_CNTL_INT_ENA_RTC_RTC_XTAL32K_DEAD_INT_ENA = 0x10000
	// Position of RTC_GLITCH_DET_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_GLITCH_DET_INT_ENA_Pos = 0x13
	// Bit mask of RTC_GLITCH_DET_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_GLITCH_DET_INT_ENA_Msk = 0x80000
	// Bit RTC_GLITCH_DET_INT_ENA.
	RTC_CNTL_INT_ENA_RTC_RTC_GLITCH_DET_INT_ENA = 0x80000
	// Position of RTC_BBPLL_CAL_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_BBPLL_CAL_INT_ENA_Pos = 0x14
	// Bit mask of RTC_BBPLL_CAL_INT_ENA field.
	RTC_CNTL_INT_ENA_RTC_RTC_BBPLL_CAL_INT_ENA_Msk = 0x100000
	// Bit RTC_BBPLL_CAL_INT_ENA.
	RTC_CNTL_INT_ENA_RTC_RTC_BBPLL_CAL_INT_ENA = 0x100000

	// INT_RAW_RTC: rtc configure register
	// Position of SLP_WAKEUP_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_SLP_WAKEUP_INT_RAW_Pos = 0x0
	// Bit mask of SLP_WAKEUP_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_SLP_WAKEUP_INT_RAW_Msk = 0x1
	// Bit SLP_WAKEUP_INT_RAW.
	RTC_CNTL_INT_RAW_RTC_SLP_WAKEUP_INT_RAW = 0x1
	// Position of SLP_REJECT_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_SLP_REJECT_INT_RAW_Pos = 0x1
	// Bit mask of SLP_REJECT_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_SLP_REJECT_INT_RAW_Msk = 0x2
	// Bit SLP_REJECT_INT_RAW.
	RTC_CNTL_INT_RAW_RTC_SLP_REJECT_INT_RAW = 0x2
	// Position of RTC_WDT_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_WDT_INT_RAW_Pos = 0x3
	// Bit mask of RTC_WDT_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_WDT_INT_RAW_Msk = 0x8
	// Bit RTC_WDT_INT_RAW.
	RTC_CNTL_INT_RAW_RTC_RTC_WDT_INT_RAW = 0x8
	// Position of RTC_BROWN_OUT_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_BROWN_OUT_INT_RAW_Pos = 0x9
	// Bit mask of RTC_BROWN_OUT_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_BROWN_OUT_INT_RAW_Msk = 0x200
	// Bit RTC_BROWN_OUT_INT_RAW.
	RTC_CNTL_INT_RAW_RTC_RTC_BROWN_OUT_INT_RAW = 0x200
	// Position of RTC_MAIN_TIMER_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_MAIN_TIMER_INT_RAW_Pos = 0xa
	// Bit mask of RTC_MAIN_TIMER_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_MAIN_TIMER_INT_RAW_Msk = 0x400
	// Bit RTC_MAIN_TIMER_INT_RAW.
	RTC_CNTL_INT_RAW_RTC_RTC_MAIN_TIMER_INT_RAW = 0x400
	// Position of RTC_SWD_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_SWD_INT_RAW_Pos = 0xf
	// Bit mask of RTC_SWD_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_SWD_INT_RAW_Msk = 0x8000
	// Bit RTC_SWD_INT_RAW.
	RTC_CNTL_INT_RAW_RTC_RTC_SWD_INT_RAW = 0x8000
	// Position of RTC_XTAL32K_DEAD_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_XTAL32K_DEAD_INT_RAW_Pos = 0x10
	// Bit mask of RTC_XTAL32K_DEAD_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_XTAL32K_DEAD_INT_RAW_Msk = 0x10000
	// Bit RTC_XTAL32K_DEAD_INT_RAW.
	RTC_CNTL_INT_RAW_RTC_RTC_XTAL32K_DEAD_INT_RAW = 0x10000
	// Position of RTC_GLITCH_DET_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_GLITCH_DET_INT_RAW_Pos = 0x13
	// Bit mask of RTC_GLITCH_DET_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_GLITCH_DET_INT_RAW_Msk = 0x80000
	// Bit RTC_GLITCH_DET_INT_RAW.
	RTC_CNTL_INT_RAW_RTC_RTC_GLITCH_DET_INT_RAW = 0x80000
	// Position of RTC_BBPLL_CAL_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_BBPLL_CAL_INT_RAW_Pos = 0x14
	// Bit mask of RTC_BBPLL_CAL_INT_RAW field.
	RTC_CNTL_INT_RAW_RTC_RTC_BBPLL_CAL_INT_RAW_Msk = 0x100000
	// Bit RTC_BBPLL_CAL_INT_RAW.
	RTC_CNTL_INT_RAW_RTC_RTC_BBPLL_CAL_INT_RAW = 0x100000

	// INT_ST_RTC: rtc configure register
	// Position of SLP_WAKEUP_INT_ST field.
	RTC_CNTL_INT_ST_RTC_SLP_WAKEUP_INT_ST_Pos = 0x0
	// Bit mask of SLP_WAKEUP_INT_ST field.
	RTC_CNTL_INT_ST_RTC_SLP_WAKEUP_INT_ST_Msk = 0x1
	// Bit SLP_WAKEUP_INT_ST.
	RTC_CNTL_INT_ST_RTC_SLP_WAKEUP_INT_ST = 0x1
	// Position of SLP_REJECT_INT_ST field.
	RTC_CNTL_INT_ST_RTC_SLP_REJECT_INT_ST_Pos = 0x1
	// Bit mask of SLP_REJECT_INT_ST field.
	RTC_CNTL_INT_ST_RTC_SLP_REJECT_INT_ST_Msk = 0x2
	// Bit SLP_REJECT_INT_ST.
	RTC_CNTL_INT_ST_RTC_SLP_REJECT_INT_ST = 0x2
	// Position of RTC_WDT_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_WDT_INT_ST_Pos = 0x3
	// Bit mask of RTC_WDT_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_WDT_INT_ST_Msk = 0x8
	// Bit RTC_WDT_INT_ST.
	RTC_CNTL_INT_ST_RTC_RTC_WDT_INT_ST = 0x8
	// Position of RTC_BROWN_OUT_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_BROWN_OUT_INT_ST_Pos = 0x9
	// Bit mask of RTC_BROWN_OUT_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_BROWN_OUT_INT_ST_Msk = 0x200
	// Bit RTC_BROWN_OUT_INT_ST.
	RTC_CNTL_INT_ST_RTC_RTC_BROWN_OUT_INT_ST = 0x200
	// Position of RTC_MAIN_TIMER_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_MAIN_TIMER_INT_ST_Pos = 0xa
	// Bit mask of RTC_MAIN_TIMER_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_MAIN_TIMER_INT_ST_Msk = 0x400
	// Bit RTC_MAIN_TIMER_INT_ST.
	RTC_CNTL_INT_ST_RTC_RTC_MAIN_TIMER_INT_ST = 0x400
	// Position of RTC_SWD_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_SWD_INT_ST_Pos = 0xf
	// Bit mask of RTC_SWD_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_SWD_INT_ST_Msk = 0x8000
	// Bit RTC_SWD_INT_ST.
	RTC_CNTL_INT_ST_RTC_RTC_SWD_INT_ST = 0x8000
	// Position of RTC_XTAL32K_DEAD_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_XTAL32K_DEAD_INT_ST_Pos = 0x10
	// Bit mask of RTC_XTAL32K_DEAD_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_XTAL32K_DEAD_INT_ST_Msk = 0x10000
	// Bit RTC_XTAL32K_DEAD_INT_ST.
	RTC_CNTL_INT_ST_RTC_RTC_XTAL32K_DEAD_INT_ST = 0x10000
	// Position of RTC_GLITCH_DET_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_GLITCH_DET_INT_ST_Pos = 0x13
	// Bit mask of RTC_GLITCH_DET_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_GLITCH_DET_INT_ST_Msk = 0x80000
	// Bit RTC_GLITCH_DET_INT_ST.
	RTC_CNTL_INT_ST_RTC_RTC_GLITCH_DET_INT_ST = 0x80000
	// Position of RTC_BBPLL_CAL_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_BBPLL_CAL_INT_ST_Pos = 0x14
	// Bit mask of RTC_BBPLL_CAL_INT_ST field.
	RTC_CNTL_INT_ST_RTC_RTC_BBPLL_CAL_INT_ST_Msk = 0x100000
	// Bit RTC_BBPLL_CAL_INT_ST.
	RTC_CNTL_INT_ST_RTC_RTC_BBPLL_CAL_INT_ST = 0x100000

	// INT_CLR_RTC: rtc configure register
	// Position of SLP_WAKEUP_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_SLP_WAKEUP_INT_CLR_Pos = 0x0
	// Bit mask of SLP_WAKEUP_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_SLP_WAKEUP_INT_CLR_Msk = 0x1
	// Bit SLP_WAKEUP_INT_CLR.
	RTC_CNTL_INT_CLR_RTC_SLP_WAKEUP_INT_CLR = 0x1
	// Position of SLP_REJECT_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_SLP_REJECT_INT_CLR_Pos = 0x1
	// Bit mask of SLP_REJECT_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_SLP_REJECT_INT_CLR_Msk = 0x2
	// Bit SLP_REJECT_INT_CLR.
	RTC_CNTL_INT_CLR_RTC_SLP_REJECT_INT_CLR = 0x2
	// Position of RTC_WDT_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_WDT_INT_CLR_Pos = 0x3
	// Bit mask of RTC_WDT_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_WDT_INT_CLR_Msk = 0x8
	// Bit RTC_WDT_INT_CLR.
	RTC_CNTL_INT_CLR_RTC_RTC_WDT_INT_CLR = 0x8
	// Position of RTC_BROWN_OUT_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_BROWN_OUT_INT_CLR_Pos = 0x9
	// Bit mask of RTC_BROWN_OUT_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_BROWN_OUT_INT_CLR_Msk = 0x200
	// Bit RTC_BROWN_OUT_INT_CLR.
	RTC_CNTL_INT_CLR_RTC_RTC_BROWN_OUT_INT_CLR = 0x200
	// Position of RTC_MAIN_TIMER_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_MAIN_TIMER_INT_CLR_Pos = 0xa
	// Bit mask of RTC_MAIN_TIMER_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_MAIN_TIMER_INT_CLR_Msk = 0x400
	// Bit RTC_MAIN_TIMER_INT_CLR.
	RTC_CNTL_INT_CLR_RTC_RTC_MAIN_TIMER_INT_CLR = 0x400
	// Position of RTC_SWD_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_SWD_INT_CLR_Pos = 0xf
	// Bit mask of RTC_SWD_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_SWD_INT_CLR_Msk = 0x8000
	// Bit RTC_SWD_INT_CLR.
	RTC_CNTL_INT_CLR_RTC_RTC_SWD_INT_CLR = 0x8000
	// Position of RTC_XTAL32K_DEAD_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_XTAL32K_DEAD_INT_CLR_Pos = 0x10
	// Bit mask of RTC_XTAL32K_DEAD_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_XTAL32K_DEAD_INT_CLR_Msk = 0x10000
	// Bit RTC_XTAL32K_DEAD_INT_CLR.
	RTC_CNTL_INT_CLR_RTC_RTC_XTAL32K_DEAD_INT_CLR = 0x10000
	// Position of RTC_GLITCH_DET_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_GLITCH_DET_INT_CLR_Pos = 0x13
	// Bit mask of RTC_GLITCH_DET_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_GLITCH_DET_INT_CLR_Msk = 0x80000
	// Bit RTC_GLITCH_DET_INT_CLR.
	RTC_CNTL_INT_CLR_RTC_RTC_GLITCH_DET_INT_CLR = 0x80000
	// Position of RTC_BBPLL_CAL_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_BBPLL_CAL_INT_CLR_Pos = 0x14
	// Bit mask of RTC_BBPLL_CAL_INT_CLR field.
	RTC_CNTL_INT_CLR_RTC_RTC_BBPLL_CAL_INT_CLR_Msk = 0x100000
	// Bit RTC_BBPLL_CAL_INT_CLR.
	RTC_CNTL_INT_CLR_RTC_RTC_BBPLL_CAL_INT_CLR = 0x100000

	// RTC_STORE0: rtc configure register
	// Position of RTC_SCRATCH0 field.
	RTC_CNTL_RTC_STORE0_RTC_SCRATCH0_Pos = 0x0
	// Bit mask of RTC_SCRATCH0 field.
	RTC_CNTL_RTC_STORE0_RTC_SCRATCH0_Msk = 0xffffffff

	// RTC_STORE1: rtc configure register
	// Position of RTC_SCRATCH1 field.
	RTC_CNTL_RTC_STORE1_RTC_SCRATCH1_Pos = 0x0
	// Bit mask of RTC_SCRATCH1 field.
	RTC_CNTL_RTC_STORE1_RTC_SCRATCH1_Msk = 0xffffffff

	// RTC_STORE2: rtc configure register
	// Position of RTC_SCRATCH2 field.
	RTC_CNTL_RTC_STORE2_RTC_SCRATCH2_Pos = 0x0
	// Bit mask of RTC_SCRATCH2 field.
	RTC_CNTL_RTC_STORE2_RTC_SCRATCH2_Msk = 0xffffffff

	// RTC_STORE3: rtc configure register
	// Position of RTC_SCRATCH3 field.
	RTC_CNTL_RTC_STORE3_RTC_SCRATCH3_Pos = 0x0
	// Bit mask of RTC_SCRATCH3 field.
	RTC_CNTL_RTC_STORE3_RTC_SCRATCH3_Msk = 0xffffffff

	// RTC_EXT_XTL_CONF: rtc configure register
	// Position of XTAL32K_WDT_EN field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_WDT_EN_Pos = 0x0
	// Bit mask of XTAL32K_WDT_EN field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_WDT_EN_Msk = 0x1
	// Bit XTAL32K_WDT_EN.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_WDT_EN = 0x1
	// Position of XTAL32K_WDT_CLK_FO field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_WDT_CLK_FO_Pos = 0x1
	// Bit mask of XTAL32K_WDT_CLK_FO field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_WDT_CLK_FO_Msk = 0x2
	// Bit XTAL32K_WDT_CLK_FO.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_WDT_CLK_FO = 0x2
	// Position of XTAL32K_WDT_RESET field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_WDT_RESET_Pos = 0x2
	// Bit mask of XTAL32K_WDT_RESET field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_WDT_RESET_Msk = 0x4
	// Bit XTAL32K_WDT_RESET.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_WDT_RESET = 0x4
	// Position of XTAL32K_EXT_CLK_FO field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_EXT_CLK_FO_Pos = 0x3
	// Bit mask of XTAL32K_EXT_CLK_FO field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_EXT_CLK_FO_Msk = 0x8
	// Bit XTAL32K_EXT_CLK_FO.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_EXT_CLK_FO = 0x8
	// Position of XTAL32K_AUTO_BACKUP field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_AUTO_BACKUP_Pos = 0x4
	// Bit mask of XTAL32K_AUTO_BACKUP field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_AUTO_BACKUP_Msk = 0x10
	// Bit XTAL32K_AUTO_BACKUP.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_AUTO_BACKUP = 0x10
	// Position of XTAL32K_AUTO_RESTART field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_AUTO_RESTART_Pos = 0x5
	// Bit mask of XTAL32K_AUTO_RESTART field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_AUTO_RESTART_Msk = 0x20
	// Bit XTAL32K_AUTO_RESTART.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_AUTO_RESTART = 0x20
	// Position of XTAL32K_AUTO_RETURN field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_AUTO_RETURN_Pos = 0x6
	// Bit mask of XTAL32K_AUTO_RETURN field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_AUTO_RETURN_Msk = 0x40
	// Bit XTAL32K_AUTO_RETURN.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_AUTO_RETURN = 0x40
	// Position of XTAL32K_XPD_FORCE field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_XPD_FORCE_Pos = 0x7
	// Bit mask of XTAL32K_XPD_FORCE field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_XPD_FORCE_Msk = 0x80
	// Bit XTAL32K_XPD_FORCE.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTAL32K_XPD_FORCE = 0x80
	// Position of ENCKINIT_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_ENCKINIT_XTAL_32K_Pos = 0x8
	// Bit mask of ENCKINIT_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_ENCKINIT_XTAL_32K_Msk = 0x100
	// Bit ENCKINIT_XTAL_32K.
	RTC_CNTL_RTC_EXT_XTL_CONF_ENCKINIT_XTAL_32K = 0x100
	// Position of DBUF_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_DBUF_XTAL_32K_Pos = 0x9
	// Bit mask of DBUF_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_DBUF_XTAL_32K_Msk = 0x200
	// Bit DBUF_XTAL_32K.
	RTC_CNTL_RTC_EXT_XTL_CONF_DBUF_XTAL_32K = 0x200
	// Position of DGM_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_DGM_XTAL_32K_Pos = 0xa
	// Bit mask of DGM_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_DGM_XTAL_32K_Msk = 0x1c00
	// Position of DRES_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_DRES_XTAL_32K_Pos = 0xd
	// Bit mask of DRES_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_DRES_XTAL_32K_Msk = 0xe000
	// Position of XPD_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XPD_XTAL_32K_Pos = 0x10
	// Bit mask of XPD_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XPD_XTAL_32K_Msk = 0x10000
	// Bit XPD_XTAL_32K.
	RTC_CNTL_RTC_EXT_XTL_CONF_XPD_XTAL_32K = 0x10000
	// Position of DAC_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_DAC_XTAL_32K_Pos = 0x11
	// Bit mask of DAC_XTAL_32K field.
	RTC_CNTL_RTC_EXT_XTL_CONF_DAC_XTAL_32K_Msk = 0xe0000
	// Position of RTC_WDT_STATE field.
	RTC_CNTL_RTC_EXT_XTL_CONF_RTC_WDT_STATE_Pos = 0x14
	// Bit mask of RTC_WDT_STATE field.
	RTC_CNTL_RTC_EXT_XTL_CONF_RTC_WDT_STATE_Msk = 0x700000
	// Position of RTC_XTAL32K_GPIO_SEL field.
	RTC_CNTL_RTC_EXT_XTL_CONF_RTC_XTAL32K_GPIO_SEL_Pos = 0x17
	// Bit mask of RTC_XTAL32K_GPIO_SEL field.
	RTC_CNTL_RTC_EXT_XTL_CONF_RTC_XTAL32K_GPIO_SEL_Msk = 0x800000
	// Bit RTC_XTAL32K_GPIO_SEL.
	RTC_CNTL_RTC_EXT_XTL_CONF_RTC_XTAL32K_GPIO_SEL = 0x800000
	// Position of XTL_EXT_CTR_LV field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTL_EXT_CTR_LV_Pos = 0x1e
	// Bit mask of XTL_EXT_CTR_LV field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTL_EXT_CTR_LV_Msk = 0x40000000
	// Bit XTL_EXT_CTR_LV.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTL_EXT_CTR_LV = 0x40000000
	// Position of XTL_EXT_CTR_EN field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTL_EXT_CTR_EN_Pos = 0x1f
	// Bit mask of XTL_EXT_CTR_EN field.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTL_EXT_CTR_EN_Msk = 0x80000000
	// Bit XTL_EXT_CTR_EN.
	RTC_CNTL_RTC_EXT_XTL_CONF_XTL_EXT_CTR_EN = 0x80000000

	// RTC_EXT_WAKEUP_CONF: rtc configure register
	// Position of GPIO_WAKEUP_FILTER field.
	RTC_CNTL_RTC_EXT_WAKEUP_CONF_GPIO_WAKEUP_FILTER_Pos = 0x1f
	// Bit mask of GPIO_WAKEUP_FILTER field.
	RTC_CNTL_RTC_EXT_WAKEUP_CONF_GPIO_WAKEUP_FILTER_Msk = 0x80000000
	// Bit GPIO_WAKEUP_FILTER.
	RTC_CNTL_RTC_EXT_WAKEUP_CONF_GPIO_WAKEUP_FILTER = 0x80000000

	// RTC_SLP_REJECT_CONF: rtc configure register
	// Position of RTC_SLEEP_REJECT_ENA field.
	RTC_CNTL_RTC_SLP_REJECT_CONF_RTC_SLEEP_REJECT_ENA_Pos = 0xc
	// Bit mask of RTC_SLEEP_REJECT_ENA field.
	RTC_CNTL_RTC_SLP_REJECT_CONF_RTC_SLEEP_REJECT_ENA_Msk = 0x3ffff000
	// Position of LIGHT_SLP_REJECT_EN field.
	RTC_CNTL_RTC_SLP_REJECT_CONF_LIGHT_SLP_REJECT_EN_Pos = 0x1e
	// Bit mask of LIGHT_SLP_REJECT_EN field.
	RTC_CNTL_RTC_SLP_REJECT_CONF_LIGHT_SLP_REJECT_EN_Msk = 0x40000000
	// Bit LIGHT_SLP_REJECT_EN.
	RTC_CNTL_RTC_SLP_REJECT_CONF_LIGHT_SLP_REJECT_EN = 0x40000000
	// Position of DEEP_SLP_REJECT_EN field.
	RTC_CNTL_RTC_SLP_REJECT_CONF_DEEP_SLP_REJECT_EN_Pos = 0x1f
	// Bit mask of DEEP_SLP_REJECT_EN field.
	RTC_CNTL_RTC_SLP_REJECT_CONF_DEEP_SLP_REJECT_EN_Msk = 0x80000000
	// Bit DEEP_SLP_REJECT_EN.
	RTC_CNTL_RTC_SLP_REJECT_CONF_DEEP_SLP_REJECT_EN = 0x80000000

	// RTC_CPU_PERIOD_CONF: rtc configure register
	// Position of RTC_CPUSEL_CONF field.
	RTC_CNTL_RTC_CPU_PERIOD_CONF_RTC_CPUSEL_CONF_Pos = 0x1d
	// Bit mask of RTC_CPUSEL_CONF field.
	RTC_CNTL_RTC_CPU_PERIOD_CONF_RTC_CPUSEL_CONF_Msk = 0x20000000
	// Bit RTC_CPUSEL_CONF.
	RTC_CNTL_RTC_CPU_PERIOD_CONF_RTC_CPUSEL_CONF = 0x20000000
	// Position of RTC_CPUPERIOD_SEL field.
	RTC_CNTL_RTC_CPU_PERIOD_CONF_RTC_CPUPERIOD_SEL_Pos = 0x1e
	// Bit mask of RTC_CPUPERIOD_SEL field.
	RTC_CNTL_RTC_CPU_PERIOD_CONF_RTC_CPUPERIOD_SEL_Msk = 0xc0000000

	// RTC_CLK_CONF: rtc configure register
	// Position of EFUSE_CLK_FORCE_GATING field.
	RTC_CNTL_RTC_CLK_CONF_EFUSE_CLK_FORCE_GATING_Pos = 0x1
	// Bit mask of EFUSE_CLK_FORCE_GATING field.
	RTC_CNTL_RTC_CLK_CONF_EFUSE_CLK_FORCE_GATING_Msk = 0x2
	// Bit EFUSE_CLK_FORCE_GATING.
	RTC_CNTL_RTC_CLK_CONF_EFUSE_CLK_FORCE_GATING = 0x2
	// Position of EFUSE_CLK_FORCE_NOGATING field.
	RTC_CNTL_RTC_CLK_CONF_EFUSE_CLK_FORCE_NOGATING_Pos = 0x2
	// Bit mask of EFUSE_CLK_FORCE_NOGATING field.
	RTC_CNTL_RTC_CLK_CONF_EFUSE_CLK_FORCE_NOGATING_Msk = 0x4
	// Bit EFUSE_CLK_FORCE_NOGATING.
	RTC_CNTL_RTC_CLK_CONF_EFUSE_CLK_FORCE_NOGATING = 0x4
	// Position of CK8M_DIV_SEL_VLD field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_DIV_SEL_VLD_Pos = 0x3
	// Bit mask of CK8M_DIV_SEL_VLD field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_DIV_SEL_VLD_Msk = 0x8
	// Bit CK8M_DIV_SEL_VLD.
	RTC_CNTL_RTC_CLK_CONF_CK8M_DIV_SEL_VLD = 0x8
	// Position of CK8M_DIV field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_DIV_Pos = 0x4
	// Bit mask of CK8M_DIV field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_DIV_Msk = 0x30
	// Position of ENB_CK8M field.
	RTC_CNTL_RTC_CLK_CONF_ENB_CK8M_Pos = 0x6
	// Bit mask of ENB_CK8M field.
	RTC_CNTL_RTC_CLK_CONF_ENB_CK8M_Msk = 0x40
	// Bit ENB_CK8M.
	RTC_CNTL_RTC_CLK_CONF_ENB_CK8M = 0x40
	// Position of ENB_CK8M_DIV field.
	RTC_CNTL_RTC_CLK_CONF_ENB_CK8M_DIV_Pos = 0x7
	// Bit mask of ENB_CK8M_DIV field.
	RTC_CNTL_RTC_CLK_CONF_ENB_CK8M_DIV_Msk = 0x80
	// Bit ENB_CK8M_DIV.
	RTC_CNTL_RTC_CLK_CONF_ENB_CK8M_DIV = 0x80
	// Position of DIG_XTAL32K_EN field.
	RTC_CNTL_RTC_CLK_CONF_DIG_XTAL32K_EN_Pos = 0x8
	// Bit mask of DIG_XTAL32K_EN field.
	RTC_CNTL_RTC_CLK_CONF_DIG_XTAL32K_EN_Msk = 0x100
	// Bit DIG_XTAL32K_EN.
	RTC_CNTL_RTC_CLK_CONF_DIG_XTAL32K_EN = 0x100
	// Position of DIG_CLK8M_D256_EN field.
	RTC_CNTL_RTC_CLK_CONF_DIG_CLK8M_D256_EN_Pos = 0x9
	// Bit mask of DIG_CLK8M_D256_EN field.
	RTC_CNTL_RTC_CLK_CONF_DIG_CLK8M_D256_EN_Msk = 0x200
	// Bit DIG_CLK8M_D256_EN.
	RTC_CNTL_RTC_CLK_CONF_DIG_CLK8M_D256_EN = 0x200
	// Position of DIG_CLK8M_EN field.
	RTC_CNTL_RTC_CLK_CONF_DIG_CLK8M_EN_Pos = 0xa
	// Bit mask of DIG_CLK8M_EN field.
	RTC_CNTL_RTC_CLK_CONF_DIG_CLK8M_EN_Msk = 0x400
	// Bit DIG_CLK8M_EN.
	RTC_CNTL_RTC_CLK_CONF_DIG_CLK8M_EN = 0x400
	// Position of CK8M_DIV_SEL field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_DIV_SEL_Pos = 0xc
	// Bit mask of CK8M_DIV_SEL field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_DIV_SEL_Msk = 0x7000
	// Position of XTAL_FORCE_NOGATING field.
	RTC_CNTL_RTC_CLK_CONF_XTAL_FORCE_NOGATING_Pos = 0xf
	// Bit mask of XTAL_FORCE_NOGATING field.
	RTC_CNTL_RTC_CLK_CONF_XTAL_FORCE_NOGATING_Msk = 0x8000
	// Bit XTAL_FORCE_NOGATING.
	RTC_CNTL_RTC_CLK_CONF_XTAL_FORCE_NOGATING = 0x8000
	// Position of CK8M_FORCE_NOGATING field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_FORCE_NOGATING_Pos = 0x10
	// Bit mask of CK8M_FORCE_NOGATING field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_FORCE_NOGATING_Msk = 0x10000
	// Bit CK8M_FORCE_NOGATING.
	RTC_CNTL_RTC_CLK_CONF_CK8M_FORCE_NOGATING = 0x10000
	// Position of CK8M_DFREQ field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_DFREQ_Pos = 0x11
	// Bit mask of CK8M_DFREQ field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_DFREQ_Msk = 0x1fe0000
	// Position of CK8M_FORCE_PD field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_FORCE_PD_Pos = 0x19
	// Bit mask of CK8M_FORCE_PD field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_FORCE_PD_Msk = 0x2000000
	// Bit CK8M_FORCE_PD.
	RTC_CNTL_RTC_CLK_CONF_CK8M_FORCE_PD = 0x2000000
	// Position of CK8M_FORCE_PU field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_FORCE_PU_Pos = 0x1a
	// Bit mask of CK8M_FORCE_PU field.
	RTC_CNTL_RTC_CLK_CONF_CK8M_FORCE_PU_Msk = 0x4000000
	// Bit CK8M_FORCE_PU.
	RTC_CNTL_RTC_CLK_CONF_CK8M_FORCE_PU = 0x4000000
	// Position of XTAL_GLOBAL_FORCE_GATING field.
	RTC_CNTL_RTC_CLK_CONF_XTAL_GLOBAL_FORCE_GATING_Pos = 0x1b
	// Bit mask of XTAL_GLOBAL_FORCE_GATING field.
	RTC_CNTL_RTC_CLK_CONF_XTAL_GLOBAL_FORCE_GATING_Msk = 0x8000000
	// Bit XTAL_GLOBAL_FORCE_GATING.
	RTC_CNTL_RTC_CLK_CONF_XTAL_GLOBAL_FORCE_GATING = 0x8000000
	// Position of XTAL_GLOBAL_FORCE_NOGATING field.
	RTC_CNTL_RTC_CLK_CONF_XTAL_GLOBAL_FORCE_NOGATING_Pos = 0x1c
	// Bit mask of XTAL_GLOBAL_FORCE_NOGATING field.
	RTC_CNTL_RTC_CLK_CONF_XTAL_GLOBAL_FORCE_NOGATING_Msk = 0x10000000
	// Bit XTAL_GLOBAL_FORCE_NOGATING.
	RTC_CNTL_RTC_CLK_CONF_XTAL_GLOBAL_FORCE_NOGATING = 0x10000000
	// Position of FAST_CLK_RTC_SEL field.
	RTC_CNTL_RTC_CLK_CONF_FAST_CLK_RTC_SEL_Pos = 0x1d
	// Bit mask of FAST_CLK_RTC_SEL field.
	RTC_CNTL_RTC_CLK_CONF_FAST_CLK_RTC_SEL_Msk = 0x20000000
	// Bit FAST_CLK_RTC_SEL.
	RTC_CNTL_RTC_CLK_CONF_FAST_CLK_RTC_SEL = 0x20000000
	// Position of ANA_CLK_RTC_SEL field.
	RTC_CNTL_RTC_CLK_CONF_ANA_CLK_RTC_SEL_Pos = 0x1e
	// Bit mask of ANA_CLK_RTC_SEL field.
	RTC_CNTL_RTC_CLK_CONF_ANA_CLK_RTC_SEL_Msk = 0xc0000000

	// RTC_SLOW_CLK_CONF: rtc configure register
	// Position of RTC_ANA_CLK_DIV_VLD field.
	RTC_CNTL_RTC_SLOW_CLK_CONF_RTC_ANA_CLK_DIV_VLD_Pos = 0x16
	// Bit mask of RTC_ANA_CLK_DIV_VLD field.
	RTC_CNTL_RTC_SLOW_CLK_CONF_RTC_ANA_CLK_DIV_VLD_Msk = 0x400000
	// Bit RTC_ANA_CLK_DIV_VLD.
	RTC_CNTL_RTC_SLOW_CLK_CONF_RTC_ANA_CLK_DIV_VLD = 0x400000
	// Position of RTC_ANA_CLK_DIV field.
	RTC_CNTL_RTC_SLOW_CLK_CONF_RTC_ANA_CLK_DIV_Pos = 0x17
	// Bit mask of RTC_ANA_CLK_DIV field.
	RTC_CNTL_RTC_SLOW_CLK_CONF_RTC_ANA_CLK_DIV_Msk = 0x7f800000
	// Position of RTC_SLOW_CLK_NEXT_EDGE field.
	RTC_CNTL_RTC_SLOW_CLK_CONF_RTC_SLOW_CLK_NEXT_EDGE_Pos = 0x1f
	// Bit mask of RTC_SLOW_CLK_NEXT_EDGE field.
	RTC_CNTL_RTC_SLOW_CLK_CONF_RTC_SLOW_CLK_NEXT_EDGE_Msk = 0x80000000
	// Bit RTC_SLOW_CLK_NEXT_EDGE.
	RTC_CNTL_RTC_SLOW_CLK_CONF_RTC_SLOW_CLK_NEXT_EDGE = 0x80000000

	// RTC_SDIO_CONF: rtc configure register
	// Position of SDIO_TIMER_TARGET field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_TIMER_TARGET_Pos = 0x0
	// Bit mask of SDIO_TIMER_TARGET field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_TIMER_TARGET_Msk = 0xff
	// Position of SDIO_DTHDRV field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_DTHDRV_Pos = 0x9
	// Bit mask of SDIO_DTHDRV field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_DTHDRV_Msk = 0x600
	// Position of SDIO_DCAP field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_DCAP_Pos = 0xb
	// Bit mask of SDIO_DCAP field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_DCAP_Msk = 0x1800
	// Position of SDIO_INITI field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_INITI_Pos = 0xd
	// Bit mask of SDIO_INITI field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_INITI_Msk = 0x6000
	// Position of SDIO_EN_INITI field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_EN_INITI_Pos = 0xf
	// Bit mask of SDIO_EN_INITI field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_EN_INITI_Msk = 0x8000
	// Bit SDIO_EN_INITI.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_EN_INITI = 0x8000
	// Position of SDIO_DCURLIM field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_DCURLIM_Pos = 0x10
	// Bit mask of SDIO_DCURLIM field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_DCURLIM_Msk = 0x70000
	// Position of SDIO_MODECURLIM field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_MODECURLIM_Pos = 0x13
	// Bit mask of SDIO_MODECURLIM field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_MODECURLIM_Msk = 0x80000
	// Bit SDIO_MODECURLIM.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_MODECURLIM = 0x80000
	// Position of SDIO_ENCURLIM field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_ENCURLIM_Pos = 0x14
	// Bit mask of SDIO_ENCURLIM field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_ENCURLIM_Msk = 0x100000
	// Bit SDIO_ENCURLIM.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_ENCURLIM = 0x100000
	// Position of SDIO_REG_PD_EN field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_REG_PD_EN_Pos = 0x15
	// Bit mask of SDIO_REG_PD_EN field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_REG_PD_EN_Msk = 0x200000
	// Bit SDIO_REG_PD_EN.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_REG_PD_EN = 0x200000
	// Position of SDIO_FORCE field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_FORCE_Pos = 0x16
	// Bit mask of SDIO_FORCE field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_FORCE_Msk = 0x400000
	// Bit SDIO_FORCE.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_FORCE = 0x400000
	// Position of SDIO_TIEH field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_TIEH_Pos = 0x17
	// Bit mask of SDIO_TIEH field.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_TIEH_Msk = 0x800000
	// Bit SDIO_TIEH.
	RTC_CNTL_RTC_SDIO_CONF_SDIO_TIEH = 0x800000
	// Position of _1P8_READY field.
	RTC_CNTL_RTC_SDIO_CONF__1P8_READY_Pos = 0x18
	// Bit mask of _1P8_READY field.
	RTC_CNTL_RTC_SDIO_CONF__1P8_READY_Msk = 0x1000000
	// Bit _1P8_READY.
	RTC_CNTL_RTC_SDIO_CONF__1P8_READY = 0x1000000
	// Position of DREFL_SDIO field.
	RTC_CNTL_RTC_SDIO_CONF_DREFL_SDIO_Pos = 0x19
	// Bit mask of DREFL_SDIO field.
	RTC_CNTL_RTC_SDIO_CONF_DREFL_SDIO_Msk = 0x6000000
	// Position of DREFM_SDIO field.
	RTC_CNTL_RTC_SDIO_CONF_DREFM_SDIO_Pos = 0x1b
	// Bit mask of DREFM_SDIO field.
	RTC_CNTL_RTC_SDIO_CONF_DREFM_SDIO_Msk = 0x18000000
	// Position of DREFH_SDIO field.
	RTC_CNTL_RTC_SDIO_CONF_DREFH_SDIO_Pos = 0x1d
	// Bit mask of DREFH_SDIO field.
	RTC_CNTL_RTC_SDIO_CONF_DREFH_SDIO_Msk = 0x60000000
	// Position of XPD_SDIO field.
	RTC_CNTL_RTC_SDIO_CONF_XPD_SDIO_Pos = 0x1f
	// Bit mask of XPD_SDIO field.
	RTC_CNTL_RTC_SDIO_CONF_XPD_SDIO_Msk = 0x80000000
	// Bit XPD_SDIO.
	RTC_CNTL_RTC_SDIO_CONF_XPD_SDIO = 0x80000000

	// RTC_BIAS_CONF: rtc configure register
	// Position of DG_VDD_DRV_B_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_DG_VDD_DRV_B_SLP_Pos = 0x0
	// Bit mask of DG_VDD_DRV_B_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_DG_VDD_DRV_B_SLP_Msk = 0xff
	// Position of DG_VDD_DRV_B_SLP_EN field.
	RTC_CNTL_RTC_BIAS_CONF_DG_VDD_DRV_B_SLP_EN_Pos = 0x8
	// Bit mask of DG_VDD_DRV_B_SLP_EN field.
	RTC_CNTL_RTC_BIAS_CONF_DG_VDD_DRV_B_SLP_EN_Msk = 0x100
	// Bit DG_VDD_DRV_B_SLP_EN.
	RTC_CNTL_RTC_BIAS_CONF_DG_VDD_DRV_B_SLP_EN = 0x100
	// Position of BIAS_BUF_IDLE field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_IDLE_Pos = 0xa
	// Bit mask of BIAS_BUF_IDLE field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_IDLE_Msk = 0x400
	// Bit BIAS_BUF_IDLE.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_IDLE = 0x400
	// Position of BIAS_BUF_WAKE field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_WAKE_Pos = 0xb
	// Bit mask of BIAS_BUF_WAKE field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_WAKE_Msk = 0x800
	// Bit BIAS_BUF_WAKE.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_WAKE = 0x800
	// Position of BIAS_BUF_DEEP_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_DEEP_SLP_Pos = 0xc
	// Bit mask of BIAS_BUF_DEEP_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_DEEP_SLP_Msk = 0x1000
	// Bit BIAS_BUF_DEEP_SLP.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_DEEP_SLP = 0x1000
	// Position of BIAS_BUF_MONITOR field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_MONITOR_Pos = 0xd
	// Bit mask of BIAS_BUF_MONITOR field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_MONITOR_Msk = 0x2000
	// Bit BIAS_BUF_MONITOR.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_BUF_MONITOR = 0x2000
	// Position of PD_CUR_DEEP_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_PD_CUR_DEEP_SLP_Pos = 0xe
	// Bit mask of PD_CUR_DEEP_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_PD_CUR_DEEP_SLP_Msk = 0x4000
	// Bit PD_CUR_DEEP_SLP.
	RTC_CNTL_RTC_BIAS_CONF_PD_CUR_DEEP_SLP = 0x4000
	// Position of PD_CUR_MONITOR field.
	RTC_CNTL_RTC_BIAS_CONF_PD_CUR_MONITOR_Pos = 0xf
	// Bit mask of PD_CUR_MONITOR field.
	RTC_CNTL_RTC_BIAS_CONF_PD_CUR_MONITOR_Msk = 0x8000
	// Bit PD_CUR_MONITOR.
	RTC_CNTL_RTC_BIAS_CONF_PD_CUR_MONITOR = 0x8000
	// Position of BIAS_SLEEP_DEEP_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_SLEEP_DEEP_SLP_Pos = 0x10
	// Bit mask of BIAS_SLEEP_DEEP_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_SLEEP_DEEP_SLP_Msk = 0x10000
	// Bit BIAS_SLEEP_DEEP_SLP.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_SLEEP_DEEP_SLP = 0x10000
	// Position of BIAS_SLEEP_MONITOR field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_SLEEP_MONITOR_Pos = 0x11
	// Bit mask of BIAS_SLEEP_MONITOR field.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_SLEEP_MONITOR_Msk = 0x20000
	// Bit BIAS_SLEEP_MONITOR.
	RTC_CNTL_RTC_BIAS_CONF_BIAS_SLEEP_MONITOR = 0x20000
	// Position of DBG_ATTEN_DEEP_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_DBG_ATTEN_DEEP_SLP_Pos = 0x12
	// Bit mask of DBG_ATTEN_DEEP_SLP field.
	RTC_CNTL_RTC_BIAS_CONF_DBG_ATTEN_DEEP_SLP_Msk = 0x3c0000
	// Position of DBG_ATTEN_MONITOR field.
	RTC_CNTL_RTC_BIAS_CONF_DBG_ATTEN_MONITOR_Pos = 0x16
	// Bit mask of DBG_ATTEN_MONITOR field.
	RTC_CNTL_RTC_BIAS_CONF_DBG_ATTEN_MONITOR_Msk = 0x3c00000

	// RTC: rtc configure register
	// Position of DIG_REG_CAL_EN field.
	RTC_CNTL_RTC_DIG_REG_CAL_EN_Pos = 0x7
	// Bit mask of DIG_REG_CAL_EN field.
	RTC_CNTL_RTC_DIG_REG_CAL_EN_Msk = 0x80
	// Bit DIG_REG_CAL_EN.
	RTC_CNTL_RTC_DIG_REG_CAL_EN = 0x80
	// Position of SCK_DCAP field.
	RTC_CNTL_RTC_SCK_DCAP_Pos = 0xe
	// Bit mask of SCK_DCAP field.
	RTC_CNTL_RTC_SCK_DCAP_Msk = 0x3fc000
	// Position of DBOOST_FORCE_PD field.
	RTC_CNTL_RTC_DBOOST_FORCE_PD_Pos = 0x1c
	// Bit mask of DBOOST_FORCE_PD field.
	RTC_CNTL_RTC_DBOOST_FORCE_PD_Msk = 0x10000000
	// Bit DBOOST_FORCE_PD.
	RTC_CNTL_RTC_DBOOST_FORCE_PD = 0x10000000
	// Position of DBOOST_FORCE_PU field.
	RTC_CNTL_RTC_DBOOST_FORCE_PU_Pos = 0x1d
	// Bit mask of DBOOST_FORCE_PU field.
	RTC_CNTL_RTC_DBOOST_FORCE_PU_Msk = 0x20000000
	// Bit DBOOST_FORCE_PU.
	RTC_CNTL_RTC_DBOOST_FORCE_PU = 0x20000000
	// Position of REGULATOR_FORCE_PD field.
	RTC_CNTL_RTC_REGULATOR_FORCE_PD_Pos = 0x1e
	// Bit mask of REGULATOR_FORCE_PD field.
	RTC_CNTL_RTC_REGULATOR_FORCE_PD_Msk = 0x40000000
	// Bit REGULATOR_FORCE_PD.
	RTC_CNTL_RTC_REGULATOR_FORCE_PD = 0x40000000
	// Position of REGULATOR_FORCE_PU field.
	RTC_CNTL_RTC_REGULATOR_FORCE_PU_Pos = 0x1f
	// Bit mask of REGULATOR_FORCE_PU field.
	RTC_CNTL_RTC_REGULATOR_FORCE_PU_Msk = 0x80000000
	// Bit REGULATOR_FORCE_PU.
	RTC_CNTL_RTC_REGULATOR_FORCE_PU = 0x80000000

	// RTC_PWC: rtc configure register
	// Position of RTC_PAD_FORCE_HOLD field.
	RTC_CNTL_RTC_PWC_RTC_PAD_FORCE_HOLD_Pos = 0x15
	// Bit mask of RTC_PAD_FORCE_HOLD field.
	RTC_CNTL_RTC_PWC_RTC_PAD_FORCE_HOLD_Msk = 0x200000
	// Bit RTC_PAD_FORCE_HOLD.
	RTC_CNTL_RTC_PWC_RTC_PAD_FORCE_HOLD = 0x200000

	// DIG_PWC: rtc configure register
	// Position of VDD_SPI_PWR_DRV field.
	RTC_CNTL_DIG_PWC_VDD_SPI_PWR_DRV_Pos = 0x0
	// Bit mask of VDD_SPI_PWR_DRV field.
	RTC_CNTL_DIG_PWC_VDD_SPI_PWR_DRV_Msk = 0x3
	// Position of VDD_SPI_PWR_FORCE field.
	RTC_CNTL_DIG_PWC_VDD_SPI_PWR_FORCE_Pos = 0x2
	// Bit mask of VDD_SPI_PWR_FORCE field.
	RTC_CNTL_DIG_PWC_VDD_SPI_PWR_FORCE_Msk = 0x4
	// Bit VDD_SPI_PWR_FORCE.
	RTC_CNTL_DIG_PWC_VDD_SPI_PWR_FORCE = 0x4
	// Position of LSLP_MEM_FORCE_PD field.
	RTC_CNTL_DIG_PWC_LSLP_MEM_FORCE_PD_Pos = 0x3
	// Bit mask of LSLP_MEM_FORCE_PD field.
	RTC_CNTL_DIG_PWC_LSLP_MEM_FORCE_PD_Msk = 0x8
	// Bit LSLP_MEM_FORCE_PD.
	RTC_CNTL_DIG_PWC_LSLP_MEM_FORCE_PD = 0x8
	// Position of LSLP_MEM_FORCE_PU field.
	RTC_CNTL_DIG_PWC_LSLP_MEM_FORCE_PU_Pos = 0x4
	// Bit mask of LSLP_MEM_FORCE_PU field.
	RTC_CNTL_DIG_PWC_LSLP_MEM_FORCE_PU_Msk = 0x10
	// Bit LSLP_MEM_FORCE_PU.
	RTC_CNTL_DIG_PWC_LSLP_MEM_FORCE_PU = 0x10
	// Position of BT_FORCE_PD field.
	RTC_CNTL_DIG_PWC_BT_FORCE_PD_Pos = 0xb
	// Bit mask of BT_FORCE_PD field.
	RTC_CNTL_DIG_PWC_BT_FORCE_PD_Msk = 0x800
	// Bit BT_FORCE_PD.
	RTC_CNTL_DIG_PWC_BT_FORCE_PD = 0x800
	// Position of BT_FORCE_PU field.
	RTC_CNTL_DIG_PWC_BT_FORCE_PU_Pos = 0xc
	// Bit mask of BT_FORCE_PU field.
	RTC_CNTL_DIG_PWC_BT_FORCE_PU_Msk = 0x1000
	// Bit BT_FORCE_PU.
	RTC_CNTL_DIG_PWC_BT_FORCE_PU = 0x1000
	// Position of DG_PERI_FORCE_PD field.
	RTC_CNTL_DIG_PWC_DG_PERI_FORCE_PD_Pos = 0xd
	// Bit mask of DG_PERI_FORCE_PD field.
	RTC_CNTL_DIG_PWC_DG_PERI_FORCE_PD_Msk = 0x2000
	// Bit DG_PERI_FORCE_PD.
	RTC_CNTL_DIG_PWC_DG_PERI_FORCE_PD = 0x2000
	// Position of DG_PERI_FORCE_PU field.
	RTC_CNTL_DIG_PWC_DG_PERI_FORCE_PU_Pos = 0xe
	// Bit mask of DG_PERI_FORCE_PU field.
	RTC_CNTL_DIG_PWC_DG_PERI_FORCE_PU_Msk = 0x4000
	// Bit DG_PERI_FORCE_PU.
	RTC_CNTL_DIG_PWC_DG_PERI_FORCE_PU = 0x4000
	// Position of RTC_FASTMEM_FORCE_LPD field.
	RTC_CNTL_DIG_PWC_RTC_FASTMEM_FORCE_LPD_Pos = 0xf
	// Bit mask of RTC_FASTMEM_FORCE_LPD field.
	RTC_CNTL_DIG_PWC_RTC_FASTMEM_FORCE_LPD_Msk = 0x8000
	// Bit RTC_FASTMEM_FORCE_LPD.
	RTC_CNTL_DIG_PWC_RTC_FASTMEM_FORCE_LPD = 0x8000
	// Position of RTC_FASTMEM_FORCE_LPU field.
	RTC_CNTL_DIG_PWC_RTC_FASTMEM_FORCE_LPU_Pos = 0x10
	// Bit mask of RTC_FASTMEM_FORCE_LPU field.
	RTC_CNTL_DIG_PWC_RTC_FASTMEM_FORCE_LPU_Msk = 0x10000
	// Bit RTC_FASTMEM_FORCE_LPU.
	RTC_CNTL_DIG_PWC_RTC_FASTMEM_FORCE_LPU = 0x10000
	// Position of WIFI_FORCE_PD field.
	RTC_CNTL_DIG_PWC_WIFI_FORCE_PD_Pos = 0x11
	// Bit mask of WIFI_FORCE_PD field.
	RTC_CNTL_DIG_PWC_WIFI_FORCE_PD_Msk = 0x20000
	// Bit WIFI_FORCE_PD.
	RTC_CNTL_DIG_PWC_WIFI_FORCE_PD = 0x20000
	// Position of WIFI_FORCE_PU field.
	RTC_CNTL_DIG_PWC_WIFI_FORCE_PU_Pos = 0x12
	// Bit mask of WIFI_FORCE_PU field.
	RTC_CNTL_DIG_PWC_WIFI_FORCE_PU_Msk = 0x40000
	// Bit WIFI_FORCE_PU.
	RTC_CNTL_DIG_PWC_WIFI_FORCE_PU = 0x40000
	// Position of DG_WRAP_FORCE_PD field.
	RTC_CNTL_DIG_PWC_DG_WRAP_FORCE_PD_Pos = 0x13
	// Bit mask of DG_WRAP_FORCE_PD field.
	RTC_CNTL_DIG_PWC_DG_WRAP_FORCE_PD_Msk = 0x80000
	// Bit DG_WRAP_FORCE_PD.
	RTC_CNTL_DIG_PWC_DG_WRAP_FORCE_PD = 0x80000
	// Position of DG_WRAP_FORCE_PU field.
	RTC_CNTL_DIG_PWC_DG_WRAP_FORCE_PU_Pos = 0x14
	// Bit mask of DG_WRAP_FORCE_PU field.
	RTC_CNTL_DIG_PWC_DG_WRAP_FORCE_PU_Msk = 0x100000
	// Bit DG_WRAP_FORCE_PU.
	RTC_CNTL_DIG_PWC_DG_WRAP_FORCE_PU = 0x100000
	// Position of CPU_TOP_FORCE_PD field.
	RTC_CNTL_DIG_PWC_CPU_TOP_FORCE_PD_Pos = 0x15
	// Bit mask of CPU_TOP_FORCE_PD field.
	RTC_CNTL_DIG_PWC_CPU_TOP_FORCE_PD_Msk = 0x200000
	// Bit CPU_TOP_FORCE_PD.
	RTC_CNTL_DIG_PWC_CPU_TOP_FORCE_PD = 0x200000
	// Position of CPU_TOP_FORCE_PU field.
	RTC_CNTL_DIG_PWC_CPU_TOP_FORCE_PU_Pos = 0x16
	// Bit mask of CPU_TOP_FORCE_PU field.
	RTC_CNTL_DIG_PWC_CPU_TOP_FORCE_PU_Msk = 0x400000
	// Bit CPU_TOP_FORCE_PU.
	RTC_CNTL_DIG_PWC_CPU_TOP_FORCE_PU = 0x400000
	// Position of BT_PD_EN field.
	RTC_CNTL_DIG_PWC_BT_PD_EN_Pos = 0x1b
	// Bit mask of BT_PD_EN field.
	RTC_CNTL_DIG_PWC_BT_PD_EN_Msk = 0x8000000
	// Bit BT_PD_EN.
	RTC_CNTL_DIG_PWC_BT_PD_EN = 0x8000000
	// Position of DG_PERI_PD_EN field.
	RTC_CNTL_DIG_PWC_DG_PERI_PD_EN_Pos = 0x1c
	// Bit mask of DG_PERI_PD_EN field.
	RTC_CNTL_DIG_PWC_DG_PERI_PD_EN_Msk = 0x10000000
	// Bit DG_PERI_PD_EN.
	RTC_CNTL_DIG_PWC_DG_PERI_PD_EN = 0x10000000
	// Position of CPU_TOP_PD_EN field.
	RTC_CNTL_DIG_PWC_CPU_TOP_PD_EN_Pos = 0x1d
	// Bit mask of CPU_TOP_PD_EN field.
	RTC_CNTL_DIG_PWC_CPU_TOP_PD_EN_Msk = 0x20000000
	// Bit CPU_TOP_PD_EN.
	RTC_CNTL_DIG_PWC_CPU_TOP_PD_EN = 0x20000000
	// Position of WIFI_PD_EN field.
	RTC_CNTL_DIG_PWC_WIFI_PD_EN_Pos = 0x1e
	// Bit mask of WIFI_PD_EN field.
	RTC_CNTL_DIG_PWC_WIFI_PD_EN_Msk = 0x40000000
	// Bit WIFI_PD_EN.
	RTC_CNTL_DIG_PWC_WIFI_PD_EN = 0x40000000
	// Position of DG_WRAP_PD_EN field.
	RTC_CNTL_DIG_PWC_DG_WRAP_PD_EN_Pos = 0x1f
	// Bit mask of DG_WRAP_PD_EN field.
	RTC_CNTL_DIG_PWC_DG_WRAP_PD_EN_Msk = 0x80000000
	// Bit DG_WRAP_PD_EN.
	RTC_CNTL_DIG_PWC_DG_WRAP_PD_EN = 0x80000000

	// DIG_ISO: rtc configure register
	// Position of FORCE_OFF field.
	RTC_CNTL_DIG_ISO_FORCE_OFF_Pos = 0x7
	// Bit mask of FORCE_OFF field.
	RTC_CNTL_DIG_ISO_FORCE_OFF_Msk = 0x80
	// Bit FORCE_OFF.
	RTC_CNTL_DIG_ISO_FORCE_OFF = 0x80
	// Position of FORCE_ON field.
	RTC_CNTL_DIG_ISO_FORCE_ON_Pos = 0x8
	// Bit mask of FORCE_ON field.
	RTC_CNTL_DIG_ISO_FORCE_ON_Msk = 0x100
	// Bit FORCE_ON.
	RTC_CNTL_DIG_ISO_FORCE_ON = 0x100
	// Position of DG_PAD_AUTOHOLD field.
	RTC_CNTL_DIG_ISO_DG_PAD_AUTOHOLD_Pos = 0x9
	// Bit mask of DG_PAD_AUTOHOLD field.
	RTC_CNTL_DIG_ISO_DG_PAD_AUTOHOLD_Msk = 0x200
	// Bit DG_PAD_AUTOHOLD.
	RTC_CNTL_DIG_ISO_DG_PAD_AUTOHOLD = 0x200
	// Position of CLR_DG_PAD_AUTOHOLD field.
	RTC_CNTL_DIG_ISO_CLR_DG_PAD_AUTOHOLD_Pos = 0xa
	// Bit mask of CLR_DG_PAD_AUTOHOLD field.
	RTC_CNTL_DIG_ISO_CLR_DG_PAD_AUTOHOLD_Msk = 0x400
	// Bit CLR_DG_PAD_AUTOHOLD.
	RTC_CNTL_DIG_ISO_CLR_DG_PAD_AUTOHOLD = 0x400
	// Position of DG_PAD_AUTOHOLD_EN field.
	RTC_CNTL_DIG_ISO_DG_PAD_AUTOHOLD_EN_Pos = 0xb
	// Bit mask of DG_PAD_AUTOHOLD_EN field.
	RTC_CNTL_DIG_ISO_DG_PAD_AUTOHOLD_EN_Msk = 0x800
	// Bit DG_PAD_AUTOHOLD_EN.
	RTC_CNTL_DIG_ISO_DG_PAD_AUTOHOLD_EN = 0x800
	// Position of DG_PAD_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_NOISO_Pos = 0xc
	// Bit mask of DG_PAD_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_NOISO_Msk = 0x1000
	// Bit DG_PAD_FORCE_NOISO.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_NOISO = 0x1000
	// Position of DG_PAD_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_ISO_Pos = 0xd
	// Bit mask of DG_PAD_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_ISO_Msk = 0x2000
	// Bit DG_PAD_FORCE_ISO.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_ISO = 0x2000
	// Position of DG_PAD_FORCE_UNHOLD field.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_UNHOLD_Pos = 0xe
	// Bit mask of DG_PAD_FORCE_UNHOLD field.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_UNHOLD_Msk = 0x4000
	// Bit DG_PAD_FORCE_UNHOLD.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_UNHOLD = 0x4000
	// Position of DG_PAD_FORCE_HOLD field.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_HOLD_Pos = 0xf
	// Bit mask of DG_PAD_FORCE_HOLD field.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_HOLD_Msk = 0x8000
	// Bit DG_PAD_FORCE_HOLD.
	RTC_CNTL_DIG_ISO_DG_PAD_FORCE_HOLD = 0x8000
	// Position of BT_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_BT_FORCE_ISO_Pos = 0x16
	// Bit mask of BT_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_BT_FORCE_ISO_Msk = 0x400000
	// Bit BT_FORCE_ISO.
	RTC_CNTL_DIG_ISO_BT_FORCE_ISO = 0x400000
	// Position of BT_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_BT_FORCE_NOISO_Pos = 0x17
	// Bit mask of BT_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_BT_FORCE_NOISO_Msk = 0x800000
	// Bit BT_FORCE_NOISO.
	RTC_CNTL_DIG_ISO_BT_FORCE_NOISO = 0x800000
	// Position of DG_PERI_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_DG_PERI_FORCE_ISO_Pos = 0x18
	// Bit mask of DG_PERI_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_DG_PERI_FORCE_ISO_Msk = 0x1000000
	// Bit DG_PERI_FORCE_ISO.
	RTC_CNTL_DIG_ISO_DG_PERI_FORCE_ISO = 0x1000000
	// Position of DG_PERI_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_DG_PERI_FORCE_NOISO_Pos = 0x19
	// Bit mask of DG_PERI_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_DG_PERI_FORCE_NOISO_Msk = 0x2000000
	// Bit DG_PERI_FORCE_NOISO.
	RTC_CNTL_DIG_ISO_DG_PERI_FORCE_NOISO = 0x2000000
	// Position of CPU_TOP_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_CPU_TOP_FORCE_ISO_Pos = 0x1a
	// Bit mask of CPU_TOP_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_CPU_TOP_FORCE_ISO_Msk = 0x4000000
	// Bit CPU_TOP_FORCE_ISO.
	RTC_CNTL_DIG_ISO_CPU_TOP_FORCE_ISO = 0x4000000
	// Position of CPU_TOP_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_CPU_TOP_FORCE_NOISO_Pos = 0x1b
	// Bit mask of CPU_TOP_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_CPU_TOP_FORCE_NOISO_Msk = 0x8000000
	// Bit CPU_TOP_FORCE_NOISO.
	RTC_CNTL_DIG_ISO_CPU_TOP_FORCE_NOISO = 0x8000000
	// Position of WIFI_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_WIFI_FORCE_ISO_Pos = 0x1c
	// Bit mask of WIFI_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_WIFI_FORCE_ISO_Msk = 0x10000000
	// Bit WIFI_FORCE_ISO.
	RTC_CNTL_DIG_ISO_WIFI_FORCE_ISO = 0x10000000
	// Position of WIFI_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_WIFI_FORCE_NOISO_Pos = 0x1d
	// Bit mask of WIFI_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_WIFI_FORCE_NOISO_Msk = 0x20000000
	// Bit WIFI_FORCE_NOISO.
	RTC_CNTL_DIG_ISO_WIFI_FORCE_NOISO = 0x20000000
	// Position of DG_WRAP_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_DG_WRAP_FORCE_ISO_Pos = 0x1e
	// Bit mask of DG_WRAP_FORCE_ISO field.
	RTC_CNTL_DIG_ISO_DG_WRAP_FORCE_ISO_Msk = 0x40000000
	// Bit DG_WRAP_FORCE_ISO.
	RTC_CNTL_DIG_ISO_DG_WRAP_FORCE_ISO = 0x40000000
	// Position of DG_WRAP_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_DG_WRAP_FORCE_NOISO_Pos = 0x1f
	// Bit mask of DG_WRAP_FORCE_NOISO field.
	RTC_CNTL_DIG_ISO_DG_WRAP_FORCE_NOISO_Msk = 0x80000000
	// Bit DG_WRAP_FORCE_NOISO.
	RTC_CNTL_DIG_ISO_DG_WRAP_FORCE_NOISO = 0x80000000

	// RTC_WDTCONFIG0: rtc configure register
	// Position of WDT_CHIP_RESET_WIDTH field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_CHIP_RESET_WIDTH_Pos = 0x0
	// Bit mask of WDT_CHIP_RESET_WIDTH field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_CHIP_RESET_WIDTH_Msk = 0xff
	// Position of WDT_CHIP_RESET_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_CHIP_RESET_EN_Pos = 0x8
	// Bit mask of WDT_CHIP_RESET_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_CHIP_RESET_EN_Msk = 0x100
	// Bit WDT_CHIP_RESET_EN.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_CHIP_RESET_EN = 0x100
	// Position of WDT_PAUSE_IN_SLP field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_PAUSE_IN_SLP_Pos = 0x9
	// Bit mask of WDT_PAUSE_IN_SLP field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_PAUSE_IN_SLP_Msk = 0x200
	// Bit WDT_PAUSE_IN_SLP.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_PAUSE_IN_SLP = 0x200
	// Position of WDT_APPCPU_RESET_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_APPCPU_RESET_EN_Pos = 0xa
	// Bit mask of WDT_APPCPU_RESET_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_APPCPU_RESET_EN_Msk = 0x400
	// Bit WDT_APPCPU_RESET_EN.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_APPCPU_RESET_EN = 0x400
	// Position of WDT_PROCPU_RESET_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_PROCPU_RESET_EN_Pos = 0xb
	// Bit mask of WDT_PROCPU_RESET_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_PROCPU_RESET_EN_Msk = 0x800
	// Bit WDT_PROCPU_RESET_EN.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_PROCPU_RESET_EN = 0x800
	// Position of WDT_FLASHBOOT_MOD_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_FLASHBOOT_MOD_EN_Pos = 0xc
	// Bit mask of WDT_FLASHBOOT_MOD_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_FLASHBOOT_MOD_EN_Msk = 0x1000
	// Bit WDT_FLASHBOOT_MOD_EN.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_FLASHBOOT_MOD_EN = 0x1000
	// Position of WDT_SYS_RESET_LENGTH field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_SYS_RESET_LENGTH_Pos = 0xd
	// Bit mask of WDT_SYS_RESET_LENGTH field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_SYS_RESET_LENGTH_Msk = 0xe000
	// Position of WDT_CPU_RESET_LENGTH field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_CPU_RESET_LENGTH_Pos = 0x10
	// Bit mask of WDT_CPU_RESET_LENGTH field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_CPU_RESET_LENGTH_Msk = 0x70000
	// Position of WDT_STG3 field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_STG3_Pos = 0x13
	// Bit mask of WDT_STG3 field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_STG3_Msk = 0x380000
	// Position of WDT_STG2 field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_STG2_Pos = 0x16
	// Bit mask of WDT_STG2 field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_STG2_Msk = 0x1c00000
	// Position of WDT_STG1 field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_STG1_Pos = 0x19
	// Bit mask of WDT_STG1 field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_STG1_Msk = 0xe000000
	// Position of WDT_STG0 field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_STG0_Pos = 0x1c
	// Bit mask of WDT_STG0 field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_STG0_Msk = 0x70000000
	// Position of WDT_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_EN_Pos = 0x1f
	// Bit mask of WDT_EN field.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_EN_Msk = 0x80000000
	// Bit WDT_EN.
	RTC_CNTL_RTC_WDTCONFIG0_WDT_EN = 0x80000000

	// RTC_WDTCONFIG1: rtc configure register
	// Position of WDT_STG0_HOLD field.
	RTC_CNTL_RTC_WDTCONFIG1_WDT_STG0_HOLD_Pos = 0x0
	// Bit mask of WDT_STG0_HOLD field.
	RTC_CNTL_RTC_WDTCONFIG1_WDT_STG0_HOLD_Msk = 0xffffffff

	// RTC_WDTCONFIG2: rtc configure register
	// Position of WDT_STG1_HOLD field.
	RTC_CNTL_RTC_WDTCONFIG2_WDT_STG1_HOLD_Pos = 0x0
	// Bit mask of WDT_STG1_HOLD field.
	RTC_CNTL_RTC_WDTCONFIG2_WDT_STG1_HOLD_Msk = 0xffffffff

	// RTC_WDTCONFIG3: rtc configure register
	// Position of WDT_STG2_HOLD field.
	RTC_CNTL_RTC_WDTCONFIG3_WDT_STG2_HOLD_Pos = 0x0
	// Bit mask of WDT_STG2_HOLD field.
	RTC_CNTL_RTC_WDTCONFIG3_WDT_STG2_HOLD_Msk = 0xffffffff

	// RTC_WDTCONFIG4: rtc configure register
	// Position of WDT_STG3_HOLD field.
	RTC_CNTL_RTC_WDTCONFIG4_WDT_STG3_HOLD_Pos = 0x0
	// Bit mask of WDT_STG3_HOLD field.
	RTC_CNTL_RTC_WDTCONFIG4_WDT_STG3_HOLD_Msk = 0xffffffff

	// RTC_WDTFEED: rtc configure register
	// Position of RTC_WDT_FEED field.
	RTC_CNTL_RTC_WDTFEED_RTC_WDT_FEED_Pos = 0x1f
	// Bit mask of RTC_WDT_FEED field.
	RTC_CNTL_RTC_WDTFEED_RTC_WDT_FEED_Msk = 0x80000000
	// Bit RTC_WDT_FEED.
	RTC_CNTL_RTC_WDTFEED_RTC_WDT_FEED = 0x80000000

	// RTC_WDTWPROTECT: rtc configure register
	// Position of WDT_WKEY field.
	RTC_CNTL_RTC_WDTWPROTECT_WDT_WKEY_Pos = 0x0
	// Bit mask of WDT_WKEY field.
	RTC_CNTL_RTC_WDTWPROTECT_WDT_WKEY_Msk = 0xffffffff

	// RTC_SWD_CONF: rtc configure register
	// Position of SWD_RESET_FLAG field.
	RTC_CNTL_RTC_SWD_CONF_SWD_RESET_FLAG_Pos = 0x0
	// Bit mask of SWD_RESET_FLAG field.
	RTC_CNTL_RTC_SWD_CONF_SWD_RESET_FLAG_Msk = 0x1
	// Bit SWD_RESET_FLAG.
	RTC_CNTL_RTC_SWD_CONF_SWD_RESET_FLAG = 0x1
	// Position of SWD_FEED_INT field.
	RTC_CNTL_RTC_SWD_CONF_SWD_FEED_INT_Pos = 0x1
	// Bit mask of SWD_FEED_INT field.
	RTC_CNTL_RTC_SWD_CONF_SWD_FEED_INT_Msk = 0x2
	// Bit SWD_FEED_INT.
	RTC_CNTL_RTC_SWD_CONF_SWD_FEED_INT = 0x2
	// Position of SWD_BYPASS_RST field.
	RTC_CNTL_RTC_SWD_CONF_SWD_BYPASS_RST_Pos = 0x11
	// Bit mask of SWD_BYPASS_RST field.
	RTC_CNTL_RTC_SWD_CONF_SWD_BYPASS_RST_Msk = 0x20000
	// Bit SWD_BYPASS_RST.
	RTC_CNTL_RTC_SWD_CONF_SWD_BYPASS_RST = 0x20000
	// Position of SWD_SIGNAL_WIDTH field.
	RTC_CNTL_RTC_SWD_CONF_SWD_SIGNAL_WIDTH_Pos = 0x12
	// Bit mask of SWD_SIGNAL_WIDTH field.
	RTC_CNTL_RTC_SWD_CONF_SWD_SIGNAL_WIDTH_Msk = 0xffc0000
	// Position of SWD_RST_FLAG_CLR field.
	RTC_CNTL_RTC_SWD_CONF_SWD_RST_FLAG_CLR_Pos = 0x1c
	// Bit mask of SWD_RST_FLAG_CLR field.
	RTC_CNTL_RTC_SWD_CONF_SWD_RST_FLAG_CLR_Msk = 0x10000000
	// Bit SWD_RST_FLAG_CLR.
	RTC_CNTL_RTC_SWD_CONF_SWD_RST_FLAG_CLR = 0x10000000
	// Position of SWD_FEED field.
	RTC_CNTL_RTC_SWD_CONF_SWD_FEED_Pos = 0x1d
	// Bit mask of SWD_FEED field.
	RTC_CNTL_RTC_SWD_CONF_SWD_FEED_Msk = 0x20000000
	// Bit SWD_FEED.
	RTC_CNTL_RTC_SWD_CONF_SWD_FEED = 0x20000000
	// Position of SWD_DISABLE field.
	RTC_CNTL_RTC_SWD_CONF_SWD_DISABLE_Pos = 0x1e
	// Bit mask of SWD_DISABLE field.
	RTC_CNTL_RTC_SWD_CONF_SWD_DISABLE_Msk = 0x40000000
	// Bit SWD_DISABLE.
	RTC_CNTL_RTC_SWD_CONF_SWD_DISABLE = 0x40000000
	// Position of SWD_AUTO_FEED_EN field.
	RTC_CNTL_RTC_SWD_CONF_SWD_AUTO_FEED_EN_Pos = 0x1f
	// Bit mask of SWD_AUTO_FEED_EN field.
	RTC_CNTL_RTC_SWD_CONF_SWD_AUTO_FEED_EN_Msk = 0x80000000
	// Bit SWD_AUTO_FEED_EN.
	RTC_CNTL_RTC_SWD_CONF_SWD_AUTO_FEED_EN = 0x80000000

	// RTC_SWD_WPROTECT: rtc configure register
	// Position of SWD_WKEY field.
	RTC_CNTL_RTC_SWD_WPROTECT_SWD_WKEY_Pos = 0x0
	// Bit mask of SWD_WKEY field.
	RTC_CNTL_RTC_SWD_WPROTECT_SWD_WKEY_Msk = 0xffffffff

	// RTC_SW_CPU_STALL: rtc configure register
	// Position of SW_STALL_APPCPU_C1 field.
	RTC_CNTL_RTC_SW_CPU_STALL_SW_STALL_APPCPU_C1_Pos = 0x14
	// Bit mask of SW_STALL_APPCPU_C1 field.
	RTC_CNTL_RTC_SW_CPU_STALL_SW_STALL_APPCPU_C1_Msk = 0x3f00000
	// Position of SW_STALL_PROCPU_C1 field.
	RTC_CNTL_RTC_SW_CPU_STALL_SW_STALL_PROCPU_C1_Pos = 0x1a
	// Bit mask of SW_STALL_PROCPU_C1 field.
	RTC_CNTL_RTC_SW_CPU_STALL_SW_STALL_PROCPU_C1_Msk = 0xfc000000

	// RTC_STORE4: rtc configure register
	// Position of RTC_SCRATCH4 field.
	RTC_CNTL_RTC_STORE4_RTC_SCRATCH4_Pos = 0x0
	// Bit mask of RTC_SCRATCH4 field.
	RTC_CNTL_RTC_STORE4_RTC_SCRATCH4_Msk = 0xffffffff

	// RTC_STORE5: rtc configure register
	// Position of RTC_SCRATCH5 field.
	RTC_CNTL_RTC_STORE5_RTC_SCRATCH5_Pos = 0x0
	// Bit mask of RTC_SCRATCH5 field.
	RTC_CNTL_RTC_STORE5_RTC_SCRATCH5_Msk = 0xffffffff

	// RTC_STORE6: rtc configure register
	// Position of RTC_SCRATCH6 field.
	RTC_CNTL_RTC_STORE6_RTC_SCRATCH6_Pos = 0x0
	// Bit mask of RTC_SCRATCH6 field.
	RTC_CNTL_RTC_STORE6_RTC_SCRATCH6_Msk = 0xffffffff

	// RTC_STORE7: rtc configure register
	// Position of RTC_SCRATCH7 field.
	RTC_CNTL_RTC_STORE7_RTC_SCRATCH7_Pos = 0x0
	// Bit mask of RTC_SCRATCH7 field.
	RTC_CNTL_RTC_STORE7_RTC_SCRATCH7_Msk = 0xffffffff

	// RTC_LOW_POWER_ST: rtc configure register
	// Position of XPD_ROM0 field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_ROM0_Pos = 0x0
	// Bit mask of XPD_ROM0 field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_ROM0_Msk = 0x1
	// Bit XPD_ROM0.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_ROM0 = 0x1
	// Position of XPD_DIG_DCDC field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_DIG_DCDC_Pos = 0x2
	// Bit mask of XPD_DIG_DCDC field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_DIG_DCDC_Msk = 0x4
	// Bit XPD_DIG_DCDC.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_DIG_DCDC = 0x4
	// Position of RTC_PERI_ISO field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_PERI_ISO_Pos = 0x3
	// Bit mask of RTC_PERI_ISO field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_PERI_ISO_Msk = 0x8
	// Bit RTC_PERI_ISO.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_PERI_ISO = 0x8
	// Position of XPD_RTC_PERI field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_RTC_PERI_Pos = 0x4
	// Bit mask of XPD_RTC_PERI field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_RTC_PERI_Msk = 0x10
	// Bit XPD_RTC_PERI.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_RTC_PERI = 0x10
	// Position of WIFI_ISO field.
	RTC_CNTL_RTC_LOW_POWER_ST_WIFI_ISO_Pos = 0x5
	// Bit mask of WIFI_ISO field.
	RTC_CNTL_RTC_LOW_POWER_ST_WIFI_ISO_Msk = 0x20
	// Bit WIFI_ISO.
	RTC_CNTL_RTC_LOW_POWER_ST_WIFI_ISO = 0x20
	// Position of XPD_WIFI field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_WIFI_Pos = 0x6
	// Bit mask of XPD_WIFI field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_WIFI_Msk = 0x40
	// Bit XPD_WIFI.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_WIFI = 0x40
	// Position of DIG_ISO field.
	RTC_CNTL_RTC_LOW_POWER_ST_DIG_ISO_Pos = 0x7
	// Bit mask of DIG_ISO field.
	RTC_CNTL_RTC_LOW_POWER_ST_DIG_ISO_Msk = 0x80
	// Bit DIG_ISO.
	RTC_CNTL_RTC_LOW_POWER_ST_DIG_ISO = 0x80
	// Position of XPD_DIG field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_DIG_Pos = 0x8
	// Bit mask of XPD_DIG field.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_DIG_Msk = 0x100
	// Bit XPD_DIG.
	RTC_CNTL_RTC_LOW_POWER_ST_XPD_DIG = 0x100
	// Position of RTC_TOUCH_STATE_START field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_START_Pos = 0x9
	// Bit mask of RTC_TOUCH_STATE_START field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_START_Msk = 0x200
	// Bit RTC_TOUCH_STATE_START.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_START = 0x200
	// Position of RTC_TOUCH_STATE_SWITCH field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_SWITCH_Pos = 0xa
	// Bit mask of RTC_TOUCH_STATE_SWITCH field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_SWITCH_Msk = 0x400
	// Bit RTC_TOUCH_STATE_SWITCH.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_SWITCH = 0x400
	// Position of RTC_TOUCH_STATE_SLP field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_SLP_Pos = 0xb
	// Bit mask of RTC_TOUCH_STATE_SLP field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_SLP_Msk = 0x800
	// Bit RTC_TOUCH_STATE_SLP.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_SLP = 0x800
	// Position of RTC_TOUCH_STATE_DONE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_DONE_Pos = 0xc
	// Bit mask of RTC_TOUCH_STATE_DONE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_DONE_Msk = 0x1000
	// Bit RTC_TOUCH_STATE_DONE.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_TOUCH_STATE_DONE = 0x1000
	// Position of RTC_COCPU_STATE_START field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_START_Pos = 0xd
	// Bit mask of RTC_COCPU_STATE_START field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_START_Msk = 0x2000
	// Bit RTC_COCPU_STATE_START.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_START = 0x2000
	// Position of RTC_COCPU_STATE_SWITCH field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_SWITCH_Pos = 0xe
	// Bit mask of RTC_COCPU_STATE_SWITCH field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_SWITCH_Msk = 0x4000
	// Bit RTC_COCPU_STATE_SWITCH.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_SWITCH = 0x4000
	// Position of RTC_COCPU_STATE_SLP field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_SLP_Pos = 0xf
	// Bit mask of RTC_COCPU_STATE_SLP field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_SLP_Msk = 0x8000
	// Bit RTC_COCPU_STATE_SLP.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_SLP = 0x8000
	// Position of RTC_COCPU_STATE_DONE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_DONE_Pos = 0x10
	// Bit mask of RTC_COCPU_STATE_DONE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_DONE_Msk = 0x10000
	// Bit RTC_COCPU_STATE_DONE.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_COCPU_STATE_DONE = 0x10000
	// Position of RTC_MAIN_STATE_XTAL_ISO field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_XTAL_ISO_Pos = 0x11
	// Bit mask of RTC_MAIN_STATE_XTAL_ISO field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_XTAL_ISO_Msk = 0x20000
	// Bit RTC_MAIN_STATE_XTAL_ISO.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_XTAL_ISO = 0x20000
	// Position of RTC_MAIN_STATE_PLL_ON field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_PLL_ON_Pos = 0x12
	// Bit mask of RTC_MAIN_STATE_PLL_ON field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_PLL_ON_Msk = 0x40000
	// Bit RTC_MAIN_STATE_PLL_ON.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_PLL_ON = 0x40000
	// Position of RTC_RDY_FOR_WAKEUP field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_RDY_FOR_WAKEUP_Pos = 0x13
	// Bit mask of RTC_RDY_FOR_WAKEUP field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_RDY_FOR_WAKEUP_Msk = 0x80000
	// Bit RTC_RDY_FOR_WAKEUP.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_RDY_FOR_WAKEUP = 0x80000
	// Position of RTC_MAIN_STATE_WAIT_END field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_WAIT_END_Pos = 0x14
	// Bit mask of RTC_MAIN_STATE_WAIT_END field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_WAIT_END_Msk = 0x100000
	// Bit RTC_MAIN_STATE_WAIT_END.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_WAIT_END = 0x100000
	// Position of RTC_IN_WAKEUP_STATE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_IN_WAKEUP_STATE_Pos = 0x15
	// Bit mask of RTC_IN_WAKEUP_STATE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_IN_WAKEUP_STATE_Msk = 0x200000
	// Bit RTC_IN_WAKEUP_STATE.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_IN_WAKEUP_STATE = 0x200000
	// Position of RTC_IN_LOW_POWER_STATE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_IN_LOW_POWER_STATE_Pos = 0x16
	// Bit mask of RTC_IN_LOW_POWER_STATE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_IN_LOW_POWER_STATE_Msk = 0x400000
	// Bit RTC_IN_LOW_POWER_STATE.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_IN_LOW_POWER_STATE = 0x400000
	// Position of RTC_MAIN_STATE_IN_WAIT_8M field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_WAIT_8M_Pos = 0x17
	// Bit mask of RTC_MAIN_STATE_IN_WAIT_8M field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_WAIT_8M_Msk = 0x800000
	// Bit RTC_MAIN_STATE_IN_WAIT_8M.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_WAIT_8M = 0x800000
	// Position of RTC_MAIN_STATE_IN_WAIT_PLL field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_WAIT_PLL_Pos = 0x18
	// Bit mask of RTC_MAIN_STATE_IN_WAIT_PLL field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_WAIT_PLL_Msk = 0x1000000
	// Bit RTC_MAIN_STATE_IN_WAIT_PLL.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_WAIT_PLL = 0x1000000
	// Position of RTC_MAIN_STATE_IN_WAIT_XTL field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_WAIT_XTL_Pos = 0x19
	// Bit mask of RTC_MAIN_STATE_IN_WAIT_XTL field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_WAIT_XTL_Msk = 0x2000000
	// Bit RTC_MAIN_STATE_IN_WAIT_XTL.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_WAIT_XTL = 0x2000000
	// Position of RTC_MAIN_STATE_IN_SLP field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_SLP_Pos = 0x1a
	// Bit mask of RTC_MAIN_STATE_IN_SLP field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_SLP_Msk = 0x4000000
	// Bit RTC_MAIN_STATE_IN_SLP.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_SLP = 0x4000000
	// Position of RTC_MAIN_STATE_IN_IDLE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_IDLE_Pos = 0x1b
	// Bit mask of RTC_MAIN_STATE_IN_IDLE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_IDLE_Msk = 0x8000000
	// Bit RTC_MAIN_STATE_IN_IDLE.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_IN_IDLE = 0x8000000
	// Position of RTC_MAIN_STATE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_Pos = 0x1c
	// Bit mask of RTC_MAIN_STATE field.
	RTC_CNTL_RTC_LOW_POWER_ST_RTC_MAIN_STATE_Msk = 0xf0000000

	// RTC_DIAG0: rtc configure register
	// Position of RTC_LOW_POWER_DIAG1 field.
	RTC_CNTL_RTC_DIAG0_RTC_LOW_POWER_DIAG1_Pos = 0x0
	// Bit mask of RTC_LOW_POWER_DIAG1 field.
	RTC_CNTL_RTC_DIAG0_RTC_LOW_POWER_DIAG1_Msk = 0xffffffff

	// RTC_PAD_HOLD: rtc configure register
	// Position of RTC_GPIO_PIN0_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN0_HOLD_Pos = 0x0
	// Bit mask of RTC_GPIO_PIN0_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN0_HOLD_Msk = 0x1
	// Bit RTC_GPIO_PIN0_HOLD.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN0_HOLD = 0x1
	// Position of RTC_GPIO_PIN1_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN1_HOLD_Pos = 0x1
	// Bit mask of RTC_GPIO_PIN1_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN1_HOLD_Msk = 0x2
	// Bit RTC_GPIO_PIN1_HOLD.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN1_HOLD = 0x2
	// Position of RTC_GPIO_PIN2_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN2_HOLD_Pos = 0x2
	// Bit mask of RTC_GPIO_PIN2_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN2_HOLD_Msk = 0x4
	// Bit RTC_GPIO_PIN2_HOLD.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN2_HOLD = 0x4
	// Position of RTC_GPIO_PIN3_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN3_HOLD_Pos = 0x3
	// Bit mask of RTC_GPIO_PIN3_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN3_HOLD_Msk = 0x8
	// Bit RTC_GPIO_PIN3_HOLD.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN3_HOLD = 0x8
	// Position of RTC_GPIO_PIN4_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN4_HOLD_Pos = 0x4
	// Bit mask of RTC_GPIO_PIN4_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN4_HOLD_Msk = 0x10
	// Bit RTC_GPIO_PIN4_HOLD.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN4_HOLD = 0x10
	// Position of RTC_GPIO_PIN5_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN5_HOLD_Pos = 0x5
	// Bit mask of RTC_GPIO_PIN5_HOLD field.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN5_HOLD_Msk = 0x20
	// Bit RTC_GPIO_PIN5_HOLD.
	RTC_CNTL_RTC_PAD_HOLD_RTC_GPIO_PIN5_HOLD = 0x20

	// DIG_PAD_HOLD: rtc configure register
	// Position of DIG_PAD_HOLD field.
	RTC_CNTL_DIG_PAD_HOLD_DIG_PAD_HOLD_Pos = 0x0
	// Bit mask of DIG_PAD_HOLD field.
	RTC_CNTL_DIG_PAD_HOLD_DIG_PAD_HOLD_Msk = 0xffffffff

	// RTC_BROWN_OUT: rtc configure register
	// Position of BROWN_OUT_INT_WAIT field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_INT_WAIT_Pos = 0x4
	// Bit mask of BROWN_OUT_INT_WAIT field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_INT_WAIT_Msk = 0x3ff0
	// Position of BROWN_OUT_CLOSE_FLASH_ENA field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_CLOSE_FLASH_ENA_Pos = 0xe
	// Bit mask of BROWN_OUT_CLOSE_FLASH_ENA field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_CLOSE_FLASH_ENA_Msk = 0x4000
	// Bit BROWN_OUT_CLOSE_FLASH_ENA.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_CLOSE_FLASH_ENA = 0x4000
	// Position of BROWN_OUT_PD_RF_ENA field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_PD_RF_ENA_Pos = 0xf
	// Bit mask of BROWN_OUT_PD_RF_ENA field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_PD_RF_ENA_Msk = 0x8000
	// Bit BROWN_OUT_PD_RF_ENA.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_PD_RF_ENA = 0x8000
	// Position of BROWN_OUT_RST_WAIT field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_RST_WAIT_Pos = 0x10
	// Bit mask of BROWN_OUT_RST_WAIT field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_RST_WAIT_Msk = 0x3ff0000
	// Position of BROWN_OUT_RST_ENA field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_RST_ENA_Pos = 0x1a
	// Bit mask of BROWN_OUT_RST_ENA field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_RST_ENA_Msk = 0x4000000
	// Bit BROWN_OUT_RST_ENA.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_RST_ENA = 0x4000000
	// Position of BROWN_OUT_RST_SEL field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_RST_SEL_Pos = 0x1b
	// Bit mask of BROWN_OUT_RST_SEL field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_RST_SEL_Msk = 0x8000000
	// Bit BROWN_OUT_RST_SEL.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_RST_SEL = 0x8000000
	// Position of BROWN_OUT_ANA_RST_EN field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_ANA_RST_EN_Pos = 0x1c
	// Bit mask of BROWN_OUT_ANA_RST_EN field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_ANA_RST_EN_Msk = 0x10000000
	// Bit BROWN_OUT_ANA_RST_EN.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_ANA_RST_EN = 0x10000000
	// Position of BROWN_OUT_CNT_CLR field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_CNT_CLR_Pos = 0x1d
	// Bit mask of BROWN_OUT_CNT_CLR field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_CNT_CLR_Msk = 0x20000000
	// Bit BROWN_OUT_CNT_CLR.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_CNT_CLR = 0x20000000
	// Position of BROWN_OUT_ENA field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_ENA_Pos = 0x1e
	// Bit mask of BROWN_OUT_ENA field.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_ENA_Msk = 0x40000000
	// Bit BROWN_OUT_ENA.
	RTC_CNTL_RTC_BROWN_OUT_BROWN_OUT_ENA = 0x40000000
	// Position of DET field.
	RTC_CNTL_RTC_BROWN_OUT_DET_Pos = 0x1f
	// Bit mask of DET field.
	RTC_CNTL_RTC_BROWN_OUT_DET_Msk = 0x80000000
	// Bit DET.
	RTC_CNTL_RTC_BROWN_OUT_DET = 0x80000000

	// RTC_TIME_LOW1: rtc configure register
	// Position of RTC_TIMER_VALUE1_LOW field.
	RTC_CNTL_RTC_TIME_LOW1_RTC_TIMER_VALUE1_LOW_Pos = 0x0
	// Bit mask of RTC_TIMER_VALUE1_LOW field.
	RTC_CNTL_RTC_TIME_LOW1_RTC_TIMER_VALUE1_LOW_Msk = 0xffffffff

	// RTC_TIME_HIGH1: rtc configure register
	// Position of RTC_TIMER_VALUE1_HIGH field.
	RTC_CNTL_RTC_TIME_HIGH1_RTC_TIMER_VALUE1_HIGH_Pos = 0x0
	// Bit mask of RTC_TIMER_VALUE1_HIGH field.
	RTC_CNTL_RTC_TIME_HIGH1_RTC_TIMER_VALUE1_HIGH_Msk = 0xffff

	// RTC_XTAL32K_CLK_FACTOR: rtc configure register
	// Position of XTAL32K_CLK_FACTOR field.
	RTC_CNTL_RTC_XTAL32K_CLK_FACTOR_XTAL32K_CLK_FACTOR_Pos = 0x0
	// Bit mask of XTAL32K_CLK_FACTOR field.
	RTC_CNTL_RTC_XTAL32K_CLK_FACTOR_XTAL32K_CLK_FACTOR_Msk = 0xffffffff

	// RTC_XTAL32K_CONF: rtc configure register
	// Position of XTAL32K_RETURN_WAIT field.
	RTC_CNTL_RTC_XTAL32K_CONF_XTAL32K_RETURN_WAIT_Pos = 0x0
	// Bit mask of XTAL32K_RETURN_WAIT field.
	RTC_CNTL_RTC_XTAL32K_CONF_XTAL32K_RETURN_WAIT_Msk = 0xf
	// Position of XTAL32K_RESTART_WAIT field.
	RTC_CNTL_RTC_XTAL32K_CONF_XTAL32K_RESTART_WAIT_Pos = 0x4
	// Bit mask of XTAL32K_RESTART_WAIT field.
	RTC_CNTL_RTC_XTAL32K_CONF_XTAL32K_RESTART_WAIT_Msk = 0xffff0
	// Position of XTAL32K_WDT_TIMEOUT field.
	RTC_CNTL_RTC_XTAL32K_CONF_XTAL32K_WDT_TIMEOUT_Pos = 0x14
	// Bit mask of XTAL32K_WDT_TIMEOUT field.
	RTC_CNTL_RTC_XTAL32K_CONF_XTAL32K_WDT_TIMEOUT_Msk = 0xff00000
	// Position of XTAL32K_STABLE_THRES field.
	RTC_CNTL_RTC_XTAL32K_CONF_XTAL32K_STABLE_THRES_Pos = 0x1c
	// Bit mask of XTAL32K_STABLE_THRES field.
	RTC_CNTL_RTC_XTAL32K_CONF_XTAL32K_STABLE_THRES_Msk = 0xf0000000

	// RTC_USB_CONF: rtc configure register
	// Position of IO_MUX_RESET_DISABLE field.
	RTC_CNTL_RTC_USB_CONF_IO_MUX_RESET_DISABLE_Pos = 0x12
	// Bit mask of IO_MUX_RESET_DISABLE field.
	RTC_CNTL_RTC_USB_CONF_IO_MUX_RESET_DISABLE_Msk = 0x40000
	// Bit IO_MUX_RESET_DISABLE.
	RTC_CNTL_RTC_USB_CONF_IO_MUX_RESET_DISABLE = 0x40000

	// RTC_SLP_REJECT_CAUSE: RTC_CNTL_RTC_SLP_REJECT_CAUSE_REG
	// Position of REJECT_CAUSE field.
	RTC_CNTL_RTC_SLP_REJECT_CAUSE_REJECT_CAUSE_Pos = 0x0
	// Bit mask of REJECT_CAUSE field.
	RTC_CNTL_RTC_SLP_REJECT_CAUSE_REJECT_CAUSE_Msk = 0x3ffff

	// RTC_OPTION1: rtc configure register
	// Position of FORCE_DOWNLOAD_BOOT field.
	RTC_CNTL_RTC_OPTION1_FORCE_DOWNLOAD_BOOT_Pos = 0x0
	// Bit mask of FORCE_DOWNLOAD_BOOT field.
	RTC_CNTL_RTC_OPTION1_FORCE_DOWNLOAD_BOOT_Msk = 0x1
	// Bit FORCE_DOWNLOAD_BOOT.
	RTC_CNTL_RTC_OPTION1_FORCE_DOWNLOAD_BOOT = 0x1

	// RTC_SLP_WAKEUP_CAUSE: RTC_CNTL_RTC_SLP_WAKEUP_CAUSE_REG
	// Position of WAKEUP_CAUSE field.
	RTC_CNTL_RTC_SLP_WAKEUP_CAUSE_WAKEUP_CAUSE_Pos = 0x0
	// Bit mask of WAKEUP_CAUSE field.
	RTC_CNTL_RTC_SLP_WAKEUP_CAUSE_WAKEUP_CAUSE_Msk = 0x1ffff

	// RTC_ULP_CP_TIMER_1: rtc configure register
	// Position of ULP_CP_TIMER_SLP_CYCLE field.
	RTC_CNTL_RTC_ULP_CP_TIMER_1_ULP_CP_TIMER_SLP_CYCLE_Pos = 0x8
	// Bit mask of ULP_CP_TIMER_SLP_CYCLE field.
	RTC_CNTL_RTC_ULP_CP_TIMER_1_ULP_CP_TIMER_SLP_CYCLE_Msk = 0xffffff00

	// INT_ENA_RTC_W1TS: rtc configure register
	// Position of SLP_WAKEUP_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_SLP_WAKEUP_INT_ENA_W1TS_Pos = 0x0
	// Bit mask of SLP_WAKEUP_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_SLP_WAKEUP_INT_ENA_W1TS_Msk = 0x1
	// Bit SLP_WAKEUP_INT_ENA_W1TS.
	RTC_CNTL_INT_ENA_RTC_W1TS_SLP_WAKEUP_INT_ENA_W1TS = 0x1
	// Position of SLP_REJECT_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_SLP_REJECT_INT_ENA_W1TS_Pos = 0x1
	// Bit mask of SLP_REJECT_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_SLP_REJECT_INT_ENA_W1TS_Msk = 0x2
	// Bit SLP_REJECT_INT_ENA_W1TS.
	RTC_CNTL_INT_ENA_RTC_W1TS_SLP_REJECT_INT_ENA_W1TS = 0x2
	// Position of RTC_WDT_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_WDT_INT_ENA_W1TS_Pos = 0x3
	// Bit mask of RTC_WDT_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_WDT_INT_ENA_W1TS_Msk = 0x8
	// Bit RTC_WDT_INT_ENA_W1TS.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_WDT_INT_ENA_W1TS = 0x8
	// Position of RTC_BROWN_OUT_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_BROWN_OUT_INT_ENA_W1TS_Pos = 0x9
	// Bit mask of RTC_BROWN_OUT_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_BROWN_OUT_INT_ENA_W1TS_Msk = 0x200
	// Bit RTC_BROWN_OUT_INT_ENA_W1TS.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_BROWN_OUT_INT_ENA_W1TS = 0x200
	// Position of RTC_MAIN_TIMER_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_MAIN_TIMER_INT_ENA_W1TS_Pos = 0xa
	// Bit mask of RTC_MAIN_TIMER_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_MAIN_TIMER_INT_ENA_W1TS_Msk = 0x400
	// Bit RTC_MAIN_TIMER_INT_ENA_W1TS.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_MAIN_TIMER_INT_ENA_W1TS = 0x400
	// Position of RTC_SWD_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_SWD_INT_ENA_W1TS_Pos = 0xf
	// Bit mask of RTC_SWD_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_SWD_INT_ENA_W1TS_Msk = 0x8000
	// Bit RTC_SWD_INT_ENA_W1TS.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_SWD_INT_ENA_W1TS = 0x8000
	// Position of RTC_XTAL32K_DEAD_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_XTAL32K_DEAD_INT_ENA_W1TS_Pos = 0x10
	// Bit mask of RTC_XTAL32K_DEAD_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_XTAL32K_DEAD_INT_ENA_W1TS_Msk = 0x10000
	// Bit RTC_XTAL32K_DEAD_INT_ENA_W1TS.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_XTAL32K_DEAD_INT_ENA_W1TS = 0x10000
	// Position of RTC_GLITCH_DET_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_GLITCH_DET_INT_ENA_W1TS_Pos = 0x13
	// Bit mask of RTC_GLITCH_DET_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_GLITCH_DET_INT_ENA_W1TS_Msk = 0x80000
	// Bit RTC_GLITCH_DET_INT_ENA_W1TS.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_GLITCH_DET_INT_ENA_W1TS = 0x80000
	// Position of RTC_BBPLL_CAL_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_BBPLL_CAL_INT_ENA_W1TS_Pos = 0x14
	// Bit mask of RTC_BBPLL_CAL_INT_ENA_W1TS field.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_BBPLL_CAL_INT_ENA_W1TS_Msk = 0x100000
	// Bit RTC_BBPLL_CAL_INT_ENA_W1TS.
	RTC_CNTL_INT_ENA_RTC_W1TS_RTC_BBPLL_CAL_INT_ENA_W1TS = 0x100000

	// INT_ENA_RTC_W1TC: rtc configure register
	// Position of SLP_WAKEUP_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_SLP_WAKEUP_INT_ENA_W1TC_Pos = 0x0
	// Bit mask of SLP_WAKEUP_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_SLP_WAKEUP_INT_ENA_W1TC_Msk = 0x1
	// Bit SLP_WAKEUP_INT_ENA_W1TC.
	RTC_CNTL_INT_ENA_RTC_W1TC_SLP_WAKEUP_INT_ENA_W1TC = 0x1
	// Position of SLP_REJECT_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_SLP_REJECT_INT_ENA_W1TC_Pos = 0x1
	// Bit mask of SLP_REJECT_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_SLP_REJECT_INT_ENA_W1TC_Msk = 0x2
	// Bit SLP_REJECT_INT_ENA_W1TC.
	RTC_CNTL_INT_ENA_RTC_W1TC_SLP_REJECT_INT_ENA_W1TC = 0x2
	// Position of RTC_WDT_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_WDT_INT_ENA_W1TC_Pos = 0x3
	// Bit mask of RTC_WDT_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_WDT_INT_ENA_W1TC_Msk = 0x8
	// Bit RTC_WDT_INT_ENA_W1TC.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_WDT_INT_ENA_W1TC = 0x8
	// Position of RTC_BROWN_OUT_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_BROWN_OUT_INT_ENA_W1TC_Pos = 0x9
	// Bit mask of RTC_BROWN_OUT_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_BROWN_OUT_INT_ENA_W1TC_Msk = 0x200
	// Bit RTC_BROWN_OUT_INT_ENA_W1TC.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_BROWN_OUT_INT_ENA_W1TC = 0x200
	// Position of RTC_MAIN_TIMER_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_MAIN_TIMER_INT_ENA_W1TC_Pos = 0xa
	// Bit mask of RTC_MAIN_TIMER_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_MAIN_TIMER_INT_ENA_W1TC_Msk = 0x400
	// Bit RTC_MAIN_TIMER_INT_ENA_W1TC.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_MAIN_TIMER_INT_ENA_W1TC = 0x400
	// Position of RTC_SWD_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_SWD_INT_ENA_W1TC_Pos = 0xf
	// Bit mask of RTC_SWD_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_SWD_INT_ENA_W1TC_Msk = 0x8000
	// Bit RTC_SWD_INT_ENA_W1TC.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_SWD_INT_ENA_W1TC = 0x8000
	// Position of RTC_XTAL32K_DEAD_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_XTAL32K_DEAD_INT_ENA_W1TC_Pos = 0x10
	// Bit mask of RTC_XTAL32K_DEAD_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_XTAL32K_DEAD_INT_ENA_W1TC_Msk = 0x10000
	// Bit RTC_XTAL32K_DEAD_INT_ENA_W1TC.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_XTAL32K_DEAD_INT_ENA_W1TC = 0x10000
	// Position of RTC_GLITCH_DET_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_GLITCH_DET_INT_ENA_W1TC_Pos = 0x13
	// Bit mask of RTC_GLITCH_DET_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_GLITCH_DET_INT_ENA_W1TC_Msk = 0x80000
	// Bit RTC_GLITCH_DET_INT_ENA_W1TC.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_GLITCH_DET_INT_ENA_W1TC = 0x80000
	// Position of RTC_BBPLL_CAL_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_BBPLL_CAL_INT_ENA_W1TC_Pos = 0x14
	// Bit mask of RTC_BBPLL_CAL_INT_ENA_W1TC field.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_BBPLL_CAL_INT_ENA_W1TC_Msk = 0x100000
	// Bit RTC_BBPLL_CAL_INT_ENA_W1TC.
	RTC_CNTL_INT_ENA_RTC_W1TC_RTC_BBPLL_CAL_INT_ENA_W1TC = 0x100000

	// RTC_CNTL_RETENTION_CTRL: rtc configure register
	// Position of RETENTION_CLK_SEL field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_CLK_SEL_Pos = 0x12
	// Bit mask of RETENTION_CLK_SEL field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_CLK_SEL_Msk = 0x40000
	// Bit RETENTION_CLK_SEL.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_CLK_SEL = 0x40000
	// Position of RETENTION_DONE_WAIT field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_DONE_WAIT_Pos = 0x13
	// Bit mask of RETENTION_DONE_WAIT field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_DONE_WAIT_Msk = 0x380000
	// Position of RETENTION_CLKOFF_WAIT field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_CLKOFF_WAIT_Pos = 0x16
	// Bit mask of RETENTION_CLKOFF_WAIT field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_CLKOFF_WAIT_Msk = 0x3c00000
	// Position of RETENTION_EN field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_EN_Pos = 0x1a
	// Bit mask of RETENTION_EN field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_EN_Msk = 0x4000000
	// Bit RETENTION_EN.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_EN = 0x4000000
	// Position of RETENTION_WAIT field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_WAIT_Pos = 0x1b
	// Bit mask of RETENTION_WAIT field.
	RTC_CNTL_RTC_CNTL_RETENTION_CTRL_RETENTION_WAIT_Msk = 0xf8000000

	// RTC_FIB_SEL: rtc configure register
	// Position of RTC_FIB_SEL field.
	RTC_CNTL_RTC_FIB_SEL_RTC_FIB_SEL_Pos = 0x0
	// Bit mask of RTC_FIB_SEL field.
	RTC_CNTL_RTC_FIB_SEL_RTC_FIB_SEL_Msk = 0x7

	// RTC_CNTL_GPIO_WAKEUP: rtc configure register
	// Position of RTC_GPIO_WAKEUP_STATUS field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_WAKEUP_STATUS_Pos = 0x0
	// Bit mask of RTC_GPIO_WAKEUP_STATUS field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_WAKEUP_STATUS_Msk = 0x3f
	// Position of RTC_GPIO_WAKEUP_STATUS_CLR field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_WAKEUP_STATUS_CLR_Pos = 0x6
	// Bit mask of RTC_GPIO_WAKEUP_STATUS_CLR field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_WAKEUP_STATUS_CLR_Msk = 0x40
	// Bit RTC_GPIO_WAKEUP_STATUS_CLR.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_WAKEUP_STATUS_CLR = 0x40
	// Position of RTC_GPIO_PIN_CLK_GATE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN_CLK_GATE_Pos = 0x7
	// Bit mask of RTC_GPIO_PIN_CLK_GATE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN_CLK_GATE_Msk = 0x80
	// Bit RTC_GPIO_PIN_CLK_GATE.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN_CLK_GATE = 0x80
	// Position of RTC_GPIO_PIN5_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN5_INT_TYPE_Pos = 0x8
	// Bit mask of RTC_GPIO_PIN5_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN5_INT_TYPE_Msk = 0x700
	// Position of RTC_GPIO_PIN4_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN4_INT_TYPE_Pos = 0xb
	// Bit mask of RTC_GPIO_PIN4_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN4_INT_TYPE_Msk = 0x3800
	// Position of RTC_GPIO_PIN3_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN3_INT_TYPE_Pos = 0xe
	// Bit mask of RTC_GPIO_PIN3_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN3_INT_TYPE_Msk = 0x1c000
	// Position of RTC_GPIO_PIN2_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN2_INT_TYPE_Pos = 0x11
	// Bit mask of RTC_GPIO_PIN2_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN2_INT_TYPE_Msk = 0xe0000
	// Position of RTC_GPIO_PIN1_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN1_INT_TYPE_Pos = 0x14
	// Bit mask of RTC_GPIO_PIN1_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN1_INT_TYPE_Msk = 0x700000
	// Position of RTC_GPIO_PIN0_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN0_INT_TYPE_Pos = 0x17
	// Bit mask of RTC_GPIO_PIN0_INT_TYPE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN0_INT_TYPE_Msk = 0x3800000
	// Position of RTC_GPIO_PIN5_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN5_WAKEUP_ENABLE_Pos = 0x1a
	// Bit mask of RTC_GPIO_PIN5_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN5_WAKEUP_ENABLE_Msk = 0x4000000
	// Bit RTC_GPIO_PIN5_WAKEUP_ENABLE.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN5_WAKEUP_ENABLE = 0x4000000
	// Position of RTC_GPIO_PIN4_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN4_WAKEUP_ENABLE_Pos = 0x1b
	// Bit mask of RTC_GPIO_PIN4_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN4_WAKEUP_ENABLE_Msk = 0x8000000
	// Bit RTC_GPIO_PIN4_WAKEUP_ENABLE.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN4_WAKEUP_ENABLE = 0x8000000
	// Position of RTC_GPIO_PIN3_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN3_WAKEUP_ENABLE_Pos = 0x1c
	// Bit mask of RTC_GPIO_PIN3_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN3_WAKEUP_ENABLE_Msk = 0x10000000
	// Bit RTC_GPIO_PIN3_WAKEUP_ENABLE.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN3_WAKEUP_ENABLE = 0x10000000
	// Position of RTC_GPIO_PIN2_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN2_WAKEUP_ENABLE_Pos = 0x1d
	// Bit mask of RTC_GPIO_PIN2_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN2_WAKEUP_ENABLE_Msk = 0x20000000
	// Bit RTC_GPIO_PIN2_WAKEUP_ENABLE.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN2_WAKEUP_ENABLE = 0x20000000
	// Position of RTC_GPIO_PIN1_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN1_WAKEUP_ENABLE_Pos = 0x1e
	// Bit mask of RTC_GPIO_PIN1_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN1_WAKEUP_ENABLE_Msk = 0x40000000
	// Bit RTC_GPIO_PIN1_WAKEUP_ENABLE.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN1_WAKEUP_ENABLE = 0x40000000
	// Position of RTC_GPIO_PIN0_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN0_WAKEUP_ENABLE_Pos = 0x1f
	// Bit mask of RTC_GPIO_PIN0_WAKEUP_ENABLE field.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN0_WAKEUP_ENABLE_Msk = 0x80000000
	// Bit RTC_GPIO_PIN0_WAKEUP_ENABLE.
	RTC_CNTL_RTC_CNTL_GPIO_WAKEUP_RTC_GPIO_PIN0_WAKEUP_ENABLE = 0x80000000

	// RTC_CNTL_DBG_SEL: rtc configure register
	// Position of RTC_DEBUG_12M_NO_GATING field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_12M_NO_GATING_Pos = 0x1
	// Bit mask of RTC_DEBUG_12M_NO_GATING field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_12M_NO_GATING_Msk = 0x2
	// Bit RTC_DEBUG_12M_NO_GATING.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_12M_NO_GATING = 0x2
	// Position of RTC_DEBUG_BIT_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_BIT_SEL_Pos = 0x2
	// Bit mask of RTC_DEBUG_BIT_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_BIT_SEL_Msk = 0x7c
	// Position of RTC_DEBUG_SEL0 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL0_Pos = 0x7
	// Bit mask of RTC_DEBUG_SEL0 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL0_Msk = 0xf80
	// Position of RTC_DEBUG_SEL1 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL1_Pos = 0xc
	// Bit mask of RTC_DEBUG_SEL1 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL1_Msk = 0x1f000
	// Position of RTC_DEBUG_SEL2 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL2_Pos = 0x11
	// Bit mask of RTC_DEBUG_SEL2 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL2_Msk = 0x3e0000
	// Position of RTC_DEBUG_SEL3 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL3_Pos = 0x16
	// Bit mask of RTC_DEBUG_SEL3 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL3_Msk = 0x7c00000
	// Position of RTC_DEBUG_SEL4 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL4_Pos = 0x1b
	// Bit mask of RTC_DEBUG_SEL4 field.
	RTC_CNTL_RTC_CNTL_DBG_SEL_RTC_DEBUG_SEL4_Msk = 0xf8000000

	// RTC_CNTL_DBG_MAP: rtc configure register
	// Position of RTC_GPIO_PIN5_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN5_MUX_SEL_Pos = 0x2
	// Bit mask of RTC_GPIO_PIN5_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN5_MUX_SEL_Msk = 0x4
	// Bit RTC_GPIO_PIN5_MUX_SEL.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN5_MUX_SEL = 0x4
	// Position of RTC_GPIO_PIN4_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN4_MUX_SEL_Pos = 0x3
	// Bit mask of RTC_GPIO_PIN4_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN4_MUX_SEL_Msk = 0x8
	// Bit RTC_GPIO_PIN4_MUX_SEL.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN4_MUX_SEL = 0x8
	// Position of RTC_GPIO_PIN3_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN3_MUX_SEL_Pos = 0x4
	// Bit mask of RTC_GPIO_PIN3_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN3_MUX_SEL_Msk = 0x10
	// Bit RTC_GPIO_PIN3_MUX_SEL.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN3_MUX_SEL = 0x10
	// Position of RTC_GPIO_PIN2_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN2_MUX_SEL_Pos = 0x5
	// Bit mask of RTC_GPIO_PIN2_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN2_MUX_SEL_Msk = 0x20
	// Bit RTC_GPIO_PIN2_MUX_SEL.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN2_MUX_SEL = 0x20
	// Position of RTC_GPIO_PIN1_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN1_MUX_SEL_Pos = 0x6
	// Bit mask of RTC_GPIO_PIN1_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN1_MUX_SEL_Msk = 0x40
	// Bit RTC_GPIO_PIN1_MUX_SEL.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN1_MUX_SEL = 0x40
	// Position of RTC_GPIO_PIN0_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN0_MUX_SEL_Pos = 0x7
	// Bit mask of RTC_GPIO_PIN0_MUX_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN0_MUX_SEL_Msk = 0x80
	// Bit RTC_GPIO_PIN0_MUX_SEL.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN0_MUX_SEL = 0x80
	// Position of RTC_GPIO_PIN5_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN5_FUN_SEL_Pos = 0x8
	// Bit mask of RTC_GPIO_PIN5_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN5_FUN_SEL_Msk = 0xf00
	// Position of RTC_GPIO_PIN4_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN4_FUN_SEL_Pos = 0xc
	// Bit mask of RTC_GPIO_PIN4_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN4_FUN_SEL_Msk = 0xf000
	// Position of RTC_GPIO_PIN3_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN3_FUN_SEL_Pos = 0x10
	// Bit mask of RTC_GPIO_PIN3_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN3_FUN_SEL_Msk = 0xf0000
	// Position of RTC_GPIO_PIN2_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN2_FUN_SEL_Pos = 0x14
	// Bit mask of RTC_GPIO_PIN2_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN2_FUN_SEL_Msk = 0xf00000
	// Position of RTC_GPIO_PIN1_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN1_FUN_SEL_Pos = 0x18
	// Bit mask of RTC_GPIO_PIN1_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN1_FUN_SEL_Msk = 0xf000000
	// Position of RTC_GPIO_PIN0_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN0_FUN_SEL_Pos = 0x1c
	// Bit mask of RTC_GPIO_PIN0_FUN_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_MAP_RTC_GPIO_PIN0_FUN_SEL_Msk = 0xf0000000

	// RTC_CNTL_SENSOR_CTRL: rtc configure register
	// Position of SAR2_PWDET_CCT field.
	RTC_CNTL_RTC_CNTL_SENSOR_CTRL_SAR2_PWDET_CCT_Pos = 0x1b
	// Bit mask of SAR2_PWDET_CCT field.
	RTC_CNTL_RTC_CNTL_SENSOR_CTRL_SAR2_PWDET_CCT_Msk = 0x38000000
	// Position of FORCE_XPD_SAR field.
	RTC_CNTL_RTC_CNTL_SENSOR_CTRL_FORCE_XPD_SAR_Pos = 0x1e
	// Bit mask of FORCE_XPD_SAR field.
	RTC_CNTL_RTC_CNTL_SENSOR_CTRL_FORCE_XPD_SAR_Msk = 0xc0000000

	// RTC_CNTL_DBG_SAR_SEL: rtc configure register
	// Position of SAR_DEBUG_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_SAR_SEL_SAR_DEBUG_SEL_Pos = 0x1b
	// Bit mask of SAR_DEBUG_SEL field.
	RTC_CNTL_RTC_CNTL_DBG_SAR_SEL_SAR_DEBUG_SEL_Msk = 0xf8000000

	// RTC_CNTL_PG_CTRL: rtc configure register
	// Position of POWER_GLITCH_DSENSE field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_DSENSE_Pos = 0x1a
	// Bit mask of POWER_GLITCH_DSENSE field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_DSENSE_Msk = 0xc000000
	// Position of POWER_GLITCH_FORCE_PD field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_FORCE_PD_Pos = 0x1c
	// Bit mask of POWER_GLITCH_FORCE_PD field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_FORCE_PD_Msk = 0x10000000
	// Bit POWER_GLITCH_FORCE_PD.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_FORCE_PD = 0x10000000
	// Position of POWER_GLITCH_FORCE_PU field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_FORCE_PU_Pos = 0x1d
	// Bit mask of POWER_GLITCH_FORCE_PU field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_FORCE_PU_Msk = 0x20000000
	// Bit POWER_GLITCH_FORCE_PU.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_FORCE_PU = 0x20000000
	// Position of POWER_GLITCH_EFUSE_SEL field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_EFUSE_SEL_Pos = 0x1e
	// Bit mask of POWER_GLITCH_EFUSE_SEL field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_EFUSE_SEL_Msk = 0x40000000
	// Bit POWER_GLITCH_EFUSE_SEL.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_EFUSE_SEL = 0x40000000
	// Position of POWER_GLITCH_EN field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_EN_Pos = 0x1f
	// Bit mask of POWER_GLITCH_EN field.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_EN_Msk = 0x80000000
	// Bit POWER_GLITCH_EN.
	RTC_CNTL_RTC_CNTL_PG_CTRL_POWER_GLITCH_EN = 0x80000000

	// DATE: rtc configure register
	// Position of RTC_CNTL_DATE field.
	RTC_CNTL_DATE_RTC_CNTL_DATE_Pos = 0x0
	// Bit mask of RTC_CNTL_DATE field.
	RTC_CNTL_DATE_RTC_CNTL_DATE_Msk = 0xfffffff
)

// Bitfields for SENSITIVE: Peripheral SENSITIVE
const (
	// ROM_TABLE_LOCK: SENSITIVE_ROM_TABLE_LOCK_REG
	// Position of ROM_TABLE_LOCK field.
	SENSITIVE_ROM_TABLE_LOCK_ROM_TABLE_LOCK_Pos = 0x0
	// Bit mask of ROM_TABLE_LOCK field.
	SENSITIVE_ROM_TABLE_LOCK_ROM_TABLE_LOCK_Msk = 0x1
	// Bit ROM_TABLE_LOCK.
	SENSITIVE_ROM_TABLE_LOCK_ROM_TABLE_LOCK = 0x1

	// ROM_TABLE: SENSITIVE_ROM_TABLE_REG
	// Position of ROM_TABLE field.
	SENSITIVE_ROM_TABLE_ROM_TABLE_Pos = 0x0
	// Bit mask of ROM_TABLE field.
	SENSITIVE_ROM_TABLE_ROM_TABLE_Msk = 0xffffffff

	// PRIVILEGE_MODE_SEL_LOCK: SENSITIVE_PRIVILEGE_MODE_SEL_LOCK_REG
	// Position of PRIVILEGE_MODE_SEL_LOCK field.
	SENSITIVE_PRIVILEGE_MODE_SEL_LOCK_PRIVILEGE_MODE_SEL_LOCK_Pos = 0x0
	// Bit mask of PRIVILEGE_MODE_SEL_LOCK field.
	SENSITIVE_PRIVILEGE_MODE_SEL_LOCK_PRIVILEGE_MODE_SEL_LOCK_Msk = 0x1
	// Bit PRIVILEGE_MODE_SEL_LOCK.
	SENSITIVE_PRIVILEGE_MODE_SEL_LOCK_PRIVILEGE_MODE_SEL_LOCK = 0x1

	// PRIVILEGE_MODE_SEL: SENSITIVE_PRIVILEGE_MODE_SEL_REG
	// Position of PRIVILEGE_MODE_SEL field.
	SENSITIVE_PRIVILEGE_MODE_SEL_PRIVILEGE_MODE_SEL_Pos = 0x0
	// Bit mask of PRIVILEGE_MODE_SEL field.
	SENSITIVE_PRIVILEGE_MODE_SEL_PRIVILEGE_MODE_SEL_Msk = 0x1
	// Bit PRIVILEGE_MODE_SEL.
	SENSITIVE_PRIVILEGE_MODE_SEL_PRIVILEGE_MODE_SEL = 0x1

	// APB_PERIPHERAL_ACCESS_0: SENSITIVE_APB_PERIPHERAL_ACCESS_0_REG
	// Position of APB_PERIPHERAL_ACCESS_LOCK field.
	SENSITIVE_APB_PERIPHERAL_ACCESS_0_APB_PERIPHERAL_ACCESS_LOCK_Pos = 0x0
	// Bit mask of APB_PERIPHERAL_ACCESS_LOCK field.
	SENSITIVE_APB_PERIPHERAL_ACCESS_0_APB_PERIPHERAL_ACCESS_LOCK_Msk = 0x1
	// Bit APB_PERIPHERAL_ACCESS_LOCK.
	SENSITIVE_APB_PERIPHERAL_ACCESS_0_APB_PERIPHERAL_ACCESS_LOCK = 0x1

	// APB_PERIPHERAL_ACCESS_1: SENSITIVE_APB_PERIPHERAL_ACCESS_1_REG
	// Position of APB_PERIPHERAL_ACCESS_SPLIT_BURST field.
	SENSITIVE_APB_PERIPHERAL_ACCESS_1_APB_PERIPHERAL_ACCESS_SPLIT_BURST_Pos = 0x0
	// Bit mask of APB_PERIPHERAL_ACCESS_SPLIT_BURST field.
	SENSITIVE_APB_PERIPHERAL_ACCESS_1_APB_PERIPHERAL_ACCESS_SPLIT_BURST_Msk = 0x1
	// Bit APB_PERIPHERAL_ACCESS_SPLIT_BURST.
	SENSITIVE_APB_PERIPHERAL_ACCESS_1_APB_PERIPHERAL_ACCESS_SPLIT_BURST = 0x1

	// INTERNAL_SRAM_USAGE_0: SENSITIVE_INTERNAL_SRAM_USAGE_0_REG
	// Position of INTERNAL_SRAM_USAGE_LOCK field.
	SENSITIVE_INTERNAL_SRAM_USAGE_0_INTERNAL_SRAM_USAGE_LOCK_Pos = 0x0
	// Bit mask of INTERNAL_SRAM_USAGE_LOCK field.
	SENSITIVE_INTERNAL_SRAM_USAGE_0_INTERNAL_SRAM_USAGE_LOCK_Msk = 0x1
	// Bit INTERNAL_SRAM_USAGE_LOCK.
	SENSITIVE_INTERNAL_SRAM_USAGE_0_INTERNAL_SRAM_USAGE_LOCK = 0x1

	// INTERNAL_SRAM_USAGE_1: SENSITIVE_INTERNAL_SRAM_USAGE_1_REG
	// Position of INTERNAL_SRAM_USAGE_CPU_CACHE field.
	SENSITIVE_INTERNAL_SRAM_USAGE_1_INTERNAL_SRAM_USAGE_CPU_CACHE_Pos = 0x0
	// Bit mask of INTERNAL_SRAM_USAGE_CPU_CACHE field.
	SENSITIVE_INTERNAL_SRAM_USAGE_1_INTERNAL_SRAM_USAGE_CPU_CACHE_Msk = 0x1
	// Bit INTERNAL_SRAM_USAGE_CPU_CACHE.
	SENSITIVE_INTERNAL_SRAM_USAGE_1_INTERNAL_SRAM_USAGE_CPU_CACHE = 0x1
	// Position of INTERNAL_SRAM_USAGE_CPU_SRAM field.
	SENSITIVE_INTERNAL_SRAM_USAGE_1_INTERNAL_SRAM_USAGE_CPU_SRAM_Pos = 0x1
	// Bit mask of INTERNAL_SRAM_USAGE_CPU_SRAM field.
	SENSITIVE_INTERNAL_SRAM_USAGE_1_INTERNAL_SRAM_USAGE_CPU_SRAM_Msk = 0xe

	// INTERNAL_SRAM_USAGE_3: SENSITIVE_INTERNAL_SRAM_USAGE_3_REG
	// Position of INTERNAL_SRAM_USAGE_MAC_DUMP_SRAM field.
	SENSITIVE_INTERNAL_SRAM_USAGE_3_INTERNAL_SRAM_USAGE_MAC_DUMP_SRAM_Pos = 0x0
	// Bit mask of INTERNAL_SRAM_USAGE_MAC_DUMP_SRAM field.
	SENSITIVE_INTERNAL_SRAM_USAGE_3_INTERNAL_SRAM_USAGE_MAC_DUMP_SRAM_Msk = 0x7
	// Position of INTERNAL_SRAM_ALLOC_MAC_DUMP field.
	SENSITIVE_INTERNAL_SRAM_USAGE_3_INTERNAL_SRAM_ALLOC_MAC_DUMP_Pos = 0x3
	// Bit mask of INTERNAL_SRAM_ALLOC_MAC_DUMP field.
	SENSITIVE_INTERNAL_SRAM_USAGE_3_INTERNAL_SRAM_ALLOC_MAC_DUMP_Msk = 0x8
	// Bit INTERNAL_SRAM_ALLOC_MAC_DUMP.
	SENSITIVE_INTERNAL_SRAM_USAGE_3_INTERNAL_SRAM_ALLOC_MAC_DUMP = 0x8

	// INTERNAL_SRAM_USAGE_4: SENSITIVE_INTERNAL_SRAM_USAGE_4_REG
	// Position of INTERNAL_SRAM_USAGE_LOG_SRAM field.
	SENSITIVE_INTERNAL_SRAM_USAGE_4_INTERNAL_SRAM_USAGE_LOG_SRAM_Pos = 0x0
	// Bit mask of INTERNAL_SRAM_USAGE_LOG_SRAM field.
	SENSITIVE_INTERNAL_SRAM_USAGE_4_INTERNAL_SRAM_USAGE_LOG_SRAM_Msk = 0x1
	// Bit INTERNAL_SRAM_USAGE_LOG_SRAM.
	SENSITIVE_INTERNAL_SRAM_USAGE_4_INTERNAL_SRAM_USAGE_LOG_SRAM = 0x1

	// CACHE_TAG_ACCESS_0: SENSITIVE_CACHE_TAG_ACCESS_0_REG
	// Position of CACHE_TAG_ACCESS_LOCK field.
	SENSITIVE_CACHE_TAG_ACCESS_0_CACHE_TAG_ACCESS_LOCK_Pos = 0x0
	// Bit mask of CACHE_TAG_ACCESS_LOCK field.
	SENSITIVE_CACHE_TAG_ACCESS_0_CACHE_TAG_ACCESS_LOCK_Msk = 0x1
	// Bit CACHE_TAG_ACCESS_LOCK.
	SENSITIVE_CACHE_TAG_ACCESS_0_CACHE_TAG_ACCESS_LOCK = 0x1

	// CACHE_TAG_ACCESS_1: SENSITIVE_CACHE_TAG_ACCESS_1_REG
	// Position of PRO_I_TAG_RD_ACS field.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_I_TAG_RD_ACS_Pos = 0x0
	// Bit mask of PRO_I_TAG_RD_ACS field.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_I_TAG_RD_ACS_Msk = 0x1
	// Bit PRO_I_TAG_RD_ACS.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_I_TAG_RD_ACS = 0x1
	// Position of PRO_I_TAG_WR_ACS field.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_I_TAG_WR_ACS_Pos = 0x1
	// Bit mask of PRO_I_TAG_WR_ACS field.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_I_TAG_WR_ACS_Msk = 0x2
	// Bit PRO_I_TAG_WR_ACS.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_I_TAG_WR_ACS = 0x2
	// Position of PRO_D_TAG_RD_ACS field.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_D_TAG_RD_ACS_Pos = 0x2
	// Bit mask of PRO_D_TAG_RD_ACS field.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_D_TAG_RD_ACS_Msk = 0x4
	// Bit PRO_D_TAG_RD_ACS.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_D_TAG_RD_ACS = 0x4
	// Position of PRO_D_TAG_WR_ACS field.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_D_TAG_WR_ACS_Pos = 0x3
	// Bit mask of PRO_D_TAG_WR_ACS field.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_D_TAG_WR_ACS_Msk = 0x8
	// Bit PRO_D_TAG_WR_ACS.
	SENSITIVE_CACHE_TAG_ACCESS_1_PRO_D_TAG_WR_ACS = 0x8

	// CACHE_MMU_ACCESS_0: SENSITIVE_CACHE_MMU_ACCESS_0_REG
	// Position of CACHE_MMU_ACCESS_LOCK field.
	SENSITIVE_CACHE_MMU_ACCESS_0_CACHE_MMU_ACCESS_LOCK_Pos = 0x0
	// Bit mask of CACHE_MMU_ACCESS_LOCK field.
	SENSITIVE_CACHE_MMU_ACCESS_0_CACHE_MMU_ACCESS_LOCK_Msk = 0x1
	// Bit CACHE_MMU_ACCESS_LOCK.
	SENSITIVE_CACHE_MMU_ACCESS_0_CACHE_MMU_ACCESS_LOCK = 0x1

	// CACHE_MMU_ACCESS_1: SENSITIVE_CACHE_MMU_ACCESS_1_REG
	// Position of PRO_MMU_RD_ACS field.
	SENSITIVE_CACHE_MMU_ACCESS_1_PRO_MMU_RD_ACS_Pos = 0x0
	// Bit mask of PRO_MMU_RD_ACS field.
	SENSITIVE_CACHE_MMU_ACCESS_1_PRO_MMU_RD_ACS_Msk = 0x1
	// Bit PRO_MMU_RD_ACS.
	SENSITIVE_CACHE_MMU_ACCESS_1_PRO_MMU_RD_ACS = 0x1
	// Position of PRO_MMU_WR_ACS field.
	SENSITIVE_CACHE_MMU_ACCESS_1_PRO_MMU_WR_ACS_Pos = 0x1
	// Bit mask of PRO_MMU_WR_ACS field.
	SENSITIVE_CACHE_MMU_ACCESS_1_PRO_MMU_WR_ACS_Msk = 0x2
	// Bit PRO_MMU_WR_ACS.
	SENSITIVE_CACHE_MMU_ACCESS_1_PRO_MMU_WR_ACS = 0x2

	// DMA_APBPERI_SPI2_PMS_CONSTRAIN_0: SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_0_REG
	// Position of DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_0_DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_0_DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_0_DMA_APBPERI_SPI2_PMS_CONSTRAIN_LOCK = 0x1

	// DMA_APBPERI_SPI2_PMS_CONSTRAIN_1: SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_REG
	// Position of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_SPI2_PMS_CONSTRAIN_1_DMA_APBPERI_SPI2_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000

	// DMA_APBPERI_UCHI0_PMS_CONSTRAIN_0: SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_0_REG
	// Position of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_0_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_0_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_UCHI0_PMS_CONSTRAIN_LOCK.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_0_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_LOCK = 0x1

	// DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1: SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_REG
	// Position of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_1_DMA_APBPERI_UCHI0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000

	// DMA_APBPERI_I2S0_PMS_CONSTRAIN_0: SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_0_REG
	// Position of DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_0_DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_0_DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_0_DMA_APBPERI_I2S0_PMS_CONSTRAIN_LOCK = 0x1

	// DMA_APBPERI_I2S0_PMS_CONSTRAIN_1: SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_REG
	// Position of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_I2S0_PMS_CONSTRAIN_1_DMA_APBPERI_I2S0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000

	// DMA_APBPERI_MAC_PMS_CONSTRAIN_0: SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_0_REG
	// Position of DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_0_DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_0_DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_0_DMA_APBPERI_MAC_PMS_CONSTRAIN_LOCK = 0x1

	// DMA_APBPERI_MAC_PMS_CONSTRAIN_1: SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_REG
	// Position of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_MAC_PMS_CONSTRAIN_1_DMA_APBPERI_MAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000

	// DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0: SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0_REG
	// Position of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_0_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_LOCK = 0x1

	// DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1: SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_REG
	// Position of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_1_DMA_APBPERI_BACKUP_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000

	// DMA_APBPERI_LC_PMS_CONSTRAIN_0: SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_0_REG
	// Position of DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_0_DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_0_DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_0_DMA_APBPERI_LC_PMS_CONSTRAIN_LOCK = 0x1

	// DMA_APBPERI_LC_PMS_CONSTRAIN_1: SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_REG
	// Position of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_LC_PMS_CONSTRAIN_1_DMA_APBPERI_LC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000

	// DMA_APBPERI_AES_PMS_CONSTRAIN_0: SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_0_REG
	// Position of DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_0_DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_0_DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_0_DMA_APBPERI_AES_PMS_CONSTRAIN_LOCK = 0x1

	// DMA_APBPERI_AES_PMS_CONSTRAIN_1: SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_REG
	// Position of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_AES_PMS_CONSTRAIN_1_DMA_APBPERI_AES_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000

	// DMA_APBPERI_SHA_PMS_CONSTRAIN_0: SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_0_REG
	// Position of DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_0_DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_0_DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_0_DMA_APBPERI_SHA_PMS_CONSTRAIN_LOCK = 0x1

	// DMA_APBPERI_SHA_PMS_CONSTRAIN_1: SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_REG
	// Position of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_SHA_PMS_CONSTRAIN_1_DMA_APBPERI_SHA_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000

	// DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0: SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0_REG
	// Position of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_0_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_LOCK = 0x1

	// DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1: SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_REG
	// Position of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_1_DMA_APBPERI_ADC_DAC_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000

	// DMA_APBPERI_PMS_MONITOR_0: SENSITIVE_DMA_APBPERI_PMS_MONITOR_0_REG
	// Position of DMA_APBPERI_PMS_MONITOR_LOCK field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_0_DMA_APBPERI_PMS_MONITOR_LOCK_Pos = 0x0
	// Bit mask of DMA_APBPERI_PMS_MONITOR_LOCK field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_0_DMA_APBPERI_PMS_MONITOR_LOCK_Msk = 0x1
	// Bit DMA_APBPERI_PMS_MONITOR_LOCK.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_0_DMA_APBPERI_PMS_MONITOR_LOCK = 0x1

	// DMA_APBPERI_PMS_MONITOR_1: SENSITIVE_DMA_APBPERI_PMS_MONITOR_1_REG
	// Position of DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_1_DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR_Pos = 0x0
	// Bit mask of DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_1_DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR_Msk = 0x1
	// Bit DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_1_DMA_APBPERI_PMS_MONITOR_VIOLATE_CLR = 0x1
	// Position of DMA_APBPERI_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_1_DMA_APBPERI_PMS_MONITOR_VIOLATE_EN_Pos = 0x1
	// Bit mask of DMA_APBPERI_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_1_DMA_APBPERI_PMS_MONITOR_VIOLATE_EN_Msk = 0x2
	// Bit DMA_APBPERI_PMS_MONITOR_VIOLATE_EN.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_1_DMA_APBPERI_PMS_MONITOR_VIOLATE_EN = 0x2

	// DMA_APBPERI_PMS_MONITOR_2: SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_REG
	// Position of DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_Pos = 0x0
	// Bit mask of DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR_Msk = 0x1
	// Bit DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_DMA_APBPERI_PMS_MONITOR_VIOLATE_INTR = 0x1
	// Position of DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WORLD field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WORLD_Pos = 0x1
	// Bit mask of DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WORLD field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WORLD_Msk = 0x6
	// Position of DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_ADDR field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_ADDR_Pos = 0x3
	// Bit mask of DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_ADDR field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_2_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_ADDR_Msk = 0x7fffff8

	// DMA_APBPERI_PMS_MONITOR_3: SENSITIVE_DMA_APBPERI_PMS_MONITOR_3_REG
	// Position of DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_3_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR_Pos = 0x0
	// Bit mask of DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_3_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR_Msk = 0x1
	// Bit DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_3_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_WR = 0x1
	// Position of DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_BYTEEN field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_3_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_BYTEEN_Pos = 0x1
	// Bit mask of DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_BYTEEN field.
	SENSITIVE_DMA_APBPERI_PMS_MONITOR_3_DMA_APBPERI_PMS_MONITOR_VIOLATE_STATUS_BYTEEN_Msk = 0x1e

	// CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0: SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0_REG
	// Position of CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK_Msk = 0x1
	// Bit CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_0_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_LOCK = 0x1

	// CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1: SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_REG
	// Position of CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_0_Pos = 0x0
	// Bit mask of CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_0_Msk = 0x3
	// Position of CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_1_Pos = 0x2
	// Bit mask of CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_1_Msk = 0xc
	// Position of CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_2_Pos = 0x4
	// Bit mask of CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_CORE_X_IRAM0_DRAM0_DMA_SRAM_CATEGORY_2_Msk = 0x30
	// Position of CORE_X_IRAM0_DRAM0_DMA_SRAM_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_CORE_X_IRAM0_DRAM0_DMA_SRAM_SPLITADDR_Pos = 0xe
	// Bit mask of CORE_X_IRAM0_DRAM0_DMA_SRAM_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_1_CORE_X_IRAM0_DRAM0_DMA_SRAM_SPLITADDR_Msk = 0x3fc000

	// CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2: SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_REG
	// Position of CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_0_Pos = 0x0
	// Bit mask of CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_0_Msk = 0x3
	// Position of CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_1_Pos = 0x2
	// Bit mask of CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_1_Msk = 0xc
	// Position of CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_2_Pos = 0x4
	// Bit mask of CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_CORE_X_IRAM0_SRAM_LINE_0_CATEGORY_2_Msk = 0x30
	// Position of CORE_X_IRAM0_SRAM_LINE_0_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_CORE_X_IRAM0_SRAM_LINE_0_SPLITADDR_Pos = 0xe
	// Bit mask of CORE_X_IRAM0_SRAM_LINE_0_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_2_CORE_X_IRAM0_SRAM_LINE_0_SPLITADDR_Msk = 0x3fc000

	// CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3: SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_REG
	// Position of CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_0_Pos = 0x0
	// Bit mask of CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_0_Msk = 0x3
	// Position of CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_1_Pos = 0x2
	// Bit mask of CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_1_Msk = 0xc
	// Position of CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_2_Pos = 0x4
	// Bit mask of CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_CORE_X_IRAM0_SRAM_LINE_1_CATEGORY_2_Msk = 0x30
	// Position of CORE_X_IRAM0_SRAM_LINE_1_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_CORE_X_IRAM0_SRAM_LINE_1_SPLITADDR_Pos = 0xe
	// Bit mask of CORE_X_IRAM0_SRAM_LINE_1_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_3_CORE_X_IRAM0_SRAM_LINE_1_SPLITADDR_Msk = 0x3fc000

	// CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4: SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_REG
	// Position of CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_0_Pos = 0x0
	// Bit mask of CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_0_Msk = 0x3
	// Position of CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_1_Pos = 0x2
	// Bit mask of CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_1_Msk = 0xc
	// Position of CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_2_Pos = 0x4
	// Bit mask of CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_CORE_X_DRAM0_DMA_SRAM_LINE_0_CATEGORY_2_Msk = 0x30
	// Position of CORE_X_DRAM0_DMA_SRAM_LINE_0_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_CORE_X_DRAM0_DMA_SRAM_LINE_0_SPLITADDR_Pos = 0xe
	// Bit mask of CORE_X_DRAM0_DMA_SRAM_LINE_0_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_4_CORE_X_DRAM0_DMA_SRAM_LINE_0_SPLITADDR_Msk = 0x3fc000

	// CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5: SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_REG
	// Position of CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_0_Pos = 0x0
	// Bit mask of CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_0 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_0_Msk = 0x3
	// Position of CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_1_Pos = 0x2
	// Bit mask of CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_1 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_1_Msk = 0xc
	// Position of CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_2_Pos = 0x4
	// Bit mask of CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_2 field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_CORE_X_DRAM0_DMA_SRAM_LINE_1_CATEGORY_2_Msk = 0x30
	// Position of CORE_X_DRAM0_DMA_SRAM_LINE_1_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_CORE_X_DRAM0_DMA_SRAM_LINE_1_SPLITADDR_Pos = 0xe
	// Bit mask of CORE_X_DRAM0_DMA_SRAM_LINE_1_SPLITADDR field.
	SENSITIVE_CORE_X_IRAM0_DRAM0_DMA_SPLIT_LINE_CONSTRAIN_5_CORE_X_DRAM0_DMA_SRAM_LINE_1_SPLITADDR_Msk = 0x3fc000

	// CORE_X_IRAM0_PMS_CONSTRAIN_0: SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_0_REG
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_0_CORE_X_IRAM0_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_0_CORE_X_IRAM0_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit CORE_X_IRAM0_PMS_CONSTRAIN_LOCK.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_0_CORE_X_IRAM0_PMS_CONSTRAIN_LOCK = 0x1

	// CORE_X_IRAM0_PMS_CONSTRAIN_1: SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_REG
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0x0
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x7
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0x3
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0x38
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x6
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x1c0
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x9
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xe00
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0_Pos = 0xc
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_CACHEDATAARRAY_PMS_0_Msk = 0x7000
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS_Pos = 0x12
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_1_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS_Msk = 0x1c0000

	// CORE_X_IRAM0_PMS_CONSTRAIN_2: SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_REG
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x7
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x3
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0x38
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x6
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x1c0
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x9
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xe00
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0_Pos = 0xc
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0 field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_CACHEDATAARRAY_PMS_0_Msk = 0x7000
	// Position of CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS_Pos = 0x12
	// Bit mask of CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS field.
	SENSITIVE_CORE_X_IRAM0_PMS_CONSTRAIN_2_CORE_X_IRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS_Msk = 0x1c0000

	// CORE_0_IRAM0_PMS_MONITOR_0: SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_0_REG
	// Position of CORE_0_IRAM0_PMS_MONITOR_LOCK field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_0_CORE_0_IRAM0_PMS_MONITOR_LOCK_Pos = 0x0
	// Bit mask of CORE_0_IRAM0_PMS_MONITOR_LOCK field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_0_CORE_0_IRAM0_PMS_MONITOR_LOCK_Msk = 0x1
	// Bit CORE_0_IRAM0_PMS_MONITOR_LOCK.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_0_CORE_0_IRAM0_PMS_MONITOR_LOCK = 0x1

	// CORE_0_IRAM0_PMS_MONITOR_1: SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_1_REG
	// Position of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_1_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR_Pos = 0x0
	// Bit mask of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_1_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR_Msk = 0x1
	// Bit CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_1_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_CLR = 0x1
	// Position of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_1_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN_Pos = 0x1
	// Bit mask of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_1_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN_Msk = 0x2
	// Bit CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_1_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_EN = 0x2

	// CORE_0_IRAM0_PMS_MONITOR_2: SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_REG
	// Position of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_Pos = 0x0
	// Bit mask of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR_Msk = 0x1
	// Bit CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_INTR = 0x1
	// Position of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR_Pos = 0x1
	// Bit mask of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR_Msk = 0x2
	// Bit CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WR = 0x2
	// Position of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE_Pos = 0x2
	// Bit mask of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE_Msk = 0x4
	// Bit CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_LOADSTORE = 0x4
	// Position of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD_Pos = 0x3
	// Bit mask of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD_Msk = 0x18
	// Position of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR_Pos = 0x5
	// Bit mask of CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR field.
	SENSITIVE_CORE_0_IRAM0_PMS_MONITOR_2_CORE_0_IRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR_Msk = 0x1fffffe0

	// CORE_X_DRAM0_PMS_CONSTRAIN_0: SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_0_REG
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_0_CORE_X_DRAM0_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_0_CORE_X_DRAM0_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit CORE_X_DRAM0_PMS_CONSTRAIN_LOCK.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_0_CORE_X_DRAM0_PMS_CONSTRAIN_LOCK = 0x1

	// CORE_X_DRAM0_PMS_CONSTRAIN_1: SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_REG
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Pos = 0x0
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_0_Msk = 0x3
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Pos = 0x2
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_1_Msk = 0xc
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Pos = 0x4
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_2_Msk = 0x30
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Pos = 0x6
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_0_PMS_3_Msk = 0xc0
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Pos = 0xc
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_0_Msk = 0x3000
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Pos = 0xe
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_1_Msk = 0xc000
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Pos = 0x10
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_2_Msk = 0x30000
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Pos = 0x12
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3 field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_SRAM_WORLD_1_PMS_3_Msk = 0xc0000
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS_Pos = 0x18
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_0_PMS_Msk = 0x3000000
	// Position of CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS_Pos = 0x1a
	// Bit mask of CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS field.
	SENSITIVE_CORE_X_DRAM0_PMS_CONSTRAIN_1_CORE_X_DRAM0_PMS_CONSTRAIN_ROM_WORLD_1_PMS_Msk = 0xc000000

	// CORE_0_DRAM0_PMS_MONITOR_0: SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_0_REG
	// Position of CORE_0_DRAM0_PMS_MONITOR_LOCK field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_0_CORE_0_DRAM0_PMS_MONITOR_LOCK_Pos = 0x0
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_LOCK field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_0_CORE_0_DRAM0_PMS_MONITOR_LOCK_Msk = 0x1
	// Bit CORE_0_DRAM0_PMS_MONITOR_LOCK.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_0_CORE_0_DRAM0_PMS_MONITOR_LOCK = 0x1

	// CORE_0_DRAM0_PMS_MONITOR_1: SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_1_REG
	// Position of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_1_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR_Pos = 0x0
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_1_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR_Msk = 0x1
	// Bit CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_1_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_CLR = 0x1
	// Position of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_1_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN_Pos = 0x1
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_1_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN_Msk = 0x2
	// Bit CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_1_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_EN = 0x2

	// CORE_0_DRAM0_PMS_MONITOR_2: SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_REG
	// Position of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_Pos = 0x0
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR_Msk = 0x1
	// Bit CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_INTR = 0x1
	// Position of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK_Pos = 0x1
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK_Msk = 0x2
	// Bit CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_LOCK = 0x2
	// Position of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD_Pos = 0x2
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WORLD_Msk = 0xc
	// Position of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR_Pos = 0x4
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_2_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_ADDR_Msk = 0xffffff0

	// CORE_0_DRAM0_PMS_MONITOR_3: SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_3_REG
	// Position of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_3_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR_Pos = 0x0
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_3_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR_Msk = 0x1
	// Bit CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_3_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_WR = 0x1
	// Position of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_3_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN_Pos = 0x1
	// Bit mask of CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN field.
	SENSITIVE_CORE_0_DRAM0_PMS_MONITOR_3_CORE_0_DRAM0_PMS_MONITOR_VIOLATE_STATUS_BYTEEN_Msk = 0x1e

	// CORE_0_PIF_PMS_CONSTRAIN_0: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_0_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_0_CORE_0_PIF_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_0_CORE_0_PIF_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit CORE_0_PIF_PMS_CONSTRAIN_LOCK.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_0_CORE_0_PIF_PMS_CONSTRAIN_LOCK = 0x1

	// CORE_0_PIF_PMS_CONSTRAIN_1: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART_Msk = 0x3
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1_Pos = 0x2
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_1_Msk = 0xc
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0_Pos = 0x4
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_G0SPI_0_Msk = 0x30
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_GPIO field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_GPIO_Pos = 0x6
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_GPIO field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_GPIO_Msk = 0xc0
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE2 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE2_Pos = 0x8
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE2 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE2_Msk = 0x300
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE_Pos = 0xa
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_FE_Msk = 0xc00
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMER_Pos = 0xc
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMER_Msk = 0x3000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RTC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RTC_Pos = 0xe
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RTC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RTC_Msk = 0xc000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX_Pos = 0x10
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_IO_MUX_Msk = 0x30000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WDG field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WDG_Pos = 0x12
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WDG field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WDG_Msk = 0xc0000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_MISC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_MISC_Pos = 0x18
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_MISC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_MISC_Msk = 0x3000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_Pos = 0x1a
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_Msk = 0xc000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART1_Pos = 0x1e
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_1_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UART1_Msk = 0xc0000000

	// CORE_0_PIF_PMS_CONSTRAIN_2: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_Msk = 0x3
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0_Pos = 0x4
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2C_EXT0_Msk = 0x30
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0_Pos = 0x6
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_UHCI0_Msk = 0xc0
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RMT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RMT_Pos = 0xa
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RMT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RMT_Msk = 0xc00
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LEDC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LEDC_Pos = 0x10
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LEDC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_LEDC_Msk = 0x30000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BB field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BB_Pos = 0x16
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BB field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BB_Msk = 0xc00000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP_Pos = 0x1a
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP_Msk = 0xc000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1_Pos = 0x1c
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_TIMERGROUP1_Msk = 0x30000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER_Pos = 0x1e
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_2_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTIMER_Msk = 0xc0000000

	// CORE_0_PIF_PMS_CONSTRAIN_3: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SPI_2_Msk = 0x3
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL_Pos = 0x4
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_CTRL_Msk = 0x30
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CAN field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CAN_Pos = 0xa
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CAN field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CAN_Msk = 0xc00
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S1_Pos = 0xe
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_I2S1_Msk = 0xc000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RWBT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RWBT_Pos = 0x16
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RWBT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_RWBT_Msk = 0xc00000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC_Pos = 0x1a
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WIFIMAC_Msk = 0xc000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWR field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWR_Pos = 0x1c
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWR field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_3_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_PWR_Msk = 0x30000000

	// CORE_0_PIF_PMS_CONSTRAIN_4: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP_Pos = 0x2
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_WRAP_Msk = 0xc
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI_Pos = 0x4
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_PERI_Msk = 0x30
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA_Pos = 0x6
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CRYPTO_DMA_Msk = 0xc0
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC_Pos = 0x8
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_APB_ADC_Msk = 0x300
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR_Pos = 0xc
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_BT_PWR_Msk = 0x3000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE_Pos = 0xe
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_USB_DEVICE_Msk = 0xc000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM_Pos = 0x10
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SYSTEM_Msk = 0x30000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE_Pos = 0x12
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_SENSITIVE_Msk = 0xc0000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT_Pos = 0x14
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_INTERRUPT_Msk = 0x300000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY_Pos = 0x16
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DMA_COPY_Msk = 0xc00000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG_Pos = 0x18
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_CACHE_CONFIG_Msk = 0x3000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_AD field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_AD_Pos = 0x1a
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_AD field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_AD_Msk = 0xc000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DIO field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DIO_Pos = 0x1c
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DIO field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_DIO_Msk = 0x30000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER_Pos = 0x1e
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_4_CORE_0_PIF_PMS_CONSTRAIN_WORLD_0_WORLD_CONTROLLER_Msk = 0xc0000000

	// CORE_0_PIF_PMS_CONSTRAIN_5: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART_Msk = 0x3
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1_Pos = 0x2
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_1_Msk = 0xc
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0_Pos = 0x4
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_G0SPI_0_Msk = 0x30
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_GPIO field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_GPIO_Pos = 0x6
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_GPIO field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_GPIO_Msk = 0xc0
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE2 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE2_Pos = 0x8
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE2 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE2_Msk = 0x300
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE_Pos = 0xa
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_FE_Msk = 0xc00
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMER_Pos = 0xc
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMER_Msk = 0x3000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RTC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RTC_Pos = 0xe
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RTC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RTC_Msk = 0xc000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX_Pos = 0x10
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_IO_MUX_Msk = 0x30000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WDG field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WDG_Pos = 0x12
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WDG field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WDG_Msk = 0xc0000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_MISC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_MISC_Pos = 0x18
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_MISC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_MISC_Msk = 0x3000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_Pos = 0x1a
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_Msk = 0xc000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART1_Pos = 0x1e
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_5_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UART1_Msk = 0xc0000000

	// CORE_0_PIF_PMS_CONSTRAIN_6: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_Msk = 0x3
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0_Pos = 0x4
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2C_EXT0_Msk = 0x30
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0_Pos = 0x6
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_UHCI0_Msk = 0xc0
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RMT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RMT_Pos = 0xa
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RMT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RMT_Msk = 0xc00
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LEDC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LEDC_Pos = 0x10
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LEDC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_LEDC_Msk = 0x30000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BB field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BB_Pos = 0x16
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BB field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BB_Msk = 0xc00000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP_Pos = 0x1a
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP_Msk = 0xc000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1_Pos = 0x1c
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_TIMERGROUP1_Msk = 0x30000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER_Pos = 0x1e
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_6_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTIMER_Msk = 0xc0000000

	// CORE_0_PIF_PMS_CONSTRAIN_7: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SPI_2_Msk = 0x3
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL_Pos = 0x4
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_CTRL_Msk = 0x30
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CAN field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CAN_Pos = 0xa
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CAN field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CAN_Msk = 0xc00
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S1_Pos = 0xe
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_I2S1_Msk = 0xc000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RWBT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RWBT_Pos = 0x16
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RWBT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_RWBT_Msk = 0xc00000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC_Pos = 0x1a
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WIFIMAC_Msk = 0xc000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWR field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWR_Pos = 0x1c
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWR field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_7_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_PWR_Msk = 0x30000000

	// CORE_0_PIF_PMS_CONSTRAIN_8: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP_Pos = 0x2
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_WRAP_Msk = 0xc
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI_Pos = 0x4
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_PERI_Msk = 0x30
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA_Pos = 0x6
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CRYPTO_DMA_Msk = 0xc0
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC_Pos = 0x8
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_APB_ADC_Msk = 0x300
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR_Pos = 0xc
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_BT_PWR_Msk = 0x3000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE_Pos = 0xe
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_USB_DEVICE_Msk = 0xc000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM_Pos = 0x10
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SYSTEM_Msk = 0x30000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE_Pos = 0x12
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_SENSITIVE_Msk = 0xc0000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT_Pos = 0x14
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_INTERRUPT_Msk = 0x300000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY_Pos = 0x16
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DMA_COPY_Msk = 0xc00000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG_Pos = 0x18
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_CACHE_CONFIG_Msk = 0x3000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_AD field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_AD_Pos = 0x1a
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_AD field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_AD_Msk = 0xc000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DIO field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DIO_Pos = 0x1c
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DIO field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_DIO_Msk = 0x30000000
	// Position of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER_Pos = 0x1e
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_8_CORE_0_PIF_PMS_CONSTRAIN_WORLD_1_WORLD_CONTROLLER_Msk = 0xc0000000

	// CORE_0_PIF_PMS_CONSTRAIN_9: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_9_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_9_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_9_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_0_Msk = 0x7ff
	// Position of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_9_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1_Pos = 0xb
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1 field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_9_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_SPLTADDR_WORLD_1_Msk = 0x3ff800

	// CORE_0_PIF_PMS_CONSTRAIN_10: SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_REG
	// Position of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_L_Msk = 0x7
	// Position of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H_Pos = 0x3
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_0_H_Msk = 0x38
	// Position of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L_Pos = 0x6
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_L_Msk = 0x1c0
	// Position of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H_Pos = 0x9
	// Bit mask of CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H field.
	SENSITIVE_CORE_0_PIF_PMS_CONSTRAIN_10_CORE_0_PIF_PMS_CONSTRAIN_RTCFAST_WORLD_1_H_Msk = 0xe00

	// REGION_PMS_CONSTRAIN_0: SENSITIVE_REGION_PMS_CONSTRAIN_0_REG
	// Position of REGION_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_REGION_PMS_CONSTRAIN_0_REGION_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_REGION_PMS_CONSTRAIN_0_REGION_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit REGION_PMS_CONSTRAIN_LOCK.
	SENSITIVE_REGION_PMS_CONSTRAIN_0_REGION_PMS_CONSTRAIN_LOCK = 0x1

	// REGION_PMS_CONSTRAIN_1: SENSITIVE_REGION_PMS_CONSTRAIN_1_REG
	// Position of REGION_PMS_CONSTRAIN_WORLD_0_AREA_0 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_0_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_0_AREA_0 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_0_Msk = 0x3
	// Position of REGION_PMS_CONSTRAIN_WORLD_0_AREA_1 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_1_Pos = 0x2
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_0_AREA_1 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_1_Msk = 0xc
	// Position of REGION_PMS_CONSTRAIN_WORLD_0_AREA_2 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_2_Pos = 0x4
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_0_AREA_2 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_2_Msk = 0x30
	// Position of REGION_PMS_CONSTRAIN_WORLD_0_AREA_3 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_3_Pos = 0x6
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_0_AREA_3 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_3_Msk = 0xc0
	// Position of REGION_PMS_CONSTRAIN_WORLD_0_AREA_4 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_4_Pos = 0x8
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_0_AREA_4 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_4_Msk = 0x300
	// Position of REGION_PMS_CONSTRAIN_WORLD_0_AREA_5 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_5_Pos = 0xa
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_0_AREA_5 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_5_Msk = 0xc00
	// Position of REGION_PMS_CONSTRAIN_WORLD_0_AREA_6 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_6_Pos = 0xc
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_0_AREA_6 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_1_REGION_PMS_CONSTRAIN_WORLD_0_AREA_6_Msk = 0x3000

	// REGION_PMS_CONSTRAIN_2: SENSITIVE_REGION_PMS_CONSTRAIN_2_REG
	// Position of REGION_PMS_CONSTRAIN_WORLD_1_AREA_0 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_0_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_1_AREA_0 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_0_Msk = 0x3
	// Position of REGION_PMS_CONSTRAIN_WORLD_1_AREA_1 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_1_Pos = 0x2
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_1_AREA_1 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_1_Msk = 0xc
	// Position of REGION_PMS_CONSTRAIN_WORLD_1_AREA_2 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_2_Pos = 0x4
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_1_AREA_2 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_2_Msk = 0x30
	// Position of REGION_PMS_CONSTRAIN_WORLD_1_AREA_3 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_3_Pos = 0x6
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_1_AREA_3 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_3_Msk = 0xc0
	// Position of REGION_PMS_CONSTRAIN_WORLD_1_AREA_4 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_4_Pos = 0x8
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_1_AREA_4 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_4_Msk = 0x300
	// Position of REGION_PMS_CONSTRAIN_WORLD_1_AREA_5 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_5_Pos = 0xa
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_1_AREA_5 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_5_Msk = 0xc00
	// Position of REGION_PMS_CONSTRAIN_WORLD_1_AREA_6 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_6_Pos = 0xc
	// Bit mask of REGION_PMS_CONSTRAIN_WORLD_1_AREA_6 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_2_REGION_PMS_CONSTRAIN_WORLD_1_AREA_6_Msk = 0x3000

	// REGION_PMS_CONSTRAIN_3: SENSITIVE_REGION_PMS_CONSTRAIN_3_REG
	// Position of REGION_PMS_CONSTRAIN_ADDR_0 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_3_REGION_PMS_CONSTRAIN_ADDR_0_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_ADDR_0 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_3_REGION_PMS_CONSTRAIN_ADDR_0_Msk = 0x3fffffff

	// REGION_PMS_CONSTRAIN_4: SENSITIVE_REGION_PMS_CONSTRAIN_4_REG
	// Position of REGION_PMS_CONSTRAIN_ADDR_1 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_4_REGION_PMS_CONSTRAIN_ADDR_1_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_ADDR_1 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_4_REGION_PMS_CONSTRAIN_ADDR_1_Msk = 0x3fffffff

	// REGION_PMS_CONSTRAIN_5: SENSITIVE_REGION_PMS_CONSTRAIN_5_REG
	// Position of REGION_PMS_CONSTRAIN_ADDR_2 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_5_REGION_PMS_CONSTRAIN_ADDR_2_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_ADDR_2 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_5_REGION_PMS_CONSTRAIN_ADDR_2_Msk = 0x3fffffff

	// REGION_PMS_CONSTRAIN_6: SENSITIVE_REGION_PMS_CONSTRAIN_6_REG
	// Position of REGION_PMS_CONSTRAIN_ADDR_3 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_6_REGION_PMS_CONSTRAIN_ADDR_3_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_ADDR_3 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_6_REGION_PMS_CONSTRAIN_ADDR_3_Msk = 0x3fffffff

	// REGION_PMS_CONSTRAIN_7: SENSITIVE_REGION_PMS_CONSTRAIN_7_REG
	// Position of REGION_PMS_CONSTRAIN_ADDR_4 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_7_REGION_PMS_CONSTRAIN_ADDR_4_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_ADDR_4 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_7_REGION_PMS_CONSTRAIN_ADDR_4_Msk = 0x3fffffff

	// REGION_PMS_CONSTRAIN_8: SENSITIVE_REGION_PMS_CONSTRAIN_8_REG
	// Position of REGION_PMS_CONSTRAIN_ADDR_5 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_8_REGION_PMS_CONSTRAIN_ADDR_5_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_ADDR_5 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_8_REGION_PMS_CONSTRAIN_ADDR_5_Msk = 0x3fffffff

	// REGION_PMS_CONSTRAIN_9: SENSITIVE_REGION_PMS_CONSTRAIN_9_REG
	// Position of REGION_PMS_CONSTRAIN_ADDR_6 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_9_REGION_PMS_CONSTRAIN_ADDR_6_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_ADDR_6 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_9_REGION_PMS_CONSTRAIN_ADDR_6_Msk = 0x3fffffff

	// REGION_PMS_CONSTRAIN_10: SENSITIVE_REGION_PMS_CONSTRAIN_10_REG
	// Position of REGION_PMS_CONSTRAIN_ADDR_7 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_10_REGION_PMS_CONSTRAIN_ADDR_7_Pos = 0x0
	// Bit mask of REGION_PMS_CONSTRAIN_ADDR_7 field.
	SENSITIVE_REGION_PMS_CONSTRAIN_10_REGION_PMS_CONSTRAIN_ADDR_7_Msk = 0x3fffffff

	// CORE_0_PIF_PMS_MONITOR_0: SENSITIVE_CORE_0_PIF_PMS_MONITOR_0_REG
	// Position of CORE_0_PIF_PMS_MONITOR_LOCK field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_0_CORE_0_PIF_PMS_MONITOR_LOCK_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_MONITOR_LOCK field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_0_CORE_0_PIF_PMS_MONITOR_LOCK_Msk = 0x1
	// Bit CORE_0_PIF_PMS_MONITOR_LOCK.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_0_CORE_0_PIF_PMS_MONITOR_LOCK = 0x1

	// CORE_0_PIF_PMS_MONITOR_1: SENSITIVE_CORE_0_PIF_PMS_MONITOR_1_REG
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_1_CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_1_CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR_Msk = 0x1
	// Bit CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_1_CORE_0_PIF_PMS_MONITOR_VIOLATE_CLR = 0x1
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_1_CORE_0_PIF_PMS_MONITOR_VIOLATE_EN_Pos = 0x1
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_1_CORE_0_PIF_PMS_MONITOR_VIOLATE_EN_Msk = 0x2
	// Bit CORE_0_PIF_PMS_MONITOR_VIOLATE_EN.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_1_CORE_0_PIF_PMS_MONITOR_VIOLATE_EN = 0x2

	// CORE_0_PIF_PMS_MONITOR_2: SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_REG
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR_Msk = 0x1
	// Bit CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_INTR = 0x1
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0 field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0_Pos = 0x1
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0 field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0_Msk = 0x2
	// Bit CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HPORT_0 = 0x2
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE_Pos = 0x2
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HSIZE_Msk = 0x1c
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE_Pos = 0x5
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE_Msk = 0x20
	// Bit CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWRITE = 0x20
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD_Pos = 0x6
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_2_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HWORLD_Msk = 0xc0

	// CORE_0_PIF_PMS_MONITOR_3: SENSITIVE_CORE_0_PIF_PMS_MONITOR_3_REG
	// Position of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_3_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_3_CORE_0_PIF_PMS_MONITOR_VIOLATE_STATUS_HADDR_Msk = 0xffffffff

	// CORE_0_PIF_PMS_MONITOR_4: SENSITIVE_CORE_0_PIF_PMS_MONITOR_4_REG
	// Position of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_4_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_4_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR_Msk = 0x1
	// Bit CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_4_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_CLR = 0x1
	// Position of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_4_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN_Pos = 0x1
	// Bit mask of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_4_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN_Msk = 0x2
	// Bit CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_4_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_EN = 0x2

	// CORE_0_PIF_PMS_MONITOR_5: SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_REG
	// Position of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR_Msk = 0x1
	// Bit CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_INTR = 0x1
	// Position of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE_Pos = 0x1
	// Bit mask of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HSIZE_Msk = 0x6
	// Position of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD_Pos = 0x3
	// Bit mask of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_5_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HWORLD_Msk = 0x18

	// CORE_0_PIF_PMS_MONITOR_6: SENSITIVE_CORE_0_PIF_PMS_MONITOR_6_REG
	// Position of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_6_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR_Pos = 0x0
	// Bit mask of CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR field.
	SENSITIVE_CORE_0_PIF_PMS_MONITOR_6_CORE_0_PIF_PMS_MONITOR_NONWORD_VIOLATE_STATUS_HADDR_Msk = 0xffffffff

	// BACKUP_BUS_PMS_CONSTRAIN_0: SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_0_REG
	// Position of BACKUP_BUS_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_0_BACKUP_BUS_PMS_CONSTRAIN_LOCK_Pos = 0x0
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_LOCK field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_0_BACKUP_BUS_PMS_CONSTRAIN_LOCK_Msk = 0x1
	// Bit BACKUP_BUS_PMS_CONSTRAIN_LOCK.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_0_BACKUP_BUS_PMS_CONSTRAIN_LOCK = 0x1

	// BACKUP_BUS_PMS_CONSTRAIN_1: SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_REG
	// Position of BACKUP_BUS_PMS_CONSTRAIN_UART field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_UART_Pos = 0x0
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_UART field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_UART_Msk = 0x3
	// Position of BACKUP_BUS_PMS_CONSTRAIN_G0SPI_1 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_1_Pos = 0x2
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_G0SPI_1 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_1_Msk = 0xc
	// Position of BACKUP_BUS_PMS_CONSTRAIN_G0SPI_0 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_0_Pos = 0x4
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_G0SPI_0 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_G0SPI_0_Msk = 0x30
	// Position of BACKUP_BUS_PMS_CONSTRAIN_GPIO field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_GPIO_Pos = 0x6
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_GPIO field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_GPIO_Msk = 0xc0
	// Position of BACKUP_BUS_PMS_CONSTRAIN_FE2 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_FE2_Pos = 0x8
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_FE2 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_FE2_Msk = 0x300
	// Position of BACKUP_BUS_PMS_CONSTRAIN_FE field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_FE_Pos = 0xa
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_FE field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_FE_Msk = 0xc00
	// Position of BACKUP_BUS_PMS_CONSTRAIN_TIMER field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_TIMER_Pos = 0xc
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_TIMER field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_TIMER_Msk = 0x3000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_RTC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_RTC_Pos = 0xe
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_RTC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_RTC_Msk = 0xc000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_IO_MUX field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_IO_MUX_Pos = 0x10
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_IO_MUX field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_IO_MUX_Msk = 0x30000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_WDG field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_WDG_Pos = 0x12
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_WDG field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_WDG_Msk = 0xc0000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_MISC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_MISC_Pos = 0x18
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_MISC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_MISC_Msk = 0x3000000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_I2C field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_I2C_Pos = 0x1a
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_I2C field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_I2C_Msk = 0xc000000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_UART1 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_UART1_Pos = 0x1e
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_UART1 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_1_BACKUP_BUS_PMS_CONSTRAIN_UART1_Msk = 0xc0000000

	// BACKUP_BUS_PMS_CONSTRAIN_2: SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_REG
	// Position of BACKUP_BUS_PMS_CONSTRAIN_BT field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_BT_Pos = 0x0
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_BT field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_BT_Msk = 0x3
	// Position of BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT0 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT0_Pos = 0x4
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT0 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_I2C_EXT0_Msk = 0x30
	// Position of BACKUP_BUS_PMS_CONSTRAIN_UHCI0 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_UHCI0_Pos = 0x6
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_UHCI0 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_UHCI0_Msk = 0xc0
	// Position of BACKUP_BUS_PMS_CONSTRAIN_RMT field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_RMT_Pos = 0xa
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_RMT field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_RMT_Msk = 0xc00
	// Position of BACKUP_BUS_PMS_CONSTRAIN_LEDC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_LEDC_Pos = 0x10
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_LEDC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_LEDC_Msk = 0x30000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_BB field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_BB_Pos = 0x16
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_BB field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_BB_Msk = 0xc00000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP_Pos = 0x1a
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP_Msk = 0xc000000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP1 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP1_Pos = 0x1c
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP1 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_TIMERGROUP1_Msk = 0x30000000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_SYSTIMER field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_SYSTIMER_Pos = 0x1e
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_SYSTIMER field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_2_BACKUP_BUS_PMS_CONSTRAIN_SYSTIMER_Msk = 0xc0000000

	// BACKUP_BUS_PMS_CONSTRAIN_3: SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_REG
	// Position of BACKUP_BUS_PMS_CONSTRAIN_SPI_2 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_SPI_2_Pos = 0x0
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_SPI_2 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_SPI_2_Msk = 0x3
	// Position of BACKUP_BUS_PMS_CONSTRAIN_APB_CTRL field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_APB_CTRL_Pos = 0x4
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_APB_CTRL field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_APB_CTRL_Msk = 0x30
	// Position of BACKUP_BUS_PMS_CONSTRAIN_CAN field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_CAN_Pos = 0xa
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_CAN field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_CAN_Msk = 0xc00
	// Position of BACKUP_BUS_PMS_CONSTRAIN_I2S1 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_I2S1_Pos = 0xe
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_I2S1 field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_I2S1_Msk = 0xc000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_RWBT field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_RWBT_Pos = 0x16
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_RWBT field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_RWBT_Msk = 0xc00000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_WIFIMAC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_WIFIMAC_Pos = 0x1a
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_WIFIMAC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_WIFIMAC_Msk = 0xc000000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_PWR field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_PWR_Pos = 0x1c
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_PWR field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_3_BACKUP_BUS_PMS_CONSTRAIN_PWR_Msk = 0x30000000

	// BACKUP_BUS_PMS_CONSTRAIN_4: SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_REG
	// Position of BACKUP_BUS_PMS_CONSTRAIN_USB_WRAP field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_USB_WRAP_Pos = 0x2
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_USB_WRAP field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_USB_WRAP_Msk = 0xc
	// Position of BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_PERI field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_PERI_Pos = 0x4
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_PERI field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_PERI_Msk = 0x30
	// Position of BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_DMA field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_DMA_Pos = 0x6
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_DMA field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_CRYPTO_DMA_Msk = 0xc0
	// Position of BACKUP_BUS_PMS_CONSTRAIN_APB_ADC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_APB_ADC_Pos = 0x8
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_APB_ADC field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_APB_ADC_Msk = 0x300
	// Position of BACKUP_BUS_PMS_CONSTRAIN_BT_PWR field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_BT_PWR_Pos = 0xc
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_BT_PWR field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_BT_PWR_Msk = 0x3000
	// Position of BACKUP_BUS_PMS_CONSTRAIN_USB_DEVICE field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_USB_DEVICE_Pos = 0xe
	// Bit mask of BACKUP_BUS_PMS_CONSTRAIN_USB_DEVICE field.
	SENSITIVE_BACKUP_BUS_PMS_CONSTRAIN_4_BACKUP_BUS_PMS_CONSTRAIN_USB_DEVICE_Msk = 0xc000

	// BACKUP_BUS_PMS_MONITOR_0: SENSITIVE_BACKUP_BUS_PMS_MONITOR_0_REG
	// Position of BACKUP_BUS_PMS_MONITOR_LOCK field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_0_BACKUP_BUS_PMS_MONITOR_LOCK_Pos = 0x0
	// Bit mask of BACKUP_BUS_PMS_MONITOR_LOCK field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_0_BACKUP_BUS_PMS_MONITOR_LOCK_Msk = 0x1
	// Bit BACKUP_BUS_PMS_MONITOR_LOCK.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_0_BACKUP_BUS_PMS_MONITOR_LOCK = 0x1

	// BACKUP_BUS_PMS_MONITOR_1: SENSITIVE_BACKUP_BUS_PMS_MONITOR_1_REG
	// Position of BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_1_BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR_Pos = 0x0
	// Bit mask of BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_1_BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR_Msk = 0x1
	// Bit BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_1_BACKUP_BUS_PMS_MONITOR_VIOLATE_CLR = 0x1
	// Position of BACKUP_BUS_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_1_BACKUP_BUS_PMS_MONITOR_VIOLATE_EN_Pos = 0x1
	// Bit mask of BACKUP_BUS_PMS_MONITOR_VIOLATE_EN field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_1_BACKUP_BUS_PMS_MONITOR_VIOLATE_EN_Msk = 0x2
	// Bit BACKUP_BUS_PMS_MONITOR_VIOLATE_EN.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_1_BACKUP_BUS_PMS_MONITOR_VIOLATE_EN = 0x2

	// BACKUP_BUS_PMS_MONITOR_2: SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_REG
	// Position of BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR_Pos = 0x0
	// Bit mask of BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR_Msk = 0x1
	// Bit BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_INTR = 0x1
	// Position of BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HTRANS field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HTRANS_Pos = 0x1
	// Bit mask of BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HTRANS field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HTRANS_Msk = 0x6
	// Position of BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HSIZE field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HSIZE_Pos = 0x3
	// Bit mask of BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HSIZE field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HSIZE_Msk = 0x38
	// Position of BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE_Pos = 0x6
	// Bit mask of BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE_Msk = 0x40
	// Bit BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_2_BACKUP_BUS_PMS_MONITOR_VIOLATE_STATUS_HWRITE = 0x40

	// BACKUP_BUS_PMS_MONITOR_3: SENSITIVE_BACKUP_BUS_PMS_MONITOR_3_REG
	// Position of BACKUP_BUS_PMS_MONITOR_VIOLATE_HADDR field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_3_BACKUP_BUS_PMS_MONITOR_VIOLATE_HADDR_Pos = 0x0
	// Bit mask of BACKUP_BUS_PMS_MONITOR_VIOLATE_HADDR field.
	SENSITIVE_BACKUP_BUS_PMS_MONITOR_3_BACKUP_BUS_PMS_MONITOR_VIOLATE_HADDR_Msk = 0xffffffff

	// CLOCK_GATE: SENSITIVE_CLOCK_GATE_REG
	// Position of CLK_EN field.
	SENSITIVE_CLOCK_GATE_CLK_EN_Pos = 0x0
	// Bit mask of CLK_EN field.
	SENSITIVE_CLOCK_GATE_CLK_EN_Msk = 0x1
	// Bit CLK_EN.
	SENSITIVE_CLOCK_GATE_CLK_EN = 0x1

	// DATE: SENSITIVE_DATE_REG
	// Position of DATE field.
	SENSITIVE_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	SENSITIVE_DATE_DATE_Msk = 0xfffffff
)

// Bitfields for SHA: Peripheral SHA
const (
	// MODE: Initial configuration register.
	// Position of MODE field.
	SHA_MODE_MODE_Pos = 0x0
	// Bit mask of MODE field.
	SHA_MODE_MODE_Msk = 0x7

	// T_STRING: SHA 512/t configuration register 0.
	// Position of T_STRING field.
	SHA_T_STRING_T_STRING_Pos = 0x0
	// Bit mask of T_STRING field.
	SHA_T_STRING_T_STRING_Msk = 0xffffffff

	// T_LENGTH: SHA 512/t configuration register 1.
	// Position of T_LENGTH field.
	SHA_T_LENGTH_T_LENGTH_Pos = 0x0
	// Bit mask of T_LENGTH field.
	SHA_T_LENGTH_T_LENGTH_Msk = 0x3f

	// DMA_BLOCK_NUM: DMA configuration register 0.
	// Position of DMA_BLOCK_NUM field.
	SHA_DMA_BLOCK_NUM_DMA_BLOCK_NUM_Pos = 0x0
	// Bit mask of DMA_BLOCK_NUM field.
	SHA_DMA_BLOCK_NUM_DMA_BLOCK_NUM_Msk = 0x3f

	// START: Typical SHA configuration register 0.
	// Position of START field.
	SHA_START_START_Pos = 0x1
	// Bit mask of START field.
	SHA_START_START_Msk = 0xfffffffe

	// CONTINUE: Typical SHA configuration register 1.
	// Position of CONTINUE field.
	SHA_CONTINUE_CONTINUE_Pos = 0x1
	// Bit mask of CONTINUE field.
	SHA_CONTINUE_CONTINUE_Msk = 0xfffffffe

	// BUSY: Busy register.
	// Position of STATE field.
	SHA_BUSY_STATE_Pos = 0x0
	// Bit mask of STATE field.
	SHA_BUSY_STATE_Msk = 0x1
	// Bit STATE.
	SHA_BUSY_STATE = 0x1

	// DMA_START: DMA configuration register 1.
	// Position of DMA_START field.
	SHA_DMA_START_DMA_START_Pos = 0x0
	// Bit mask of DMA_START field.
	SHA_DMA_START_DMA_START_Msk = 0x1
	// Bit DMA_START.
	SHA_DMA_START_DMA_START = 0x1

	// DMA_CONTINUE: DMA configuration register 2.
	// Position of DMA_CONTINUE field.
	SHA_DMA_CONTINUE_DMA_CONTINUE_Pos = 0x0
	// Bit mask of DMA_CONTINUE field.
	SHA_DMA_CONTINUE_DMA_CONTINUE_Msk = 0x1
	// Bit DMA_CONTINUE.
	SHA_DMA_CONTINUE_DMA_CONTINUE = 0x1

	// CLEAR_IRQ: Interrupt clear register.
	// Position of CLEAR_INTERRUPT field.
	SHA_CLEAR_IRQ_CLEAR_INTERRUPT_Pos = 0x0
	// Bit mask of CLEAR_INTERRUPT field.
	SHA_CLEAR_IRQ_CLEAR_INTERRUPT_Msk = 0x1
	// Bit CLEAR_INTERRUPT.
	SHA_CLEAR_IRQ_CLEAR_INTERRUPT = 0x1

	// IRQ_ENA: Interrupt enable register.
	// Position of INTERRUPT_ENA field.
	SHA_IRQ_ENA_INTERRUPT_ENA_Pos = 0x0
	// Bit mask of INTERRUPT_ENA field.
	SHA_IRQ_ENA_INTERRUPT_ENA_Msk = 0x1
	// Bit INTERRUPT_ENA.
	SHA_IRQ_ENA_INTERRUPT_ENA = 0x1

	// DATE: Date register.
	// Position of DATE field.
	SHA_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	SHA_DATE_DATE_Msk = 0x3fffffff
)

// Bitfields for SPI0: Peripheral SPI0
const (
	// CTRL: SPI0 control register.
	// Position of FDUMMY_OUT field.
	SPI0_CTRL_FDUMMY_OUT_Pos = 0x3
	// Bit mask of FDUMMY_OUT field.
	SPI0_CTRL_FDUMMY_OUT_Msk = 0x8
	// Bit FDUMMY_OUT.
	SPI0_CTRL_FDUMMY_OUT = 0x8
	// Position of FCMD_DUAL field.
	SPI0_CTRL_FCMD_DUAL_Pos = 0x7
	// Bit mask of FCMD_DUAL field.
	SPI0_CTRL_FCMD_DUAL_Msk = 0x80
	// Bit FCMD_DUAL.
	SPI0_CTRL_FCMD_DUAL = 0x80
	// Position of FCMD_QUAD field.
	SPI0_CTRL_FCMD_QUAD_Pos = 0x8
	// Bit mask of FCMD_QUAD field.
	SPI0_CTRL_FCMD_QUAD_Msk = 0x100
	// Bit FCMD_QUAD.
	SPI0_CTRL_FCMD_QUAD = 0x100
	// Position of FASTRD_MODE field.
	SPI0_CTRL_FASTRD_MODE_Pos = 0xd
	// Bit mask of FASTRD_MODE field.
	SPI0_CTRL_FASTRD_MODE_Msk = 0x2000
	// Bit FASTRD_MODE.
	SPI0_CTRL_FASTRD_MODE = 0x2000
	// Position of FREAD_DUAL field.
	SPI0_CTRL_FREAD_DUAL_Pos = 0xe
	// Bit mask of FREAD_DUAL field.
	SPI0_CTRL_FREAD_DUAL_Msk = 0x4000
	// Bit FREAD_DUAL.
	SPI0_CTRL_FREAD_DUAL = 0x4000
	// Position of Q_POL field.
	SPI0_CTRL_Q_POL_Pos = 0x12
	// Bit mask of Q_POL field.
	SPI0_CTRL_Q_POL_Msk = 0x40000
	// Bit Q_POL.
	SPI0_CTRL_Q_POL = 0x40000
	// Position of D_POL field.
	SPI0_CTRL_D_POL_Pos = 0x13
	// Bit mask of D_POL field.
	SPI0_CTRL_D_POL_Msk = 0x80000
	// Bit D_POL.
	SPI0_CTRL_D_POL = 0x80000
	// Position of FREAD_QUAD field.
	SPI0_CTRL_FREAD_QUAD_Pos = 0x14
	// Bit mask of FREAD_QUAD field.
	SPI0_CTRL_FREAD_QUAD_Msk = 0x100000
	// Bit FREAD_QUAD.
	SPI0_CTRL_FREAD_QUAD = 0x100000
	// Position of WP field.
	SPI0_CTRL_WP_Pos = 0x15
	// Bit mask of WP field.
	SPI0_CTRL_WP_Msk = 0x200000
	// Bit WP.
	SPI0_CTRL_WP = 0x200000
	// Position of FREAD_DIO field.
	SPI0_CTRL_FREAD_DIO_Pos = 0x17
	// Bit mask of FREAD_DIO field.
	SPI0_CTRL_FREAD_DIO_Msk = 0x800000
	// Bit FREAD_DIO.
	SPI0_CTRL_FREAD_DIO = 0x800000
	// Position of FREAD_QIO field.
	SPI0_CTRL_FREAD_QIO_Pos = 0x18
	// Bit mask of FREAD_QIO field.
	SPI0_CTRL_FREAD_QIO_Msk = 0x1000000
	// Bit FREAD_QIO.
	SPI0_CTRL_FREAD_QIO = 0x1000000

	// CTRL1: SPI0 control1 register.
	// Position of CLK_MODE field.
	SPI0_CTRL1_CLK_MODE_Pos = 0x0
	// Bit mask of CLK_MODE field.
	SPI0_CTRL1_CLK_MODE_Msk = 0x3
	// Position of RXFIFO_RST field.
	SPI0_CTRL1_RXFIFO_RST_Pos = 0x1e
	// Bit mask of RXFIFO_RST field.
	SPI0_CTRL1_RXFIFO_RST_Msk = 0x40000000
	// Bit RXFIFO_RST.
	SPI0_CTRL1_RXFIFO_RST = 0x40000000

	// CTRL2: SPI0 control2 register.
	// Position of CS_SETUP_TIME field.
	SPI0_CTRL2_CS_SETUP_TIME_Pos = 0x0
	// Bit mask of CS_SETUP_TIME field.
	SPI0_CTRL2_CS_SETUP_TIME_Msk = 0x1f
	// Position of CS_HOLD_TIME field.
	SPI0_CTRL2_CS_HOLD_TIME_Pos = 0x5
	// Bit mask of CS_HOLD_TIME field.
	SPI0_CTRL2_CS_HOLD_TIME_Msk = 0x3e0
	// Position of CS_HOLD_DELAY field.
	SPI0_CTRL2_CS_HOLD_DELAY_Pos = 0x19
	// Bit mask of CS_HOLD_DELAY field.
	SPI0_CTRL2_CS_HOLD_DELAY_Msk = 0x7e000000
	// Position of SYNC_RESET field.
	SPI0_CTRL2_SYNC_RESET_Pos = 0x1f
	// Bit mask of SYNC_RESET field.
	SPI0_CTRL2_SYNC_RESET_Msk = 0x80000000
	// Bit SYNC_RESET.
	SPI0_CTRL2_SYNC_RESET = 0x80000000

	// CLOCK: SPI clock division control register.
	// Position of CLKCNT_L field.
	SPI0_CLOCK_CLKCNT_L_Pos = 0x0
	// Bit mask of CLKCNT_L field.
	SPI0_CLOCK_CLKCNT_L_Msk = 0xff
	// Position of CLKCNT_H field.
	SPI0_CLOCK_CLKCNT_H_Pos = 0x8
	// Bit mask of CLKCNT_H field.
	SPI0_CLOCK_CLKCNT_H_Msk = 0xff00
	// Position of CLKCNT_N field.
	SPI0_CLOCK_CLKCNT_N_Pos = 0x10
	// Bit mask of CLKCNT_N field.
	SPI0_CLOCK_CLKCNT_N_Msk = 0xff0000
	// Position of CLK_EQU_SYSCLK field.
	SPI0_CLOCK_CLK_EQU_SYSCLK_Pos = 0x1f
	// Bit mask of CLK_EQU_SYSCLK field.
	SPI0_CLOCK_CLK_EQU_SYSCLK_Msk = 0x80000000
	// Bit CLK_EQU_SYSCLK.
	SPI0_CLOCK_CLK_EQU_SYSCLK = 0x80000000

	// USER: SPI0 user register.
	// Position of CS_HOLD field.
	SPI0_USER_CS_HOLD_Pos = 0x6
	// Bit mask of CS_HOLD field.
	SPI0_USER_CS_HOLD_Msk = 0x40
	// Bit CS_HOLD.
	SPI0_USER_CS_HOLD = 0x40
	// Position of CS_SETUP field.
	SPI0_USER_CS_SETUP_Pos = 0x7
	// Bit mask of CS_SETUP field.
	SPI0_USER_CS_SETUP_Msk = 0x80
	// Bit CS_SETUP.
	SPI0_USER_CS_SETUP = 0x80
	// Position of CK_OUT_EDGE field.
	SPI0_USER_CK_OUT_EDGE_Pos = 0x9
	// Bit mask of CK_OUT_EDGE field.
	SPI0_USER_CK_OUT_EDGE_Msk = 0x200
	// Bit CK_OUT_EDGE.
	SPI0_USER_CK_OUT_EDGE = 0x200
	// Position of USR_DUMMY_IDLE field.
	SPI0_USER_USR_DUMMY_IDLE_Pos = 0x1a
	// Bit mask of USR_DUMMY_IDLE field.
	SPI0_USER_USR_DUMMY_IDLE_Msk = 0x4000000
	// Bit USR_DUMMY_IDLE.
	SPI0_USER_USR_DUMMY_IDLE = 0x4000000
	// Position of USR_DUMMY field.
	SPI0_USER_USR_DUMMY_Pos = 0x1d
	// Bit mask of USR_DUMMY field.
	SPI0_USER_USR_DUMMY_Msk = 0x20000000
	// Bit USR_DUMMY.
	SPI0_USER_USR_DUMMY = 0x20000000

	// USER1: SPI0 user1 register.
	// Position of USR_DUMMY_CYCLELEN field.
	SPI0_USER1_USR_DUMMY_CYCLELEN_Pos = 0x0
	// Bit mask of USR_DUMMY_CYCLELEN field.
	SPI0_USER1_USR_DUMMY_CYCLELEN_Msk = 0x3f
	// Position of USR_ADDR_BITLEN field.
	SPI0_USER1_USR_ADDR_BITLEN_Pos = 0x1a
	// Bit mask of USR_ADDR_BITLEN field.
	SPI0_USER1_USR_ADDR_BITLEN_Msk = 0xfc000000

	// USER2: SPI0 user2 register.
	// Position of USR_COMMAND_VALUE field.
	SPI0_USER2_USR_COMMAND_VALUE_Pos = 0x0
	// Bit mask of USR_COMMAND_VALUE field.
	SPI0_USER2_USR_COMMAND_VALUE_Msk = 0xffff
	// Position of USR_COMMAND_BITLEN field.
	SPI0_USER2_USR_COMMAND_BITLEN_Pos = 0x1c
	// Bit mask of USR_COMMAND_BITLEN field.
	SPI0_USER2_USR_COMMAND_BITLEN_Msk = 0xf0000000

	// RD_STATUS: SPI0 read control register.
	// Position of WB_MODE field.
	SPI0_RD_STATUS_WB_MODE_Pos = 0x10
	// Bit mask of WB_MODE field.
	SPI0_RD_STATUS_WB_MODE_Msk = 0xff0000

	// MISC: SPI0 misc register
	// Position of TRANS_END field.
	SPI0_MISC_TRANS_END_Pos = 0x3
	// Bit mask of TRANS_END field.
	SPI0_MISC_TRANS_END_Msk = 0x8
	// Bit TRANS_END.
	SPI0_MISC_TRANS_END = 0x8
	// Position of TRANS_END_INT_ENA field.
	SPI0_MISC_TRANS_END_INT_ENA_Pos = 0x4
	// Bit mask of TRANS_END_INT_ENA field.
	SPI0_MISC_TRANS_END_INT_ENA_Msk = 0x10
	// Bit TRANS_END_INT_ENA.
	SPI0_MISC_TRANS_END_INT_ENA = 0x10
	// Position of CSPI_ST_TRANS_END field.
	SPI0_MISC_CSPI_ST_TRANS_END_Pos = 0x5
	// Bit mask of CSPI_ST_TRANS_END field.
	SPI0_MISC_CSPI_ST_TRANS_END_Msk = 0x20
	// Bit CSPI_ST_TRANS_END.
	SPI0_MISC_CSPI_ST_TRANS_END = 0x20
	// Position of CSPI_ST_TRANS_END_INT_ENA field.
	SPI0_MISC_CSPI_ST_TRANS_END_INT_ENA_Pos = 0x6
	// Bit mask of CSPI_ST_TRANS_END_INT_ENA field.
	SPI0_MISC_CSPI_ST_TRANS_END_INT_ENA_Msk = 0x40
	// Bit CSPI_ST_TRANS_END_INT_ENA.
	SPI0_MISC_CSPI_ST_TRANS_END_INT_ENA = 0x40
	// Position of CK_IDLE_EDGE field.
	SPI0_MISC_CK_IDLE_EDGE_Pos = 0x9
	// Bit mask of CK_IDLE_EDGE field.
	SPI0_MISC_CK_IDLE_EDGE_Msk = 0x200
	// Bit CK_IDLE_EDGE.
	SPI0_MISC_CK_IDLE_EDGE = 0x200
	// Position of CS_KEEP_ACTIVE field.
	SPI0_MISC_CS_KEEP_ACTIVE_Pos = 0xa
	// Bit mask of CS_KEEP_ACTIVE field.
	SPI0_MISC_CS_KEEP_ACTIVE_Msk = 0x400
	// Bit CS_KEEP_ACTIVE.
	SPI0_MISC_CS_KEEP_ACTIVE = 0x400

	// CACHE_FCTRL: SPI0 bit mode control register.
	// Position of CACHE_REQ_EN field.
	SPI0_CACHE_FCTRL_CACHE_REQ_EN_Pos = 0x0
	// Bit mask of CACHE_REQ_EN field.
	SPI0_CACHE_FCTRL_CACHE_REQ_EN_Msk = 0x1
	// Bit CACHE_REQ_EN.
	SPI0_CACHE_FCTRL_CACHE_REQ_EN = 0x1
	// Position of CACHE_USR_ADDR_4BYTE field.
	SPI0_CACHE_FCTRL_CACHE_USR_ADDR_4BYTE_Pos = 0x1
	// Bit mask of CACHE_USR_ADDR_4BYTE field.
	SPI0_CACHE_FCTRL_CACHE_USR_ADDR_4BYTE_Msk = 0x2
	// Bit CACHE_USR_ADDR_4BYTE.
	SPI0_CACHE_FCTRL_CACHE_USR_ADDR_4BYTE = 0x2
	// Position of CACHE_FLASH_USR_CMD field.
	SPI0_CACHE_FCTRL_CACHE_FLASH_USR_CMD_Pos = 0x2
	// Bit mask of CACHE_FLASH_USR_CMD field.
	SPI0_CACHE_FCTRL_CACHE_FLASH_USR_CMD_Msk = 0x4
	// Bit CACHE_FLASH_USR_CMD.
	SPI0_CACHE_FCTRL_CACHE_FLASH_USR_CMD = 0x4
	// Position of FDIN_DUAL field.
	SPI0_CACHE_FCTRL_FDIN_DUAL_Pos = 0x3
	// Bit mask of FDIN_DUAL field.
	SPI0_CACHE_FCTRL_FDIN_DUAL_Msk = 0x8
	// Bit FDIN_DUAL.
	SPI0_CACHE_FCTRL_FDIN_DUAL = 0x8
	// Position of FDOUT_DUAL field.
	SPI0_CACHE_FCTRL_FDOUT_DUAL_Pos = 0x4
	// Bit mask of FDOUT_DUAL field.
	SPI0_CACHE_FCTRL_FDOUT_DUAL_Msk = 0x10
	// Bit FDOUT_DUAL.
	SPI0_CACHE_FCTRL_FDOUT_DUAL = 0x10
	// Position of FADDR_DUAL field.
	SPI0_CACHE_FCTRL_FADDR_DUAL_Pos = 0x5
	// Bit mask of FADDR_DUAL field.
	SPI0_CACHE_FCTRL_FADDR_DUAL_Msk = 0x20
	// Bit FADDR_DUAL.
	SPI0_CACHE_FCTRL_FADDR_DUAL = 0x20
	// Position of FDIN_QUAD field.
	SPI0_CACHE_FCTRL_FDIN_QUAD_Pos = 0x6
	// Bit mask of FDIN_QUAD field.
	SPI0_CACHE_FCTRL_FDIN_QUAD_Msk = 0x40
	// Bit FDIN_QUAD.
	SPI0_CACHE_FCTRL_FDIN_QUAD = 0x40
	// Position of FDOUT_QUAD field.
	SPI0_CACHE_FCTRL_FDOUT_QUAD_Pos = 0x7
	// Bit mask of FDOUT_QUAD field.
	SPI0_CACHE_FCTRL_FDOUT_QUAD_Msk = 0x80
	// Bit FDOUT_QUAD.
	SPI0_CACHE_FCTRL_FDOUT_QUAD = 0x80
	// Position of FADDR_QUAD field.
	SPI0_CACHE_FCTRL_FADDR_QUAD_Pos = 0x8
	// Bit mask of FADDR_QUAD field.
	SPI0_CACHE_FCTRL_FADDR_QUAD_Msk = 0x100
	// Bit FADDR_QUAD.
	SPI0_CACHE_FCTRL_FADDR_QUAD = 0x100

	// FSM: SPI0 FSM status register
	// Position of CSPI_ST field.
	SPI0_FSM_CSPI_ST_Pos = 0x0
	// Bit mask of CSPI_ST field.
	SPI0_FSM_CSPI_ST_Msk = 0xf
	// Position of EM_ST field.
	SPI0_FSM_EM_ST_Pos = 0x4
	// Bit mask of EM_ST field.
	SPI0_FSM_EM_ST_Msk = 0x70
	// Position of CSPI_LOCK_DELAY_TIME field.
	SPI0_FSM_CSPI_LOCK_DELAY_TIME_Pos = 0x7
	// Bit mask of CSPI_LOCK_DELAY_TIME field.
	SPI0_FSM_CSPI_LOCK_DELAY_TIME_Msk = 0xf80

	// TIMING_CALI: SPI0 timing calibration register
	// Position of TIMING_CLK_ENA field.
	SPI0_TIMING_CALI_TIMING_CLK_ENA_Pos = 0x0
	// Bit mask of TIMING_CLK_ENA field.
	SPI0_TIMING_CALI_TIMING_CLK_ENA_Msk = 0x1
	// Bit TIMING_CLK_ENA.
	SPI0_TIMING_CALI_TIMING_CLK_ENA = 0x1
	// Position of TIMING_CALI field.
	SPI0_TIMING_CALI_TIMING_CALI_Pos = 0x1
	// Bit mask of TIMING_CALI field.
	SPI0_TIMING_CALI_TIMING_CALI_Msk = 0x2
	// Bit TIMING_CALI.
	SPI0_TIMING_CALI_TIMING_CALI = 0x2
	// Position of EXTRA_DUMMY_CYCLELEN field.
	SPI0_TIMING_CALI_EXTRA_DUMMY_CYCLELEN_Pos = 0x2
	// Bit mask of EXTRA_DUMMY_CYCLELEN field.
	SPI0_TIMING_CALI_EXTRA_DUMMY_CYCLELEN_Msk = 0x1c

	// DIN_MODE: SPI0 input delay mode control register
	// Position of DIN0_MODE field.
	SPI0_DIN_MODE_DIN0_MODE_Pos = 0x0
	// Bit mask of DIN0_MODE field.
	SPI0_DIN_MODE_DIN0_MODE_Msk = 0x3
	// Position of DIN1_MODE field.
	SPI0_DIN_MODE_DIN1_MODE_Pos = 0x2
	// Bit mask of DIN1_MODE field.
	SPI0_DIN_MODE_DIN1_MODE_Msk = 0xc
	// Position of DIN2_MODE field.
	SPI0_DIN_MODE_DIN2_MODE_Pos = 0x4
	// Bit mask of DIN2_MODE field.
	SPI0_DIN_MODE_DIN2_MODE_Msk = 0x30
	// Position of DIN3_MODE field.
	SPI0_DIN_MODE_DIN3_MODE_Pos = 0x6
	// Bit mask of DIN3_MODE field.
	SPI0_DIN_MODE_DIN3_MODE_Msk = 0xc0

	// DIN_NUM: SPI0 input delay number control register
	// Position of DIN0_NUM field.
	SPI0_DIN_NUM_DIN0_NUM_Pos = 0x0
	// Bit mask of DIN0_NUM field.
	SPI0_DIN_NUM_DIN0_NUM_Msk = 0x3
	// Position of DIN1_NUM field.
	SPI0_DIN_NUM_DIN1_NUM_Pos = 0x2
	// Bit mask of DIN1_NUM field.
	SPI0_DIN_NUM_DIN1_NUM_Msk = 0xc
	// Position of DIN2_NUM field.
	SPI0_DIN_NUM_DIN2_NUM_Pos = 0x4
	// Bit mask of DIN2_NUM field.
	SPI0_DIN_NUM_DIN2_NUM_Msk = 0x30
	// Position of DIN3_NUM field.
	SPI0_DIN_NUM_DIN3_NUM_Pos = 0x6
	// Bit mask of DIN3_NUM field.
	SPI0_DIN_NUM_DIN3_NUM_Msk = 0xc0

	// DOUT_MODE: SPI0 output delay mode control register
	// Position of DOUT0_MODE field.
	SPI0_DOUT_MODE_DOUT0_MODE_Pos = 0x0
	// Bit mask of DOUT0_MODE field.
	SPI0_DOUT_MODE_DOUT0_MODE_Msk = 0x1
	// Bit DOUT0_MODE.
	SPI0_DOUT_MODE_DOUT0_MODE = 0x1
	// Position of DOUT1_MODE field.
	SPI0_DOUT_MODE_DOUT1_MODE_Pos = 0x1
	// Bit mask of DOUT1_MODE field.
	SPI0_DOUT_MODE_DOUT1_MODE_Msk = 0x2
	// Bit DOUT1_MODE.
	SPI0_DOUT_MODE_DOUT1_MODE = 0x2
	// Position of DOUT2_MODE field.
	SPI0_DOUT_MODE_DOUT2_MODE_Pos = 0x2
	// Bit mask of DOUT2_MODE field.
	SPI0_DOUT_MODE_DOUT2_MODE_Msk = 0x4
	// Bit DOUT2_MODE.
	SPI0_DOUT_MODE_DOUT2_MODE = 0x4
	// Position of DOUT3_MODE field.
	SPI0_DOUT_MODE_DOUT3_MODE_Pos = 0x3
	// Bit mask of DOUT3_MODE field.
	SPI0_DOUT_MODE_DOUT3_MODE_Msk = 0x8
	// Bit DOUT3_MODE.
	SPI0_DOUT_MODE_DOUT3_MODE = 0x8

	// CLOCK_GATE: SPI0 clk_gate register
	// Position of CLK_EN field.
	SPI0_CLOCK_GATE_CLK_EN_Pos = 0x0
	// Bit mask of CLK_EN field.
	SPI0_CLOCK_GATE_CLK_EN_Msk = 0x1
	// Bit CLK_EN.
	SPI0_CLOCK_GATE_CLK_EN = 0x1

	// CORE_CLK_SEL: SPI0 module clock select register
	// Position of SPI01_CLK_SEL field.
	SPI0_CORE_CLK_SEL_SPI01_CLK_SEL_Pos = 0x0
	// Bit mask of SPI01_CLK_SEL field.
	SPI0_CORE_CLK_SEL_SPI01_CLK_SEL_Msk = 0x3

	// DATE: Version control register
	// Position of DATE field.
	SPI0_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	SPI0_DATE_DATE_Msk = 0xfffffff
)

// Bitfields for SPI1: Peripheral SPI1
const (
	// CMD: SPI1 memory command register
	// Position of SPI1_MST_ST field.
	SPI1_CMD_SPI1_MST_ST_Pos = 0x0
	// Bit mask of SPI1_MST_ST field.
	SPI1_CMD_SPI1_MST_ST_Msk = 0xf
	// Position of MSPI_ST field.
	SPI1_CMD_MSPI_ST_Pos = 0x4
	// Bit mask of MSPI_ST field.
	SPI1_CMD_MSPI_ST_Msk = 0xf0
	// Position of FLASH_PE field.
	SPI1_CMD_FLASH_PE_Pos = 0x11
	// Bit mask of FLASH_PE field.
	SPI1_CMD_FLASH_PE_Msk = 0x20000
	// Bit FLASH_PE.
	SPI1_CMD_FLASH_PE = 0x20000
	// Position of USR field.
	SPI1_CMD_USR_Pos = 0x12
	// Bit mask of USR field.
	SPI1_CMD_USR_Msk = 0x40000
	// Bit USR.
	SPI1_CMD_USR = 0x40000
	// Position of FLASH_HPM field.
	SPI1_CMD_FLASH_HPM_Pos = 0x13
	// Bit mask of FLASH_HPM field.
	SPI1_CMD_FLASH_HPM_Msk = 0x80000
	// Bit FLASH_HPM.
	SPI1_CMD_FLASH_HPM = 0x80000
	// Position of FLASH_RES field.
	SPI1_CMD_FLASH_RES_Pos = 0x14
	// Bit mask of FLASH_RES field.
	SPI1_CMD_FLASH_RES_Msk = 0x100000
	// Bit FLASH_RES.
	SPI1_CMD_FLASH_RES = 0x100000
	// Position of FLASH_DP field.
	SPI1_CMD_FLASH_DP_Pos = 0x15
	// Bit mask of FLASH_DP field.
	SPI1_CMD_FLASH_DP_Msk = 0x200000
	// Bit FLASH_DP.
	SPI1_CMD_FLASH_DP = 0x200000
	// Position of FLASH_CE field.
	SPI1_CMD_FLASH_CE_Pos = 0x16
	// Bit mask of FLASH_CE field.
	SPI1_CMD_FLASH_CE_Msk = 0x400000
	// Bit FLASH_CE.
	SPI1_CMD_FLASH_CE = 0x400000
	// Position of FLASH_BE field.
	SPI1_CMD_FLASH_BE_Pos = 0x17
	// Bit mask of FLASH_BE field.
	SPI1_CMD_FLASH_BE_Msk = 0x800000
	// Bit FLASH_BE.
	SPI1_CMD_FLASH_BE = 0x800000
	// Position of FLASH_SE field.
	SPI1_CMD_FLASH_SE_Pos = 0x18
	// Bit mask of FLASH_SE field.
	SPI1_CMD_FLASH_SE_Msk = 0x1000000
	// Bit FLASH_SE.
	SPI1_CMD_FLASH_SE = 0x1000000
	// Position of FLASH_PP field.
	SPI1_CMD_FLASH_PP_Pos = 0x19
	// Bit mask of FLASH_PP field.
	SPI1_CMD_FLASH_PP_Msk = 0x2000000
	// Bit FLASH_PP.
	SPI1_CMD_FLASH_PP = 0x2000000
	// Position of FLASH_WRSR field.
	SPI1_CMD_FLASH_WRSR_Pos = 0x1a
	// Bit mask of FLASH_WRSR field.
	SPI1_CMD_FLASH_WRSR_Msk = 0x4000000
	// Bit FLASH_WRSR.
	SPI1_CMD_FLASH_WRSR = 0x4000000
	// Position of FLASH_RDSR field.
	SPI1_CMD_FLASH_RDSR_Pos = 0x1b
	// Bit mask of FLASH_RDSR field.
	SPI1_CMD_FLASH_RDSR_Msk = 0x8000000
	// Bit FLASH_RDSR.
	SPI1_CMD_FLASH_RDSR = 0x8000000
	// Position of FLASH_RDID field.
	SPI1_CMD_FLASH_RDID_Pos = 0x1c
	// Bit mask of FLASH_RDID field.
	SPI1_CMD_FLASH_RDID_Msk = 0x10000000
	// Bit FLASH_RDID.
	SPI1_CMD_FLASH_RDID = 0x10000000
	// Position of FLASH_WRDI field.
	SPI1_CMD_FLASH_WRDI_Pos = 0x1d
	// Bit mask of FLASH_WRDI field.
	SPI1_CMD_FLASH_WRDI_Msk = 0x20000000
	// Bit FLASH_WRDI.
	SPI1_CMD_FLASH_WRDI = 0x20000000
	// Position of FLASH_WREN field.
	SPI1_CMD_FLASH_WREN_Pos = 0x1e
	// Bit mask of FLASH_WREN field.
	SPI1_CMD_FLASH_WREN_Msk = 0x40000000
	// Bit FLASH_WREN.
	SPI1_CMD_FLASH_WREN = 0x40000000
	// Position of FLASH_READ field.
	SPI1_CMD_FLASH_READ_Pos = 0x1f
	// Bit mask of FLASH_READ field.
	SPI1_CMD_FLASH_READ_Msk = 0x80000000
	// Bit FLASH_READ.
	SPI1_CMD_FLASH_READ = 0x80000000

	// ADDR: SPI1 address register
	// Position of USR_ADDR_VALUE field.
	SPI1_ADDR_USR_ADDR_VALUE_Pos = 0x0
	// Bit mask of USR_ADDR_VALUE field.
	SPI1_ADDR_USR_ADDR_VALUE_Msk = 0xffffffff

	// CTRL: SPI1 control register.
	// Position of FDUMMY_OUT field.
	SPI1_CTRL_FDUMMY_OUT_Pos = 0x3
	// Bit mask of FDUMMY_OUT field.
	SPI1_CTRL_FDUMMY_OUT_Msk = 0x8
	// Bit FDUMMY_OUT.
	SPI1_CTRL_FDUMMY_OUT = 0x8
	// Position of FCMD_DUAL field.
	SPI1_CTRL_FCMD_DUAL_Pos = 0x7
	// Bit mask of FCMD_DUAL field.
	SPI1_CTRL_FCMD_DUAL_Msk = 0x80
	// Bit FCMD_DUAL.
	SPI1_CTRL_FCMD_DUAL = 0x80
	// Position of FCMD_QUAD field.
	SPI1_CTRL_FCMD_QUAD_Pos = 0x8
	// Bit mask of FCMD_QUAD field.
	SPI1_CTRL_FCMD_QUAD_Msk = 0x100
	// Bit FCMD_QUAD.
	SPI1_CTRL_FCMD_QUAD = 0x100
	// Position of FCS_CRC_EN field.
	SPI1_CTRL_FCS_CRC_EN_Pos = 0xa
	// Bit mask of FCS_CRC_EN field.
	SPI1_CTRL_FCS_CRC_EN_Msk = 0x400
	// Bit FCS_CRC_EN.
	SPI1_CTRL_FCS_CRC_EN = 0x400
	// Position of TX_CRC_EN field.
	SPI1_CTRL_TX_CRC_EN_Pos = 0xb
	// Bit mask of TX_CRC_EN field.
	SPI1_CTRL_TX_CRC_EN_Msk = 0x800
	// Bit TX_CRC_EN.
	SPI1_CTRL_TX_CRC_EN = 0x800
	// Position of FASTRD_MODE field.
	SPI1_CTRL_FASTRD_MODE_Pos = 0xd
	// Bit mask of FASTRD_MODE field.
	SPI1_CTRL_FASTRD_MODE_Msk = 0x2000
	// Bit FASTRD_MODE.
	SPI1_CTRL_FASTRD_MODE = 0x2000
	// Position of FREAD_DUAL field.
	SPI1_CTRL_FREAD_DUAL_Pos = 0xe
	// Bit mask of FREAD_DUAL field.
	SPI1_CTRL_FREAD_DUAL_Msk = 0x4000
	// Bit FREAD_DUAL.
	SPI1_CTRL_FREAD_DUAL = 0x4000
	// Position of RESANDRES field.
	SPI1_CTRL_RESANDRES_Pos = 0xf
	// Bit mask of RESANDRES field.
	SPI1_CTRL_RESANDRES_Msk = 0x8000
	// Bit RESANDRES.
	SPI1_CTRL_RESANDRES = 0x8000
	// Position of Q_POL field.
	SPI1_CTRL_Q_POL_Pos = 0x12
	// Bit mask of Q_POL field.
	SPI1_CTRL_Q_POL_Msk = 0x40000
	// Bit Q_POL.
	SPI1_CTRL_Q_POL = 0x40000
	// Position of D_POL field.
	SPI1_CTRL_D_POL_Pos = 0x13
	// Bit mask of D_POL field.
	SPI1_CTRL_D_POL_Msk = 0x80000
	// Bit D_POL.
	SPI1_CTRL_D_POL = 0x80000
	// Position of FREAD_QUAD field.
	SPI1_CTRL_FREAD_QUAD_Pos = 0x14
	// Bit mask of FREAD_QUAD field.
	SPI1_CTRL_FREAD_QUAD_Msk = 0x100000
	// Bit FREAD_QUAD.
	SPI1_CTRL_FREAD_QUAD = 0x100000
	// Position of WP field.
	SPI1_CTRL_WP_Pos = 0x15
	// Bit mask of WP field.
	SPI1_CTRL_WP_Msk = 0x200000
	// Bit WP.
	SPI1_CTRL_WP = 0x200000
	// Position of WRSR_2B field.
	SPI1_CTRL_WRSR_2B_Pos = 0x16
	// Bit mask of WRSR_2B field.
	SPI1_CTRL_WRSR_2B_Msk = 0x400000
	// Bit WRSR_2B.
	SPI1_CTRL_WRSR_2B = 0x400000
	// Position of FREAD_DIO field.
	SPI1_CTRL_FREAD_DIO_Pos = 0x17
	// Bit mask of FREAD_DIO field.
	SPI1_CTRL_FREAD_DIO_Msk = 0x800000
	// Bit FREAD_DIO.
	SPI1_CTRL_FREAD_DIO = 0x800000
	// Position of FREAD_QIO field.
	SPI1_CTRL_FREAD_QIO_Pos = 0x18
	// Bit mask of FREAD_QIO field.
	SPI1_CTRL_FREAD_QIO_Msk = 0x1000000
	// Bit FREAD_QIO.
	SPI1_CTRL_FREAD_QIO = 0x1000000

	// CTRL1: SPI1 control1 register.
	// Position of CLK_MODE field.
	SPI1_CTRL1_CLK_MODE_Pos = 0x0
	// Bit mask of CLK_MODE field.
	SPI1_CTRL1_CLK_MODE_Msk = 0x3
	// Position of CS_HOLD_DLY_RES field.
	SPI1_CTRL1_CS_HOLD_DLY_RES_Pos = 0x2
	// Bit mask of CS_HOLD_DLY_RES field.
	SPI1_CTRL1_CS_HOLD_DLY_RES_Msk = 0xffc

	// CTRL2: SPI1 control2 register.
	// Position of SYNC_RESET field.
	SPI1_CTRL2_SYNC_RESET_Pos = 0x1f
	// Bit mask of SYNC_RESET field.
	SPI1_CTRL2_SYNC_RESET_Msk = 0x80000000
	// Bit SYNC_RESET.
	SPI1_CTRL2_SYNC_RESET = 0x80000000

	// CLOCK: SPI1 clock division control register.
	// Position of CLKCNT_L field.
	SPI1_CLOCK_CLKCNT_L_Pos = 0x0
	// Bit mask of CLKCNT_L field.
	SPI1_CLOCK_CLKCNT_L_Msk = 0xff
	// Position of CLKCNT_H field.
	SPI1_CLOCK_CLKCNT_H_Pos = 0x8
	// Bit mask of CLKCNT_H field.
	SPI1_CLOCK_CLKCNT_H_Msk = 0xff00
	// Position of CLKCNT_N field.
	SPI1_CLOCK_CLKCNT_N_Pos = 0x10
	// Bit mask of CLKCNT_N field.
	SPI1_CLOCK_CLKCNT_N_Msk = 0xff0000
	// Position of CLK_EQU_SYSCLK field.
	SPI1_CLOCK_CLK_EQU_SYSCLK_Pos = 0x1f
	// Bit mask of CLK_EQU_SYSCLK field.
	SPI1_CLOCK_CLK_EQU_SYSCLK_Msk = 0x80000000
	// Bit CLK_EQU_SYSCLK.
	SPI1_CLOCK_CLK_EQU_SYSCLK = 0x80000000

	// USER: SPI1 user register.
	// Position of CK_OUT_EDGE field.
	SPI1_USER_CK_OUT_EDGE_Pos = 0x9
	// Bit mask of CK_OUT_EDGE field.
	SPI1_USER_CK_OUT_EDGE_Msk = 0x200
	// Bit CK_OUT_EDGE.
	SPI1_USER_CK_OUT_EDGE = 0x200
	// Position of FWRITE_DUAL field.
	SPI1_USER_FWRITE_DUAL_Pos = 0xc
	// Bit mask of FWRITE_DUAL field.
	SPI1_USER_FWRITE_DUAL_Msk = 0x1000
	// Bit FWRITE_DUAL.
	SPI1_USER_FWRITE_DUAL = 0x1000
	// Position of FWRITE_QUAD field.
	SPI1_USER_FWRITE_QUAD_Pos = 0xd
	// Bit mask of FWRITE_QUAD field.
	SPI1_USER_FWRITE_QUAD_Msk = 0x2000
	// Bit FWRITE_QUAD.
	SPI1_USER_FWRITE_QUAD = 0x2000
	// Position of FWRITE_DIO field.
	SPI1_USER_FWRITE_DIO_Pos = 0xe
	// Bit mask of FWRITE_DIO field.
	SPI1_USER_FWRITE_DIO_Msk = 0x4000
	// Bit FWRITE_DIO.
	SPI1_USER_FWRITE_DIO = 0x4000
	// Position of FWRITE_QIO field.
	SPI1_USER_FWRITE_QIO_Pos = 0xf
	// Bit mask of FWRITE_QIO field.
	SPI1_USER_FWRITE_QIO_Msk = 0x8000
	// Bit FWRITE_QIO.
	SPI1_USER_FWRITE_QIO = 0x8000
	// Position of USR_MISO_HIGHPART field.
	SPI1_USER_USR_MISO_HIGHPART_Pos = 0x18
	// Bit mask of USR_MISO_HIGHPART field.
	SPI1_USER_USR_MISO_HIGHPART_Msk = 0x1000000
	// Bit USR_MISO_HIGHPART.
	SPI1_USER_USR_MISO_HIGHPART = 0x1000000
	// Position of USR_MOSI_HIGHPART field.
	SPI1_USER_USR_MOSI_HIGHPART_Pos = 0x19
	// Bit mask of USR_MOSI_HIGHPART field.
	SPI1_USER_USR_MOSI_HIGHPART_Msk = 0x2000000
	// Bit USR_MOSI_HIGHPART.
	SPI1_USER_USR_MOSI_HIGHPART = 0x2000000
	// Position of USR_DUMMY_IDLE field.
	SPI1_USER_USR_DUMMY_IDLE_Pos = 0x1a
	// Bit mask of USR_DUMMY_IDLE field.
	SPI1_USER_USR_DUMMY_IDLE_Msk = 0x4000000
	// Bit USR_DUMMY_IDLE.
	SPI1_USER_USR_DUMMY_IDLE = 0x4000000
	// Position of USR_MOSI field.
	SPI1_USER_USR_MOSI_Pos = 0x1b
	// Bit mask of USR_MOSI field.
	SPI1_USER_USR_MOSI_Msk = 0x8000000
	// Bit USR_MOSI.
	SPI1_USER_USR_MOSI = 0x8000000
	// Position of USR_MISO field.
	SPI1_USER_USR_MISO_Pos = 0x1c
	// Bit mask of USR_MISO field.
	SPI1_USER_USR_MISO_Msk = 0x10000000
	// Bit USR_MISO.
	SPI1_USER_USR_MISO = 0x10000000
	// Position of USR_DUMMY field.
	SPI1_USER_USR_DUMMY_Pos = 0x1d
	// Bit mask of USR_DUMMY field.
	SPI1_USER_USR_DUMMY_Msk = 0x20000000
	// Bit USR_DUMMY.
	SPI1_USER_USR_DUMMY = 0x20000000
	// Position of USR_ADDR field.
	SPI1_USER_USR_ADDR_Pos = 0x1e
	// Bit mask of USR_ADDR field.
	SPI1_USER_USR_ADDR_Msk = 0x40000000
	// Bit USR_ADDR.
	SPI1_USER_USR_ADDR = 0x40000000
	// Position of USR_COMMAND field.
	SPI1_USER_USR_COMMAND_Pos = 0x1f
	// Bit mask of USR_COMMAND field.
	SPI1_USER_USR_COMMAND_Msk = 0x80000000
	// Bit USR_COMMAND.
	SPI1_USER_USR_COMMAND = 0x80000000

	// USER1: SPI1 user1 register.
	// Position of USR_DUMMY_CYCLELEN field.
	SPI1_USER1_USR_DUMMY_CYCLELEN_Pos = 0x0
	// Bit mask of USR_DUMMY_CYCLELEN field.
	SPI1_USER1_USR_DUMMY_CYCLELEN_Msk = 0x3f
	// Position of USR_ADDR_BITLEN field.
	SPI1_USER1_USR_ADDR_BITLEN_Pos = 0x1a
	// Bit mask of USR_ADDR_BITLEN field.
	SPI1_USER1_USR_ADDR_BITLEN_Msk = 0xfc000000

	// USER2: SPI1 user2 register.
	// Position of USR_COMMAND_VALUE field.
	SPI1_USER2_USR_COMMAND_VALUE_Pos = 0x0
	// Bit mask of USR_COMMAND_VALUE field.
	SPI1_USER2_USR_COMMAND_VALUE_Msk = 0xffff
	// Position of USR_COMMAND_BITLEN field.
	SPI1_USER2_USR_COMMAND_BITLEN_Pos = 0x1c
	// Bit mask of USR_COMMAND_BITLEN field.
	SPI1_USER2_USR_COMMAND_BITLEN_Msk = 0xf0000000

	// MOSI_DLEN: SPI1 send data bit length control register.
	// Position of USR_MOSI_DBITLEN field.
	SPI1_MOSI_DLEN_USR_MOSI_DBITLEN_Pos = 0x0
	// Bit mask of USR_MOSI_DBITLEN field.
	SPI1_MOSI_DLEN_USR_MOSI_DBITLEN_Msk = 0x3ff

	// MISO_DLEN: SPI1 receive data bit length control register.
	// Position of USR_MISO_DBITLEN field.
	SPI1_MISO_DLEN_USR_MISO_DBITLEN_Pos = 0x0
	// Bit mask of USR_MISO_DBITLEN field.
	SPI1_MISO_DLEN_USR_MISO_DBITLEN_Msk = 0x3ff

	// RD_STATUS: SPI1 status register.
	// Position of STATUS field.
	SPI1_RD_STATUS_STATUS_Pos = 0x0
	// Bit mask of STATUS field.
	SPI1_RD_STATUS_STATUS_Msk = 0xffff
	// Position of WB_MODE field.
	SPI1_RD_STATUS_WB_MODE_Pos = 0x10
	// Bit mask of WB_MODE field.
	SPI1_RD_STATUS_WB_MODE_Msk = 0xff0000

	// MISC: SPI1 misc register
	// Position of CS0_DIS field.
	SPI1_MISC_CS0_DIS_Pos = 0x0
	// Bit mask of CS0_DIS field.
	SPI1_MISC_CS0_DIS_Msk = 0x1
	// Bit CS0_DIS.
	SPI1_MISC_CS0_DIS = 0x1
	// Position of CS1_DIS field.
	SPI1_MISC_CS1_DIS_Pos = 0x1
	// Bit mask of CS1_DIS field.
	SPI1_MISC_CS1_DIS_Msk = 0x2
	// Bit CS1_DIS.
	SPI1_MISC_CS1_DIS = 0x2
	// Position of CK_IDLE_EDGE field.
	SPI1_MISC_CK_IDLE_EDGE_Pos = 0x9
	// Bit mask of CK_IDLE_EDGE field.
	SPI1_MISC_CK_IDLE_EDGE_Msk = 0x200
	// Bit CK_IDLE_EDGE.
	SPI1_MISC_CK_IDLE_EDGE = 0x200
	// Position of CS_KEEP_ACTIVE field.
	SPI1_MISC_CS_KEEP_ACTIVE_Pos = 0xa
	// Bit mask of CS_KEEP_ACTIVE field.
	SPI1_MISC_CS_KEEP_ACTIVE_Msk = 0x400
	// Bit CS_KEEP_ACTIVE.
	SPI1_MISC_CS_KEEP_ACTIVE = 0x400

	// TX_CRC: SPI1 TX CRC data register.
	// Position of DATA field.
	SPI1_TX_CRC_DATA_Pos = 0x0
	// Bit mask of DATA field.
	SPI1_TX_CRC_DATA_Msk = 0xffffffff

	// CACHE_FCTRL: SPI1 bit mode control register.
	// Position of CACHE_USR_ADDR_4BYTE field.
	SPI1_CACHE_FCTRL_CACHE_USR_ADDR_4BYTE_Pos = 0x1
	// Bit mask of CACHE_USR_ADDR_4BYTE field.
	SPI1_CACHE_FCTRL_CACHE_USR_ADDR_4BYTE_Msk = 0x2
	// Bit CACHE_USR_ADDR_4BYTE.
	SPI1_CACHE_FCTRL_CACHE_USR_ADDR_4BYTE = 0x2
	// Position of FDIN_DUAL field.
	SPI1_CACHE_FCTRL_FDIN_DUAL_Pos = 0x3
	// Bit mask of FDIN_DUAL field.
	SPI1_CACHE_FCTRL_FDIN_DUAL_Msk = 0x8
	// Bit FDIN_DUAL.
	SPI1_CACHE_FCTRL_FDIN_DUAL = 0x8
	// Position of FDOUT_DUAL field.
	SPI1_CACHE_FCTRL_FDOUT_DUAL_Pos = 0x4
	// Bit mask of FDOUT_DUAL field.
	SPI1_CACHE_FCTRL_FDOUT_DUAL_Msk = 0x10
	// Bit FDOUT_DUAL.
	SPI1_CACHE_FCTRL_FDOUT_DUAL = 0x10
	// Position of FADDR_DUAL field.
	SPI1_CACHE_FCTRL_FADDR_DUAL_Pos = 0x5
	// Bit mask of FADDR_DUAL field.
	SPI1_CACHE_FCTRL_FADDR_DUAL_Msk = 0x20
	// Bit FADDR_DUAL.
	SPI1_CACHE_FCTRL_FADDR_DUAL = 0x20
	// Position of FDIN_QUAD field.
	SPI1_CACHE_FCTRL_FDIN_QUAD_Pos = 0x6
	// Bit mask of FDIN_QUAD field.
	SPI1_CACHE_FCTRL_FDIN_QUAD_Msk = 0x40
	// Bit FDIN_QUAD.
	SPI1_CACHE_FCTRL_FDIN_QUAD = 0x40
	// Position of FDOUT_QUAD field.
	SPI1_CACHE_FCTRL_FDOUT_QUAD_Pos = 0x7
	// Bit mask of FDOUT_QUAD field.
	SPI1_CACHE_FCTRL_FDOUT_QUAD_Msk = 0x80
	// Bit FDOUT_QUAD.
	SPI1_CACHE_FCTRL_FDOUT_QUAD = 0x80
	// Position of FADDR_QUAD field.
	SPI1_CACHE_FCTRL_FADDR_QUAD_Pos = 0x8
	// Bit mask of FADDR_QUAD field.
	SPI1_CACHE_FCTRL_FADDR_QUAD_Msk = 0x100
	// Bit FADDR_QUAD.
	SPI1_CACHE_FCTRL_FADDR_QUAD = 0x100

	// W0: SPI1 memory data buffer0
	// Position of BUF0 field.
	SPI1_W0_BUF0_Pos = 0x0
	// Bit mask of BUF0 field.
	SPI1_W0_BUF0_Msk = 0xffffffff

	// W1: SPI1 memory data buffer1
	// Position of BUF1 field.
	SPI1_W1_BUF1_Pos = 0x0
	// Bit mask of BUF1 field.
	SPI1_W1_BUF1_Msk = 0xffffffff

	// W2: SPI1 memory data buffer2
	// Position of BUF2 field.
	SPI1_W2_BUF2_Pos = 0x0
	// Bit mask of BUF2 field.
	SPI1_W2_BUF2_Msk = 0xffffffff

	// W3: SPI1 memory data buffer3
	// Position of BUF3 field.
	SPI1_W3_BUF3_Pos = 0x0
	// Bit mask of BUF3 field.
	SPI1_W3_BUF3_Msk = 0xffffffff

	// W4: SPI1 memory data buffer4
	// Position of BUF4 field.
	SPI1_W4_BUF4_Pos = 0x0
	// Bit mask of BUF4 field.
	SPI1_W4_BUF4_Msk = 0xffffffff

	// W5: SPI1 memory data buffer5
	// Position of BUF5 field.
	SPI1_W5_BUF5_Pos = 0x0
	// Bit mask of BUF5 field.
	SPI1_W5_BUF5_Msk = 0xffffffff

	// W6: SPI1 memory data buffer6
	// Position of BUF6 field.
	SPI1_W6_BUF6_Pos = 0x0
	// Bit mask of BUF6 field.
	SPI1_W6_BUF6_Msk = 0xffffffff

	// W7: SPI1 memory data buffer7
	// Position of BUF7 field.
	SPI1_W7_BUF7_Pos = 0x0
	// Bit mask of BUF7 field.
	SPI1_W7_BUF7_Msk = 0xffffffff

	// W8: SPI1 memory data buffer8
	// Position of BUF8 field.
	SPI1_W8_BUF8_Pos = 0x0
	// Bit mask of BUF8 field.
	SPI1_W8_BUF8_Msk = 0xffffffff

	// W9: SPI1 memory data buffer9
	// Position of BUF9 field.
	SPI1_W9_BUF9_Pos = 0x0
	// Bit mask of BUF9 field.
	SPI1_W9_BUF9_Msk = 0xffffffff

	// W10: SPI1 memory data buffer10
	// Position of BUF10 field.
	SPI1_W10_BUF10_Pos = 0x0
	// Bit mask of BUF10 field.
	SPI1_W10_BUF10_Msk = 0xffffffff

	// W11: SPI1 memory data buffer11
	// Position of BUF11 field.
	SPI1_W11_BUF11_Pos = 0x0
	// Bit mask of BUF11 field.
	SPI1_W11_BUF11_Msk = 0xffffffff

	// W12: SPI1 memory data buffer12
	// Position of BUF12 field.
	SPI1_W12_BUF12_Pos = 0x0
	// Bit mask of BUF12 field.
	SPI1_W12_BUF12_Msk = 0xffffffff

	// W13: SPI1 memory data buffer13
	// Position of BUF13 field.
	SPI1_W13_BUF13_Pos = 0x0
	// Bit mask of BUF13 field.
	SPI1_W13_BUF13_Msk = 0xffffffff

	// W14: SPI1 memory data buffer14
	// Position of BUF14 field.
	SPI1_W14_BUF14_Pos = 0x0
	// Bit mask of BUF14 field.
	SPI1_W14_BUF14_Msk = 0xffffffff

	// W15: SPI1 memory data buffer15
	// Position of BUF15 field.
	SPI1_W15_BUF15_Pos = 0x0
	// Bit mask of BUF15 field.
	SPI1_W15_BUF15_Msk = 0xffffffff

	// FLASH_WAITI_CTRL: SPI1 wait idle control register
	// Position of WAITI_DUMMY field.
	SPI1_FLASH_WAITI_CTRL_WAITI_DUMMY_Pos = 0x1
	// Bit mask of WAITI_DUMMY field.
	SPI1_FLASH_WAITI_CTRL_WAITI_DUMMY_Msk = 0x2
	// Bit WAITI_DUMMY.
	SPI1_FLASH_WAITI_CTRL_WAITI_DUMMY = 0x2
	// Position of WAITI_CMD field.
	SPI1_FLASH_WAITI_CTRL_WAITI_CMD_Pos = 0x2
	// Bit mask of WAITI_CMD field.
	SPI1_FLASH_WAITI_CTRL_WAITI_CMD_Msk = 0x3fc
	// Position of WAITI_DUMMY_CYCLELEN field.
	SPI1_FLASH_WAITI_CTRL_WAITI_DUMMY_CYCLELEN_Pos = 0xa
	// Bit mask of WAITI_DUMMY_CYCLELEN field.
	SPI1_FLASH_WAITI_CTRL_WAITI_DUMMY_CYCLELEN_Msk = 0xfc00

	// FLASH_SUS_CTRL: SPI1 flash suspend control register
	// Position of FLASH_PER field.
	SPI1_FLASH_SUS_CTRL_FLASH_PER_Pos = 0x0
	// Bit mask of FLASH_PER field.
	SPI1_FLASH_SUS_CTRL_FLASH_PER_Msk = 0x1
	// Bit FLASH_PER.
	SPI1_FLASH_SUS_CTRL_FLASH_PER = 0x1
	// Position of FLASH_PES field.
	SPI1_FLASH_SUS_CTRL_FLASH_PES_Pos = 0x1
	// Bit mask of FLASH_PES field.
	SPI1_FLASH_SUS_CTRL_FLASH_PES_Msk = 0x2
	// Bit FLASH_PES.
	SPI1_FLASH_SUS_CTRL_FLASH_PES = 0x2
	// Position of FLASH_PER_WAIT_EN field.
	SPI1_FLASH_SUS_CTRL_FLASH_PER_WAIT_EN_Pos = 0x2
	// Bit mask of FLASH_PER_WAIT_EN field.
	SPI1_FLASH_SUS_CTRL_FLASH_PER_WAIT_EN_Msk = 0x4
	// Bit FLASH_PER_WAIT_EN.
	SPI1_FLASH_SUS_CTRL_FLASH_PER_WAIT_EN = 0x4
	// Position of FLASH_PES_WAIT_EN field.
	SPI1_FLASH_SUS_CTRL_FLASH_PES_WAIT_EN_Pos = 0x3
	// Bit mask of FLASH_PES_WAIT_EN field.
	SPI1_FLASH_SUS_CTRL_FLASH_PES_WAIT_EN_Msk = 0x8
	// Bit FLASH_PES_WAIT_EN.
	SPI1_FLASH_SUS_CTRL_FLASH_PES_WAIT_EN = 0x8
	// Position of PES_PER_EN field.
	SPI1_FLASH_SUS_CTRL_PES_PER_EN_Pos = 0x4
	// Bit mask of PES_PER_EN field.
	SPI1_FLASH_SUS_CTRL_PES_PER_EN_Msk = 0x10
	// Bit PES_PER_EN.
	SPI1_FLASH_SUS_CTRL_PES_PER_EN = 0x10
	// Position of FLASH_PES_EN field.
	SPI1_FLASH_SUS_CTRL_FLASH_PES_EN_Pos = 0x5
	// Bit mask of FLASH_PES_EN field.
	SPI1_FLASH_SUS_CTRL_FLASH_PES_EN_Msk = 0x20
	// Bit FLASH_PES_EN.
	SPI1_FLASH_SUS_CTRL_FLASH_PES_EN = 0x20
	// Position of PESR_END_MSK field.
	SPI1_FLASH_SUS_CTRL_PESR_END_MSK_Pos = 0x6
	// Bit mask of PESR_END_MSK field.
	SPI1_FLASH_SUS_CTRL_PESR_END_MSK_Msk = 0x3fffc0
	// Position of RD_SUS_2B field.
	SPI1_FLASH_SUS_CTRL_RD_SUS_2B_Pos = 0x16
	// Bit mask of RD_SUS_2B field.
	SPI1_FLASH_SUS_CTRL_RD_SUS_2B_Msk = 0x400000
	// Bit RD_SUS_2B.
	SPI1_FLASH_SUS_CTRL_RD_SUS_2B = 0x400000
	// Position of PER_END_EN field.
	SPI1_FLASH_SUS_CTRL_PER_END_EN_Pos = 0x17
	// Bit mask of PER_END_EN field.
	SPI1_FLASH_SUS_CTRL_PER_END_EN_Msk = 0x800000
	// Bit PER_END_EN.
	SPI1_FLASH_SUS_CTRL_PER_END_EN = 0x800000
	// Position of PES_END_EN field.
	SPI1_FLASH_SUS_CTRL_PES_END_EN_Pos = 0x18
	// Bit mask of PES_END_EN field.
	SPI1_FLASH_SUS_CTRL_PES_END_EN_Msk = 0x1000000
	// Bit PES_END_EN.
	SPI1_FLASH_SUS_CTRL_PES_END_EN = 0x1000000
	// Position of SUS_TIMEOUT_CNT field.
	SPI1_FLASH_SUS_CTRL_SUS_TIMEOUT_CNT_Pos = 0x19
	// Bit mask of SUS_TIMEOUT_CNT field.
	SPI1_FLASH_SUS_CTRL_SUS_TIMEOUT_CNT_Msk = 0xfe000000

	// FLASH_SUS_CMD: SPI1 flash suspend command register
	// Position of FLASH_PER_COMMAND field.
	SPI1_FLASH_SUS_CMD_FLASH_PER_COMMAND_Pos = 0x0
	// Bit mask of FLASH_PER_COMMAND field.
	SPI1_FLASH_SUS_CMD_FLASH_PER_COMMAND_Msk = 0xff
	// Position of FLASH_PES_COMMAND field.
	SPI1_FLASH_SUS_CMD_FLASH_PES_COMMAND_Pos = 0x8
	// Bit mask of FLASH_PES_COMMAND field.
	SPI1_FLASH_SUS_CMD_FLASH_PES_COMMAND_Msk = 0xff00
	// Position of WAIT_PESR_COMMAND field.
	SPI1_FLASH_SUS_CMD_WAIT_PESR_COMMAND_Pos = 0x10
	// Bit mask of WAIT_PESR_COMMAND field.
	SPI1_FLASH_SUS_CMD_WAIT_PESR_COMMAND_Msk = 0xffff0000

	// SUS_STATUS: SPI1 flash suspend status register
	// Position of FLASH_SUS field.
	SPI1_SUS_STATUS_FLASH_SUS_Pos = 0x0
	// Bit mask of FLASH_SUS field.
	SPI1_SUS_STATUS_FLASH_SUS_Msk = 0x1
	// Bit FLASH_SUS.
	SPI1_SUS_STATUS_FLASH_SUS = 0x1
	// Position of WAIT_PESR_CMD_2B field.
	SPI1_SUS_STATUS_WAIT_PESR_CMD_2B_Pos = 0x1
	// Bit mask of WAIT_PESR_CMD_2B field.
	SPI1_SUS_STATUS_WAIT_PESR_CMD_2B_Msk = 0x2
	// Bit WAIT_PESR_CMD_2B.
	SPI1_SUS_STATUS_WAIT_PESR_CMD_2B = 0x2
	// Position of FLASH_HPM_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_HPM_DLY_128_Pos = 0x2
	// Bit mask of FLASH_HPM_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_HPM_DLY_128_Msk = 0x4
	// Bit FLASH_HPM_DLY_128.
	SPI1_SUS_STATUS_FLASH_HPM_DLY_128 = 0x4
	// Position of FLASH_RES_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_RES_DLY_128_Pos = 0x3
	// Bit mask of FLASH_RES_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_RES_DLY_128_Msk = 0x8
	// Bit FLASH_RES_DLY_128.
	SPI1_SUS_STATUS_FLASH_RES_DLY_128 = 0x8
	// Position of FLASH_DP_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_DP_DLY_128_Pos = 0x4
	// Bit mask of FLASH_DP_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_DP_DLY_128_Msk = 0x10
	// Bit FLASH_DP_DLY_128.
	SPI1_SUS_STATUS_FLASH_DP_DLY_128 = 0x10
	// Position of FLASH_PER_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_PER_DLY_128_Pos = 0x5
	// Bit mask of FLASH_PER_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_PER_DLY_128_Msk = 0x20
	// Bit FLASH_PER_DLY_128.
	SPI1_SUS_STATUS_FLASH_PER_DLY_128 = 0x20
	// Position of FLASH_PES_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_PES_DLY_128_Pos = 0x6
	// Bit mask of FLASH_PES_DLY_128 field.
	SPI1_SUS_STATUS_FLASH_PES_DLY_128_Msk = 0x40
	// Bit FLASH_PES_DLY_128.
	SPI1_SUS_STATUS_FLASH_PES_DLY_128 = 0x40
	// Position of SPI0_LOCK_EN field.
	SPI1_SUS_STATUS_SPI0_LOCK_EN_Pos = 0x7
	// Bit mask of SPI0_LOCK_EN field.
	SPI1_SUS_STATUS_SPI0_LOCK_EN_Msk = 0x80
	// Bit SPI0_LOCK_EN.
	SPI1_SUS_STATUS_SPI0_LOCK_EN = 0x80

	// TIMING_CALI: SPI1 timing control register
	// Position of TIMING_CALI field.
	SPI1_TIMING_CALI_TIMING_CALI_Pos = 0x1
	// Bit mask of TIMING_CALI field.
	SPI1_TIMING_CALI_TIMING_CALI_Msk = 0x2
	// Bit TIMING_CALI.
	SPI1_TIMING_CALI_TIMING_CALI = 0x2
	// Position of EXTRA_DUMMY_CYCLELEN field.
	SPI1_TIMING_CALI_EXTRA_DUMMY_CYCLELEN_Pos = 0x2
	// Bit mask of EXTRA_DUMMY_CYCLELEN field.
	SPI1_TIMING_CALI_EXTRA_DUMMY_CYCLELEN_Msk = 0x1c

	// INT_ENA: SPI1 interrupt enable register
	// Position of PER_END_INT_ENA field.
	SPI1_INT_ENA_PER_END_INT_ENA_Pos = 0x0
	// Bit mask of PER_END_INT_ENA field.
	SPI1_INT_ENA_PER_END_INT_ENA_Msk = 0x1
	// Bit PER_END_INT_ENA.
	SPI1_INT_ENA_PER_END_INT_ENA = 0x1
	// Position of PES_END_INT_ENA field.
	SPI1_INT_ENA_PES_END_INT_ENA_Pos = 0x1
	// Bit mask of PES_END_INT_ENA field.
	SPI1_INT_ENA_PES_END_INT_ENA_Msk = 0x2
	// Bit PES_END_INT_ENA.
	SPI1_INT_ENA_PES_END_INT_ENA = 0x2
	// Position of WPE_END_INT_ENA field.
	SPI1_INT_ENA_WPE_END_INT_ENA_Pos = 0x2
	// Bit mask of WPE_END_INT_ENA field.
	SPI1_INT_ENA_WPE_END_INT_ENA_Msk = 0x4
	// Bit WPE_END_INT_ENA.
	SPI1_INT_ENA_WPE_END_INT_ENA = 0x4
	// Position of SLV_ST_END_INT_ENA field.
	SPI1_INT_ENA_SLV_ST_END_INT_ENA_Pos = 0x3
	// Bit mask of SLV_ST_END_INT_ENA field.
	SPI1_INT_ENA_SLV_ST_END_INT_ENA_Msk = 0x8
	// Bit SLV_ST_END_INT_ENA.
	SPI1_INT_ENA_SLV_ST_END_INT_ENA = 0x8
	// Position of MST_ST_END_INT_ENA field.
	SPI1_INT_ENA_MST_ST_END_INT_ENA_Pos = 0x4
	// Bit mask of MST_ST_END_INT_ENA field.
	SPI1_INT_ENA_MST_ST_END_INT_ENA_Msk = 0x10
	// Bit MST_ST_END_INT_ENA.
	SPI1_INT_ENA_MST_ST_END_INT_ENA = 0x10

	// INT_CLR: SPI1 interrupt clear register
	// Position of PER_END_INT_CLR field.
	SPI1_INT_CLR_PER_END_INT_CLR_Pos = 0x0
	// Bit mask of PER_END_INT_CLR field.
	SPI1_INT_CLR_PER_END_INT_CLR_Msk = 0x1
	// Bit PER_END_INT_CLR.
	SPI1_INT_CLR_PER_END_INT_CLR = 0x1
	// Position of PES_END_INT_CLR field.
	SPI1_INT_CLR_PES_END_INT_CLR_Pos = 0x1
	// Bit mask of PES_END_INT_CLR field.
	SPI1_INT_CLR_PES_END_INT_CLR_Msk = 0x2
	// Bit PES_END_INT_CLR.
	SPI1_INT_CLR_PES_END_INT_CLR = 0x2
	// Position of WPE_END_INT_CLR field.
	SPI1_INT_CLR_WPE_END_INT_CLR_Pos = 0x2
	// Bit mask of WPE_END_INT_CLR field.
	SPI1_INT_CLR_WPE_END_INT_CLR_Msk = 0x4
	// Bit WPE_END_INT_CLR.
	SPI1_INT_CLR_WPE_END_INT_CLR = 0x4
	// Position of SLV_ST_END_INT_CLR field.
	SPI1_INT_CLR_SLV_ST_END_INT_CLR_Pos = 0x3
	// Bit mask of SLV_ST_END_INT_CLR field.
	SPI1_INT_CLR_SLV_ST_END_INT_CLR_Msk = 0x8
	// Bit SLV_ST_END_INT_CLR.
	SPI1_INT_CLR_SLV_ST_END_INT_CLR = 0x8
	// Position of MST_ST_END_INT_CLR field.
	SPI1_INT_CLR_MST_ST_END_INT_CLR_Pos = 0x4
	// Bit mask of MST_ST_END_INT_CLR field.
	SPI1_INT_CLR_MST_ST_END_INT_CLR_Msk = 0x10
	// Bit MST_ST_END_INT_CLR.
	SPI1_INT_CLR_MST_ST_END_INT_CLR = 0x10

	// INT_RAW: SPI1 interrupt raw register
	// Position of PER_END_INT_RAW field.
	SPI1_INT_RAW_PER_END_INT_RAW_Pos = 0x0
	// Bit mask of PER_END_INT_RAW field.
	SPI1_INT_RAW_PER_END_INT_RAW_Msk = 0x1
	// Bit PER_END_INT_RAW.
	SPI1_INT_RAW_PER_END_INT_RAW = 0x1
	// Position of PES_END_INT_RAW field.
	SPI1_INT_RAW_PES_END_INT_RAW_Pos = 0x1
	// Bit mask of PES_END_INT_RAW field.
	SPI1_INT_RAW_PES_END_INT_RAW_Msk = 0x2
	// Bit PES_END_INT_RAW.
	SPI1_INT_RAW_PES_END_INT_RAW = 0x2
	// Position of WPE_END_INT_RAW field.
	SPI1_INT_RAW_WPE_END_INT_RAW_Pos = 0x2
	// Bit mask of WPE_END_INT_RAW field.
	SPI1_INT_RAW_WPE_END_INT_RAW_Msk = 0x4
	// Bit WPE_END_INT_RAW.
	SPI1_INT_RAW_WPE_END_INT_RAW = 0x4
	// Position of SLV_ST_END_INT_RAW field.
	SPI1_INT_RAW_SLV_ST_END_INT_RAW_Pos = 0x3
	// Bit mask of SLV_ST_END_INT_RAW field.
	SPI1_INT_RAW_SLV_ST_END_INT_RAW_Msk = 0x8
	// Bit SLV_ST_END_INT_RAW.
	SPI1_INT_RAW_SLV_ST_END_INT_RAW = 0x8
	// Position of MST_ST_END_INT_RAW field.
	SPI1_INT_RAW_MST_ST_END_INT_RAW_Pos = 0x4
	// Bit mask of MST_ST_END_INT_RAW field.
	SPI1_INT_RAW_MST_ST_END_INT_RAW_Msk = 0x10
	// Bit MST_ST_END_INT_RAW.
	SPI1_INT_RAW_MST_ST_END_INT_RAW = 0x10

	// INT_ST: SPI1 interrupt status register
	// Position of PER_END_INT_ST field.
	SPI1_INT_ST_PER_END_INT_ST_Pos = 0x0
	// Bit mask of PER_END_INT_ST field.
	SPI1_INT_ST_PER_END_INT_ST_Msk = 0x1
	// Bit PER_END_INT_ST.
	SPI1_INT_ST_PER_END_INT_ST = 0x1
	// Position of PES_END_INT_ST field.
	SPI1_INT_ST_PES_END_INT_ST_Pos = 0x1
	// Bit mask of PES_END_INT_ST field.
	SPI1_INT_ST_PES_END_INT_ST_Msk = 0x2
	// Bit PES_END_INT_ST.
	SPI1_INT_ST_PES_END_INT_ST = 0x2
	// Position of WPE_END_INT_ST field.
	SPI1_INT_ST_WPE_END_INT_ST_Pos = 0x2
	// Bit mask of WPE_END_INT_ST field.
	SPI1_INT_ST_WPE_END_INT_ST_Msk = 0x4
	// Bit WPE_END_INT_ST.
	SPI1_INT_ST_WPE_END_INT_ST = 0x4
	// Position of SLV_ST_END_INT_ST field.
	SPI1_INT_ST_SLV_ST_END_INT_ST_Pos = 0x3
	// Bit mask of SLV_ST_END_INT_ST field.
	SPI1_INT_ST_SLV_ST_END_INT_ST_Msk = 0x8
	// Bit SLV_ST_END_INT_ST.
	SPI1_INT_ST_SLV_ST_END_INT_ST = 0x8
	// Position of MST_ST_END_INT_ST field.
	SPI1_INT_ST_MST_ST_END_INT_ST_Pos = 0x4
	// Bit mask of MST_ST_END_INT_ST field.
	SPI1_INT_ST_MST_ST_END_INT_ST_Msk = 0x10
	// Bit MST_ST_END_INT_ST.
	SPI1_INT_ST_MST_ST_END_INT_ST = 0x10

	// CLOCK_GATE: SPI1 clk_gate register
	// Position of CLK_EN field.
	SPI1_CLOCK_GATE_CLK_EN_Pos = 0x0
	// Bit mask of CLK_EN field.
	SPI1_CLOCK_GATE_CLK_EN_Msk = 0x1
	// Bit CLK_EN.
	SPI1_CLOCK_GATE_CLK_EN = 0x1

	// DATE: Version control register
	// Position of DATE field.
	SPI1_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	SPI1_DATE_DATE_Msk = 0xfffffff
)

// Bitfields for SPI2: Peripheral SPI2
const (
	// CMD: Command control register
	// Position of CONF_BITLEN field.
	SPI2_CMD_CONF_BITLEN_Pos = 0x0
	// Bit mask of CONF_BITLEN field.
	SPI2_CMD_CONF_BITLEN_Msk = 0x3ffff
	// Position of UPDATE field.
	SPI2_CMD_UPDATE_Pos = 0x17
	// Bit mask of UPDATE field.
	SPI2_CMD_UPDATE_Msk = 0x800000
	// Bit UPDATE.
	SPI2_CMD_UPDATE = 0x800000
	// Position of USR field.
	SPI2_CMD_USR_Pos = 0x18
	// Bit mask of USR field.
	SPI2_CMD_USR_Msk = 0x1000000
	// Bit USR.
	SPI2_CMD_USR = 0x1000000

	// ADDR: Address value register
	// Position of USR_ADDR_VALUE field.
	SPI2_ADDR_USR_ADDR_VALUE_Pos = 0x0
	// Bit mask of USR_ADDR_VALUE field.
	SPI2_ADDR_USR_ADDR_VALUE_Msk = 0xffffffff

	// CTRL: SPI control register
	// Position of DUMMY_OUT field.
	SPI2_CTRL_DUMMY_OUT_Pos = 0x3
	// Bit mask of DUMMY_OUT field.
	SPI2_CTRL_DUMMY_OUT_Msk = 0x8
	// Bit DUMMY_OUT.
	SPI2_CTRL_DUMMY_OUT = 0x8
	// Position of FADDR_DUAL field.
	SPI2_CTRL_FADDR_DUAL_Pos = 0x5
	// Bit mask of FADDR_DUAL field.
	SPI2_CTRL_FADDR_DUAL_Msk = 0x20
	// Bit FADDR_DUAL.
	SPI2_CTRL_FADDR_DUAL = 0x20
	// Position of FADDR_QUAD field.
	SPI2_CTRL_FADDR_QUAD_Pos = 0x6
	// Bit mask of FADDR_QUAD field.
	SPI2_CTRL_FADDR_QUAD_Msk = 0x40
	// Bit FADDR_QUAD.
	SPI2_CTRL_FADDR_QUAD = 0x40
	// Position of FCMD_DUAL field.
	SPI2_CTRL_FCMD_DUAL_Pos = 0x8
	// Bit mask of FCMD_DUAL field.
	SPI2_CTRL_FCMD_DUAL_Msk = 0x100
	// Bit FCMD_DUAL.
	SPI2_CTRL_FCMD_DUAL = 0x100
	// Position of FCMD_QUAD field.
	SPI2_CTRL_FCMD_QUAD_Pos = 0x9
	// Bit mask of FCMD_QUAD field.
	SPI2_CTRL_FCMD_QUAD_Msk = 0x200
	// Bit FCMD_QUAD.
	SPI2_CTRL_FCMD_QUAD = 0x200
	// Position of FREAD_DUAL field.
	SPI2_CTRL_FREAD_DUAL_Pos = 0xe
	// Bit mask of FREAD_DUAL field.
	SPI2_CTRL_FREAD_DUAL_Msk = 0x4000
	// Bit FREAD_DUAL.
	SPI2_CTRL_FREAD_DUAL = 0x4000
	// Position of FREAD_QUAD field.
	SPI2_CTRL_FREAD_QUAD_Pos = 0xf
	// Bit mask of FREAD_QUAD field.
	SPI2_CTRL_FREAD_QUAD_Msk = 0x8000
	// Bit FREAD_QUAD.
	SPI2_CTRL_FREAD_QUAD = 0x8000
	// Position of Q_POL field.
	SPI2_CTRL_Q_POL_Pos = 0x12
	// Bit mask of Q_POL field.
	SPI2_CTRL_Q_POL_Msk = 0x40000
	// Bit Q_POL.
	SPI2_CTRL_Q_POL = 0x40000
	// Position of D_POL field.
	SPI2_CTRL_D_POL_Pos = 0x13
	// Bit mask of D_POL field.
	SPI2_CTRL_D_POL_Msk = 0x80000
	// Bit D_POL.
	SPI2_CTRL_D_POL = 0x80000
	// Position of HOLD_POL field.
	SPI2_CTRL_HOLD_POL_Pos = 0x14
	// Bit mask of HOLD_POL field.
	SPI2_CTRL_HOLD_POL_Msk = 0x100000
	// Bit HOLD_POL.
	SPI2_CTRL_HOLD_POL = 0x100000
	// Position of WP_POL field.
	SPI2_CTRL_WP_POL_Pos = 0x15
	// Bit mask of WP_POL field.
	SPI2_CTRL_WP_POL_Msk = 0x200000
	// Bit WP_POL.
	SPI2_CTRL_WP_POL = 0x200000
	// Position of RD_BIT_ORDER field.
	SPI2_CTRL_RD_BIT_ORDER_Pos = 0x19
	// Bit mask of RD_BIT_ORDER field.
	SPI2_CTRL_RD_BIT_ORDER_Msk = 0x2000000
	// Bit RD_BIT_ORDER.
	SPI2_CTRL_RD_BIT_ORDER = 0x2000000
	// Position of WR_BIT_ORDER field.
	SPI2_CTRL_WR_BIT_ORDER_Pos = 0x1a
	// Bit mask of WR_BIT_ORDER field.
	SPI2_CTRL_WR_BIT_ORDER_Msk = 0x4000000
	// Bit WR_BIT_ORDER.
	SPI2_CTRL_WR_BIT_ORDER = 0x4000000

	// CLOCK: SPI clock control register
	// Position of CLKCNT_L field.
	SPI2_CLOCK_CLKCNT_L_Pos = 0x0
	// Bit mask of CLKCNT_L field.
	SPI2_CLOCK_CLKCNT_L_Msk = 0x3f
	// Position of CLKCNT_H field.
	SPI2_CLOCK_CLKCNT_H_Pos = 0x6
	// Bit mask of CLKCNT_H field.
	SPI2_CLOCK_CLKCNT_H_Msk = 0xfc0
	// Position of CLKCNT_N field.
	SPI2_CLOCK_CLKCNT_N_Pos = 0xc
	// Bit mask of CLKCNT_N field.
	SPI2_CLOCK_CLKCNT_N_Msk = 0x3f000
	// Position of CLKDIV_PRE field.
	SPI2_CLOCK_CLKDIV_PRE_Pos = 0x12
	// Bit mask of CLKDIV_PRE field.
	SPI2_CLOCK_CLKDIV_PRE_Msk = 0x3c0000
	// Position of CLK_EQU_SYSCLK field.
	SPI2_CLOCK_CLK_EQU_SYSCLK_Pos = 0x1f
	// Bit mask of CLK_EQU_SYSCLK field.
	SPI2_CLOCK_CLK_EQU_SYSCLK_Msk = 0x80000000
	// Bit CLK_EQU_SYSCLK.
	SPI2_CLOCK_CLK_EQU_SYSCLK = 0x80000000

	// USER: SPI USER control register
	// Position of DOUTDIN field.
	SPI2_USER_DOUTDIN_Pos = 0x0
	// Bit mask of DOUTDIN field.
	SPI2_USER_DOUTDIN_Msk = 0x1
	// Bit DOUTDIN.
	SPI2_USER_DOUTDIN = 0x1
	// Position of QPI_MODE field.
	SPI2_USER_QPI_MODE_Pos = 0x3
	// Bit mask of QPI_MODE field.
	SPI2_USER_QPI_MODE_Msk = 0x8
	// Bit QPI_MODE.
	SPI2_USER_QPI_MODE = 0x8
	// Position of TSCK_I_EDGE field.
	SPI2_USER_TSCK_I_EDGE_Pos = 0x5
	// Bit mask of TSCK_I_EDGE field.
	SPI2_USER_TSCK_I_EDGE_Msk = 0x20
	// Bit TSCK_I_EDGE.
	SPI2_USER_TSCK_I_EDGE = 0x20
	// Position of CS_HOLD field.
	SPI2_USER_CS_HOLD_Pos = 0x6
	// Bit mask of CS_HOLD field.
	SPI2_USER_CS_HOLD_Msk = 0x40
	// Bit CS_HOLD.
	SPI2_USER_CS_HOLD = 0x40
	// Position of CS_SETUP field.
	SPI2_USER_CS_SETUP_Pos = 0x7
	// Bit mask of CS_SETUP field.
	SPI2_USER_CS_SETUP_Msk = 0x80
	// Bit CS_SETUP.
	SPI2_USER_CS_SETUP = 0x80
	// Position of RSCK_I_EDGE field.
	SPI2_USER_RSCK_I_EDGE_Pos = 0x8
	// Bit mask of RSCK_I_EDGE field.
	SPI2_USER_RSCK_I_EDGE_Msk = 0x100
	// Bit RSCK_I_EDGE.
	SPI2_USER_RSCK_I_EDGE = 0x100
	// Position of CK_OUT_EDGE field.
	SPI2_USER_CK_OUT_EDGE_Pos = 0x9
	// Bit mask of CK_OUT_EDGE field.
	SPI2_USER_CK_OUT_EDGE_Msk = 0x200
	// Bit CK_OUT_EDGE.
	SPI2_USER_CK_OUT_EDGE = 0x200
	// Position of FWRITE_DUAL field.
	SPI2_USER_FWRITE_DUAL_Pos = 0xc
	// Bit mask of FWRITE_DUAL field.
	SPI2_USER_FWRITE_DUAL_Msk = 0x1000
	// Bit FWRITE_DUAL.
	SPI2_USER_FWRITE_DUAL = 0x1000
	// Position of FWRITE_QUAD field.
	SPI2_USER_FWRITE_QUAD_Pos = 0xd
	// Bit mask of FWRITE_QUAD field.
	SPI2_USER_FWRITE_QUAD_Msk = 0x2000
	// Bit FWRITE_QUAD.
	SPI2_USER_FWRITE_QUAD = 0x2000
	// Position of USR_CONF_NXT field.
	SPI2_USER_USR_CONF_NXT_Pos = 0xf
	// Bit mask of USR_CONF_NXT field.
	SPI2_USER_USR_CONF_NXT_Msk = 0x8000
	// Bit USR_CONF_NXT.
	SPI2_USER_USR_CONF_NXT = 0x8000
	// Position of SIO field.
	SPI2_USER_SIO_Pos = 0x11
	// Bit mask of SIO field.
	SPI2_USER_SIO_Msk = 0x20000
	// Bit SIO.
	SPI2_USER_SIO = 0x20000
	// Position of USR_MISO_HIGHPART field.
	SPI2_USER_USR_MISO_HIGHPART_Pos = 0x18
	// Bit mask of USR_MISO_HIGHPART field.
	SPI2_USER_USR_MISO_HIGHPART_Msk = 0x1000000
	// Bit USR_MISO_HIGHPART.
	SPI2_USER_USR_MISO_HIGHPART = 0x1000000
	// Position of USR_MOSI_HIGHPART field.
	SPI2_USER_USR_MOSI_HIGHPART_Pos = 0x19
	// Bit mask of USR_MOSI_HIGHPART field.
	SPI2_USER_USR_MOSI_HIGHPART_Msk = 0x2000000
	// Bit USR_MOSI_HIGHPART.
	SPI2_USER_USR_MOSI_HIGHPART = 0x2000000
	// Position of USR_DUMMY_IDLE field.
	SPI2_USER_USR_DUMMY_IDLE_Pos = 0x1a
	// Bit mask of USR_DUMMY_IDLE field.
	SPI2_USER_USR_DUMMY_IDLE_Msk = 0x4000000
	// Bit USR_DUMMY_IDLE.
	SPI2_USER_USR_DUMMY_IDLE = 0x4000000
	// Position of USR_MOSI field.
	SPI2_USER_USR_MOSI_Pos = 0x1b
	// Bit mask of USR_MOSI field.
	SPI2_USER_USR_MOSI_Msk = 0x8000000
	// Bit USR_MOSI.
	SPI2_USER_USR_MOSI = 0x8000000
	// Position of USR_MISO field.
	SPI2_USER_USR_MISO_Pos = 0x1c
	// Bit mask of USR_MISO field.
	SPI2_USER_USR_MISO_Msk = 0x10000000
	// Bit USR_MISO.
	SPI2_USER_USR_MISO = 0x10000000
	// Position of USR_DUMMY field.
	SPI2_USER_USR_DUMMY_Pos = 0x1d
	// Bit mask of USR_DUMMY field.
	SPI2_USER_USR_DUMMY_Msk = 0x20000000
	// Bit USR_DUMMY.
	SPI2_USER_USR_DUMMY = 0x20000000
	// Position of USR_ADDR field.
	SPI2_USER_USR_ADDR_Pos = 0x1e
	// Bit mask of USR_ADDR field.
	SPI2_USER_USR_ADDR_Msk = 0x40000000
	// Bit USR_ADDR.
	SPI2_USER_USR_ADDR = 0x40000000
	// Position of USR_COMMAND field.
	SPI2_USER_USR_COMMAND_Pos = 0x1f
	// Bit mask of USR_COMMAND field.
	SPI2_USER_USR_COMMAND_Msk = 0x80000000
	// Bit USR_COMMAND.
	SPI2_USER_USR_COMMAND = 0x80000000

	// USER1: SPI USER control register 1
	// Position of USR_DUMMY_CYCLELEN field.
	SPI2_USER1_USR_DUMMY_CYCLELEN_Pos = 0x0
	// Bit mask of USR_DUMMY_CYCLELEN field.
	SPI2_USER1_USR_DUMMY_CYCLELEN_Msk = 0xff
	// Position of MST_WFULL_ERR_END_EN field.
	SPI2_USER1_MST_WFULL_ERR_END_EN_Pos = 0x10
	// Bit mask of MST_WFULL_ERR_END_EN field.
	SPI2_USER1_MST_WFULL_ERR_END_EN_Msk = 0x10000
	// Bit MST_WFULL_ERR_END_EN.
	SPI2_USER1_MST_WFULL_ERR_END_EN = 0x10000
	// Position of CS_SETUP_TIME field.
	SPI2_USER1_CS_SETUP_TIME_Pos = 0x11
	// Bit mask of CS_SETUP_TIME field.
	SPI2_USER1_CS_SETUP_TIME_Msk = 0x3e0000
	// Position of CS_HOLD_TIME field.
	SPI2_USER1_CS_HOLD_TIME_Pos = 0x16
	// Bit mask of CS_HOLD_TIME field.
	SPI2_USER1_CS_HOLD_TIME_Msk = 0x7c00000
	// Position of USR_ADDR_BITLEN field.
	SPI2_USER1_USR_ADDR_BITLEN_Pos = 0x1b
	// Bit mask of USR_ADDR_BITLEN field.
	SPI2_USER1_USR_ADDR_BITLEN_Msk = 0xf8000000

	// USER2: SPI USER control register 2
	// Position of USR_COMMAND_VALUE field.
	SPI2_USER2_USR_COMMAND_VALUE_Pos = 0x0
	// Bit mask of USR_COMMAND_VALUE field.
	SPI2_USER2_USR_COMMAND_VALUE_Msk = 0xffff
	// Position of MST_REMPTY_ERR_END_EN field.
	SPI2_USER2_MST_REMPTY_ERR_END_EN_Pos = 0x1b
	// Bit mask of MST_REMPTY_ERR_END_EN field.
	SPI2_USER2_MST_REMPTY_ERR_END_EN_Msk = 0x8000000
	// Bit MST_REMPTY_ERR_END_EN.
	SPI2_USER2_MST_REMPTY_ERR_END_EN = 0x8000000
	// Position of USR_COMMAND_BITLEN field.
	SPI2_USER2_USR_COMMAND_BITLEN_Pos = 0x1c
	// Bit mask of USR_COMMAND_BITLEN field.
	SPI2_USER2_USR_COMMAND_BITLEN_Msk = 0xf0000000

	// MS_DLEN: SPI data bit length control register
	// Position of MS_DATA_BITLEN field.
	SPI2_MS_DLEN_MS_DATA_BITLEN_Pos = 0x0
	// Bit mask of MS_DATA_BITLEN field.
	SPI2_MS_DLEN_MS_DATA_BITLEN_Msk = 0x3ffff

	// MISC: SPI misc register
	// Position of CS0_DIS field.
	SPI2_MISC_CS0_DIS_Pos = 0x0
	// Bit mask of CS0_DIS field.
	SPI2_MISC_CS0_DIS_Msk = 0x1
	// Bit CS0_DIS.
	SPI2_MISC_CS0_DIS = 0x1
	// Position of CS1_DIS field.
	SPI2_MISC_CS1_DIS_Pos = 0x1
	// Bit mask of CS1_DIS field.
	SPI2_MISC_CS1_DIS_Msk = 0x2
	// Bit CS1_DIS.
	SPI2_MISC_CS1_DIS = 0x2
	// Position of CS2_DIS field.
	SPI2_MISC_CS2_DIS_Pos = 0x2
	// Bit mask of CS2_DIS field.
	SPI2_MISC_CS2_DIS_Msk = 0x4
	// Bit CS2_DIS.
	SPI2_MISC_CS2_DIS = 0x4
	// Position of CS3_DIS field.
	SPI2_MISC_CS3_DIS_Pos = 0x3
	// Bit mask of CS3_DIS field.
	SPI2_MISC_CS3_DIS_Msk = 0x8
	// Bit CS3_DIS.
	SPI2_MISC_CS3_DIS = 0x8
	// Position of CS4_DIS field.
	SPI2_MISC_CS4_DIS_Pos = 0x4
	// Bit mask of CS4_DIS field.
	SPI2_MISC_CS4_DIS_Msk = 0x10
	// Bit CS4_DIS.
	SPI2_MISC_CS4_DIS = 0x10
	// Position of CS5_DIS field.
	SPI2_MISC_CS5_DIS_Pos = 0x5
	// Bit mask of CS5_DIS field.
	SPI2_MISC_CS5_DIS_Msk = 0x20
	// Bit CS5_DIS.
	SPI2_MISC_CS5_DIS = 0x20
	// Position of CK_DIS field.
	SPI2_MISC_CK_DIS_Pos = 0x6
	// Bit mask of CK_DIS field.
	SPI2_MISC_CK_DIS_Msk = 0x40
	// Bit CK_DIS.
	SPI2_MISC_CK_DIS = 0x40
	// Position of MASTER_CS_POL field.
	SPI2_MISC_MASTER_CS_POL_Pos = 0x7
	// Bit mask of MASTER_CS_POL field.
	SPI2_MISC_MASTER_CS_POL_Msk = 0x1f80
	// Position of SLAVE_CS_POL field.
	SPI2_MISC_SLAVE_CS_POL_Pos = 0x17
	// Bit mask of SLAVE_CS_POL field.
	SPI2_MISC_SLAVE_CS_POL_Msk = 0x800000
	// Bit SLAVE_CS_POL.
	SPI2_MISC_SLAVE_CS_POL = 0x800000
	// Position of CK_IDLE_EDGE field.
	SPI2_MISC_CK_IDLE_EDGE_Pos = 0x1d
	// Bit mask of CK_IDLE_EDGE field.
	SPI2_MISC_CK_IDLE_EDGE_Msk = 0x20000000
	// Bit CK_IDLE_EDGE.
	SPI2_MISC_CK_IDLE_EDGE = 0x20000000
	// Position of CS_KEEP_ACTIVE field.
	SPI2_MISC_CS_KEEP_ACTIVE_Pos = 0x1e
	// Bit mask of CS_KEEP_ACTIVE field.
	SPI2_MISC_CS_KEEP_ACTIVE_Msk = 0x40000000
	// Bit CS_KEEP_ACTIVE.
	SPI2_MISC_CS_KEEP_ACTIVE = 0x40000000
	// Position of QUAD_DIN_PIN_SWAP field.
	SPI2_MISC_QUAD_DIN_PIN_SWAP_Pos = 0x1f
	// Bit mask of QUAD_DIN_PIN_SWAP field.
	SPI2_MISC_QUAD_DIN_PIN_SWAP_Msk = 0x80000000
	// Bit QUAD_DIN_PIN_SWAP.
	SPI2_MISC_QUAD_DIN_PIN_SWAP = 0x80000000

	// DIN_MODE: SPI input delay mode configuration
	// Position of DIN0_MODE field.
	SPI2_DIN_MODE_DIN0_MODE_Pos = 0x0
	// Bit mask of DIN0_MODE field.
	SPI2_DIN_MODE_DIN0_MODE_Msk = 0x3
	// Position of DIN1_MODE field.
	SPI2_DIN_MODE_DIN1_MODE_Pos = 0x2
	// Bit mask of DIN1_MODE field.
	SPI2_DIN_MODE_DIN1_MODE_Msk = 0xc
	// Position of DIN2_MODE field.
	SPI2_DIN_MODE_DIN2_MODE_Pos = 0x4
	// Bit mask of DIN2_MODE field.
	SPI2_DIN_MODE_DIN2_MODE_Msk = 0x30
	// Position of DIN3_MODE field.
	SPI2_DIN_MODE_DIN3_MODE_Pos = 0x6
	// Bit mask of DIN3_MODE field.
	SPI2_DIN_MODE_DIN3_MODE_Msk = 0xc0
	// Position of TIMING_HCLK_ACTIVE field.
	SPI2_DIN_MODE_TIMING_HCLK_ACTIVE_Pos = 0x10
	// Bit mask of TIMING_HCLK_ACTIVE field.
	SPI2_DIN_MODE_TIMING_HCLK_ACTIVE_Msk = 0x10000
	// Bit TIMING_HCLK_ACTIVE.
	SPI2_DIN_MODE_TIMING_HCLK_ACTIVE = 0x10000

	// DIN_NUM: SPI input delay number configuration
	// Position of DIN0_NUM field.
	SPI2_DIN_NUM_DIN0_NUM_Pos = 0x0
	// Bit mask of DIN0_NUM field.
	SPI2_DIN_NUM_DIN0_NUM_Msk = 0x3
	// Position of DIN1_NUM field.
	SPI2_DIN_NUM_DIN1_NUM_Pos = 0x2
	// Bit mask of DIN1_NUM field.
	SPI2_DIN_NUM_DIN1_NUM_Msk = 0xc
	// Position of DIN2_NUM field.
	SPI2_DIN_NUM_DIN2_NUM_Pos = 0x4
	// Bit mask of DIN2_NUM field.
	SPI2_DIN_NUM_DIN2_NUM_Msk = 0x30
	// Position of DIN3_NUM field.
	SPI2_DIN_NUM_DIN3_NUM_Pos = 0x6
	// Bit mask of DIN3_NUM field.
	SPI2_DIN_NUM_DIN3_NUM_Msk = 0xc0

	// DOUT_MODE: SPI output delay mode configuration
	// Position of DOUT0_MODE field.
	SPI2_DOUT_MODE_DOUT0_MODE_Pos = 0x0
	// Bit mask of DOUT0_MODE field.
	SPI2_DOUT_MODE_DOUT0_MODE_Msk = 0x1
	// Bit DOUT0_MODE.
	SPI2_DOUT_MODE_DOUT0_MODE = 0x1
	// Position of DOUT1_MODE field.
	SPI2_DOUT_MODE_DOUT1_MODE_Pos = 0x1
	// Bit mask of DOUT1_MODE field.
	SPI2_DOUT_MODE_DOUT1_MODE_Msk = 0x2
	// Bit DOUT1_MODE.
	SPI2_DOUT_MODE_DOUT1_MODE = 0x2
	// Position of DOUT2_MODE field.
	SPI2_DOUT_MODE_DOUT2_MODE_Pos = 0x2
	// Bit mask of DOUT2_MODE field.
	SPI2_DOUT_MODE_DOUT2_MODE_Msk = 0x4
	// Bit DOUT2_MODE.
	SPI2_DOUT_MODE_DOUT2_MODE = 0x4
	// Position of DOUT3_MODE field.
	SPI2_DOUT_MODE_DOUT3_MODE_Pos = 0x3
	// Bit mask of DOUT3_MODE field.
	SPI2_DOUT_MODE_DOUT3_MODE_Msk = 0x8
	// Bit DOUT3_MODE.
	SPI2_DOUT_MODE_DOUT3_MODE = 0x8

	// DMA_CONF: SPI DMA control register
	// Position of DMA_SLV_SEG_TRANS_EN field.
	SPI2_DMA_CONF_DMA_SLV_SEG_TRANS_EN_Pos = 0x12
	// Bit mask of DMA_SLV_SEG_TRANS_EN field.
	SPI2_DMA_CONF_DMA_SLV_SEG_TRANS_EN_Msk = 0x40000
	// Bit DMA_SLV_SEG_TRANS_EN.
	SPI2_DMA_CONF_DMA_SLV_SEG_TRANS_EN = 0x40000
	// Position of SLV_RX_SEG_TRANS_CLR_EN field.
	SPI2_DMA_CONF_SLV_RX_SEG_TRANS_CLR_EN_Pos = 0x13
	// Bit mask of SLV_RX_SEG_TRANS_CLR_EN field.
	SPI2_DMA_CONF_SLV_RX_SEG_TRANS_CLR_EN_Msk = 0x80000
	// Bit SLV_RX_SEG_TRANS_CLR_EN.
	SPI2_DMA_CONF_SLV_RX_SEG_TRANS_CLR_EN = 0x80000
	// Position of SLV_TX_SEG_TRANS_CLR_EN field.
	SPI2_DMA_CONF_SLV_TX_SEG_TRANS_CLR_EN_Pos = 0x14
	// Bit mask of SLV_TX_SEG_TRANS_CLR_EN field.
	SPI2_DMA_CONF_SLV_TX_SEG_TRANS_CLR_EN_Msk = 0x100000
	// Bit SLV_TX_SEG_TRANS_CLR_EN.
	SPI2_DMA_CONF_SLV_TX_SEG_TRANS_CLR_EN = 0x100000
	// Position of RX_EOF_EN field.
	SPI2_DMA_CONF_RX_EOF_EN_Pos = 0x15
	// Bit mask of RX_EOF_EN field.
	SPI2_DMA_CONF_RX_EOF_EN_Msk = 0x200000
	// Bit RX_EOF_EN.
	SPI2_DMA_CONF_RX_EOF_EN = 0x200000
	// Position of DMA_RX_ENA field.
	SPI2_DMA_CONF_DMA_RX_ENA_Pos = 0x1b
	// Bit mask of DMA_RX_ENA field.
	SPI2_DMA_CONF_DMA_RX_ENA_Msk = 0x8000000
	// Bit DMA_RX_ENA.
	SPI2_DMA_CONF_DMA_RX_ENA = 0x8000000
	// Position of DMA_TX_ENA field.
	SPI2_DMA_CONF_DMA_TX_ENA_Pos = 0x1c
	// Bit mask of DMA_TX_ENA field.
	SPI2_DMA_CONF_DMA_TX_ENA_Msk = 0x10000000
	// Bit DMA_TX_ENA.
	SPI2_DMA_CONF_DMA_TX_ENA = 0x10000000
	// Position of RX_AFIFO_RST field.
	SPI2_DMA_CONF_RX_AFIFO_RST_Pos = 0x1d
	// Bit mask of RX_AFIFO_RST field.
	SPI2_DMA_CONF_RX_AFIFO_RST_Msk = 0x20000000
	// Bit RX_AFIFO_RST.
	SPI2_DMA_CONF_RX_AFIFO_RST = 0x20000000
	// Position of BUF_AFIFO_RST field.
	SPI2_DMA_CONF_BUF_AFIFO_RST_Pos = 0x1e
	// Bit mask of BUF_AFIFO_RST field.
	SPI2_DMA_CONF_BUF_AFIFO_RST_Msk = 0x40000000
	// Bit BUF_AFIFO_RST.
	SPI2_DMA_CONF_BUF_AFIFO_RST = 0x40000000
	// Position of DMA_AFIFO_RST field.
	SPI2_DMA_CONF_DMA_AFIFO_RST_Pos = 0x1f
	// Bit mask of DMA_AFIFO_RST field.
	SPI2_DMA_CONF_DMA_AFIFO_RST_Msk = 0x80000000
	// Bit DMA_AFIFO_RST.
	SPI2_DMA_CONF_DMA_AFIFO_RST = 0x80000000

	// DMA_INT_ENA: SPI DMA interrupt enable register
	// Position of DMA_INFIFO_FULL_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_DMA_INFIFO_FULL_ERR_INT_ENA_Pos = 0x0
	// Bit mask of DMA_INFIFO_FULL_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_DMA_INFIFO_FULL_ERR_INT_ENA_Msk = 0x1
	// Bit DMA_INFIFO_FULL_ERR_INT_ENA.
	SPI2_DMA_INT_ENA_DMA_INFIFO_FULL_ERR_INT_ENA = 0x1
	// Position of DMA_OUTFIFO_EMPTY_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_DMA_OUTFIFO_EMPTY_ERR_INT_ENA_Pos = 0x1
	// Bit mask of DMA_OUTFIFO_EMPTY_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_DMA_OUTFIFO_EMPTY_ERR_INT_ENA_Msk = 0x2
	// Bit DMA_OUTFIFO_EMPTY_ERR_INT_ENA.
	SPI2_DMA_INT_ENA_DMA_OUTFIFO_EMPTY_ERR_INT_ENA = 0x2
	// Position of SLV_EX_QPI_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_EX_QPI_INT_ENA_Pos = 0x2
	// Bit mask of SLV_EX_QPI_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_EX_QPI_INT_ENA_Msk = 0x4
	// Bit SLV_EX_QPI_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_EX_QPI_INT_ENA = 0x4
	// Position of SLV_EN_QPI_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_EN_QPI_INT_ENA_Pos = 0x3
	// Bit mask of SLV_EN_QPI_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_EN_QPI_INT_ENA_Msk = 0x8
	// Bit SLV_EN_QPI_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_EN_QPI_INT_ENA = 0x8
	// Position of SLV_CMD7_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMD7_INT_ENA_Pos = 0x4
	// Bit mask of SLV_CMD7_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMD7_INT_ENA_Msk = 0x10
	// Bit SLV_CMD7_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_CMD7_INT_ENA = 0x10
	// Position of SLV_CMD8_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMD8_INT_ENA_Pos = 0x5
	// Bit mask of SLV_CMD8_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMD8_INT_ENA_Msk = 0x20
	// Bit SLV_CMD8_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_CMD8_INT_ENA = 0x20
	// Position of SLV_CMD9_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMD9_INT_ENA_Pos = 0x6
	// Bit mask of SLV_CMD9_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMD9_INT_ENA_Msk = 0x40
	// Bit SLV_CMD9_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_CMD9_INT_ENA = 0x40
	// Position of SLV_CMDA_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMDA_INT_ENA_Pos = 0x7
	// Bit mask of SLV_CMDA_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMDA_INT_ENA_Msk = 0x80
	// Bit SLV_CMDA_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_CMDA_INT_ENA = 0x80
	// Position of SLV_RD_DMA_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_RD_DMA_DONE_INT_ENA_Pos = 0x8
	// Bit mask of SLV_RD_DMA_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_RD_DMA_DONE_INT_ENA_Msk = 0x100
	// Bit SLV_RD_DMA_DONE_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_RD_DMA_DONE_INT_ENA = 0x100
	// Position of SLV_WR_DMA_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_WR_DMA_DONE_INT_ENA_Pos = 0x9
	// Bit mask of SLV_WR_DMA_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_WR_DMA_DONE_INT_ENA_Msk = 0x200
	// Bit SLV_WR_DMA_DONE_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_WR_DMA_DONE_INT_ENA = 0x200
	// Position of SLV_RD_BUF_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_RD_BUF_DONE_INT_ENA_Pos = 0xa
	// Bit mask of SLV_RD_BUF_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_RD_BUF_DONE_INT_ENA_Msk = 0x400
	// Bit SLV_RD_BUF_DONE_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_RD_BUF_DONE_INT_ENA = 0x400
	// Position of SLV_WR_BUF_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_WR_BUF_DONE_INT_ENA_Pos = 0xb
	// Bit mask of SLV_WR_BUF_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_WR_BUF_DONE_INT_ENA_Msk = 0x800
	// Bit SLV_WR_BUF_DONE_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_WR_BUF_DONE_INT_ENA = 0x800
	// Position of TRANS_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_TRANS_DONE_INT_ENA_Pos = 0xc
	// Bit mask of TRANS_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_TRANS_DONE_INT_ENA_Msk = 0x1000
	// Bit TRANS_DONE_INT_ENA.
	SPI2_DMA_INT_ENA_TRANS_DONE_INT_ENA = 0x1000
	// Position of DMA_SEG_TRANS_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_DMA_SEG_TRANS_DONE_INT_ENA_Pos = 0xd
	// Bit mask of DMA_SEG_TRANS_DONE_INT_ENA field.
	SPI2_DMA_INT_ENA_DMA_SEG_TRANS_DONE_INT_ENA_Msk = 0x2000
	// Bit DMA_SEG_TRANS_DONE_INT_ENA.
	SPI2_DMA_INT_ENA_DMA_SEG_TRANS_DONE_INT_ENA = 0x2000
	// Position of SEG_MAGIC_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_SEG_MAGIC_ERR_INT_ENA_Pos = 0xe
	// Bit mask of SEG_MAGIC_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_SEG_MAGIC_ERR_INT_ENA_Msk = 0x4000
	// Bit SEG_MAGIC_ERR_INT_ENA.
	SPI2_DMA_INT_ENA_SEG_MAGIC_ERR_INT_ENA = 0x4000
	// Position of SLV_BUF_ADDR_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_BUF_ADDR_ERR_INT_ENA_Pos = 0xf
	// Bit mask of SLV_BUF_ADDR_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_BUF_ADDR_ERR_INT_ENA_Msk = 0x8000
	// Bit SLV_BUF_ADDR_ERR_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_BUF_ADDR_ERR_INT_ENA = 0x8000
	// Position of SLV_CMD_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMD_ERR_INT_ENA_Pos = 0x10
	// Bit mask of SLV_CMD_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_SLV_CMD_ERR_INT_ENA_Msk = 0x10000
	// Bit SLV_CMD_ERR_INT_ENA.
	SPI2_DMA_INT_ENA_SLV_CMD_ERR_INT_ENA = 0x10000
	// Position of MST_RX_AFIFO_WFULL_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_MST_RX_AFIFO_WFULL_ERR_INT_ENA_Pos = 0x11
	// Bit mask of MST_RX_AFIFO_WFULL_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_MST_RX_AFIFO_WFULL_ERR_INT_ENA_Msk = 0x20000
	// Bit MST_RX_AFIFO_WFULL_ERR_INT_ENA.
	SPI2_DMA_INT_ENA_MST_RX_AFIFO_WFULL_ERR_INT_ENA = 0x20000
	// Position of MST_TX_AFIFO_REMPTY_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_MST_TX_AFIFO_REMPTY_ERR_INT_ENA_Pos = 0x12
	// Bit mask of MST_TX_AFIFO_REMPTY_ERR_INT_ENA field.
	SPI2_DMA_INT_ENA_MST_TX_AFIFO_REMPTY_ERR_INT_ENA_Msk = 0x40000
	// Bit MST_TX_AFIFO_REMPTY_ERR_INT_ENA.
	SPI2_DMA_INT_ENA_MST_TX_AFIFO_REMPTY_ERR_INT_ENA = 0x40000
	// Position of APP2_INT_ENA field.
	SPI2_DMA_INT_ENA_APP2_INT_ENA_Pos = 0x13
	// Bit mask of APP2_INT_ENA field.
	SPI2_DMA_INT_ENA_APP2_INT_ENA_Msk = 0x80000
	// Bit APP2_INT_ENA.
	SPI2_DMA_INT_ENA_APP2_INT_ENA = 0x80000
	// Position of APP1_INT_ENA field.
	SPI2_DMA_INT_ENA_APP1_INT_ENA_Pos = 0x14
	// Bit mask of APP1_INT_ENA field.
	SPI2_DMA_INT_ENA_APP1_INT_ENA_Msk = 0x100000
	// Bit APP1_INT_ENA.
	SPI2_DMA_INT_ENA_APP1_INT_ENA = 0x100000

	// DMA_INT_CLR: SPI DMA interrupt clear register
	// Position of DMA_INFIFO_FULL_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_DMA_INFIFO_FULL_ERR_INT_CLR_Pos = 0x0
	// Bit mask of DMA_INFIFO_FULL_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_DMA_INFIFO_FULL_ERR_INT_CLR_Msk = 0x1
	// Bit DMA_INFIFO_FULL_ERR_INT_CLR.
	SPI2_DMA_INT_CLR_DMA_INFIFO_FULL_ERR_INT_CLR = 0x1
	// Position of DMA_OUTFIFO_EMPTY_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_DMA_OUTFIFO_EMPTY_ERR_INT_CLR_Pos = 0x1
	// Bit mask of DMA_OUTFIFO_EMPTY_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_DMA_OUTFIFO_EMPTY_ERR_INT_CLR_Msk = 0x2
	// Bit DMA_OUTFIFO_EMPTY_ERR_INT_CLR.
	SPI2_DMA_INT_CLR_DMA_OUTFIFO_EMPTY_ERR_INT_CLR = 0x2
	// Position of SLV_EX_QPI_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_EX_QPI_INT_CLR_Pos = 0x2
	// Bit mask of SLV_EX_QPI_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_EX_QPI_INT_CLR_Msk = 0x4
	// Bit SLV_EX_QPI_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_EX_QPI_INT_CLR = 0x4
	// Position of SLV_EN_QPI_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_EN_QPI_INT_CLR_Pos = 0x3
	// Bit mask of SLV_EN_QPI_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_EN_QPI_INT_CLR_Msk = 0x8
	// Bit SLV_EN_QPI_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_EN_QPI_INT_CLR = 0x8
	// Position of SLV_CMD7_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMD7_INT_CLR_Pos = 0x4
	// Bit mask of SLV_CMD7_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMD7_INT_CLR_Msk = 0x10
	// Bit SLV_CMD7_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_CMD7_INT_CLR = 0x10
	// Position of SLV_CMD8_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMD8_INT_CLR_Pos = 0x5
	// Bit mask of SLV_CMD8_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMD8_INT_CLR_Msk = 0x20
	// Bit SLV_CMD8_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_CMD8_INT_CLR = 0x20
	// Position of SLV_CMD9_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMD9_INT_CLR_Pos = 0x6
	// Bit mask of SLV_CMD9_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMD9_INT_CLR_Msk = 0x40
	// Bit SLV_CMD9_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_CMD9_INT_CLR = 0x40
	// Position of SLV_CMDA_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMDA_INT_CLR_Pos = 0x7
	// Bit mask of SLV_CMDA_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMDA_INT_CLR_Msk = 0x80
	// Bit SLV_CMDA_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_CMDA_INT_CLR = 0x80
	// Position of SLV_RD_DMA_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_RD_DMA_DONE_INT_CLR_Pos = 0x8
	// Bit mask of SLV_RD_DMA_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_RD_DMA_DONE_INT_CLR_Msk = 0x100
	// Bit SLV_RD_DMA_DONE_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_RD_DMA_DONE_INT_CLR = 0x100
	// Position of SLV_WR_DMA_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_WR_DMA_DONE_INT_CLR_Pos = 0x9
	// Bit mask of SLV_WR_DMA_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_WR_DMA_DONE_INT_CLR_Msk = 0x200
	// Bit SLV_WR_DMA_DONE_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_WR_DMA_DONE_INT_CLR = 0x200
	// Position of SLV_RD_BUF_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_RD_BUF_DONE_INT_CLR_Pos = 0xa
	// Bit mask of SLV_RD_BUF_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_RD_BUF_DONE_INT_CLR_Msk = 0x400
	// Bit SLV_RD_BUF_DONE_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_RD_BUF_DONE_INT_CLR = 0x400
	// Position of SLV_WR_BUF_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_WR_BUF_DONE_INT_CLR_Pos = 0xb
	// Bit mask of SLV_WR_BUF_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_WR_BUF_DONE_INT_CLR_Msk = 0x800
	// Bit SLV_WR_BUF_DONE_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_WR_BUF_DONE_INT_CLR = 0x800
	// Position of TRANS_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_TRANS_DONE_INT_CLR_Pos = 0xc
	// Bit mask of TRANS_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_TRANS_DONE_INT_CLR_Msk = 0x1000
	// Bit TRANS_DONE_INT_CLR.
	SPI2_DMA_INT_CLR_TRANS_DONE_INT_CLR = 0x1000
	// Position of DMA_SEG_TRANS_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_DMA_SEG_TRANS_DONE_INT_CLR_Pos = 0xd
	// Bit mask of DMA_SEG_TRANS_DONE_INT_CLR field.
	SPI2_DMA_INT_CLR_DMA_SEG_TRANS_DONE_INT_CLR_Msk = 0x2000
	// Bit DMA_SEG_TRANS_DONE_INT_CLR.
	SPI2_DMA_INT_CLR_DMA_SEG_TRANS_DONE_INT_CLR = 0x2000
	// Position of SEG_MAGIC_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_SEG_MAGIC_ERR_INT_CLR_Pos = 0xe
	// Bit mask of SEG_MAGIC_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_SEG_MAGIC_ERR_INT_CLR_Msk = 0x4000
	// Bit SEG_MAGIC_ERR_INT_CLR.
	SPI2_DMA_INT_CLR_SEG_MAGIC_ERR_INT_CLR = 0x4000
	// Position of SLV_BUF_ADDR_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_BUF_ADDR_ERR_INT_CLR_Pos = 0xf
	// Bit mask of SLV_BUF_ADDR_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_BUF_ADDR_ERR_INT_CLR_Msk = 0x8000
	// Bit SLV_BUF_ADDR_ERR_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_BUF_ADDR_ERR_INT_CLR = 0x8000
	// Position of SLV_CMD_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMD_ERR_INT_CLR_Pos = 0x10
	// Bit mask of SLV_CMD_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_SLV_CMD_ERR_INT_CLR_Msk = 0x10000
	// Bit SLV_CMD_ERR_INT_CLR.
	SPI2_DMA_INT_CLR_SLV_CMD_ERR_INT_CLR = 0x10000
	// Position of MST_RX_AFIFO_WFULL_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_MST_RX_AFIFO_WFULL_ERR_INT_CLR_Pos = 0x11
	// Bit mask of MST_RX_AFIFO_WFULL_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_MST_RX_AFIFO_WFULL_ERR_INT_CLR_Msk = 0x20000
	// Bit MST_RX_AFIFO_WFULL_ERR_INT_CLR.
	SPI2_DMA_INT_CLR_MST_RX_AFIFO_WFULL_ERR_INT_CLR = 0x20000
	// Position of MST_TX_AFIFO_REMPTY_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_MST_TX_AFIFO_REMPTY_ERR_INT_CLR_Pos = 0x12
	// Bit mask of MST_TX_AFIFO_REMPTY_ERR_INT_CLR field.
	SPI2_DMA_INT_CLR_MST_TX_AFIFO_REMPTY_ERR_INT_CLR_Msk = 0x40000
	// Bit MST_TX_AFIFO_REMPTY_ERR_INT_CLR.
	SPI2_DMA_INT_CLR_MST_TX_AFIFO_REMPTY_ERR_INT_CLR = 0x40000
	// Position of APP2_INT_CLR field.
	SPI2_DMA_INT_CLR_APP2_INT_CLR_Pos = 0x13
	// Bit mask of APP2_INT_CLR field.
	SPI2_DMA_INT_CLR_APP2_INT_CLR_Msk = 0x80000
	// Bit APP2_INT_CLR.
	SPI2_DMA_INT_CLR_APP2_INT_CLR = 0x80000
	// Position of APP1_INT_CLR field.
	SPI2_DMA_INT_CLR_APP1_INT_CLR_Pos = 0x14
	// Bit mask of APP1_INT_CLR field.
	SPI2_DMA_INT_CLR_APP1_INT_CLR_Msk = 0x100000
	// Bit APP1_INT_CLR.
	SPI2_DMA_INT_CLR_APP1_INT_CLR = 0x100000

	// DMA_INT_RAW: SPI DMA interrupt raw register
	// Position of DMA_INFIFO_FULL_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_DMA_INFIFO_FULL_ERR_INT_RAW_Pos = 0x0
	// Bit mask of DMA_INFIFO_FULL_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_DMA_INFIFO_FULL_ERR_INT_RAW_Msk = 0x1
	// Bit DMA_INFIFO_FULL_ERR_INT_RAW.
	SPI2_DMA_INT_RAW_DMA_INFIFO_FULL_ERR_INT_RAW = 0x1
	// Position of DMA_OUTFIFO_EMPTY_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_DMA_OUTFIFO_EMPTY_ERR_INT_RAW_Pos = 0x1
	// Bit mask of DMA_OUTFIFO_EMPTY_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_DMA_OUTFIFO_EMPTY_ERR_INT_RAW_Msk = 0x2
	// Bit DMA_OUTFIFO_EMPTY_ERR_INT_RAW.
	SPI2_DMA_INT_RAW_DMA_OUTFIFO_EMPTY_ERR_INT_RAW = 0x2
	// Position of SLV_EX_QPI_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_EX_QPI_INT_RAW_Pos = 0x2
	// Bit mask of SLV_EX_QPI_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_EX_QPI_INT_RAW_Msk = 0x4
	// Bit SLV_EX_QPI_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_EX_QPI_INT_RAW = 0x4
	// Position of SLV_EN_QPI_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_EN_QPI_INT_RAW_Pos = 0x3
	// Bit mask of SLV_EN_QPI_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_EN_QPI_INT_RAW_Msk = 0x8
	// Bit SLV_EN_QPI_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_EN_QPI_INT_RAW = 0x8
	// Position of SLV_CMD7_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMD7_INT_RAW_Pos = 0x4
	// Bit mask of SLV_CMD7_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMD7_INT_RAW_Msk = 0x10
	// Bit SLV_CMD7_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_CMD7_INT_RAW = 0x10
	// Position of SLV_CMD8_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMD8_INT_RAW_Pos = 0x5
	// Bit mask of SLV_CMD8_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMD8_INT_RAW_Msk = 0x20
	// Bit SLV_CMD8_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_CMD8_INT_RAW = 0x20
	// Position of SLV_CMD9_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMD9_INT_RAW_Pos = 0x6
	// Bit mask of SLV_CMD9_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMD9_INT_RAW_Msk = 0x40
	// Bit SLV_CMD9_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_CMD9_INT_RAW = 0x40
	// Position of SLV_CMDA_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMDA_INT_RAW_Pos = 0x7
	// Bit mask of SLV_CMDA_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMDA_INT_RAW_Msk = 0x80
	// Bit SLV_CMDA_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_CMDA_INT_RAW = 0x80
	// Position of SLV_RD_DMA_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_RD_DMA_DONE_INT_RAW_Pos = 0x8
	// Bit mask of SLV_RD_DMA_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_RD_DMA_DONE_INT_RAW_Msk = 0x100
	// Bit SLV_RD_DMA_DONE_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_RD_DMA_DONE_INT_RAW = 0x100
	// Position of SLV_WR_DMA_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_WR_DMA_DONE_INT_RAW_Pos = 0x9
	// Bit mask of SLV_WR_DMA_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_WR_DMA_DONE_INT_RAW_Msk = 0x200
	// Bit SLV_WR_DMA_DONE_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_WR_DMA_DONE_INT_RAW = 0x200
	// Position of SLV_RD_BUF_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_RD_BUF_DONE_INT_RAW_Pos = 0xa
	// Bit mask of SLV_RD_BUF_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_RD_BUF_DONE_INT_RAW_Msk = 0x400
	// Bit SLV_RD_BUF_DONE_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_RD_BUF_DONE_INT_RAW = 0x400
	// Position of SLV_WR_BUF_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_WR_BUF_DONE_INT_RAW_Pos = 0xb
	// Bit mask of SLV_WR_BUF_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_WR_BUF_DONE_INT_RAW_Msk = 0x800
	// Bit SLV_WR_BUF_DONE_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_WR_BUF_DONE_INT_RAW = 0x800
	// Position of TRANS_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_TRANS_DONE_INT_RAW_Pos = 0xc
	// Bit mask of TRANS_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_TRANS_DONE_INT_RAW_Msk = 0x1000
	// Bit TRANS_DONE_INT_RAW.
	SPI2_DMA_INT_RAW_TRANS_DONE_INT_RAW = 0x1000
	// Position of DMA_SEG_TRANS_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_DMA_SEG_TRANS_DONE_INT_RAW_Pos = 0xd
	// Bit mask of DMA_SEG_TRANS_DONE_INT_RAW field.
	SPI2_DMA_INT_RAW_DMA_SEG_TRANS_DONE_INT_RAW_Msk = 0x2000
	// Bit DMA_SEG_TRANS_DONE_INT_RAW.
	SPI2_DMA_INT_RAW_DMA_SEG_TRANS_DONE_INT_RAW = 0x2000
	// Position of SEG_MAGIC_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_SEG_MAGIC_ERR_INT_RAW_Pos = 0xe
	// Bit mask of SEG_MAGIC_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_SEG_MAGIC_ERR_INT_RAW_Msk = 0x4000
	// Bit SEG_MAGIC_ERR_INT_RAW.
	SPI2_DMA_INT_RAW_SEG_MAGIC_ERR_INT_RAW = 0x4000
	// Position of SLV_BUF_ADDR_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_BUF_ADDR_ERR_INT_RAW_Pos = 0xf
	// Bit mask of SLV_BUF_ADDR_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_BUF_ADDR_ERR_INT_RAW_Msk = 0x8000
	// Bit SLV_BUF_ADDR_ERR_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_BUF_ADDR_ERR_INT_RAW = 0x8000
	// Position of SLV_CMD_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMD_ERR_INT_RAW_Pos = 0x10
	// Bit mask of SLV_CMD_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_SLV_CMD_ERR_INT_RAW_Msk = 0x10000
	// Bit SLV_CMD_ERR_INT_RAW.
	SPI2_DMA_INT_RAW_SLV_CMD_ERR_INT_RAW = 0x10000
	// Position of MST_RX_AFIFO_WFULL_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_MST_RX_AFIFO_WFULL_ERR_INT_RAW_Pos = 0x11
	// Bit mask of MST_RX_AFIFO_WFULL_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_MST_RX_AFIFO_WFULL_ERR_INT_RAW_Msk = 0x20000
	// Bit MST_RX_AFIFO_WFULL_ERR_INT_RAW.
	SPI2_DMA_INT_RAW_MST_RX_AFIFO_WFULL_ERR_INT_RAW = 0x20000
	// Position of MST_TX_AFIFO_REMPTY_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_MST_TX_AFIFO_REMPTY_ERR_INT_RAW_Pos = 0x12
	// Bit mask of MST_TX_AFIFO_REMPTY_ERR_INT_RAW field.
	SPI2_DMA_INT_RAW_MST_TX_AFIFO_REMPTY_ERR_INT_RAW_Msk = 0x40000
	// Bit MST_TX_AFIFO_REMPTY_ERR_INT_RAW.
	SPI2_DMA_INT_RAW_MST_TX_AFIFO_REMPTY_ERR_INT_RAW = 0x40000
	// Position of APP2_INT_RAW field.
	SPI2_DMA_INT_RAW_APP2_INT_RAW_Pos = 0x13
	// Bit mask of APP2_INT_RAW field.
	SPI2_DMA_INT_RAW_APP2_INT_RAW_Msk = 0x80000
	// Bit APP2_INT_RAW.
	SPI2_DMA_INT_RAW_APP2_INT_RAW = 0x80000
	// Position of APP1_INT_RAW field.
	SPI2_DMA_INT_RAW_APP1_INT_RAW_Pos = 0x14
	// Bit mask of APP1_INT_RAW field.
	SPI2_DMA_INT_RAW_APP1_INT_RAW_Msk = 0x100000
	// Bit APP1_INT_RAW.
	SPI2_DMA_INT_RAW_APP1_INT_RAW = 0x100000

	// DMA_INT_ST: SPI DMA interrupt status register
	// Position of DMA_INFIFO_FULL_ERR_INT_ST field.
	SPI2_DMA_INT_ST_DMA_INFIFO_FULL_ERR_INT_ST_Pos = 0x0
	// Bit mask of DMA_INFIFO_FULL_ERR_INT_ST field.
	SPI2_DMA_INT_ST_DMA_INFIFO_FULL_ERR_INT_ST_Msk = 0x1
	// Bit DMA_INFIFO_FULL_ERR_INT_ST.
	SPI2_DMA_INT_ST_DMA_INFIFO_FULL_ERR_INT_ST = 0x1
	// Position of DMA_OUTFIFO_EMPTY_ERR_INT_ST field.
	SPI2_DMA_INT_ST_DMA_OUTFIFO_EMPTY_ERR_INT_ST_Pos = 0x1
	// Bit mask of DMA_OUTFIFO_EMPTY_ERR_INT_ST field.
	SPI2_DMA_INT_ST_DMA_OUTFIFO_EMPTY_ERR_INT_ST_Msk = 0x2
	// Bit DMA_OUTFIFO_EMPTY_ERR_INT_ST.
	SPI2_DMA_INT_ST_DMA_OUTFIFO_EMPTY_ERR_INT_ST = 0x2
	// Position of SLV_EX_QPI_INT_ST field.
	SPI2_DMA_INT_ST_SLV_EX_QPI_INT_ST_Pos = 0x2
	// Bit mask of SLV_EX_QPI_INT_ST field.
	SPI2_DMA_INT_ST_SLV_EX_QPI_INT_ST_Msk = 0x4
	// Bit SLV_EX_QPI_INT_ST.
	SPI2_DMA_INT_ST_SLV_EX_QPI_INT_ST = 0x4
	// Position of SLV_EN_QPI_INT_ST field.
	SPI2_DMA_INT_ST_SLV_EN_QPI_INT_ST_Pos = 0x3
	// Bit mask of SLV_EN_QPI_INT_ST field.
	SPI2_DMA_INT_ST_SLV_EN_QPI_INT_ST_Msk = 0x8
	// Bit SLV_EN_QPI_INT_ST.
	SPI2_DMA_INT_ST_SLV_EN_QPI_INT_ST = 0x8
	// Position of SLV_CMD7_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMD7_INT_ST_Pos = 0x4
	// Bit mask of SLV_CMD7_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMD7_INT_ST_Msk = 0x10
	// Bit SLV_CMD7_INT_ST.
	SPI2_DMA_INT_ST_SLV_CMD7_INT_ST = 0x10
	// Position of SLV_CMD8_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMD8_INT_ST_Pos = 0x5
	// Bit mask of SLV_CMD8_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMD8_INT_ST_Msk = 0x20
	// Bit SLV_CMD8_INT_ST.
	SPI2_DMA_INT_ST_SLV_CMD8_INT_ST = 0x20
	// Position of SLV_CMD9_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMD9_INT_ST_Pos = 0x6
	// Bit mask of SLV_CMD9_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMD9_INT_ST_Msk = 0x40
	// Bit SLV_CMD9_INT_ST.
	SPI2_DMA_INT_ST_SLV_CMD9_INT_ST = 0x40
	// Position of SLV_CMDA_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMDA_INT_ST_Pos = 0x7
	// Bit mask of SLV_CMDA_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMDA_INT_ST_Msk = 0x80
	// Bit SLV_CMDA_INT_ST.
	SPI2_DMA_INT_ST_SLV_CMDA_INT_ST = 0x80
	// Position of SLV_RD_DMA_DONE_INT_ST field.
	SPI2_DMA_INT_ST_SLV_RD_DMA_DONE_INT_ST_Pos = 0x8
	// Bit mask of SLV_RD_DMA_DONE_INT_ST field.
	SPI2_DMA_INT_ST_SLV_RD_DMA_DONE_INT_ST_Msk = 0x100
	// Bit SLV_RD_DMA_DONE_INT_ST.
	SPI2_DMA_INT_ST_SLV_RD_DMA_DONE_INT_ST = 0x100
	// Position of SLV_WR_DMA_DONE_INT_ST field.
	SPI2_DMA_INT_ST_SLV_WR_DMA_DONE_INT_ST_Pos = 0x9
	// Bit mask of SLV_WR_DMA_DONE_INT_ST field.
	SPI2_DMA_INT_ST_SLV_WR_DMA_DONE_INT_ST_Msk = 0x200
	// Bit SLV_WR_DMA_DONE_INT_ST.
	SPI2_DMA_INT_ST_SLV_WR_DMA_DONE_INT_ST = 0x200
	// Position of SLV_RD_BUF_DONE_INT_ST field.
	SPI2_DMA_INT_ST_SLV_RD_BUF_DONE_INT_ST_Pos = 0xa
	// Bit mask of SLV_RD_BUF_DONE_INT_ST field.
	SPI2_DMA_INT_ST_SLV_RD_BUF_DONE_INT_ST_Msk = 0x400
	// Bit SLV_RD_BUF_DONE_INT_ST.
	SPI2_DMA_INT_ST_SLV_RD_BUF_DONE_INT_ST = 0x400
	// Position of SLV_WR_BUF_DONE_INT_ST field.
	SPI2_DMA_INT_ST_SLV_WR_BUF_DONE_INT_ST_Pos = 0xb
	// Bit mask of SLV_WR_BUF_DONE_INT_ST field.
	SPI2_DMA_INT_ST_SLV_WR_BUF_DONE_INT_ST_Msk = 0x800
	// Bit SLV_WR_BUF_DONE_INT_ST.
	SPI2_DMA_INT_ST_SLV_WR_BUF_DONE_INT_ST = 0x800
	// Position of TRANS_DONE_INT_ST field.
	SPI2_DMA_INT_ST_TRANS_DONE_INT_ST_Pos = 0xc
	// Bit mask of TRANS_DONE_INT_ST field.
	SPI2_DMA_INT_ST_TRANS_DONE_INT_ST_Msk = 0x1000
	// Bit TRANS_DONE_INT_ST.
	SPI2_DMA_INT_ST_TRANS_DONE_INT_ST = 0x1000
	// Position of DMA_SEG_TRANS_DONE_INT_ST field.
	SPI2_DMA_INT_ST_DMA_SEG_TRANS_DONE_INT_ST_Pos = 0xd
	// Bit mask of DMA_SEG_TRANS_DONE_INT_ST field.
	SPI2_DMA_INT_ST_DMA_SEG_TRANS_DONE_INT_ST_Msk = 0x2000
	// Bit DMA_SEG_TRANS_DONE_INT_ST.
	SPI2_DMA_INT_ST_DMA_SEG_TRANS_DONE_INT_ST = 0x2000
	// Position of SEG_MAGIC_ERR_INT_ST field.
	SPI2_DMA_INT_ST_SEG_MAGIC_ERR_INT_ST_Pos = 0xe
	// Bit mask of SEG_MAGIC_ERR_INT_ST field.
	SPI2_DMA_INT_ST_SEG_MAGIC_ERR_INT_ST_Msk = 0x4000
	// Bit SEG_MAGIC_ERR_INT_ST.
	SPI2_DMA_INT_ST_SEG_MAGIC_ERR_INT_ST = 0x4000
	// Position of SLV_BUF_ADDR_ERR_INT_ST field.
	SPI2_DMA_INT_ST_SLV_BUF_ADDR_ERR_INT_ST_Pos = 0xf
	// Bit mask of SLV_BUF_ADDR_ERR_INT_ST field.
	SPI2_DMA_INT_ST_SLV_BUF_ADDR_ERR_INT_ST_Msk = 0x8000
	// Bit SLV_BUF_ADDR_ERR_INT_ST.
	SPI2_DMA_INT_ST_SLV_BUF_ADDR_ERR_INT_ST = 0x8000
	// Position of SLV_CMD_ERR_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMD_ERR_INT_ST_Pos = 0x10
	// Bit mask of SLV_CMD_ERR_INT_ST field.
	SPI2_DMA_INT_ST_SLV_CMD_ERR_INT_ST_Msk = 0x10000
	// Bit SLV_CMD_ERR_INT_ST.
	SPI2_DMA_INT_ST_SLV_CMD_ERR_INT_ST = 0x10000
	// Position of MST_RX_AFIFO_WFULL_ERR_INT_ST field.
	SPI2_DMA_INT_ST_MST_RX_AFIFO_WFULL_ERR_INT_ST_Pos = 0x11
	// Bit mask of MST_RX_AFIFO_WFULL_ERR_INT_ST field.
	SPI2_DMA_INT_ST_MST_RX_AFIFO_WFULL_ERR_INT_ST_Msk = 0x20000
	// Bit MST_RX_AFIFO_WFULL_ERR_INT_ST.
	SPI2_DMA_INT_ST_MST_RX_AFIFO_WFULL_ERR_INT_ST = 0x20000
	// Position of MST_TX_AFIFO_REMPTY_ERR_INT_ST field.
	SPI2_DMA_INT_ST_MST_TX_AFIFO_REMPTY_ERR_INT_ST_Pos = 0x12
	// Bit mask of MST_TX_AFIFO_REMPTY_ERR_INT_ST field.
	SPI2_DMA_INT_ST_MST_TX_AFIFO_REMPTY_ERR_INT_ST_Msk = 0x40000
	// Bit MST_TX_AFIFO_REMPTY_ERR_INT_ST.
	SPI2_DMA_INT_ST_MST_TX_AFIFO_REMPTY_ERR_INT_ST = 0x40000
	// Position of APP2_INT_ST field.
	SPI2_DMA_INT_ST_APP2_INT_ST_Pos = 0x13
	// Bit mask of APP2_INT_ST field.
	SPI2_DMA_INT_ST_APP2_INT_ST_Msk = 0x80000
	// Bit APP2_INT_ST.
	SPI2_DMA_INT_ST_APP2_INT_ST = 0x80000
	// Position of APP1_INT_ST field.
	SPI2_DMA_INT_ST_APP1_INT_ST_Pos = 0x14
	// Bit mask of APP1_INT_ST field.
	SPI2_DMA_INT_ST_APP1_INT_ST_Msk = 0x100000
	// Bit APP1_INT_ST.
	SPI2_DMA_INT_ST_APP1_INT_ST = 0x100000

	// W0: SPI CPU-controlled buffer0
	// Position of BUF0 field.
	SPI2_W0_BUF0_Pos = 0x0
	// Bit mask of BUF0 field.
	SPI2_W0_BUF0_Msk = 0xffffffff

	// W1: SPI CPU-controlled buffer1
	// Position of BUF1 field.
	SPI2_W1_BUF1_Pos = 0x0
	// Bit mask of BUF1 field.
	SPI2_W1_BUF1_Msk = 0xffffffff

	// W2: SPI CPU-controlled buffer2
	// Position of BUF2 field.
	SPI2_W2_BUF2_Pos = 0x0
	// Bit mask of BUF2 field.
	SPI2_W2_BUF2_Msk = 0xffffffff

	// W3: SPI CPU-controlled buffer3
	// Position of BUF3 field.
	SPI2_W3_BUF3_Pos = 0x0
	// Bit mask of BUF3 field.
	SPI2_W3_BUF3_Msk = 0xffffffff

	// W4: SPI CPU-controlled buffer4
	// Position of BUF4 field.
	SPI2_W4_BUF4_Pos = 0x0
	// Bit mask of BUF4 field.
	SPI2_W4_BUF4_Msk = 0xffffffff

	// W5: SPI CPU-controlled buffer5
	// Position of BUF5 field.
	SPI2_W5_BUF5_Pos = 0x0
	// Bit mask of BUF5 field.
	SPI2_W5_BUF5_Msk = 0xffffffff

	// W6: SPI CPU-controlled buffer6
	// Position of BUF6 field.
	SPI2_W6_BUF6_Pos = 0x0
	// Bit mask of BUF6 field.
	SPI2_W6_BUF6_Msk = 0xffffffff

	// W7: SPI CPU-controlled buffer7
	// Position of BUF7 field.
	SPI2_W7_BUF7_Pos = 0x0
	// Bit mask of BUF7 field.
	SPI2_W7_BUF7_Msk = 0xffffffff

	// W8: SPI CPU-controlled buffer8
	// Position of BUF8 field.
	SPI2_W8_BUF8_Pos = 0x0
	// Bit mask of BUF8 field.
	SPI2_W8_BUF8_Msk = 0xffffffff

	// W9: SPI CPU-controlled buffer9
	// Position of BUF9 field.
	SPI2_W9_BUF9_Pos = 0x0
	// Bit mask of BUF9 field.
	SPI2_W9_BUF9_Msk = 0xffffffff

	// W10: SPI CPU-controlled buffer10
	// Position of BUF10 field.
	SPI2_W10_BUF10_Pos = 0x0
	// Bit mask of BUF10 field.
	SPI2_W10_BUF10_Msk = 0xffffffff

	// W11: SPI CPU-controlled buffer11
	// Position of BUF11 field.
	SPI2_W11_BUF11_Pos = 0x0
	// Bit mask of BUF11 field.
	SPI2_W11_BUF11_Msk = 0xffffffff

	// W12: SPI CPU-controlled buffer12
	// Position of BUF12 field.
	SPI2_W12_BUF12_Pos = 0x0
	// Bit mask of BUF12 field.
	SPI2_W12_BUF12_Msk = 0xffffffff

	// W13: SPI CPU-controlled buffer13
	// Position of BUF13 field.
	SPI2_W13_BUF13_Pos = 0x0
	// Bit mask of BUF13 field.
	SPI2_W13_BUF13_Msk = 0xffffffff

	// W14: SPI CPU-controlled buffer14
	// Position of BUF14 field.
	SPI2_W14_BUF14_Pos = 0x0
	// Bit mask of BUF14 field.
	SPI2_W14_BUF14_Msk = 0xffffffff

	// W15: SPI CPU-controlled buffer15
	// Position of BUF15 field.
	SPI2_W15_BUF15_Pos = 0x0
	// Bit mask of BUF15 field.
	SPI2_W15_BUF15_Msk = 0xffffffff

	// SLAVE: SPI slave control register
	// Position of CLK_MODE field.
	SPI2_SLAVE_CLK_MODE_Pos = 0x0
	// Bit mask of CLK_MODE field.
	SPI2_SLAVE_CLK_MODE_Msk = 0x3
	// Position of CLK_MODE_13 field.
	SPI2_SLAVE_CLK_MODE_13_Pos = 0x2
	// Bit mask of CLK_MODE_13 field.
	SPI2_SLAVE_CLK_MODE_13_Msk = 0x4
	// Bit CLK_MODE_13.
	SPI2_SLAVE_CLK_MODE_13 = 0x4
	// Position of RSCK_DATA_OUT field.
	SPI2_SLAVE_RSCK_DATA_OUT_Pos = 0x3
	// Bit mask of RSCK_DATA_OUT field.
	SPI2_SLAVE_RSCK_DATA_OUT_Msk = 0x8
	// Bit RSCK_DATA_OUT.
	SPI2_SLAVE_RSCK_DATA_OUT = 0x8
	// Position of SLV_RDDMA_BITLEN_EN field.
	SPI2_SLAVE_SLV_RDDMA_BITLEN_EN_Pos = 0x8
	// Bit mask of SLV_RDDMA_BITLEN_EN field.
	SPI2_SLAVE_SLV_RDDMA_BITLEN_EN_Msk = 0x100
	// Bit SLV_RDDMA_BITLEN_EN.
	SPI2_SLAVE_SLV_RDDMA_BITLEN_EN = 0x100
	// Position of SLV_WRDMA_BITLEN_EN field.
	SPI2_SLAVE_SLV_WRDMA_BITLEN_EN_Pos = 0x9
	// Bit mask of SLV_WRDMA_BITLEN_EN field.
	SPI2_SLAVE_SLV_WRDMA_BITLEN_EN_Msk = 0x200
	// Bit SLV_WRDMA_BITLEN_EN.
	SPI2_SLAVE_SLV_WRDMA_BITLEN_EN = 0x200
	// Position of SLV_RDBUF_BITLEN_EN field.
	SPI2_SLAVE_SLV_RDBUF_BITLEN_EN_Pos = 0xa
	// Bit mask of SLV_RDBUF_BITLEN_EN field.
	SPI2_SLAVE_SLV_RDBUF_BITLEN_EN_Msk = 0x400
	// Bit SLV_RDBUF_BITLEN_EN.
	SPI2_SLAVE_SLV_RDBUF_BITLEN_EN = 0x400
	// Position of SLV_WRBUF_BITLEN_EN field.
	SPI2_SLAVE_SLV_WRBUF_BITLEN_EN_Pos = 0xb
	// Bit mask of SLV_WRBUF_BITLEN_EN field.
	SPI2_SLAVE_SLV_WRBUF_BITLEN_EN_Msk = 0x800
	// Bit SLV_WRBUF_BITLEN_EN.
	SPI2_SLAVE_SLV_WRBUF_BITLEN_EN = 0x800
	// Position of DMA_SEG_MAGIC_VALUE field.
	SPI2_SLAVE_DMA_SEG_MAGIC_VALUE_Pos = 0x16
	// Bit mask of DMA_SEG_MAGIC_VALUE field.
	SPI2_SLAVE_DMA_SEG_MAGIC_VALUE_Msk = 0x3c00000
	// Position of MODE field.
	SPI2_SLAVE_MODE_Pos = 0x1a
	// Bit mask of MODE field.
	SPI2_SLAVE_MODE_Msk = 0x4000000
	// Bit MODE.
	SPI2_SLAVE_MODE = 0x4000000
	// Position of SOFT_RESET field.
	SPI2_SLAVE_SOFT_RESET_Pos = 0x1b
	// Bit mask of SOFT_RESET field.
	SPI2_SLAVE_SOFT_RESET_Msk = 0x8000000
	// Bit SOFT_RESET.
	SPI2_SLAVE_SOFT_RESET = 0x8000000
	// Position of USR_CONF field.
	SPI2_SLAVE_USR_CONF_Pos = 0x1c
	// Bit mask of USR_CONF field.
	SPI2_SLAVE_USR_CONF_Msk = 0x10000000
	// Bit USR_CONF.
	SPI2_SLAVE_USR_CONF = 0x10000000

	// SLAVE1: SPI slave control register 1
	// Position of SLV_DATA_BITLEN field.
	SPI2_SLAVE1_SLV_DATA_BITLEN_Pos = 0x0
	// Bit mask of SLV_DATA_BITLEN field.
	SPI2_SLAVE1_SLV_DATA_BITLEN_Msk = 0x3ffff
	// Position of SLV_LAST_COMMAND field.
	SPI2_SLAVE1_SLV_LAST_COMMAND_Pos = 0x12
	// Bit mask of SLV_LAST_COMMAND field.
	SPI2_SLAVE1_SLV_LAST_COMMAND_Msk = 0x3fc0000
	// Position of SLV_LAST_ADDR field.
	SPI2_SLAVE1_SLV_LAST_ADDR_Pos = 0x1a
	// Bit mask of SLV_LAST_ADDR field.
	SPI2_SLAVE1_SLV_LAST_ADDR_Msk = 0xfc000000

	// CLK_GATE: SPI module clock and register clock control
	// Position of CLK_EN field.
	SPI2_CLK_GATE_CLK_EN_Pos = 0x0
	// Bit mask of CLK_EN field.
	SPI2_CLK_GATE_CLK_EN_Msk = 0x1
	// Bit CLK_EN.
	SPI2_CLK_GATE_CLK_EN = 0x1
	// Position of MST_CLK_ACTIVE field.
	SPI2_CLK_GATE_MST_CLK_ACTIVE_Pos = 0x1
	// Bit mask of MST_CLK_ACTIVE field.
	SPI2_CLK_GATE_MST_CLK_ACTIVE_Msk = 0x2
	// Bit MST_CLK_ACTIVE.
	SPI2_CLK_GATE_MST_CLK_ACTIVE = 0x2
	// Position of MST_CLK_SEL field.
	SPI2_CLK_GATE_MST_CLK_SEL_Pos = 0x2
	// Bit mask of MST_CLK_SEL field.
	SPI2_CLK_GATE_MST_CLK_SEL_Msk = 0x4
	// Bit MST_CLK_SEL.
	SPI2_CLK_GATE_MST_CLK_SEL = 0x4

	// DATE: Version control
	// Position of DATE field.
	SPI2_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	SPI2_DATE_DATE_Msk = 0xfffffff
)

// Bitfields for SYSTEM: Peripheral SYSTEM
const (
	// CPU_PERI_CLK_EN: cpu_peripheral clock gating register
	// Position of CLK_EN_ASSIST_DEBUG field.
	SYSTEM_CPU_PERI_CLK_EN_CLK_EN_ASSIST_DEBUG_Pos = 0x6
	// Bit mask of CLK_EN_ASSIST_DEBUG field.
	SYSTEM_CPU_PERI_CLK_EN_CLK_EN_ASSIST_DEBUG_Msk = 0x40
	// Bit CLK_EN_ASSIST_DEBUG.
	SYSTEM_CPU_PERI_CLK_EN_CLK_EN_ASSIST_DEBUG = 0x40
	// Position of CLK_EN_DEDICATED_GPIO field.
	SYSTEM_CPU_PERI_CLK_EN_CLK_EN_DEDICATED_GPIO_Pos = 0x7
	// Bit mask of CLK_EN_DEDICATED_GPIO field.
	SYSTEM_CPU_PERI_CLK_EN_CLK_EN_DEDICATED_GPIO_Msk = 0x80
	// Bit CLK_EN_DEDICATED_GPIO.
	SYSTEM_CPU_PERI_CLK_EN_CLK_EN_DEDICATED_GPIO = 0x80

	// CPU_PERI_RST_EN: cpu_peripheral reset register
	// Position of RST_EN_ASSIST_DEBUG field.
	SYSTEM_CPU_PERI_RST_EN_RST_EN_ASSIST_DEBUG_Pos = 0x6
	// Bit mask of RST_EN_ASSIST_DEBUG field.
	SYSTEM_CPU_PERI_RST_EN_RST_EN_ASSIST_DEBUG_Msk = 0x40
	// Bit RST_EN_ASSIST_DEBUG.
	SYSTEM_CPU_PERI_RST_EN_RST_EN_ASSIST_DEBUG = 0x40
	// Position of RST_EN_DEDICATED_GPIO field.
	SYSTEM_CPU_PERI_RST_EN_RST_EN_DEDICATED_GPIO_Pos = 0x7
	// Bit mask of RST_EN_DEDICATED_GPIO field.
	SYSTEM_CPU_PERI_RST_EN_RST_EN_DEDICATED_GPIO_Msk = 0x80
	// Bit RST_EN_DEDICATED_GPIO.
	SYSTEM_CPU_PERI_RST_EN_RST_EN_DEDICATED_GPIO = 0x80

	// CPU_PER_CONF: cpu clock config register
	// Position of CPUPERIOD_SEL field.
	SYSTEM_CPU_PER_CONF_CPUPERIOD_SEL_Pos = 0x0
	// Bit mask of CPUPERIOD_SEL field.
	SYSTEM_CPU_PER_CONF_CPUPERIOD_SEL_Msk = 0x3
	// Position of PLL_FREQ_SEL field.
	SYSTEM_CPU_PER_CONF_PLL_FREQ_SEL_Pos = 0x2
	// Bit mask of PLL_FREQ_SEL field.
	SYSTEM_CPU_PER_CONF_PLL_FREQ_SEL_Msk = 0x4
	// Bit PLL_FREQ_SEL.
	SYSTEM_CPU_PER_CONF_PLL_FREQ_SEL = 0x4
	// Position of CPU_WAIT_MODE_FORCE_ON field.
	SYSTEM_CPU_PER_CONF_CPU_WAIT_MODE_FORCE_ON_Pos = 0x3
	// Bit mask of CPU_WAIT_MODE_FORCE_ON field.
	SYSTEM_CPU_PER_CONF_CPU_WAIT_MODE_FORCE_ON_Msk = 0x8
	// Bit CPU_WAIT_MODE_FORCE_ON.
	SYSTEM_CPU_PER_CONF_CPU_WAIT_MODE_FORCE_ON = 0x8
	// Position of CPU_WAITI_DELAY_NUM field.
	SYSTEM_CPU_PER_CONF_CPU_WAITI_DELAY_NUM_Pos = 0x4
	// Bit mask of CPU_WAITI_DELAY_NUM field.
	SYSTEM_CPU_PER_CONF_CPU_WAITI_DELAY_NUM_Msk = 0xf0

	// MEM_PD_MASK: memory power down mask register
	// Position of LSLP_MEM_PD_MASK field.
	SYSTEM_MEM_PD_MASK_LSLP_MEM_PD_MASK_Pos = 0x0
	// Bit mask of LSLP_MEM_PD_MASK field.
	SYSTEM_MEM_PD_MASK_LSLP_MEM_PD_MASK_Msk = 0x1
	// Bit LSLP_MEM_PD_MASK.
	SYSTEM_MEM_PD_MASK_LSLP_MEM_PD_MASK = 0x1

	// PERIP_CLK_EN0: peripheral clock gating register
	// Position of TIMERS_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_TIMERS_CLK_EN_Pos = 0x0
	// Bit mask of TIMERS_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_TIMERS_CLK_EN_Msk = 0x1
	// Bit TIMERS_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_TIMERS_CLK_EN = 0x1
	// Position of SPI01_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI01_CLK_EN_Pos = 0x1
	// Bit mask of SPI01_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI01_CLK_EN_Msk = 0x2
	// Bit SPI01_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_SPI01_CLK_EN = 0x2
	// Position of UART_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UART_CLK_EN_Pos = 0x2
	// Bit mask of UART_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UART_CLK_EN_Msk = 0x4
	// Bit UART_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_UART_CLK_EN = 0x4
	// Position of WDG_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_WDG_CLK_EN_Pos = 0x3
	// Bit mask of WDG_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_WDG_CLK_EN_Msk = 0x8
	// Bit WDG_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_WDG_CLK_EN = 0x8
	// Position of I2S0_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_I2S0_CLK_EN_Pos = 0x4
	// Bit mask of I2S0_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_I2S0_CLK_EN_Msk = 0x10
	// Bit I2S0_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_I2S0_CLK_EN = 0x10
	// Position of UART1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UART1_CLK_EN_Pos = 0x5
	// Bit mask of UART1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UART1_CLK_EN_Msk = 0x20
	// Bit UART1_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_UART1_CLK_EN = 0x20
	// Position of SPI2_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI2_CLK_EN_Pos = 0x6
	// Bit mask of SPI2_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI2_CLK_EN_Msk = 0x40
	// Bit SPI2_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_SPI2_CLK_EN = 0x40
	// Position of EXT0_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_EXT0_CLK_EN_Pos = 0x7
	// Bit mask of EXT0_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_EXT0_CLK_EN_Msk = 0x80
	// Bit EXT0_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_EXT0_CLK_EN = 0x80
	// Position of UHCI0_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UHCI0_CLK_EN_Pos = 0x8
	// Bit mask of UHCI0_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UHCI0_CLK_EN_Msk = 0x100
	// Bit UHCI0_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_UHCI0_CLK_EN = 0x100
	// Position of RMT_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_RMT_CLK_EN_Pos = 0x9
	// Bit mask of RMT_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_RMT_CLK_EN_Msk = 0x200
	// Bit RMT_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_RMT_CLK_EN = 0x200
	// Position of PCNT_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PCNT_CLK_EN_Pos = 0xa
	// Bit mask of PCNT_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PCNT_CLK_EN_Msk = 0x400
	// Bit PCNT_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_PCNT_CLK_EN = 0x400
	// Position of LEDC_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_LEDC_CLK_EN_Pos = 0xb
	// Bit mask of LEDC_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_LEDC_CLK_EN_Msk = 0x800
	// Bit LEDC_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_LEDC_CLK_EN = 0x800
	// Position of UHCI1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UHCI1_CLK_EN_Pos = 0xc
	// Bit mask of UHCI1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UHCI1_CLK_EN_Msk = 0x1000
	// Bit UHCI1_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_UHCI1_CLK_EN = 0x1000
	// Position of TIMERGROUP_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_TIMERGROUP_CLK_EN_Pos = 0xd
	// Bit mask of TIMERGROUP_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_TIMERGROUP_CLK_EN_Msk = 0x2000
	// Bit TIMERGROUP_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_TIMERGROUP_CLK_EN = 0x2000
	// Position of EFUSE_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_EFUSE_CLK_EN_Pos = 0xe
	// Bit mask of EFUSE_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_EFUSE_CLK_EN_Msk = 0x4000
	// Bit EFUSE_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_EFUSE_CLK_EN = 0x4000
	// Position of TIMERGROUP1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_TIMERGROUP1_CLK_EN_Pos = 0xf
	// Bit mask of TIMERGROUP1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_TIMERGROUP1_CLK_EN_Msk = 0x8000
	// Bit TIMERGROUP1_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_TIMERGROUP1_CLK_EN = 0x8000
	// Position of SPI3_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI3_CLK_EN_Pos = 0x10
	// Bit mask of SPI3_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI3_CLK_EN_Msk = 0x10000
	// Bit SPI3_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_SPI3_CLK_EN = 0x10000
	// Position of PWM0_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PWM0_CLK_EN_Pos = 0x11
	// Bit mask of PWM0_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PWM0_CLK_EN_Msk = 0x20000
	// Bit PWM0_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_PWM0_CLK_EN = 0x20000
	// Position of EXT1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_EXT1_CLK_EN_Pos = 0x12
	// Bit mask of EXT1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_EXT1_CLK_EN_Msk = 0x40000
	// Bit EXT1_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_EXT1_CLK_EN = 0x40000
	// Position of CAN_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_CAN_CLK_EN_Pos = 0x13
	// Bit mask of CAN_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_CAN_CLK_EN_Msk = 0x80000
	// Bit CAN_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_CAN_CLK_EN = 0x80000
	// Position of PWM1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PWM1_CLK_EN_Pos = 0x14
	// Bit mask of PWM1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PWM1_CLK_EN_Msk = 0x100000
	// Bit PWM1_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_PWM1_CLK_EN = 0x100000
	// Position of I2S1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_I2S1_CLK_EN_Pos = 0x15
	// Bit mask of I2S1_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_I2S1_CLK_EN_Msk = 0x200000
	// Bit I2S1_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_I2S1_CLK_EN = 0x200000
	// Position of SPI2_DMA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI2_DMA_CLK_EN_Pos = 0x16
	// Bit mask of SPI2_DMA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI2_DMA_CLK_EN_Msk = 0x400000
	// Bit SPI2_DMA_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_SPI2_DMA_CLK_EN = 0x400000
	// Position of USB_DEVICE_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_USB_DEVICE_CLK_EN_Pos = 0x17
	// Bit mask of USB_DEVICE_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_USB_DEVICE_CLK_EN_Msk = 0x800000
	// Bit USB_DEVICE_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_USB_DEVICE_CLK_EN = 0x800000
	// Position of UART_MEM_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UART_MEM_CLK_EN_Pos = 0x18
	// Bit mask of UART_MEM_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_UART_MEM_CLK_EN_Msk = 0x1000000
	// Bit UART_MEM_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_UART_MEM_CLK_EN = 0x1000000
	// Position of PWM2_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PWM2_CLK_EN_Pos = 0x19
	// Bit mask of PWM2_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PWM2_CLK_EN_Msk = 0x2000000
	// Bit PWM2_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_PWM2_CLK_EN = 0x2000000
	// Position of PWM3_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PWM3_CLK_EN_Pos = 0x1a
	// Bit mask of PWM3_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_PWM3_CLK_EN_Msk = 0x4000000
	// Bit PWM3_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_PWM3_CLK_EN = 0x4000000
	// Position of SPI3_DMA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI3_DMA_CLK_EN_Pos = 0x1b
	// Bit mask of SPI3_DMA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI3_DMA_CLK_EN_Msk = 0x8000000
	// Bit SPI3_DMA_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_SPI3_DMA_CLK_EN = 0x8000000
	// Position of APB_SARADC_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_APB_SARADC_CLK_EN_Pos = 0x1c
	// Bit mask of APB_SARADC_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_APB_SARADC_CLK_EN_Msk = 0x10000000
	// Bit APB_SARADC_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_APB_SARADC_CLK_EN = 0x10000000
	// Position of SYSTIMER_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SYSTIMER_CLK_EN_Pos = 0x1d
	// Bit mask of SYSTIMER_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SYSTIMER_CLK_EN_Msk = 0x20000000
	// Bit SYSTIMER_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_SYSTIMER_CLK_EN = 0x20000000
	// Position of ADC2_ARB_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_ADC2_ARB_CLK_EN_Pos = 0x1e
	// Bit mask of ADC2_ARB_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_ADC2_ARB_CLK_EN_Msk = 0x40000000
	// Bit ADC2_ARB_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_ADC2_ARB_CLK_EN = 0x40000000
	// Position of SPI4_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI4_CLK_EN_Pos = 0x1f
	// Bit mask of SPI4_CLK_EN field.
	SYSTEM_PERIP_CLK_EN0_SPI4_CLK_EN_Msk = 0x80000000
	// Bit SPI4_CLK_EN.
	SYSTEM_PERIP_CLK_EN0_SPI4_CLK_EN = 0x80000000

	// PERIP_CLK_EN1: peripheral clock gating register
	// Position of CRYPTO_AES_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_AES_CLK_EN_Pos = 0x1
	// Bit mask of CRYPTO_AES_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_AES_CLK_EN_Msk = 0x2
	// Bit CRYPTO_AES_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_AES_CLK_EN = 0x2
	// Position of CRYPTO_SHA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_SHA_CLK_EN_Pos = 0x2
	// Bit mask of CRYPTO_SHA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_SHA_CLK_EN_Msk = 0x4
	// Bit CRYPTO_SHA_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_SHA_CLK_EN = 0x4
	// Position of CRYPTO_RSA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_RSA_CLK_EN_Pos = 0x3
	// Bit mask of CRYPTO_RSA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_RSA_CLK_EN_Msk = 0x8
	// Bit CRYPTO_RSA_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_RSA_CLK_EN = 0x8
	// Position of CRYPTO_DS_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_DS_CLK_EN_Pos = 0x4
	// Bit mask of CRYPTO_DS_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_DS_CLK_EN_Msk = 0x10
	// Bit CRYPTO_DS_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_DS_CLK_EN = 0x10
	// Position of CRYPTO_HMAC_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_HMAC_CLK_EN_Pos = 0x5
	// Bit mask of CRYPTO_HMAC_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_HMAC_CLK_EN_Msk = 0x20
	// Bit CRYPTO_HMAC_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_CRYPTO_HMAC_CLK_EN = 0x20
	// Position of DMA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_DMA_CLK_EN_Pos = 0x6
	// Bit mask of DMA_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_DMA_CLK_EN_Msk = 0x40
	// Bit DMA_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_DMA_CLK_EN = 0x40
	// Position of SDIO_HOST_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_SDIO_HOST_CLK_EN_Pos = 0x7
	// Bit mask of SDIO_HOST_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_SDIO_HOST_CLK_EN_Msk = 0x80
	// Bit SDIO_HOST_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_SDIO_HOST_CLK_EN = 0x80
	// Position of LCD_CAM_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_LCD_CAM_CLK_EN_Pos = 0x8
	// Bit mask of LCD_CAM_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_LCD_CAM_CLK_EN_Msk = 0x100
	// Bit LCD_CAM_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_LCD_CAM_CLK_EN = 0x100
	// Position of UART2_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_UART2_CLK_EN_Pos = 0x9
	// Bit mask of UART2_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_UART2_CLK_EN_Msk = 0x200
	// Bit UART2_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_UART2_CLK_EN = 0x200
	// Position of TSENS_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_TSENS_CLK_EN_Pos = 0xa
	// Bit mask of TSENS_CLK_EN field.
	SYSTEM_PERIP_CLK_EN1_TSENS_CLK_EN_Msk = 0x400
	// Bit TSENS_CLK_EN.
	SYSTEM_PERIP_CLK_EN1_TSENS_CLK_EN = 0x400

	// PERIP_RST_EN0: reserved
	// Position of TIMERS_RST field.
	SYSTEM_PERIP_RST_EN0_TIMERS_RST_Pos = 0x0
	// Bit mask of TIMERS_RST field.
	SYSTEM_PERIP_RST_EN0_TIMERS_RST_Msk = 0x1
	// Bit TIMERS_RST.
	SYSTEM_PERIP_RST_EN0_TIMERS_RST = 0x1
	// Position of SPI01_RST field.
	SYSTEM_PERIP_RST_EN0_SPI01_RST_Pos = 0x1
	// Bit mask of SPI01_RST field.
	SYSTEM_PERIP_RST_EN0_SPI01_RST_Msk = 0x2
	// Bit SPI01_RST.
	SYSTEM_PERIP_RST_EN0_SPI01_RST = 0x2
	// Position of UART_RST field.
	SYSTEM_PERIP_RST_EN0_UART_RST_Pos = 0x2
	// Bit mask of UART_RST field.
	SYSTEM_PERIP_RST_EN0_UART_RST_Msk = 0x4
	// Bit UART_RST.
	SYSTEM_PERIP_RST_EN0_UART_RST = 0x4
	// Position of WDG_RST field.
	SYSTEM_PERIP_RST_EN0_WDG_RST_Pos = 0x3
	// Bit mask of WDG_RST field.
	SYSTEM_PERIP_RST_EN0_WDG_RST_Msk = 0x8
	// Bit WDG_RST.
	SYSTEM_PERIP_RST_EN0_WDG_RST = 0x8
	// Position of I2S0_RST field.
	SYSTEM_PERIP_RST_EN0_I2S0_RST_Pos = 0x4
	// Bit mask of I2S0_RST field.
	SYSTEM_PERIP_RST_EN0_I2S0_RST_Msk = 0x10
	// Bit I2S0_RST.
	SYSTEM_PERIP_RST_EN0_I2S0_RST = 0x10
	// Position of UART1_RST field.
	SYSTEM_PERIP_RST_EN0_UART1_RST_Pos = 0x5
	// Bit mask of UART1_RST field.
	SYSTEM_PERIP_RST_EN0_UART1_RST_Msk = 0x20
	// Bit UART1_RST.
	SYSTEM_PERIP_RST_EN0_UART1_RST = 0x20
	// Position of SPI2_RST field.
	SYSTEM_PERIP_RST_EN0_SPI2_RST_Pos = 0x6
	// Bit mask of SPI2_RST field.
	SYSTEM_PERIP_RST_EN0_SPI2_RST_Msk = 0x40
	// Bit SPI2_RST.
	SYSTEM_PERIP_RST_EN0_SPI2_RST = 0x40
	// Position of EXT0_RST field.
	SYSTEM_PERIP_RST_EN0_EXT0_RST_Pos = 0x7
	// Bit mask of EXT0_RST field.
	SYSTEM_PERIP_RST_EN0_EXT0_RST_Msk = 0x80
	// Bit EXT0_RST.
	SYSTEM_PERIP_RST_EN0_EXT0_RST = 0x80
	// Position of UHCI0_RST field.
	SYSTEM_PERIP_RST_EN0_UHCI0_RST_Pos = 0x8
	// Bit mask of UHCI0_RST field.
	SYSTEM_PERIP_RST_EN0_UHCI0_RST_Msk = 0x100
	// Bit UHCI0_RST.
	SYSTEM_PERIP_RST_EN0_UHCI0_RST = 0x100
	// Position of RMT_RST field.
	SYSTEM_PERIP_RST_EN0_RMT_RST_Pos = 0x9
	// Bit mask of RMT_RST field.
	SYSTEM_PERIP_RST_EN0_RMT_RST_Msk = 0x200
	// Bit RMT_RST.
	SYSTEM_PERIP_RST_EN0_RMT_RST = 0x200
	// Position of PCNT_RST field.
	SYSTEM_PERIP_RST_EN0_PCNT_RST_Pos = 0xa
	// Bit mask of PCNT_RST field.
	SYSTEM_PERIP_RST_EN0_PCNT_RST_Msk = 0x400
	// Bit PCNT_RST.
	SYSTEM_PERIP_RST_EN0_PCNT_RST = 0x400
	// Position of LEDC_RST field.
	SYSTEM_PERIP_RST_EN0_LEDC_RST_Pos = 0xb
	// Bit mask of LEDC_RST field.
	SYSTEM_PERIP_RST_EN0_LEDC_RST_Msk = 0x800
	// Bit LEDC_RST.
	SYSTEM_PERIP_RST_EN0_LEDC_RST = 0x800
	// Position of UHCI1_RST field.
	SYSTEM_PERIP_RST_EN0_UHCI1_RST_Pos = 0xc
	// Bit mask of UHCI1_RST field.
	SYSTEM_PERIP_RST_EN0_UHCI1_RST_Msk = 0x1000
	// Bit UHCI1_RST.
	SYSTEM_PERIP_RST_EN0_UHCI1_RST = 0x1000
	// Position of TIMERGROUP_RST field.
	SYSTEM_PERIP_RST_EN0_TIMERGROUP_RST_Pos = 0xd
	// Bit mask of TIMERGROUP_RST field.
	SYSTEM_PERIP_RST_EN0_TIMERGROUP_RST_Msk = 0x2000
	// Bit TIMERGROUP_RST.
	SYSTEM_PERIP_RST_EN0_TIMERGROUP_RST = 0x2000
	// Position of EFUSE_RST field.
	SYSTEM_PERIP_RST_EN0_EFUSE_RST_Pos = 0xe
	// Bit mask of EFUSE_RST field.
	SYSTEM_PERIP_RST_EN0_EFUSE_RST_Msk = 0x4000
	// Bit EFUSE_RST.
	SYSTEM_PERIP_RST_EN0_EFUSE_RST = 0x4000
	// Position of TIMERGROUP1_RST field.
	SYSTEM_PERIP_RST_EN0_TIMERGROUP1_RST_Pos = 0xf
	// Bit mask of TIMERGROUP1_RST field.
	SYSTEM_PERIP_RST_EN0_TIMERGROUP1_RST_Msk = 0x8000
	// Bit TIMERGROUP1_RST.
	SYSTEM_PERIP_RST_EN0_TIMERGROUP1_RST = 0x8000
	// Position of SPI3_RST field.
	SYSTEM_PERIP_RST_EN0_SPI3_RST_Pos = 0x10
	// Bit mask of SPI3_RST field.
	SYSTEM_PERIP_RST_EN0_SPI3_RST_Msk = 0x10000
	// Bit SPI3_RST.
	SYSTEM_PERIP_RST_EN0_SPI3_RST = 0x10000
	// Position of PWM0_RST field.
	SYSTEM_PERIP_RST_EN0_PWM0_RST_Pos = 0x11
	// Bit mask of PWM0_RST field.
	SYSTEM_PERIP_RST_EN0_PWM0_RST_Msk = 0x20000
	// Bit PWM0_RST.
	SYSTEM_PERIP_RST_EN0_PWM0_RST = 0x20000
	// Position of EXT1_RST field.
	SYSTEM_PERIP_RST_EN0_EXT1_RST_Pos = 0x12
	// Bit mask of EXT1_RST field.
	SYSTEM_PERIP_RST_EN0_EXT1_RST_Msk = 0x40000
	// Bit EXT1_RST.
	SYSTEM_PERIP_RST_EN0_EXT1_RST = 0x40000
	// Position of CAN_RST field.
	SYSTEM_PERIP_RST_EN0_CAN_RST_Pos = 0x13
	// Bit mask of CAN_RST field.
	SYSTEM_PERIP_RST_EN0_CAN_RST_Msk = 0x80000
	// Bit CAN_RST.
	SYSTEM_PERIP_RST_EN0_CAN_RST = 0x80000
	// Position of PWM1_RST field.
	SYSTEM_PERIP_RST_EN0_PWM1_RST_Pos = 0x14
	// Bit mask of PWM1_RST field.
	SYSTEM_PERIP_RST_EN0_PWM1_RST_Msk = 0x100000
	// Bit PWM1_RST.
	SYSTEM_PERIP_RST_EN0_PWM1_RST = 0x100000
	// Position of I2S1_RST field.
	SYSTEM_PERIP_RST_EN0_I2S1_RST_Pos = 0x15
	// Bit mask of I2S1_RST field.
	SYSTEM_PERIP_RST_EN0_I2S1_RST_Msk = 0x200000
	// Bit I2S1_RST.
	SYSTEM_PERIP_RST_EN0_I2S1_RST = 0x200000
	// Position of SPI2_DMA_RST field.
	SYSTEM_PERIP_RST_EN0_SPI2_DMA_RST_Pos = 0x16
	// Bit mask of SPI2_DMA_RST field.
	SYSTEM_PERIP_RST_EN0_SPI2_DMA_RST_Msk = 0x400000
	// Bit SPI2_DMA_RST.
	SYSTEM_PERIP_RST_EN0_SPI2_DMA_RST = 0x400000
	// Position of USB_DEVICE_RST field.
	SYSTEM_PERIP_RST_EN0_USB_DEVICE_RST_Pos = 0x17
	// Bit mask of USB_DEVICE_RST field.
	SYSTEM_PERIP_RST_EN0_USB_DEVICE_RST_Msk = 0x800000
	// Bit USB_DEVICE_RST.
	SYSTEM_PERIP_RST_EN0_USB_DEVICE_RST = 0x800000
	// Position of UART_MEM_RST field.
	SYSTEM_PERIP_RST_EN0_UART_MEM_RST_Pos = 0x18
	// Bit mask of UART_MEM_RST field.
	SYSTEM_PERIP_RST_EN0_UART_MEM_RST_Msk = 0x1000000
	// Bit UART_MEM_RST.
	SYSTEM_PERIP_RST_EN0_UART_MEM_RST = 0x1000000
	// Position of PWM2_RST field.
	SYSTEM_PERIP_RST_EN0_PWM2_RST_Pos = 0x19
	// Bit mask of PWM2_RST field.
	SYSTEM_PERIP_RST_EN0_PWM2_RST_Msk = 0x2000000
	// Bit PWM2_RST.
	SYSTEM_PERIP_RST_EN0_PWM2_RST = 0x2000000
	// Position of PWM3_RST field.
	SYSTEM_PERIP_RST_EN0_PWM3_RST_Pos = 0x1a
	// Bit mask of PWM3_RST field.
	SYSTEM_PERIP_RST_EN0_PWM3_RST_Msk = 0x4000000
	// Bit PWM3_RST.
	SYSTEM_PERIP_RST_EN0_PWM3_RST = 0x4000000
	// Position of SPI3_DMA_RST field.
	SYSTEM_PERIP_RST_EN0_SPI3_DMA_RST_Pos = 0x1b
	// Bit mask of SPI3_DMA_RST field.
	SYSTEM_PERIP_RST_EN0_SPI3_DMA_RST_Msk = 0x8000000
	// Bit SPI3_DMA_RST.
	SYSTEM_PERIP_RST_EN0_SPI3_DMA_RST = 0x8000000
	// Position of APB_SARADC_RST field.
	SYSTEM_PERIP_RST_EN0_APB_SARADC_RST_Pos = 0x1c
	// Bit mask of APB_SARADC_RST field.
	SYSTEM_PERIP_RST_EN0_APB_SARADC_RST_Msk = 0x10000000
	// Bit APB_SARADC_RST.
	SYSTEM_PERIP_RST_EN0_APB_SARADC_RST = 0x10000000
	// Position of SYSTIMER_RST field.
	SYSTEM_PERIP_RST_EN0_SYSTIMER_RST_Pos = 0x1d
	// Bit mask of SYSTIMER_RST field.
	SYSTEM_PERIP_RST_EN0_SYSTIMER_RST_Msk = 0x20000000
	// Bit SYSTIMER_RST.
	SYSTEM_PERIP_RST_EN0_SYSTIMER_RST = 0x20000000
	// Position of ADC2_ARB_RST field.
	SYSTEM_PERIP_RST_EN0_ADC2_ARB_RST_Pos = 0x1e
	// Bit mask of ADC2_ARB_RST field.
	SYSTEM_PERIP_RST_EN0_ADC2_ARB_RST_Msk = 0x40000000
	// Bit ADC2_ARB_RST.
	SYSTEM_PERIP_RST_EN0_ADC2_ARB_RST = 0x40000000
	// Position of SPI4_RST field.
	SYSTEM_PERIP_RST_EN0_SPI4_RST_Pos = 0x1f
	// Bit mask of SPI4_RST field.
	SYSTEM_PERIP_RST_EN0_SPI4_RST_Msk = 0x80000000
	// Bit SPI4_RST.
	SYSTEM_PERIP_RST_EN0_SPI4_RST = 0x80000000

	// PERIP_RST_EN1: peripheral reset register
	// Position of CRYPTO_AES_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_AES_RST_Pos = 0x1
	// Bit mask of CRYPTO_AES_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_AES_RST_Msk = 0x2
	// Bit CRYPTO_AES_RST.
	SYSTEM_PERIP_RST_EN1_CRYPTO_AES_RST = 0x2
	// Position of CRYPTO_SHA_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_SHA_RST_Pos = 0x2
	// Bit mask of CRYPTO_SHA_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_SHA_RST_Msk = 0x4
	// Bit CRYPTO_SHA_RST.
	SYSTEM_PERIP_RST_EN1_CRYPTO_SHA_RST = 0x4
	// Position of CRYPTO_RSA_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_RSA_RST_Pos = 0x3
	// Bit mask of CRYPTO_RSA_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_RSA_RST_Msk = 0x8
	// Bit CRYPTO_RSA_RST.
	SYSTEM_PERIP_RST_EN1_CRYPTO_RSA_RST = 0x8
	// Position of CRYPTO_DS_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_DS_RST_Pos = 0x4
	// Bit mask of CRYPTO_DS_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_DS_RST_Msk = 0x10
	// Bit CRYPTO_DS_RST.
	SYSTEM_PERIP_RST_EN1_CRYPTO_DS_RST = 0x10
	// Position of CRYPTO_HMAC_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_HMAC_RST_Pos = 0x5
	// Bit mask of CRYPTO_HMAC_RST field.
	SYSTEM_PERIP_RST_EN1_CRYPTO_HMAC_RST_Msk = 0x20
	// Bit CRYPTO_HMAC_RST.
	SYSTEM_PERIP_RST_EN1_CRYPTO_HMAC_RST = 0x20
	// Position of DMA_RST field.
	SYSTEM_PERIP_RST_EN1_DMA_RST_Pos = 0x6
	// Bit mask of DMA_RST field.
	SYSTEM_PERIP_RST_EN1_DMA_RST_Msk = 0x40
	// Bit DMA_RST.
	SYSTEM_PERIP_RST_EN1_DMA_RST = 0x40
	// Position of SDIO_HOST_RST field.
	SYSTEM_PERIP_RST_EN1_SDIO_HOST_RST_Pos = 0x7
	// Bit mask of SDIO_HOST_RST field.
	SYSTEM_PERIP_RST_EN1_SDIO_HOST_RST_Msk = 0x80
	// Bit SDIO_HOST_RST.
	SYSTEM_PERIP_RST_EN1_SDIO_HOST_RST = 0x80
	// Position of LCD_CAM_RST field.
	SYSTEM_PERIP_RST_EN1_LCD_CAM_RST_Pos = 0x8
	// Bit mask of LCD_CAM_RST field.
	SYSTEM_PERIP_RST_EN1_LCD_CAM_RST_Msk = 0x100
	// Bit LCD_CAM_RST.
	SYSTEM_PERIP_RST_EN1_LCD_CAM_RST = 0x100
	// Position of UART2_RST field.
	SYSTEM_PERIP_RST_EN1_UART2_RST_Pos = 0x9
	// Bit mask of UART2_RST field.
	SYSTEM_PERIP_RST_EN1_UART2_RST_Msk = 0x200
	// Bit UART2_RST.
	SYSTEM_PERIP_RST_EN1_UART2_RST = 0x200
	// Position of TSENS_RST field.
	SYSTEM_PERIP_RST_EN1_TSENS_RST_Pos = 0xa
	// Bit mask of TSENS_RST field.
	SYSTEM_PERIP_RST_EN1_TSENS_RST_Msk = 0x400
	// Bit TSENS_RST.
	SYSTEM_PERIP_RST_EN1_TSENS_RST = 0x400

	// BT_LPCK_DIV_INT: clock config register
	// Position of BT_LPCK_DIV_NUM field.
	SYSTEM_BT_LPCK_DIV_INT_BT_LPCK_DIV_NUM_Pos = 0x0
	// Bit mask of BT_LPCK_DIV_NUM field.
	SYSTEM_BT_LPCK_DIV_INT_BT_LPCK_DIV_NUM_Msk = 0xfff

	// BT_LPCK_DIV_FRAC: clock config register
	// Position of BT_LPCK_DIV_B field.
	SYSTEM_BT_LPCK_DIV_FRAC_BT_LPCK_DIV_B_Pos = 0x0
	// Bit mask of BT_LPCK_DIV_B field.
	SYSTEM_BT_LPCK_DIV_FRAC_BT_LPCK_DIV_B_Msk = 0xfff
	// Position of BT_LPCK_DIV_A field.
	SYSTEM_BT_LPCK_DIV_FRAC_BT_LPCK_DIV_A_Pos = 0xc
	// Bit mask of BT_LPCK_DIV_A field.
	SYSTEM_BT_LPCK_DIV_FRAC_BT_LPCK_DIV_A_Msk = 0xfff000
	// Position of LPCLK_SEL_RTC_SLOW field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_RTC_SLOW_Pos = 0x18
	// Bit mask of LPCLK_SEL_RTC_SLOW field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_RTC_SLOW_Msk = 0x1000000
	// Bit LPCLK_SEL_RTC_SLOW.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_RTC_SLOW = 0x1000000
	// Position of LPCLK_SEL_8M field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_8M_Pos = 0x19
	// Bit mask of LPCLK_SEL_8M field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_8M_Msk = 0x2000000
	// Bit LPCLK_SEL_8M.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_8M = 0x2000000
	// Position of LPCLK_SEL_XTAL field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_XTAL_Pos = 0x1a
	// Bit mask of LPCLK_SEL_XTAL field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_XTAL_Msk = 0x4000000
	// Bit LPCLK_SEL_XTAL.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_XTAL = 0x4000000
	// Position of LPCLK_SEL_XTAL32K field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_XTAL32K_Pos = 0x1b
	// Bit mask of LPCLK_SEL_XTAL32K field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_XTAL32K_Msk = 0x8000000
	// Bit LPCLK_SEL_XTAL32K.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_SEL_XTAL32K = 0x8000000
	// Position of LPCLK_RTC_EN field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_RTC_EN_Pos = 0x1c
	// Bit mask of LPCLK_RTC_EN field.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_RTC_EN_Msk = 0x10000000
	// Bit LPCLK_RTC_EN.
	SYSTEM_BT_LPCK_DIV_FRAC_LPCLK_RTC_EN = 0x10000000

	// CPU_INTR_FROM_CPU_0: interrupt generate register
	// Position of CPU_INTR_FROM_CPU_0 field.
	SYSTEM_CPU_INTR_FROM_CPU_0_CPU_INTR_FROM_CPU_0_Pos = 0x0
	// Bit mask of CPU_INTR_FROM_CPU_0 field.
	SYSTEM_CPU_INTR_FROM_CPU_0_CPU_INTR_FROM_CPU_0_Msk = 0x1
	// Bit CPU_INTR_FROM_CPU_0.
	SYSTEM_CPU_INTR_FROM_CPU_0_CPU_INTR_FROM_CPU_0 = 0x1

	// CPU_INTR_FROM_CPU_1: interrupt generate register
	// Position of CPU_INTR_FROM_CPU_1 field.
	SYSTEM_CPU_INTR_FROM_CPU_1_CPU_INTR_FROM_CPU_1_Pos = 0x0
	// Bit mask of CPU_INTR_FROM_CPU_1 field.
	SYSTEM_CPU_INTR_FROM_CPU_1_CPU_INTR_FROM_CPU_1_Msk = 0x1
	// Bit CPU_INTR_FROM_CPU_1.
	SYSTEM_CPU_INTR_FROM_CPU_1_CPU_INTR_FROM_CPU_1 = 0x1

	// CPU_INTR_FROM_CPU_2: interrupt generate register
	// Position of CPU_INTR_FROM_CPU_2 field.
	SYSTEM_CPU_INTR_FROM_CPU_2_CPU_INTR_FROM_CPU_2_Pos = 0x0
	// Bit mask of CPU_INTR_FROM_CPU_2 field.
	SYSTEM_CPU_INTR_FROM_CPU_2_CPU_INTR_FROM_CPU_2_Msk = 0x1
	// Bit CPU_INTR_FROM_CPU_2.
	SYSTEM_CPU_INTR_FROM_CPU_2_CPU_INTR_FROM_CPU_2 = 0x1

	// CPU_INTR_FROM_CPU_3: interrupt generate register
	// Position of CPU_INTR_FROM_CPU_3 field.
	SYSTEM_CPU_INTR_FROM_CPU_3_CPU_INTR_FROM_CPU_3_Pos = 0x0
	// Bit mask of CPU_INTR_FROM_CPU_3 field.
	SYSTEM_CPU_INTR_FROM_CPU_3_CPU_INTR_FROM_CPU_3_Msk = 0x1
	// Bit CPU_INTR_FROM_CPU_3.
	SYSTEM_CPU_INTR_FROM_CPU_3_CPU_INTR_FROM_CPU_3 = 0x1

	// RSA_PD_CTRL: rsa memory power control register
	// Position of RSA_MEM_PD field.
	SYSTEM_RSA_PD_CTRL_RSA_MEM_PD_Pos = 0x0
	// Bit mask of RSA_MEM_PD field.
	SYSTEM_RSA_PD_CTRL_RSA_MEM_PD_Msk = 0x1
	// Bit RSA_MEM_PD.
	SYSTEM_RSA_PD_CTRL_RSA_MEM_PD = 0x1
	// Position of RSA_MEM_FORCE_PU field.
	SYSTEM_RSA_PD_CTRL_RSA_MEM_FORCE_PU_Pos = 0x1
	// Bit mask of RSA_MEM_FORCE_PU field.
	SYSTEM_RSA_PD_CTRL_RSA_MEM_FORCE_PU_Msk = 0x2
	// Bit RSA_MEM_FORCE_PU.
	SYSTEM_RSA_PD_CTRL_RSA_MEM_FORCE_PU = 0x2
	// Position of RSA_MEM_FORCE_PD field.
	SYSTEM_RSA_PD_CTRL_RSA_MEM_FORCE_PD_Pos = 0x2
	// Bit mask of RSA_MEM_FORCE_PD field.
	SYSTEM_RSA_PD_CTRL_RSA_MEM_FORCE_PD_Msk = 0x4
	// Bit RSA_MEM_FORCE_PD.
	SYSTEM_RSA_PD_CTRL_RSA_MEM_FORCE_PD = 0x4

	// EDMA_CTRL: edma clcok and reset register
	// Position of EDMA_CLK_ON field.
	SYSTEM_EDMA_CTRL_EDMA_CLK_ON_Pos = 0x0
	// Bit mask of EDMA_CLK_ON field.
	SYSTEM_EDMA_CTRL_EDMA_CLK_ON_Msk = 0x1
	// Bit EDMA_CLK_ON.
	SYSTEM_EDMA_CTRL_EDMA_CLK_ON = 0x1
	// Position of EDMA_RESET field.
	SYSTEM_EDMA_CTRL_EDMA_RESET_Pos = 0x1
	// Bit mask of EDMA_RESET field.
	SYSTEM_EDMA_CTRL_EDMA_RESET_Msk = 0x2
	// Bit EDMA_RESET.
	SYSTEM_EDMA_CTRL_EDMA_RESET = 0x2

	// CACHE_CONTROL: cache control register
	// Position of ICACHE_CLK_ON field.
	SYSTEM_CACHE_CONTROL_ICACHE_CLK_ON_Pos = 0x0
	// Bit mask of ICACHE_CLK_ON field.
	SYSTEM_CACHE_CONTROL_ICACHE_CLK_ON_Msk = 0x1
	// Bit ICACHE_CLK_ON.
	SYSTEM_CACHE_CONTROL_ICACHE_CLK_ON = 0x1
	// Position of ICACHE_RESET field.
	SYSTEM_CACHE_CONTROL_ICACHE_RESET_Pos = 0x1
	// Bit mask of ICACHE_RESET field.
	SYSTEM_CACHE_CONTROL_ICACHE_RESET_Msk = 0x2
	// Bit ICACHE_RESET.
	SYSTEM_CACHE_CONTROL_ICACHE_RESET = 0x2
	// Position of DCACHE_CLK_ON field.
	SYSTEM_CACHE_CONTROL_DCACHE_CLK_ON_Pos = 0x2
	// Bit mask of DCACHE_CLK_ON field.
	SYSTEM_CACHE_CONTROL_DCACHE_CLK_ON_Msk = 0x4
	// Bit DCACHE_CLK_ON.
	SYSTEM_CACHE_CONTROL_DCACHE_CLK_ON = 0x4
	// Position of DCACHE_RESET field.
	SYSTEM_CACHE_CONTROL_DCACHE_RESET_Pos = 0x3
	// Bit mask of DCACHE_RESET field.
	SYSTEM_CACHE_CONTROL_DCACHE_RESET_Msk = 0x8
	// Bit DCACHE_RESET.
	SYSTEM_CACHE_CONTROL_DCACHE_RESET = 0x8

	// EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL: SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_REG
	// Position of ENABLE_SPI_MANUAL_ENCRYPT field.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_SPI_MANUAL_ENCRYPT_Pos = 0x0
	// Bit mask of ENABLE_SPI_MANUAL_ENCRYPT field.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_SPI_MANUAL_ENCRYPT_Msk = 0x1
	// Bit ENABLE_SPI_MANUAL_ENCRYPT.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_SPI_MANUAL_ENCRYPT = 0x1
	// Position of ENABLE_DOWNLOAD_DB_ENCRYPT field.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_DOWNLOAD_DB_ENCRYPT_Pos = 0x1
	// Bit mask of ENABLE_DOWNLOAD_DB_ENCRYPT field.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_DOWNLOAD_DB_ENCRYPT_Msk = 0x2
	// Bit ENABLE_DOWNLOAD_DB_ENCRYPT.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_DOWNLOAD_DB_ENCRYPT = 0x2
	// Position of ENABLE_DOWNLOAD_G0CB_DECRYPT field.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_DOWNLOAD_G0CB_DECRYPT_Pos = 0x2
	// Bit mask of ENABLE_DOWNLOAD_G0CB_DECRYPT field.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_DOWNLOAD_G0CB_DECRYPT_Msk = 0x4
	// Bit ENABLE_DOWNLOAD_G0CB_DECRYPT.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_DOWNLOAD_G0CB_DECRYPT = 0x4
	// Position of ENABLE_DOWNLOAD_MANUAL_ENCRYPT field.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_DOWNLOAD_MANUAL_ENCRYPT_Pos = 0x3
	// Bit mask of ENABLE_DOWNLOAD_MANUAL_ENCRYPT field.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_DOWNLOAD_MANUAL_ENCRYPT_Msk = 0x8
	// Bit ENABLE_DOWNLOAD_MANUAL_ENCRYPT.
	SYSTEM_EXTERNAL_DEVICE_ENCRYPT_DECRYPT_CONTROL_ENABLE_DOWNLOAD_MANUAL_ENCRYPT = 0x8

	// RTC_FASTMEM_CONFIG: fast memory config register
	// Position of RTC_MEM_CRC_START field.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_START_Pos = 0x8
	// Bit mask of RTC_MEM_CRC_START field.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_START_Msk = 0x100
	// Bit RTC_MEM_CRC_START.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_START = 0x100
	// Position of RTC_MEM_CRC_ADDR field.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_ADDR_Pos = 0x9
	// Bit mask of RTC_MEM_CRC_ADDR field.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_ADDR_Msk = 0xffe00
	// Position of RTC_MEM_CRC_LEN field.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_LEN_Pos = 0x14
	// Bit mask of RTC_MEM_CRC_LEN field.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_LEN_Msk = 0x7ff00000
	// Position of RTC_MEM_CRC_FINISH field.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_FINISH_Pos = 0x1f
	// Bit mask of RTC_MEM_CRC_FINISH field.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_FINISH_Msk = 0x80000000
	// Bit RTC_MEM_CRC_FINISH.
	SYSTEM_RTC_FASTMEM_CONFIG_RTC_MEM_CRC_FINISH = 0x80000000

	// RTC_FASTMEM_CRC: reserved
	// Position of RTC_MEM_CRC_RES field.
	SYSTEM_RTC_FASTMEM_CRC_RTC_MEM_CRC_RES_Pos = 0x0
	// Bit mask of RTC_MEM_CRC_RES field.
	SYSTEM_RTC_FASTMEM_CRC_RTC_MEM_CRC_RES_Msk = 0xffffffff

	// REDUNDANT_ECO_CTRL: eco register
	// Position of REDUNDANT_ECO_DRIVE field.
	SYSTEM_REDUNDANT_ECO_CTRL_REDUNDANT_ECO_DRIVE_Pos = 0x0
	// Bit mask of REDUNDANT_ECO_DRIVE field.
	SYSTEM_REDUNDANT_ECO_CTRL_REDUNDANT_ECO_DRIVE_Msk = 0x1
	// Bit REDUNDANT_ECO_DRIVE.
	SYSTEM_REDUNDANT_ECO_CTRL_REDUNDANT_ECO_DRIVE = 0x1
	// Position of REDUNDANT_ECO_RESULT field.
	SYSTEM_REDUNDANT_ECO_CTRL_REDUNDANT_ECO_RESULT_Pos = 0x1
	// Bit mask of REDUNDANT_ECO_RESULT field.
	SYSTEM_REDUNDANT_ECO_CTRL_REDUNDANT_ECO_RESULT_Msk = 0x2
	// Bit REDUNDANT_ECO_RESULT.
	SYSTEM_REDUNDANT_ECO_CTRL_REDUNDANT_ECO_RESULT = 0x2

	// CLOCK_GATE: clock gating register
	// Position of CLK_EN field.
	SYSTEM_CLOCK_GATE_CLK_EN_Pos = 0x0
	// Bit mask of CLK_EN field.
	SYSTEM_CLOCK_GATE_CLK_EN_Msk = 0x1
	// Bit CLK_EN.
	SYSTEM_CLOCK_GATE_CLK_EN = 0x1

	// SYSCLK_CONF: system clock config register
	// Position of PRE_DIV_CNT field.
	SYSTEM_SYSCLK_CONF_PRE_DIV_CNT_Pos = 0x0
	// Bit mask of PRE_DIV_CNT field.
	SYSTEM_SYSCLK_CONF_PRE_DIV_CNT_Msk = 0x3ff
	// Position of SOC_CLK_SEL field.
	SYSTEM_SYSCLK_CONF_SOC_CLK_SEL_Pos = 0xa
	// Bit mask of SOC_CLK_SEL field.
	SYSTEM_SYSCLK_CONF_SOC_CLK_SEL_Msk = 0xc00
	// Position of CLK_XTAL_FREQ field.
	SYSTEM_SYSCLK_CONF_CLK_XTAL_FREQ_Pos = 0xc
	// Bit mask of CLK_XTAL_FREQ field.
	SYSTEM_SYSCLK_CONF_CLK_XTAL_FREQ_Msk = 0x7f000
	// Position of CLK_DIV_EN field.
	SYSTEM_SYSCLK_CONF_CLK_DIV_EN_Pos = 0x13
	// Bit mask of CLK_DIV_EN field.
	SYSTEM_SYSCLK_CONF_CLK_DIV_EN_Msk = 0x80000
	// Bit CLK_DIV_EN.
	SYSTEM_SYSCLK_CONF_CLK_DIV_EN = 0x80000

	// MEM_PVT: mem pvt register
	// Position of MEM_PATH_LEN field.
	SYSTEM_MEM_PVT_MEM_PATH_LEN_Pos = 0x0
	// Bit mask of MEM_PATH_LEN field.
	SYSTEM_MEM_PVT_MEM_PATH_LEN_Msk = 0xf
	// Position of MEM_ERR_CNT_CLR field.
	SYSTEM_MEM_PVT_MEM_ERR_CNT_CLR_Pos = 0x4
	// Bit mask of MEM_ERR_CNT_CLR field.
	SYSTEM_MEM_PVT_MEM_ERR_CNT_CLR_Msk = 0x10
	// Bit MEM_ERR_CNT_CLR.
	SYSTEM_MEM_PVT_MEM_ERR_CNT_CLR = 0x10
	// Position of MONITOR_EN field.
	SYSTEM_MEM_PVT_MONITOR_EN_Pos = 0x5
	// Bit mask of MONITOR_EN field.
	SYSTEM_MEM_PVT_MONITOR_EN_Msk = 0x20
	// Bit MONITOR_EN.
	SYSTEM_MEM_PVT_MONITOR_EN = 0x20
	// Position of MEM_TIMING_ERR_CNT field.
	SYSTEM_MEM_PVT_MEM_TIMING_ERR_CNT_Pos = 0x6
	// Bit mask of MEM_TIMING_ERR_CNT field.
	SYSTEM_MEM_PVT_MEM_TIMING_ERR_CNT_Msk = 0x3fffc0
	// Position of MEM_VT_SEL field.
	SYSTEM_MEM_PVT_MEM_VT_SEL_Pos = 0x16
	// Bit mask of MEM_VT_SEL field.
	SYSTEM_MEM_PVT_MEM_VT_SEL_Msk = 0xc00000

	// COMB_PVT_LVT_CONF: mem pvt register
	// Position of COMB_PATH_LEN_LVT field.
	SYSTEM_COMB_PVT_LVT_CONF_COMB_PATH_LEN_LVT_Pos = 0x0
	// Bit mask of COMB_PATH_LEN_LVT field.
	SYSTEM_COMB_PVT_LVT_CONF_COMB_PATH_LEN_LVT_Msk = 0x1f
	// Position of COMB_ERR_CNT_CLR_LVT field.
	SYSTEM_COMB_PVT_LVT_CONF_COMB_ERR_CNT_CLR_LVT_Pos = 0x5
	// Bit mask of COMB_ERR_CNT_CLR_LVT field.
	SYSTEM_COMB_PVT_LVT_CONF_COMB_ERR_CNT_CLR_LVT_Msk = 0x20
	// Bit COMB_ERR_CNT_CLR_LVT.
	SYSTEM_COMB_PVT_LVT_CONF_COMB_ERR_CNT_CLR_LVT = 0x20
	// Position of COMB_PVT_MONITOR_EN_LVT field.
	SYSTEM_COMB_PVT_LVT_CONF_COMB_PVT_MONITOR_EN_LVT_Pos = 0x6
	// Bit mask of COMB_PVT_MONITOR_EN_LVT field.
	SYSTEM_COMB_PVT_LVT_CONF_COMB_PVT_MONITOR_EN_LVT_Msk = 0x40
	// Bit COMB_PVT_MONITOR_EN_LVT.
	SYSTEM_COMB_PVT_LVT_CONF_COMB_PVT_MONITOR_EN_LVT = 0x40

	// COMB_PVT_NVT_CONF: mem pvt register
	// Position of COMB_PATH_LEN_NVT field.
	SYSTEM_COMB_PVT_NVT_CONF_COMB_PATH_LEN_NVT_Pos = 0x0
	// Bit mask of COMB_PATH_LEN_NVT field.
	SYSTEM_COMB_PVT_NVT_CONF_COMB_PATH_LEN_NVT_Msk = 0x1f
	// Position of COMB_ERR_CNT_CLR_NVT field.
	SYSTEM_COMB_PVT_NVT_CONF_COMB_ERR_CNT_CLR_NVT_Pos = 0x5
	// Bit mask of COMB_ERR_CNT_CLR_NVT field.
	SYSTEM_COMB_PVT_NVT_CONF_COMB_ERR_CNT_CLR_NVT_Msk = 0x20
	// Bit COMB_ERR_CNT_CLR_NVT.
	SYSTEM_COMB_PVT_NVT_CONF_COMB_ERR_CNT_CLR_NVT = 0x20
	// Position of COMB_PVT_MONITOR_EN_NVT field.
	SYSTEM_COMB_PVT_NVT_CONF_COMB_PVT_MONITOR_EN_NVT_Pos = 0x6
	// Bit mask of COMB_PVT_MONITOR_EN_NVT field.
	SYSTEM_COMB_PVT_NVT_CONF_COMB_PVT_MONITOR_EN_NVT_Msk = 0x40
	// Bit COMB_PVT_MONITOR_EN_NVT.
	SYSTEM_COMB_PVT_NVT_CONF_COMB_PVT_MONITOR_EN_NVT = 0x40

	// COMB_PVT_HVT_CONF: mem pvt register
	// Position of COMB_PATH_LEN_HVT field.
	SYSTEM_COMB_PVT_HVT_CONF_COMB_PATH_LEN_HVT_Pos = 0x0
	// Bit mask of COMB_PATH_LEN_HVT field.
	SYSTEM_COMB_PVT_HVT_CONF_COMB_PATH_LEN_HVT_Msk = 0x1f
	// Position of COMB_ERR_CNT_CLR_HVT field.
	SYSTEM_COMB_PVT_HVT_CONF_COMB_ERR_CNT_CLR_HVT_Pos = 0x5
	// Bit mask of COMB_ERR_CNT_CLR_HVT field.
	SYSTEM_COMB_PVT_HVT_CONF_COMB_ERR_CNT_CLR_HVT_Msk = 0x20
	// Bit COMB_ERR_CNT_CLR_HVT.
	SYSTEM_COMB_PVT_HVT_CONF_COMB_ERR_CNT_CLR_HVT = 0x20
	// Position of COMB_PVT_MONITOR_EN_HVT field.
	SYSTEM_COMB_PVT_HVT_CONF_COMB_PVT_MONITOR_EN_HVT_Pos = 0x6
	// Bit mask of COMB_PVT_MONITOR_EN_HVT field.
	SYSTEM_COMB_PVT_HVT_CONF_COMB_PVT_MONITOR_EN_HVT_Msk = 0x40
	// Bit COMB_PVT_MONITOR_EN_HVT.
	SYSTEM_COMB_PVT_HVT_CONF_COMB_PVT_MONITOR_EN_HVT = 0x40

	// COMB_PVT_ERR_LVT_SITE0: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_LVT_SITE0 field.
	SYSTEM_COMB_PVT_ERR_LVT_SITE0_COMB_TIMING_ERR_CNT_LVT_SITE0_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_LVT_SITE0 field.
	SYSTEM_COMB_PVT_ERR_LVT_SITE0_COMB_TIMING_ERR_CNT_LVT_SITE0_Msk = 0xffff

	// COMB_PVT_ERR_NVT_SITE0: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_NVT_SITE0 field.
	SYSTEM_COMB_PVT_ERR_NVT_SITE0_COMB_TIMING_ERR_CNT_NVT_SITE0_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_NVT_SITE0 field.
	SYSTEM_COMB_PVT_ERR_NVT_SITE0_COMB_TIMING_ERR_CNT_NVT_SITE0_Msk = 0xffff

	// COMB_PVT_ERR_HVT_SITE0: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_HVT_SITE0 field.
	SYSTEM_COMB_PVT_ERR_HVT_SITE0_COMB_TIMING_ERR_CNT_HVT_SITE0_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_HVT_SITE0 field.
	SYSTEM_COMB_PVT_ERR_HVT_SITE0_COMB_TIMING_ERR_CNT_HVT_SITE0_Msk = 0xffff

	// COMB_PVT_ERR_LVT_SITE1: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_LVT_SITE1 field.
	SYSTEM_COMB_PVT_ERR_LVT_SITE1_COMB_TIMING_ERR_CNT_LVT_SITE1_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_LVT_SITE1 field.
	SYSTEM_COMB_PVT_ERR_LVT_SITE1_COMB_TIMING_ERR_CNT_LVT_SITE1_Msk = 0xffff

	// COMB_PVT_ERR_NVT_SITE1: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_NVT_SITE1 field.
	SYSTEM_COMB_PVT_ERR_NVT_SITE1_COMB_TIMING_ERR_CNT_NVT_SITE1_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_NVT_SITE1 field.
	SYSTEM_COMB_PVT_ERR_NVT_SITE1_COMB_TIMING_ERR_CNT_NVT_SITE1_Msk = 0xffff

	// COMB_PVT_ERR_HVT_SITE1: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_HVT_SITE1 field.
	SYSTEM_COMB_PVT_ERR_HVT_SITE1_COMB_TIMING_ERR_CNT_HVT_SITE1_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_HVT_SITE1 field.
	SYSTEM_COMB_PVT_ERR_HVT_SITE1_COMB_TIMING_ERR_CNT_HVT_SITE1_Msk = 0xffff

	// COMB_PVT_ERR_LVT_SITE2: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_LVT_SITE2 field.
	SYSTEM_COMB_PVT_ERR_LVT_SITE2_COMB_TIMING_ERR_CNT_LVT_SITE2_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_LVT_SITE2 field.
	SYSTEM_COMB_PVT_ERR_LVT_SITE2_COMB_TIMING_ERR_CNT_LVT_SITE2_Msk = 0xffff

	// COMB_PVT_ERR_NVT_SITE2: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_NVT_SITE2 field.
	SYSTEM_COMB_PVT_ERR_NVT_SITE2_COMB_TIMING_ERR_CNT_NVT_SITE2_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_NVT_SITE2 field.
	SYSTEM_COMB_PVT_ERR_NVT_SITE2_COMB_TIMING_ERR_CNT_NVT_SITE2_Msk = 0xffff

	// COMB_PVT_ERR_HVT_SITE2: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_HVT_SITE2 field.
	SYSTEM_COMB_PVT_ERR_HVT_SITE2_COMB_TIMING_ERR_CNT_HVT_SITE2_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_HVT_SITE2 field.
	SYSTEM_COMB_PVT_ERR_HVT_SITE2_COMB_TIMING_ERR_CNT_HVT_SITE2_Msk = 0xffff

	// COMB_PVT_ERR_LVT_SITE3: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_LVT_SITE3 field.
	SYSTEM_COMB_PVT_ERR_LVT_SITE3_COMB_TIMING_ERR_CNT_LVT_SITE3_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_LVT_SITE3 field.
	SYSTEM_COMB_PVT_ERR_LVT_SITE3_COMB_TIMING_ERR_CNT_LVT_SITE3_Msk = 0xffff

	// COMB_PVT_ERR_NVT_SITE3: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_NVT_SITE3 field.
	SYSTEM_COMB_PVT_ERR_NVT_SITE3_COMB_TIMING_ERR_CNT_NVT_SITE3_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_NVT_SITE3 field.
	SYSTEM_COMB_PVT_ERR_NVT_SITE3_COMB_TIMING_ERR_CNT_NVT_SITE3_Msk = 0xffff

	// COMB_PVT_ERR_HVT_SITE3: mem pvt register
	// Position of COMB_TIMING_ERR_CNT_HVT_SITE3 field.
	SYSTEM_COMB_PVT_ERR_HVT_SITE3_COMB_TIMING_ERR_CNT_HVT_SITE3_Pos = 0x0
	// Bit mask of COMB_TIMING_ERR_CNT_HVT_SITE3 field.
	SYSTEM_COMB_PVT_ERR_HVT_SITE3_COMB_TIMING_ERR_CNT_HVT_SITE3_Msk = 0xffff

	// SYSTEM_REG_DATE: Version register
	// Position of SYSTEM_REG_DATE field.
	SYSTEM_SYSTEM_REG_DATE_SYSTEM_REG_DATE_Pos = 0x0
	// Bit mask of SYSTEM_REG_DATE field.
	SYSTEM_SYSTEM_REG_DATE_SYSTEM_REG_DATE_Msk = 0xfffffff
)

// Bitfields for SYSTIMER: Peripheral SYSTIMER
const (
	// CONF: SYSTIMER_CONF.
	// Position of SYSTIMER_CLK_FO field.
	SYSTIMER_CONF_SYSTIMER_CLK_FO_Pos = 0x0
	// Bit mask of SYSTIMER_CLK_FO field.
	SYSTIMER_CONF_SYSTIMER_CLK_FO_Msk = 0x1
	// Bit SYSTIMER_CLK_FO.
	SYSTIMER_CONF_SYSTIMER_CLK_FO = 0x1
	// Position of TARGET2_WORK_EN field.
	SYSTIMER_CONF_TARGET2_WORK_EN_Pos = 0x16
	// Bit mask of TARGET2_WORK_EN field.
	SYSTIMER_CONF_TARGET2_WORK_EN_Msk = 0x400000
	// Bit TARGET2_WORK_EN.
	SYSTIMER_CONF_TARGET2_WORK_EN = 0x400000
	// Position of TARGET1_WORK_EN field.
	SYSTIMER_CONF_TARGET1_WORK_EN_Pos = 0x17
	// Bit mask of TARGET1_WORK_EN field.
	SYSTIMER_CONF_TARGET1_WORK_EN_Msk = 0x800000
	// Bit TARGET1_WORK_EN.
	SYSTIMER_CONF_TARGET1_WORK_EN = 0x800000
	// Position of TARGET0_WORK_EN field.
	SYSTIMER_CONF_TARGET0_WORK_EN_Pos = 0x18
	// Bit mask of TARGET0_WORK_EN field.
	SYSTIMER_CONF_TARGET0_WORK_EN_Msk = 0x1000000
	// Bit TARGET0_WORK_EN.
	SYSTIMER_CONF_TARGET0_WORK_EN = 0x1000000
	// Position of TIMER_UNIT1_CORE1_STALL_EN field.
	SYSTIMER_CONF_TIMER_UNIT1_CORE1_STALL_EN_Pos = 0x19
	// Bit mask of TIMER_UNIT1_CORE1_STALL_EN field.
	SYSTIMER_CONF_TIMER_UNIT1_CORE1_STALL_EN_Msk = 0x2000000
	// Bit TIMER_UNIT1_CORE1_STALL_EN.
	SYSTIMER_CONF_TIMER_UNIT1_CORE1_STALL_EN = 0x2000000
	// Position of TIMER_UNIT1_CORE0_STALL_EN field.
	SYSTIMER_CONF_TIMER_UNIT1_CORE0_STALL_EN_Pos = 0x1a
	// Bit mask of TIMER_UNIT1_CORE0_STALL_EN field.
	SYSTIMER_CONF_TIMER_UNIT1_CORE0_STALL_EN_Msk = 0x4000000
	// Bit TIMER_UNIT1_CORE0_STALL_EN.
	SYSTIMER_CONF_TIMER_UNIT1_CORE0_STALL_EN = 0x4000000
	// Position of TIMER_UNIT0_CORE1_STALL_EN field.
	SYSTIMER_CONF_TIMER_UNIT0_CORE1_STALL_EN_Pos = 0x1b
	// Bit mask of TIMER_UNIT0_CORE1_STALL_EN field.
	SYSTIMER_CONF_TIMER_UNIT0_CORE1_STALL_EN_Msk = 0x8000000
	// Bit TIMER_UNIT0_CORE1_STALL_EN.
	SYSTIMER_CONF_TIMER_UNIT0_CORE1_STALL_EN = 0x8000000
	// Position of TIMER_UNIT0_CORE0_STALL_EN field.
	SYSTIMER_CONF_TIMER_UNIT0_CORE0_STALL_EN_Pos = 0x1c
	// Bit mask of TIMER_UNIT0_CORE0_STALL_EN field.
	SYSTIMER_CONF_TIMER_UNIT0_CORE0_STALL_EN_Msk = 0x10000000
	// Bit TIMER_UNIT0_CORE0_STALL_EN.
	SYSTIMER_CONF_TIMER_UNIT0_CORE0_STALL_EN = 0x10000000
	// Position of TIMER_UNIT1_WORK_EN field.
	SYSTIMER_CONF_TIMER_UNIT1_WORK_EN_Pos = 0x1d
	// Bit mask of TIMER_UNIT1_WORK_EN field.
	SYSTIMER_CONF_TIMER_UNIT1_WORK_EN_Msk = 0x20000000
	// Bit TIMER_UNIT1_WORK_EN.
	SYSTIMER_CONF_TIMER_UNIT1_WORK_EN = 0x20000000
	// Position of TIMER_UNIT0_WORK_EN field.
	SYSTIMER_CONF_TIMER_UNIT0_WORK_EN_Pos = 0x1e
	// Bit mask of TIMER_UNIT0_WORK_EN field.
	SYSTIMER_CONF_TIMER_UNIT0_WORK_EN_Msk = 0x40000000
	// Bit TIMER_UNIT0_WORK_EN.
	SYSTIMER_CONF_TIMER_UNIT0_WORK_EN = 0x40000000
	// Position of CLK_EN field.
	SYSTIMER_CONF_CLK_EN_Pos = 0x1f
	// Bit mask of CLK_EN field.
	SYSTIMER_CONF_CLK_EN_Msk = 0x80000000
	// Bit CLK_EN.
	SYSTIMER_CONF_CLK_EN = 0x80000000

	// UNIT0_OP: SYSTIMER_UNIT0_OP.
	// Position of TIMER_UNIT0_VALUE_VALID field.
	SYSTIMER_UNIT0_OP_TIMER_UNIT0_VALUE_VALID_Pos = 0x1d
	// Bit mask of TIMER_UNIT0_VALUE_VALID field.
	SYSTIMER_UNIT0_OP_TIMER_UNIT0_VALUE_VALID_Msk = 0x20000000
	// Bit TIMER_UNIT0_VALUE_VALID.
	SYSTIMER_UNIT0_OP_TIMER_UNIT0_VALUE_VALID = 0x20000000
	// Position of TIMER_UNIT0_UPDATE field.
	SYSTIMER_UNIT0_OP_TIMER_UNIT0_UPDATE_Pos = 0x1e
	// Bit mask of TIMER_UNIT0_UPDATE field.
	SYSTIMER_UNIT0_OP_TIMER_UNIT0_UPDATE_Msk = 0x40000000
	// Bit TIMER_UNIT0_UPDATE.
	SYSTIMER_UNIT0_OP_TIMER_UNIT0_UPDATE = 0x40000000

	// UNIT1_OP: SYSTIMER_UNIT1_OP.
	// Position of TIMER_UNIT1_VALUE_VALID field.
	SYSTIMER_UNIT1_OP_TIMER_UNIT1_VALUE_VALID_Pos = 0x1d
	// Bit mask of TIMER_UNIT1_VALUE_VALID field.
	SYSTIMER_UNIT1_OP_TIMER_UNIT1_VALUE_VALID_Msk = 0x20000000
	// Bit TIMER_UNIT1_VALUE_VALID.
	SYSTIMER_UNIT1_OP_TIMER_UNIT1_VALUE_VALID = 0x20000000
	// Position of TIMER_UNIT1_UPDATE field.
	SYSTIMER_UNIT1_OP_TIMER_UNIT1_UPDATE_Pos = 0x1e
	// Bit mask of TIMER_UNIT1_UPDATE field.
	SYSTIMER_UNIT1_OP_TIMER_UNIT1_UPDATE_Msk = 0x40000000
	// Bit TIMER_UNIT1_UPDATE.
	SYSTIMER_UNIT1_OP_TIMER_UNIT1_UPDATE = 0x40000000

	// UNIT0_LOAD_HI: SYSTIMER_UNIT0_LOAD_HI.
	// Position of TIMER_UNIT0_LOAD_HI field.
	SYSTIMER_UNIT0_LOAD_HI_TIMER_UNIT0_LOAD_HI_Pos = 0x0
	// Bit mask of TIMER_UNIT0_LOAD_HI field.
	SYSTIMER_UNIT0_LOAD_HI_TIMER_UNIT0_LOAD_HI_Msk = 0xfffff

	// UNIT0_LOAD_LO: SYSTIMER_UNIT0_LOAD_LO.
	// Position of TIMER_UNIT0_LOAD_LO field.
	SYSTIMER_UNIT0_LOAD_LO_TIMER_UNIT0_LOAD_LO_Pos = 0x0
	// Bit mask of TIMER_UNIT0_LOAD_LO field.
	SYSTIMER_UNIT0_LOAD_LO_TIMER_UNIT0_LOAD_LO_Msk = 0xffffffff

	// UNIT1_LOAD_HI: SYSTIMER_UNIT1_LOAD_HI.
	// Position of TIMER_UNIT1_LOAD_HI field.
	SYSTIMER_UNIT1_LOAD_HI_TIMER_UNIT1_LOAD_HI_Pos = 0x0
	// Bit mask of TIMER_UNIT1_LOAD_HI field.
	SYSTIMER_UNIT1_LOAD_HI_TIMER_UNIT1_LOAD_HI_Msk = 0xfffff

	// UNIT1_LOAD_LO: SYSTIMER_UNIT1_LOAD_LO.
	// Position of TIMER_UNIT1_LOAD_LO field.
	SYSTIMER_UNIT1_LOAD_LO_TIMER_UNIT1_LOAD_LO_Pos = 0x0
	// Bit mask of TIMER_UNIT1_LOAD_LO field.
	SYSTIMER_UNIT1_LOAD_LO_TIMER_UNIT1_LOAD_LO_Msk = 0xffffffff

	// TARGET0_HI: SYSTIMER_TARGET0_HI.
	// Position of TIMER_TARGET0_HI field.
	SYSTIMER_TARGET0_HI_TIMER_TARGET0_HI_Pos = 0x0
	// Bit mask of TIMER_TARGET0_HI field.
	SYSTIMER_TARGET0_HI_TIMER_TARGET0_HI_Msk = 0xfffff

	// TARGET0_LO: SYSTIMER_TARGET0_LO.
	// Position of TIMER_TARGET0_LO field.
	SYSTIMER_TARGET0_LO_TIMER_TARGET0_LO_Pos = 0x0
	// Bit mask of TIMER_TARGET0_LO field.
	SYSTIMER_TARGET0_LO_TIMER_TARGET0_LO_Msk = 0xffffffff

	// TARGET1_HI: SYSTIMER_TARGET1_HI.
	// Position of TIMER_TARGET1_HI field.
	SYSTIMER_TARGET1_HI_TIMER_TARGET1_HI_Pos = 0x0
	// Bit mask of TIMER_TARGET1_HI field.
	SYSTIMER_TARGET1_HI_TIMER_TARGET1_HI_Msk = 0xfffff

	// TARGET1_LO: SYSTIMER_TARGET1_LO.
	// Position of TIMER_TARGET1_LO field.
	SYSTIMER_TARGET1_LO_TIMER_TARGET1_LO_Pos = 0x0
	// Bit mask of TIMER_TARGET1_LO field.
	SYSTIMER_TARGET1_LO_TIMER_TARGET1_LO_Msk = 0xffffffff

	// TARGET2_HI: SYSTIMER_TARGET2_HI.
	// Position of TIMER_TARGET2_HI field.
	SYSTIMER_TARGET2_HI_TIMER_TARGET2_HI_Pos = 0x0
	// Bit mask of TIMER_TARGET2_HI field.
	SYSTIMER_TARGET2_HI_TIMER_TARGET2_HI_Msk = 0xfffff

	// TARGET2_LO: SYSTIMER_TARGET2_LO.
	// Position of TIMER_TARGET2_LO field.
	SYSTIMER_TARGET2_LO_TIMER_TARGET2_LO_Pos = 0x0
	// Bit mask of TIMER_TARGET2_LO field.
	SYSTIMER_TARGET2_LO_TIMER_TARGET2_LO_Msk = 0xffffffff

	// TARGET0_CONF: SYSTIMER_TARGET0_CONF.
	// Position of TARGET0_PERIOD field.
	SYSTIMER_TARGET0_CONF_TARGET0_PERIOD_Pos = 0x0
	// Bit mask of TARGET0_PERIOD field.
	SYSTIMER_TARGET0_CONF_TARGET0_PERIOD_Msk = 0x3ffffff
	// Position of TARGET0_PERIOD_MODE field.
	SYSTIMER_TARGET0_CONF_TARGET0_PERIOD_MODE_Pos = 0x1e
	// Bit mask of TARGET0_PERIOD_MODE field.
	SYSTIMER_TARGET0_CONF_TARGET0_PERIOD_MODE_Msk = 0x40000000
	// Bit TARGET0_PERIOD_MODE.
	SYSTIMER_TARGET0_CONF_TARGET0_PERIOD_MODE = 0x40000000
	// Position of TARGET0_TIMER_UNIT_SEL field.
	SYSTIMER_TARGET0_CONF_TARGET0_TIMER_UNIT_SEL_Pos = 0x1f
	// Bit mask of TARGET0_TIMER_UNIT_SEL field.
	SYSTIMER_TARGET0_CONF_TARGET0_TIMER_UNIT_SEL_Msk = 0x80000000
	// Bit TARGET0_TIMER_UNIT_SEL.
	SYSTIMER_TARGET0_CONF_TARGET0_TIMER_UNIT_SEL = 0x80000000

	// TARGET1_CONF: SYSTIMER_TARGET1_CONF.
	// Position of TARGET1_PERIOD field.
	SYSTIMER_TARGET1_CONF_TARGET1_PERIOD_Pos = 0x0
	// Bit mask of TARGET1_PERIOD field.
	SYSTIMER_TARGET1_CONF_TARGET1_PERIOD_Msk = 0x3ffffff
	// Position of TARGET1_PERIOD_MODE field.
	SYSTIMER_TARGET1_CONF_TARGET1_PERIOD_MODE_Pos = 0x1e
	// Bit mask of TARGET1_PERIOD_MODE field.
	SYSTIMER_TARGET1_CONF_TARGET1_PERIOD_MODE_Msk = 0x40000000
	// Bit TARGET1_PERIOD_MODE.
	SYSTIMER_TARGET1_CONF_TARGET1_PERIOD_MODE = 0x40000000
	// Position of TARGET1_TIMER_UNIT_SEL field.
	SYSTIMER_TARGET1_CONF_TARGET1_TIMER_UNIT_SEL_Pos = 0x1f
	// Bit mask of TARGET1_TIMER_UNIT_SEL field.
	SYSTIMER_TARGET1_CONF_TARGET1_TIMER_UNIT_SEL_Msk = 0x80000000
	// Bit TARGET1_TIMER_UNIT_SEL.
	SYSTIMER_TARGET1_CONF_TARGET1_TIMER_UNIT_SEL = 0x80000000

	// TARGET2_CONF: SYSTIMER_TARGET2_CONF.
	// Position of TARGET2_PERIOD field.
	SYSTIMER_TARGET2_CONF_TARGET2_PERIOD_Pos = 0x0
	// Bit mask of TARGET2_PERIOD field.
	SYSTIMER_TARGET2_CONF_TARGET2_PERIOD_Msk = 0x3ffffff
	// Position of TARGET2_PERIOD_MODE field.
	SYSTIMER_TARGET2_CONF_TARGET2_PERIOD_MODE_Pos = 0x1e
	// Bit mask of TARGET2_PERIOD_MODE field.
	SYSTIMER_TARGET2_CONF_TARGET2_PERIOD_MODE_Msk = 0x40000000
	// Bit TARGET2_PERIOD_MODE.
	SYSTIMER_TARGET2_CONF_TARGET2_PERIOD_MODE = 0x40000000
	// Position of TARGET2_TIMER_UNIT_SEL field.
	SYSTIMER_TARGET2_CONF_TARGET2_TIMER_UNIT_SEL_Pos = 0x1f
	// Bit mask of TARGET2_TIMER_UNIT_SEL field.
	SYSTIMER_TARGET2_CONF_TARGET2_TIMER_UNIT_SEL_Msk = 0x80000000
	// Bit TARGET2_TIMER_UNIT_SEL.
	SYSTIMER_TARGET2_CONF_TARGET2_TIMER_UNIT_SEL = 0x80000000

	// UNIT0_VALUE_HI: SYSTIMER_UNIT0_VALUE_HI.
	// Position of TIMER_UNIT0_VALUE_HI field.
	SYSTIMER_UNIT0_VALUE_HI_TIMER_UNIT0_VALUE_HI_Pos = 0x0
	// Bit mask of TIMER_UNIT0_VALUE_HI field.
	SYSTIMER_UNIT0_VALUE_HI_TIMER_UNIT0_VALUE_HI_Msk = 0xfffff

	// UNIT0_VALUE_LO: SYSTIMER_UNIT0_VALUE_LO.
	// Position of TIMER_UNIT0_VALUE_LO field.
	SYSTIMER_UNIT0_VALUE_LO_TIMER_UNIT0_VALUE_LO_Pos = 0x0
	// Bit mask of TIMER_UNIT0_VALUE_LO field.
	SYSTIMER_UNIT0_VALUE_LO_TIMER_UNIT0_VALUE_LO_Msk = 0xffffffff

	// UNIT1_VALUE_HI: SYSTIMER_UNIT1_VALUE_HI.
	// Position of TIMER_UNIT1_VALUE_HI field.
	SYSTIMER_UNIT1_VALUE_HI_TIMER_UNIT1_VALUE_HI_Pos = 0x0
	// Bit mask of TIMER_UNIT1_VALUE_HI field.
	SYSTIMER_UNIT1_VALUE_HI_TIMER_UNIT1_VALUE_HI_Msk = 0xfffff

	// UNIT1_VALUE_LO: SYSTIMER_UNIT1_VALUE_LO.
	// Position of TIMER_UNIT1_VALUE_LO field.
	SYSTIMER_UNIT1_VALUE_LO_TIMER_UNIT1_VALUE_LO_Pos = 0x0
	// Bit mask of TIMER_UNIT1_VALUE_LO field.
	SYSTIMER_UNIT1_VALUE_LO_TIMER_UNIT1_VALUE_LO_Msk = 0xffffffff

	// COMP0_LOAD: SYSTIMER_COMP0_LOAD.
	// Position of TIMER_COMP0_LOAD field.
	SYSTIMER_COMP0_LOAD_TIMER_COMP0_LOAD_Pos = 0x0
	// Bit mask of TIMER_COMP0_LOAD field.
	SYSTIMER_COMP0_LOAD_TIMER_COMP0_LOAD_Msk = 0x1
	// Bit TIMER_COMP0_LOAD.
	SYSTIMER_COMP0_LOAD_TIMER_COMP0_LOAD = 0x1

	// COMP1_LOAD: SYSTIMER_COMP1_LOAD.
	// Position of TIMER_COMP1_LOAD field.
	SYSTIMER_COMP1_LOAD_TIMER_COMP1_LOAD_Pos = 0x0
	// Bit mask of TIMER_COMP1_LOAD field.
	SYSTIMER_COMP1_LOAD_TIMER_COMP1_LOAD_Msk = 0x1
	// Bit TIMER_COMP1_LOAD.
	SYSTIMER_COMP1_LOAD_TIMER_COMP1_LOAD = 0x1

	// COMP2_LOAD: SYSTIMER_COMP2_LOAD.
	// Position of TIMER_COMP2_LOAD field.
	SYSTIMER_COMP2_LOAD_TIMER_COMP2_LOAD_Pos = 0x0
	// Bit mask of TIMER_COMP2_LOAD field.
	SYSTIMER_COMP2_LOAD_TIMER_COMP2_LOAD_Msk = 0x1
	// Bit TIMER_COMP2_LOAD.
	SYSTIMER_COMP2_LOAD_TIMER_COMP2_LOAD = 0x1

	// UNIT0_LOAD: SYSTIMER_UNIT0_LOAD.
	// Position of TIMER_UNIT0_LOAD field.
	SYSTIMER_UNIT0_LOAD_TIMER_UNIT0_LOAD_Pos = 0x0
	// Bit mask of TIMER_UNIT0_LOAD field.
	SYSTIMER_UNIT0_LOAD_TIMER_UNIT0_LOAD_Msk = 0x1
	// Bit TIMER_UNIT0_LOAD.
	SYSTIMER_UNIT0_LOAD_TIMER_UNIT0_LOAD = 0x1

	// UNIT1_LOAD: SYSTIMER_UNIT1_LOAD.
	// Position of TIMER_UNIT1_LOAD field.
	SYSTIMER_UNIT1_LOAD_TIMER_UNIT1_LOAD_Pos = 0x0
	// Bit mask of TIMER_UNIT1_LOAD field.
	SYSTIMER_UNIT1_LOAD_TIMER_UNIT1_LOAD_Msk = 0x1
	// Bit TIMER_UNIT1_LOAD.
	SYSTIMER_UNIT1_LOAD_TIMER_UNIT1_LOAD = 0x1

	// INT_ENA: SYSTIMER_INT_ENA.
	// Position of TARGET0_INT_ENA field.
	SYSTIMER_INT_ENA_TARGET0_INT_ENA_Pos = 0x0
	// Bit mask of TARGET0_INT_ENA field.
	SYSTIMER_INT_ENA_TARGET0_INT_ENA_Msk = 0x1
	// Bit TARGET0_INT_ENA.
	SYSTIMER_INT_ENA_TARGET0_INT_ENA = 0x1
	// Position of TARGET1_INT_ENA field.
	SYSTIMER_INT_ENA_TARGET1_INT_ENA_Pos = 0x1
	// Bit mask of TARGET1_INT_ENA field.
	SYSTIMER_INT_ENA_TARGET1_INT_ENA_Msk = 0x2
	// Bit TARGET1_INT_ENA.
	SYSTIMER_INT_ENA_TARGET1_INT_ENA = 0x2
	// Position of TARGET2_INT_ENA field.
	SYSTIMER_INT_ENA_TARGET2_INT_ENA_Pos = 0x2
	// Bit mask of TARGET2_INT_ENA field.
	SYSTIMER_INT_ENA_TARGET2_INT_ENA_Msk = 0x4
	// Bit TARGET2_INT_ENA.
	SYSTIMER_INT_ENA_TARGET2_INT_ENA = 0x4

	// INT_RAW: SYSTIMER_INT_RAW.
	// Position of TARGET0_INT_RAW field.
	SYSTIMER_INT_RAW_TARGET0_INT_RAW_Pos = 0x0
	// Bit mask of TARGET0_INT_RAW field.
	SYSTIMER_INT_RAW_TARGET0_INT_RAW_Msk = 0x1
	// Bit TARGET0_INT_RAW.
	SYSTIMER_INT_RAW_TARGET0_INT_RAW = 0x1
	// Position of TARGET1_INT_RAW field.
	SYSTIMER_INT_RAW_TARGET1_INT_RAW_Pos = 0x1
	// Bit mask of TARGET1_INT_RAW field.
	SYSTIMER_INT_RAW_TARGET1_INT_RAW_Msk = 0x2
	// Bit TARGET1_INT_RAW.
	SYSTIMER_INT_RAW_TARGET1_INT_RAW = 0x2
	// Position of TARGET2_INT_RAW field.
	SYSTIMER_INT_RAW_TARGET2_INT_RAW_Pos = 0x2
	// Bit mask of TARGET2_INT_RAW field.
	SYSTIMER_INT_RAW_TARGET2_INT_RAW_Msk = 0x4
	// Bit TARGET2_INT_RAW.
	SYSTIMER_INT_RAW_TARGET2_INT_RAW = 0x4

	// INT_CLR: SYSTIMER_INT_CLR.
	// Position of TARGET0_INT_CLR field.
	SYSTIMER_INT_CLR_TARGET0_INT_CLR_Pos = 0x0
	// Bit mask of TARGET0_INT_CLR field.
	SYSTIMER_INT_CLR_TARGET0_INT_CLR_Msk = 0x1
	// Bit TARGET0_INT_CLR.
	SYSTIMER_INT_CLR_TARGET0_INT_CLR = 0x1
	// Position of TARGET1_INT_CLR field.
	SYSTIMER_INT_CLR_TARGET1_INT_CLR_Pos = 0x1
	// Bit mask of TARGET1_INT_CLR field.
	SYSTIMER_INT_CLR_TARGET1_INT_CLR_Msk = 0x2
	// Bit TARGET1_INT_CLR.
	SYSTIMER_INT_CLR_TARGET1_INT_CLR = 0x2
	// Position of TARGET2_INT_CLR field.
	SYSTIMER_INT_CLR_TARGET2_INT_CLR_Pos = 0x2
	// Bit mask of TARGET2_INT_CLR field.
	SYSTIMER_INT_CLR_TARGET2_INT_CLR_Msk = 0x4
	// Bit TARGET2_INT_CLR.
	SYSTIMER_INT_CLR_TARGET2_INT_CLR = 0x4

	// INT_ST: SYSTIMER_INT_ST.
	// Position of TARGET0_INT_ST field.
	SYSTIMER_INT_ST_TARGET0_INT_ST_Pos = 0x0
	// Bit mask of TARGET0_INT_ST field.
	SYSTIMER_INT_ST_TARGET0_INT_ST_Msk = 0x1
	// Bit TARGET0_INT_ST.
	SYSTIMER_INT_ST_TARGET0_INT_ST = 0x1
	// Position of TARGET1_INT_ST field.
	SYSTIMER_INT_ST_TARGET1_INT_ST_Pos = 0x1
	// Bit mask of TARGET1_INT_ST field.
	SYSTIMER_INT_ST_TARGET1_INT_ST_Msk = 0x2
	// Bit TARGET1_INT_ST.
	SYSTIMER_INT_ST_TARGET1_INT_ST = 0x2
	// Position of TARGET2_INT_ST field.
	SYSTIMER_INT_ST_TARGET2_INT_ST_Pos = 0x2
	// Bit mask of TARGET2_INT_ST field.
	SYSTIMER_INT_ST_TARGET2_INT_ST_Msk = 0x4
	// Bit TARGET2_INT_ST.
	SYSTIMER_INT_ST_TARGET2_INT_ST = 0x4

	// DATE: SYSTIMER_DATE.
	// Position of DATE field.
	SYSTIMER_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	SYSTIMER_DATE_DATE_Msk = 0xffffffff
)

// Bitfields for TIMG0: Peripheral TIMG
const (
	// T0CONFIG: TIMG_T0CONFIG_REG.
	// Position of T0_USE_XTAL field.
	TIMG_T0CONFIG_T0_USE_XTAL_Pos = 0x9
	// Bit mask of T0_USE_XTAL field.
	TIMG_T0CONFIG_T0_USE_XTAL_Msk = 0x200
	// Bit T0_USE_XTAL.
	TIMG_T0CONFIG_T0_USE_XTAL = 0x200
	// Position of T0_ALARM_EN field.
	TIMG_T0CONFIG_T0_ALARM_EN_Pos = 0xa
	// Bit mask of T0_ALARM_EN field.
	TIMG_T0CONFIG_T0_ALARM_EN_Msk = 0x400
	// Bit T0_ALARM_EN.
	TIMG_T0CONFIG_T0_ALARM_EN = 0x400
	// Position of T0_DIVCNT_RST field.
	TIMG_T0CONFIG_T0_DIVCNT_RST_Pos = 0xc
	// Bit mask of T0_DIVCNT_RST field.
	TIMG_T0CONFIG_T0_DIVCNT_RST_Msk = 0x1000
	// Bit T0_DIVCNT_RST.
	TIMG_T0CONFIG_T0_DIVCNT_RST = 0x1000
	// Position of T0_DIVIDER field.
	TIMG_T0CONFIG_T0_DIVIDER_Pos = 0xd
	// Bit mask of T0_DIVIDER field.
	TIMG_T0CONFIG_T0_DIVIDER_Msk = 0x1fffe000
	// Position of T0_AUTORELOAD field.
	TIMG_T0CONFIG_T0_AUTORELOAD_Pos = 0x1d
	// Bit mask of T0_AUTORELOAD field.
	TIMG_T0CONFIG_T0_AUTORELOAD_Msk = 0x20000000
	// Bit T0_AUTORELOAD.
	TIMG_T0CONFIG_T0_AUTORELOAD = 0x20000000
	// Position of T0_INCREASE field.
	TIMG_T0CONFIG_T0_INCREASE_Pos = 0x1e
	// Bit mask of T0_INCREASE field.
	TIMG_T0CONFIG_T0_INCREASE_Msk = 0x40000000
	// Bit T0_INCREASE.
	TIMG_T0CONFIG_T0_INCREASE = 0x40000000
	// Position of T0_EN field.
	TIMG_T0CONFIG_T0_EN_Pos = 0x1f
	// Bit mask of T0_EN field.
	TIMG_T0CONFIG_T0_EN_Msk = 0x80000000
	// Bit T0_EN.
	TIMG_T0CONFIG_T0_EN = 0x80000000

	// T0LO: TIMG_T0LO_REG.
	// Position of T0_LO field.
	TIMG_T0LO_T0_LO_Pos = 0x0
	// Bit mask of T0_LO field.
	TIMG_T0LO_T0_LO_Msk = 0xffffffff

	// T0HI: TIMG_T0HI_REG.
	// Position of T0_HI field.
	TIMG_T0HI_T0_HI_Pos = 0x0
	// Bit mask of T0_HI field.
	TIMG_T0HI_T0_HI_Msk = 0x3fffff

	// T0UPDATE: TIMG_T0UPDATE_REG.
	// Position of T0_UPDATE field.
	TIMG_T0UPDATE_T0_UPDATE_Pos = 0x1f
	// Bit mask of T0_UPDATE field.
	TIMG_T0UPDATE_T0_UPDATE_Msk = 0x80000000
	// Bit T0_UPDATE.
	TIMG_T0UPDATE_T0_UPDATE = 0x80000000

	// T0ALARMLO: TIMG_T0ALARMLO_REG.
	// Position of T0_ALARM_LO field.
	TIMG_T0ALARMLO_T0_ALARM_LO_Pos = 0x0
	// Bit mask of T0_ALARM_LO field.
	TIMG_T0ALARMLO_T0_ALARM_LO_Msk = 0xffffffff

	// T0ALARMHI: TIMG_T0ALARMHI_REG.
	// Position of T0_ALARM_HI field.
	TIMG_T0ALARMHI_T0_ALARM_HI_Pos = 0x0
	// Bit mask of T0_ALARM_HI field.
	TIMG_T0ALARMHI_T0_ALARM_HI_Msk = 0x3fffff

	// T0LOADLO: TIMG_T0LOADLO_REG.
	// Position of T0_LOAD_LO field.
	TIMG_T0LOADLO_T0_LOAD_LO_Pos = 0x0
	// Bit mask of T0_LOAD_LO field.
	TIMG_T0LOADLO_T0_LOAD_LO_Msk = 0xffffffff

	// T0LOADHI: TIMG_T0LOADHI_REG.
	// Position of T0_LOAD_HI field.
	TIMG_T0LOADHI_T0_LOAD_HI_Pos = 0x0
	// Bit mask of T0_LOAD_HI field.
	TIMG_T0LOADHI_T0_LOAD_HI_Msk = 0x3fffff

	// T0LOAD: TIMG_T0LOAD_REG.
	// Position of T0_LOAD field.
	TIMG_T0LOAD_T0_LOAD_Pos = 0x0
	// Bit mask of T0_LOAD field.
	TIMG_T0LOAD_T0_LOAD_Msk = 0xffffffff

	// WDTCONFIG0: TIMG_WDTCONFIG0_REG.
	// Position of WDT_APPCPU_RESET_EN field.
	TIMG_WDTCONFIG0_WDT_APPCPU_RESET_EN_Pos = 0xc
	// Bit mask of WDT_APPCPU_RESET_EN field.
	TIMG_WDTCONFIG0_WDT_APPCPU_RESET_EN_Msk = 0x1000
	// Bit WDT_APPCPU_RESET_EN.
	TIMG_WDTCONFIG0_WDT_APPCPU_RESET_EN = 0x1000
	// Position of WDT_PROCPU_RESET_EN field.
	TIMG_WDTCONFIG0_WDT_PROCPU_RESET_EN_Pos = 0xd
	// Bit mask of WDT_PROCPU_RESET_EN field.
	TIMG_WDTCONFIG0_WDT_PROCPU_RESET_EN_Msk = 0x2000
	// Bit WDT_PROCPU_RESET_EN.
	TIMG_WDTCONFIG0_WDT_PROCPU_RESET_EN = 0x2000
	// Position of WDT_FLASHBOOT_MOD_EN field.
	TIMG_WDTCONFIG0_WDT_FLASHBOOT_MOD_EN_Pos = 0xe
	// Bit mask of WDT_FLASHBOOT_MOD_EN field.
	TIMG_WDTCONFIG0_WDT_FLASHBOOT_MOD_EN_Msk = 0x4000
	// Bit WDT_FLASHBOOT_MOD_EN.
	TIMG_WDTCONFIG0_WDT_FLASHBOOT_MOD_EN = 0x4000
	// Position of WDT_SYS_RESET_LENGTH field.
	TIMG_WDTCONFIG0_WDT_SYS_RESET_LENGTH_Pos = 0xf
	// Bit mask of WDT_SYS_RESET_LENGTH field.
	TIMG_WDTCONFIG0_WDT_SYS_RESET_LENGTH_Msk = 0x38000
	// Position of WDT_CPU_RESET_LENGTH field.
	TIMG_WDTCONFIG0_WDT_CPU_RESET_LENGTH_Pos = 0x12
	// Bit mask of WDT_CPU_RESET_LENGTH field.
	TIMG_WDTCONFIG0_WDT_CPU_RESET_LENGTH_Msk = 0x1c0000
	// Position of WDT_USE_XTAL field.
	TIMG_WDTCONFIG0_WDT_USE_XTAL_Pos = 0x15
	// Bit mask of WDT_USE_XTAL field.
	TIMG_WDTCONFIG0_WDT_USE_XTAL_Msk = 0x200000
	// Bit WDT_USE_XTAL.
	TIMG_WDTCONFIG0_WDT_USE_XTAL = 0x200000
	// Position of WDT_CONF_UPDATE_EN field.
	TIMG_WDTCONFIG0_WDT_CONF_UPDATE_EN_Pos = 0x16
	// Bit mask of WDT_CONF_UPDATE_EN field.
	TIMG_WDTCONFIG0_WDT_CONF_UPDATE_EN_Msk = 0x400000
	// Bit WDT_CONF_UPDATE_EN.
	TIMG_WDTCONFIG0_WDT_CONF_UPDATE_EN = 0x400000
	// Position of WDT_STG3 field.
	TIMG_WDTCONFIG0_WDT_STG3_Pos = 0x17
	// Bit mask of WDT_STG3 field.
	TIMG_WDTCONFIG0_WDT_STG3_Msk = 0x1800000
	// Position of WDT_STG2 field.
	TIMG_WDTCONFIG0_WDT_STG2_Pos = 0x19
	// Bit mask of WDT_STG2 field.
	TIMG_WDTCONFIG0_WDT_STG2_Msk = 0x6000000
	// Position of WDT_STG1 field.
	TIMG_WDTCONFIG0_WDT_STG1_Pos = 0x1b
	// Bit mask of WDT_STG1 field.
	TIMG_WDTCONFIG0_WDT_STG1_Msk = 0x18000000
	// Position of WDT_STG0 field.
	TIMG_WDTCONFIG0_WDT_STG0_Pos = 0x1d
	// Bit mask of WDT_STG0 field.
	TIMG_WDTCONFIG0_WDT_STG0_Msk = 0x60000000
	// Position of WDT_EN field.
	TIMG_WDTCONFIG0_WDT_EN_Pos = 0x1f
	// Bit mask of WDT_EN field.
	TIMG_WDTCONFIG0_WDT_EN_Msk = 0x80000000
	// Bit WDT_EN.
	TIMG_WDTCONFIG0_WDT_EN = 0x80000000

	// WDTCONFIG1: TIMG_WDTCONFIG1_REG.
	// Position of WDT_DIVCNT_RST field.
	TIMG_WDTCONFIG1_WDT_DIVCNT_RST_Pos = 0x0
	// Bit mask of WDT_DIVCNT_RST field.
	TIMG_WDTCONFIG1_WDT_DIVCNT_RST_Msk = 0x1
	// Bit WDT_DIVCNT_RST.
	TIMG_WDTCONFIG1_WDT_DIVCNT_RST = 0x1
	// Position of WDT_CLK_PRESCALE field.
	TIMG_WDTCONFIG1_WDT_CLK_PRESCALE_Pos = 0x10
	// Bit mask of WDT_CLK_PRESCALE field.
	TIMG_WDTCONFIG1_WDT_CLK_PRESCALE_Msk = 0xffff0000

	// WDTCONFIG2: TIMG_WDTCONFIG2_REG.
	// Position of WDT_STG0_HOLD field.
	TIMG_WDTCONFIG2_WDT_STG0_HOLD_Pos = 0x0
	// Bit mask of WDT_STG0_HOLD field.
	TIMG_WDTCONFIG2_WDT_STG0_HOLD_Msk = 0xffffffff

	// WDTCONFIG3: TIMG_WDTCONFIG3_REG.
	// Position of WDT_STG1_HOLD field.
	TIMG_WDTCONFIG3_WDT_STG1_HOLD_Pos = 0x0
	// Bit mask of WDT_STG1_HOLD field.
	TIMG_WDTCONFIG3_WDT_STG1_HOLD_Msk = 0xffffffff

	// WDTCONFIG4: TIMG_WDTCONFIG4_REG.
	// Position of WDT_STG2_HOLD field.
	TIMG_WDTCONFIG4_WDT_STG2_HOLD_Pos = 0x0
	// Bit mask of WDT_STG2_HOLD field.
	TIMG_WDTCONFIG4_WDT_STG2_HOLD_Msk = 0xffffffff

	// WDTCONFIG5: TIMG_WDTCONFIG5_REG.
	// Position of WDT_STG3_HOLD field.
	TIMG_WDTCONFIG5_WDT_STG3_HOLD_Pos = 0x0
	// Bit mask of WDT_STG3_HOLD field.
	TIMG_WDTCONFIG5_WDT_STG3_HOLD_Msk = 0xffffffff

	// WDTFEED: TIMG_WDTFEED_REG.
	// Position of WDT_FEED field.
	TIMG_WDTFEED_WDT_FEED_Pos = 0x0
	// Bit mask of WDT_FEED field.
	TIMG_WDTFEED_WDT_FEED_Msk = 0xffffffff

	// WDTWPROTECT: TIMG_WDTWPROTECT_REG.
	// Position of WDT_WKEY field.
	TIMG_WDTWPROTECT_WDT_WKEY_Pos = 0x0
	// Bit mask of WDT_WKEY field.
	TIMG_WDTWPROTECT_WDT_WKEY_Msk = 0xffffffff

	// RTCCALICFG: TIMG_RTCCALICFG_REG.
	// Position of RTC_CALI_START_CYCLING field.
	TIMG_RTCCALICFG_RTC_CALI_START_CYCLING_Pos = 0xc
	// Bit mask of RTC_CALI_START_CYCLING field.
	TIMG_RTCCALICFG_RTC_CALI_START_CYCLING_Msk = 0x1000
	// Bit RTC_CALI_START_CYCLING.
	TIMG_RTCCALICFG_RTC_CALI_START_CYCLING = 0x1000
	// Position of RTC_CALI_CLK_SEL field.
	TIMG_RTCCALICFG_RTC_CALI_CLK_SEL_Pos = 0xd
	// Bit mask of RTC_CALI_CLK_SEL field.
	TIMG_RTCCALICFG_RTC_CALI_CLK_SEL_Msk = 0x6000
	// Position of RTC_CALI_RDY field.
	TIMG_RTCCALICFG_RTC_CALI_RDY_Pos = 0xf
	// Bit mask of RTC_CALI_RDY field.
	TIMG_RTCCALICFG_RTC_CALI_RDY_Msk = 0x8000
	// Bit RTC_CALI_RDY.
	TIMG_RTCCALICFG_RTC_CALI_RDY = 0x8000
	// Position of RTC_CALI_MAX field.
	TIMG_RTCCALICFG_RTC_CALI_MAX_Pos = 0x10
	// Bit mask of RTC_CALI_MAX field.
	TIMG_RTCCALICFG_RTC_CALI_MAX_Msk = 0x7fff0000
	// Position of RTC_CALI_START field.
	TIMG_RTCCALICFG_RTC_CALI_START_Pos = 0x1f
	// Bit mask of RTC_CALI_START field.
	TIMG_RTCCALICFG_RTC_CALI_START_Msk = 0x80000000
	// Bit RTC_CALI_START.
	TIMG_RTCCALICFG_RTC_CALI_START = 0x80000000

	// RTCCALICFG1: TIMG_RTCCALICFG1_REG.
	// Position of RTC_CALI_CYCLING_DATA_VLD field.
	TIMG_RTCCALICFG1_RTC_CALI_CYCLING_DATA_VLD_Pos = 0x0
	// Bit mask of RTC_CALI_CYCLING_DATA_VLD field.
	TIMG_RTCCALICFG1_RTC_CALI_CYCLING_DATA_VLD_Msk = 0x1
	// Bit RTC_CALI_CYCLING_DATA_VLD.
	TIMG_RTCCALICFG1_RTC_CALI_CYCLING_DATA_VLD = 0x1
	// Position of RTC_CALI_VALUE field.
	TIMG_RTCCALICFG1_RTC_CALI_VALUE_Pos = 0x7
	// Bit mask of RTC_CALI_VALUE field.
	TIMG_RTCCALICFG1_RTC_CALI_VALUE_Msk = 0xffffff80

	// INT_ENA_TIMG: INT_ENA_TIMG_REG
	// Position of T0_INT_ENA field.
	TIMG_INT_ENA_TIMG_T0_INT_ENA_Pos = 0x0
	// Bit mask of T0_INT_ENA field.
	TIMG_INT_ENA_TIMG_T0_INT_ENA_Msk = 0x1
	// Bit T0_INT_ENA.
	TIMG_INT_ENA_TIMG_T0_INT_ENA = 0x1
	// Position of WDT_INT_ENA field.
	TIMG_INT_ENA_TIMG_WDT_INT_ENA_Pos = 0x1
	// Bit mask of WDT_INT_ENA field.
	TIMG_INT_ENA_TIMG_WDT_INT_ENA_Msk = 0x2
	// Bit WDT_INT_ENA.
	TIMG_INT_ENA_TIMG_WDT_INT_ENA = 0x2

	// INT_RAW_TIMG: INT_RAW_TIMG_REG
	// Position of T0_INT_RAW field.
	TIMG_INT_RAW_TIMG_T0_INT_RAW_Pos = 0x0
	// Bit mask of T0_INT_RAW field.
	TIMG_INT_RAW_TIMG_T0_INT_RAW_Msk = 0x1
	// Bit T0_INT_RAW.
	TIMG_INT_RAW_TIMG_T0_INT_RAW = 0x1
	// Position of WDT_INT_RAW field.
	TIMG_INT_RAW_TIMG_WDT_INT_RAW_Pos = 0x1
	// Bit mask of WDT_INT_RAW field.
	TIMG_INT_RAW_TIMG_WDT_INT_RAW_Msk = 0x2
	// Bit WDT_INT_RAW.
	TIMG_INT_RAW_TIMG_WDT_INT_RAW = 0x2

	// INT_ST_TIMG: INT_ST_TIMG_REG
	// Position of T0_INT_ST field.
	TIMG_INT_ST_TIMG_T0_INT_ST_Pos = 0x0
	// Bit mask of T0_INT_ST field.
	TIMG_INT_ST_TIMG_T0_INT_ST_Msk = 0x1
	// Bit T0_INT_ST.
	TIMG_INT_ST_TIMG_T0_INT_ST = 0x1
	// Position of WDT_INT_ST field.
	TIMG_INT_ST_TIMG_WDT_INT_ST_Pos = 0x1
	// Bit mask of WDT_INT_ST field.
	TIMG_INT_ST_TIMG_WDT_INT_ST_Msk = 0x2
	// Bit WDT_INT_ST.
	TIMG_INT_ST_TIMG_WDT_INT_ST = 0x2

	// INT_CLR_TIMG: INT_CLR_TIMG_REG
	// Position of T0_INT_CLR field.
	TIMG_INT_CLR_TIMG_T0_INT_CLR_Pos = 0x0
	// Bit mask of T0_INT_CLR field.
	TIMG_INT_CLR_TIMG_T0_INT_CLR_Msk = 0x1
	// Bit T0_INT_CLR.
	TIMG_INT_CLR_TIMG_T0_INT_CLR = 0x1
	// Position of WDT_INT_CLR field.
	TIMG_INT_CLR_TIMG_WDT_INT_CLR_Pos = 0x1
	// Bit mask of WDT_INT_CLR field.
	TIMG_INT_CLR_TIMG_WDT_INT_CLR_Msk = 0x2
	// Bit WDT_INT_CLR.
	TIMG_INT_CLR_TIMG_WDT_INT_CLR = 0x2

	// RTCCALICFG2: TIMG_RTCCALICFG2_REG.
	// Position of RTC_CALI_TIMEOUT field.
	TIMG_RTCCALICFG2_RTC_CALI_TIMEOUT_Pos = 0x0
	// Bit mask of RTC_CALI_TIMEOUT field.
	TIMG_RTCCALICFG2_RTC_CALI_TIMEOUT_Msk = 0x1
	// Bit RTC_CALI_TIMEOUT.
	TIMG_RTCCALICFG2_RTC_CALI_TIMEOUT = 0x1
	// Position of RTC_CALI_TIMEOUT_RST_CNT field.
	TIMG_RTCCALICFG2_RTC_CALI_TIMEOUT_RST_CNT_Pos = 0x3
	// Bit mask of RTC_CALI_TIMEOUT_RST_CNT field.
	TIMG_RTCCALICFG2_RTC_CALI_TIMEOUT_RST_CNT_Msk = 0x78
	// Position of RTC_CALI_TIMEOUT_THRES field.
	TIMG_RTCCALICFG2_RTC_CALI_TIMEOUT_THRES_Pos = 0x7
	// Bit mask of RTC_CALI_TIMEOUT_THRES field.
	TIMG_RTCCALICFG2_RTC_CALI_TIMEOUT_THRES_Msk = 0xffffff80

	// NTIMG_DATE: TIMG_NTIMG_DATE_REG.
	// Position of NTIMGS_DATE field.
	TIMG_NTIMG_DATE_NTIMGS_DATE_Pos = 0x0
	// Bit mask of NTIMGS_DATE field.
	TIMG_NTIMG_DATE_NTIMGS_DATE_Msk = 0xfffffff

	// REGCLK: TIMG_REGCLK_REG.
	// Position of WDT_CLK_IS_ACTIVE field.
	TIMG_REGCLK_WDT_CLK_IS_ACTIVE_Pos = 0x1d
	// Bit mask of WDT_CLK_IS_ACTIVE field.
	TIMG_REGCLK_WDT_CLK_IS_ACTIVE_Msk = 0x20000000
	// Bit WDT_CLK_IS_ACTIVE.
	TIMG_REGCLK_WDT_CLK_IS_ACTIVE = 0x20000000
	// Position of TIMER_CLK_IS_ACTIVE field.
	TIMG_REGCLK_TIMER_CLK_IS_ACTIVE_Pos = 0x1e
	// Bit mask of TIMER_CLK_IS_ACTIVE field.
	TIMG_REGCLK_TIMER_CLK_IS_ACTIVE_Msk = 0x40000000
	// Bit TIMER_CLK_IS_ACTIVE.
	TIMG_REGCLK_TIMER_CLK_IS_ACTIVE = 0x40000000
	// Position of CLK_EN field.
	TIMG_REGCLK_CLK_EN_Pos = 0x1f
	// Bit mask of CLK_EN field.
	TIMG_REGCLK_CLK_EN_Msk = 0x80000000
	// Bit CLK_EN.
	TIMG_REGCLK_CLK_EN = 0x80000000
)

// Bitfields for UART0: Peripheral UART
const (
	// FIFO: FIFO data register
	// Position of RXFIFO_RD_BYTE field.
	UART_FIFO_RXFIFO_RD_BYTE_Pos = 0x0
	// Bit mask of RXFIFO_RD_BYTE field.
	UART_FIFO_RXFIFO_RD_BYTE_Msk = 0xff

	// INT_RAW: Raw interrupt status
	// Position of RXFIFO_FULL_INT_RAW field.
	UART_INT_RAW_RXFIFO_FULL_INT_RAW_Pos = 0x0
	// Bit mask of RXFIFO_FULL_INT_RAW field.
	UART_INT_RAW_RXFIFO_FULL_INT_RAW_Msk = 0x1
	// Bit RXFIFO_FULL_INT_RAW.
	UART_INT_RAW_RXFIFO_FULL_INT_RAW = 0x1
	// Position of TXFIFO_EMPTY_INT_RAW field.
	UART_INT_RAW_TXFIFO_EMPTY_INT_RAW_Pos = 0x1
	// Bit mask of TXFIFO_EMPTY_INT_RAW field.
	UART_INT_RAW_TXFIFO_EMPTY_INT_RAW_Msk = 0x2
	// Bit TXFIFO_EMPTY_INT_RAW.
	UART_INT_RAW_TXFIFO_EMPTY_INT_RAW = 0x2
	// Position of PARITY_ERR_INT_RAW field.
	UART_INT_RAW_PARITY_ERR_INT_RAW_Pos = 0x2
	// Bit mask of PARITY_ERR_INT_RAW field.
	UART_INT_RAW_PARITY_ERR_INT_RAW_Msk = 0x4
	// Bit PARITY_ERR_INT_RAW.
	UART_INT_RAW_PARITY_ERR_INT_RAW = 0x4
	// Position of FRM_ERR_INT_RAW field.
	UART_INT_RAW_FRM_ERR_INT_RAW_Pos = 0x3
	// Bit mask of FRM_ERR_INT_RAW field.
	UART_INT_RAW_FRM_ERR_INT_RAW_Msk = 0x8
	// Bit FRM_ERR_INT_RAW.
	UART_INT_RAW_FRM_ERR_INT_RAW = 0x8
	// Position of RXFIFO_OVF_INT_RAW field.
	UART_INT_RAW_RXFIFO_OVF_INT_RAW_Pos = 0x4
	// Bit mask of RXFIFO_OVF_INT_RAW field.
	UART_INT_RAW_RXFIFO_OVF_INT_RAW_Msk = 0x10
	// Bit RXFIFO_OVF_INT_RAW.
	UART_INT_RAW_RXFIFO_OVF_INT_RAW = 0x10
	// Position of DSR_CHG_INT_RAW field.
	UART_INT_RAW_DSR_CHG_INT_RAW_Pos = 0x5
	// Bit mask of DSR_CHG_INT_RAW field.
	UART_INT_RAW_DSR_CHG_INT_RAW_Msk = 0x20
	// Bit DSR_CHG_INT_RAW.
	UART_INT_RAW_DSR_CHG_INT_RAW = 0x20
	// Position of CTS_CHG_INT_RAW field.
	UART_INT_RAW_CTS_CHG_INT_RAW_Pos = 0x6
	// Bit mask of CTS_CHG_INT_RAW field.
	UART_INT_RAW_CTS_CHG_INT_RAW_Msk = 0x40
	// Bit CTS_CHG_INT_RAW.
	UART_INT_RAW_CTS_CHG_INT_RAW = 0x40
	// Position of BRK_DET_INT_RAW field.
	UART_INT_RAW_BRK_DET_INT_RAW_Pos = 0x7
	// Bit mask of BRK_DET_INT_RAW field.
	UART_INT_RAW_BRK_DET_INT_RAW_Msk = 0x80
	// Bit BRK_DET_INT_RAW.
	UART_INT_RAW_BRK_DET_INT_RAW = 0x80
	// Position of RXFIFO_TOUT_INT_RAW field.
	UART_INT_RAW_RXFIFO_TOUT_INT_RAW_Pos = 0x8
	// Bit mask of RXFIFO_TOUT_INT_RAW field.
	UART_INT_RAW_RXFIFO_TOUT_INT_RAW_Msk = 0x100
	// Bit RXFIFO_TOUT_INT_RAW.
	UART_INT_RAW_RXFIFO_TOUT_INT_RAW = 0x100
	// Position of SW_XON_INT_RAW field.
	UART_INT_RAW_SW_XON_INT_RAW_Pos = 0x9
	// Bit mask of SW_XON_INT_RAW field.
	UART_INT_RAW_SW_XON_INT_RAW_Msk = 0x200
	// Bit SW_XON_INT_RAW.
	UART_INT_RAW_SW_XON_INT_RAW = 0x200
	// Position of SW_XOFF_INT_RAW field.
	UART_INT_RAW_SW_XOFF_INT_RAW_Pos = 0xa
	// Bit mask of SW_XOFF_INT_RAW field.
	UART_INT_RAW_SW_XOFF_INT_RAW_Msk = 0x400
	// Bit SW_XOFF_INT_RAW.
	UART_INT_RAW_SW_XOFF_INT_RAW = 0x400
	// Position of GLITCH_DET_INT_RAW field.
	UART_INT_RAW_GLITCH_DET_INT_RAW_Pos = 0xb
	// Bit mask of GLITCH_DET_INT_RAW field.
	UART_INT_RAW_GLITCH_DET_INT_RAW_Msk = 0x800
	// Bit GLITCH_DET_INT_RAW.
	UART_INT_RAW_GLITCH_DET_INT_RAW = 0x800
	// Position of TX_BRK_DONE_INT_RAW field.
	UART_INT_RAW_TX_BRK_DONE_INT_RAW_Pos = 0xc
	// Bit mask of TX_BRK_DONE_INT_RAW field.
	UART_INT_RAW_TX_BRK_DONE_INT_RAW_Msk = 0x1000
	// Bit TX_BRK_DONE_INT_RAW.
	UART_INT_RAW_TX_BRK_DONE_INT_RAW = 0x1000
	// Position of TX_BRK_IDLE_DONE_INT_RAW field.
	UART_INT_RAW_TX_BRK_IDLE_DONE_INT_RAW_Pos = 0xd
	// Bit mask of TX_BRK_IDLE_DONE_INT_RAW field.
	UART_INT_RAW_TX_BRK_IDLE_DONE_INT_RAW_Msk = 0x2000
	// Bit TX_BRK_IDLE_DONE_INT_RAW.
	UART_INT_RAW_TX_BRK_IDLE_DONE_INT_RAW = 0x2000
	// Position of TX_DONE_INT_RAW field.
	UART_INT_RAW_TX_DONE_INT_RAW_Pos = 0xe
	// Bit mask of TX_DONE_INT_RAW field.
	UART_INT_RAW_TX_DONE_INT_RAW_Msk = 0x4000
	// Bit TX_DONE_INT_RAW.
	UART_INT_RAW_TX_DONE_INT_RAW = 0x4000
	// Position of RS485_PARITY_ERR_INT_RAW field.
	UART_INT_RAW_RS485_PARITY_ERR_INT_RAW_Pos = 0xf
	// Bit mask of RS485_PARITY_ERR_INT_RAW field.
	UART_INT_RAW_RS485_PARITY_ERR_INT_RAW_Msk = 0x8000
	// Bit RS485_PARITY_ERR_INT_RAW.
	UART_INT_RAW_RS485_PARITY_ERR_INT_RAW = 0x8000
	// Position of RS485_FRM_ERR_INT_RAW field.
	UART_INT_RAW_RS485_FRM_ERR_INT_RAW_Pos = 0x10
	// Bit mask of RS485_FRM_ERR_INT_RAW field.
	UART_INT_RAW_RS485_FRM_ERR_INT_RAW_Msk = 0x10000
	// Bit RS485_FRM_ERR_INT_RAW.
	UART_INT_RAW_RS485_FRM_ERR_INT_RAW = 0x10000
	// Position of RS485_CLASH_INT_RAW field.
	UART_INT_RAW_RS485_CLASH_INT_RAW_Pos = 0x11
	// Bit mask of RS485_CLASH_INT_RAW field.
	UART_INT_RAW_RS485_CLASH_INT_RAW_Msk = 0x20000
	// Bit RS485_CLASH_INT_RAW.
	UART_INT_RAW_RS485_CLASH_INT_RAW = 0x20000
	// Position of AT_CMD_CHAR_DET_INT_RAW field.
	UART_INT_RAW_AT_CMD_CHAR_DET_INT_RAW_Pos = 0x12
	// Bit mask of AT_CMD_CHAR_DET_INT_RAW field.
	UART_INT_RAW_AT_CMD_CHAR_DET_INT_RAW_Msk = 0x40000
	// Bit AT_CMD_CHAR_DET_INT_RAW.
	UART_INT_RAW_AT_CMD_CHAR_DET_INT_RAW = 0x40000
	// Position of WAKEUP_INT_RAW field.
	UART_INT_RAW_WAKEUP_INT_RAW_Pos = 0x13
	// Bit mask of WAKEUP_INT_RAW field.
	UART_INT_RAW_WAKEUP_INT_RAW_Msk = 0x80000
	// Bit WAKEUP_INT_RAW.
	UART_INT_RAW_WAKEUP_INT_RAW = 0x80000

	// INT_ST: Masked interrupt status
	// Position of RXFIFO_FULL_INT_ST field.
	UART_INT_ST_RXFIFO_FULL_INT_ST_Pos = 0x0
	// Bit mask of RXFIFO_FULL_INT_ST field.
	UART_INT_ST_RXFIFO_FULL_INT_ST_Msk = 0x1
	// Bit RXFIFO_FULL_INT_ST.
	UART_INT_ST_RXFIFO_FULL_INT_ST = 0x1
	// Position of TXFIFO_EMPTY_INT_ST field.
	UART_INT_ST_TXFIFO_EMPTY_INT_ST_Pos = 0x1
	// Bit mask of TXFIFO_EMPTY_INT_ST field.
	UART_INT_ST_TXFIFO_EMPTY_INT_ST_Msk = 0x2
	// Bit TXFIFO_EMPTY_INT_ST.
	UART_INT_ST_TXFIFO_EMPTY_INT_ST = 0x2
	// Position of PARITY_ERR_INT_ST field.
	UART_INT_ST_PARITY_ERR_INT_ST_Pos = 0x2
	// Bit mask of PARITY_ERR_INT_ST field.
	UART_INT_ST_PARITY_ERR_INT_ST_Msk = 0x4
	// Bit PARITY_ERR_INT_ST.
	UART_INT_ST_PARITY_ERR_INT_ST = 0x4
	// Position of FRM_ERR_INT_ST field.
	UART_INT_ST_FRM_ERR_INT_ST_Pos = 0x3
	// Bit mask of FRM_ERR_INT_ST field.
	UART_INT_ST_FRM_ERR_INT_ST_Msk = 0x8
	// Bit FRM_ERR_INT_ST.
	UART_INT_ST_FRM_ERR_INT_ST = 0x8
	// Position of RXFIFO_OVF_INT_ST field.
	UART_INT_ST_RXFIFO_OVF_INT_ST_Pos = 0x4
	// Bit mask of RXFIFO_OVF_INT_ST field.
	UART_INT_ST_RXFIFO_OVF_INT_ST_Msk = 0x10
	// Bit RXFIFO_OVF_INT_ST.
	UART_INT_ST_RXFIFO_OVF_INT_ST = 0x10
	// Position of DSR_CHG_INT_ST field.
	UART_INT_ST_DSR_CHG_INT_ST_Pos = 0x5
	// Bit mask of DSR_CHG_INT_ST field.
	UART_INT_ST_DSR_CHG_INT_ST_Msk = 0x20
	// Bit DSR_CHG_INT_ST.
	UART_INT_ST_DSR_CHG_INT_ST = 0x20
	// Position of CTS_CHG_INT_ST field.
	UART_INT_ST_CTS_CHG_INT_ST_Pos = 0x6
	// Bit mask of CTS_CHG_INT_ST field.
	UART_INT_ST_CTS_CHG_INT_ST_Msk = 0x40
	// Bit CTS_CHG_INT_ST.
	UART_INT_ST_CTS_CHG_INT_ST = 0x40
	// Position of BRK_DET_INT_ST field.
	UART_INT_ST_BRK_DET_INT_ST_Pos = 0x7
	// Bit mask of BRK_DET_INT_ST field.
	UART_INT_ST_BRK_DET_INT_ST_Msk = 0x80
	// Bit BRK_DET_INT_ST.
	UART_INT_ST_BRK_DET_INT_ST = 0x80
	// Position of RXFIFO_TOUT_INT_ST field.
	UART_INT_ST_RXFIFO_TOUT_INT_ST_Pos = 0x8
	// Bit mask of RXFIFO_TOUT_INT_ST field.
	UART_INT_ST_RXFIFO_TOUT_INT_ST_Msk = 0x100
	// Bit RXFIFO_TOUT_INT_ST.
	UART_INT_ST_RXFIFO_TOUT_INT_ST = 0x100
	// Position of SW_XON_INT_ST field.
	UART_INT_ST_SW_XON_INT_ST_Pos = 0x9
	// Bit mask of SW_XON_INT_ST field.
	UART_INT_ST_SW_XON_INT_ST_Msk = 0x200
	// Bit SW_XON_INT_ST.
	UART_INT_ST_SW_XON_INT_ST = 0x200
	// Position of SW_XOFF_INT_ST field.
	UART_INT_ST_SW_XOFF_INT_ST_Pos = 0xa
	// Bit mask of SW_XOFF_INT_ST field.
	UART_INT_ST_SW_XOFF_INT_ST_Msk = 0x400
	// Bit SW_XOFF_INT_ST.
	UART_INT_ST_SW_XOFF_INT_ST = 0x400
	// Position of GLITCH_DET_INT_ST field.
	UART_INT_ST_GLITCH_DET_INT_ST_Pos = 0xb
	// Bit mask of GLITCH_DET_INT_ST field.
	UART_INT_ST_GLITCH_DET_INT_ST_Msk = 0x800
	// Bit GLITCH_DET_INT_ST.
	UART_INT_ST_GLITCH_DET_INT_ST = 0x800
	// Position of TX_BRK_DONE_INT_ST field.
	UART_INT_ST_TX_BRK_DONE_INT_ST_Pos = 0xc
	// Bit mask of TX_BRK_DONE_INT_ST field.
	UART_INT_ST_TX_BRK_DONE_INT_ST_Msk = 0x1000
	// Bit TX_BRK_DONE_INT_ST.
	UART_INT_ST_TX_BRK_DONE_INT_ST = 0x1000
	// Position of TX_BRK_IDLE_DONE_INT_ST field.
	UART_INT_ST_TX_BRK_IDLE_DONE_INT_ST_Pos = 0xd
	// Bit mask of TX_BRK_IDLE_DONE_INT_ST field.
	UART_INT_ST_TX_BRK_IDLE_DONE_INT_ST_Msk = 0x2000
	// Bit TX_BRK_IDLE_DONE_INT_ST.
	UART_INT_ST_TX_BRK_IDLE_DONE_INT_ST = 0x2000
	// Position of TX_DONE_INT_ST field.
	UART_INT_ST_TX_DONE_INT_ST_Pos = 0xe
	// Bit mask of TX_DONE_INT_ST field.
	UART_INT_ST_TX_DONE_INT_ST_Msk = 0x4000
	// Bit TX_DONE_INT_ST.
	UART_INT_ST_TX_DONE_INT_ST = 0x4000
	// Position of RS485_PARITY_ERR_INT_ST field.
	UART_INT_ST_RS485_PARITY_ERR_INT_ST_Pos = 0xf
	// Bit mask of RS485_PARITY_ERR_INT_ST field.
	UART_INT_ST_RS485_PARITY_ERR_INT_ST_Msk = 0x8000
	// Bit RS485_PARITY_ERR_INT_ST.
	UART_INT_ST_RS485_PARITY_ERR_INT_ST = 0x8000
	// Position of RS485_FRM_ERR_INT_ST field.
	UART_INT_ST_RS485_FRM_ERR_INT_ST_Pos = 0x10
	// Bit mask of RS485_FRM_ERR_INT_ST field.
	UART_INT_ST_RS485_FRM_ERR_INT_ST_Msk = 0x10000
	// Bit RS485_FRM_ERR_INT_ST.
	UART_INT_ST_RS485_FRM_ERR_INT_ST = 0x10000
	// Position of RS485_CLASH_INT_ST field.
	UART_INT_ST_RS485_CLASH_INT_ST_Pos = 0x11
	// Bit mask of RS485_CLASH_INT_ST field.
	UART_INT_ST_RS485_CLASH_INT_ST_Msk = 0x20000
	// Bit RS485_CLASH_INT_ST.
	UART_INT_ST_RS485_CLASH_INT_ST = 0x20000
	// Position of AT_CMD_CHAR_DET_INT_ST field.
	UART_INT_ST_AT_CMD_CHAR_DET_INT_ST_Pos = 0x12
	// Bit mask of AT_CMD_CHAR_DET_INT_ST field.
	UART_INT_ST_AT_CMD_CHAR_DET_INT_ST_Msk = 0x40000
	// Bit AT_CMD_CHAR_DET_INT_ST.
	UART_INT_ST_AT_CMD_CHAR_DET_INT_ST = 0x40000
	// Position of WAKEUP_INT_ST field.
	UART_INT_ST_WAKEUP_INT_ST_Pos = 0x13
	// Bit mask of WAKEUP_INT_ST field.
	UART_INT_ST_WAKEUP_INT_ST_Msk = 0x80000
	// Bit WAKEUP_INT_ST.
	UART_INT_ST_WAKEUP_INT_ST = 0x80000

	// INT_ENA: Interrupt enable bits
	// Position of RXFIFO_FULL_INT_ENA field.
	UART_INT_ENA_RXFIFO_FULL_INT_ENA_Pos = 0x0
	// Bit mask of RXFIFO_FULL_INT_ENA field.
	UART_INT_ENA_RXFIFO_FULL_INT_ENA_Msk = 0x1
	// Bit RXFIFO_FULL_INT_ENA.
	UART_INT_ENA_RXFIFO_FULL_INT_ENA = 0x1
	// Position of TXFIFO_EMPTY_INT_ENA field.
	UART_INT_ENA_TXFIFO_EMPTY_INT_ENA_Pos = 0x1
	// Bit mask of TXFIFO_EMPTY_INT_ENA field.
	UART_INT_ENA_TXFIFO_EMPTY_INT_ENA_Msk = 0x2
	// Bit TXFIFO_EMPTY_INT_ENA.
	UART_INT_ENA_TXFIFO_EMPTY_INT_ENA = 0x2
	// Position of PARITY_ERR_INT_ENA field.
	UART_INT_ENA_PARITY_ERR_INT_ENA_Pos = 0x2
	// Bit mask of PARITY_ERR_INT_ENA field.
	UART_INT_ENA_PARITY_ERR_INT_ENA_Msk = 0x4
	// Bit PARITY_ERR_INT_ENA.
	UART_INT_ENA_PARITY_ERR_INT_ENA = 0x4
	// Position of FRM_ERR_INT_ENA field.
	UART_INT_ENA_FRM_ERR_INT_ENA_Pos = 0x3
	// Bit mask of FRM_ERR_INT_ENA field.
	UART_INT_ENA_FRM_ERR_INT_ENA_Msk = 0x8
	// Bit FRM_ERR_INT_ENA.
	UART_INT_ENA_FRM_ERR_INT_ENA = 0x8
	// Position of RXFIFO_OVF_INT_ENA field.
	UART_INT_ENA_RXFIFO_OVF_INT_ENA_Pos = 0x4
	// Bit mask of RXFIFO_OVF_INT_ENA field.
	UART_INT_ENA_RXFIFO_OVF_INT_ENA_Msk = 0x10
	// Bit RXFIFO_OVF_INT_ENA.
	UART_INT_ENA_RXFIFO_OVF_INT_ENA = 0x10
	// Position of DSR_CHG_INT_ENA field.
	UART_INT_ENA_DSR_CHG_INT_ENA_Pos = 0x5
	// Bit mask of DSR_CHG_INT_ENA field.
	UART_INT_ENA_DSR_CHG_INT_ENA_Msk = 0x20
	// Bit DSR_CHG_INT_ENA.
	UART_INT_ENA_DSR_CHG_INT_ENA = 0x20
	// Position of CTS_CHG_INT_ENA field.
	UART_INT_ENA_CTS_CHG_INT_ENA_Pos = 0x6
	// Bit mask of CTS_CHG_INT_ENA field.
	UART_INT_ENA_CTS_CHG_INT_ENA_Msk = 0x40
	// Bit CTS_CHG_INT_ENA.
	UART_INT_ENA_CTS_CHG_INT_ENA = 0x40
	// Position of BRK_DET_INT_ENA field.
	UART_INT_ENA_BRK_DET_INT_ENA_Pos = 0x7
	// Bit mask of BRK_DET_INT_ENA field.
	UART_INT_ENA_BRK_DET_INT_ENA_Msk = 0x80
	// Bit BRK_DET_INT_ENA.
	UART_INT_ENA_BRK_DET_INT_ENA = 0x80
	// Position of RXFIFO_TOUT_INT_ENA field.
	UART_INT_ENA_RXFIFO_TOUT_INT_ENA_Pos = 0x8
	// Bit mask of RXFIFO_TOUT_INT_ENA field.
	UART_INT_ENA_RXFIFO_TOUT_INT_ENA_Msk = 0x100
	// Bit RXFIFO_TOUT_INT_ENA.
	UART_INT_ENA_RXFIFO_TOUT_INT_ENA = 0x100
	// Position of SW_XON_INT_ENA field.
	UART_INT_ENA_SW_XON_INT_ENA_Pos = 0x9
	// Bit mask of SW_XON_INT_ENA field.
	UART_INT_ENA_SW_XON_INT_ENA_Msk = 0x200
	// Bit SW_XON_INT_ENA.
	UART_INT_ENA_SW_XON_INT_ENA = 0x200
	// Position of SW_XOFF_INT_ENA field.
	UART_INT_ENA_SW_XOFF_INT_ENA_Pos = 0xa
	// Bit mask of SW_XOFF_INT_ENA field.
	UART_INT_ENA_SW_XOFF_INT_ENA_Msk = 0x400
	// Bit SW_XOFF_INT_ENA.
	UART_INT_ENA_SW_XOFF_INT_ENA = 0x400
	// Position of GLITCH_DET_INT_ENA field.
	UART_INT_ENA_GLITCH_DET_INT_ENA_Pos = 0xb
	// Bit mask of GLITCH_DET_INT_ENA field.
	UART_INT_ENA_GLITCH_DET_INT_ENA_Msk = 0x800
	// Bit GLITCH_DET_INT_ENA.
	UART_INT_ENA_GLITCH_DET_INT_ENA = 0x800
	// Position of TX_BRK_DONE_INT_ENA field.
	UART_INT_ENA_TX_BRK_DONE_INT_ENA_Pos = 0xc
	// Bit mask of TX_BRK_DONE_INT_ENA field.
	UART_INT_ENA_TX_BRK_DONE_INT_ENA_Msk = 0x1000
	// Bit TX_BRK_DONE_INT_ENA.
	UART_INT_ENA_TX_BRK_DONE_INT_ENA = 0x1000
	// Position of TX_BRK_IDLE_DONE_INT_ENA field.
	UART_INT_ENA_TX_BRK_IDLE_DONE_INT_ENA_Pos = 0xd
	// Bit mask of TX_BRK_IDLE_DONE_INT_ENA field.
	UART_INT_ENA_TX_BRK_IDLE_DONE_INT_ENA_Msk = 0x2000
	// Bit TX_BRK_IDLE_DONE_INT_ENA.
	UART_INT_ENA_TX_BRK_IDLE_DONE_INT_ENA = 0x2000
	// Position of TX_DONE_INT_ENA field.
	UART_INT_ENA_TX_DONE_INT_ENA_Pos = 0xe
	// Bit mask of TX_DONE_INT_ENA field.
	UART_INT_ENA_TX_DONE_INT_ENA_Msk = 0x4000
	// Bit TX_DONE_INT_ENA.
	UART_INT_ENA_TX_DONE_INT_ENA = 0x4000
	// Position of RS485_PARITY_ERR_INT_ENA field.
	UART_INT_ENA_RS485_PARITY_ERR_INT_ENA_Pos = 0xf
	// Bit mask of RS485_PARITY_ERR_INT_ENA field.
	UART_INT_ENA_RS485_PARITY_ERR_INT_ENA_Msk = 0x8000
	// Bit RS485_PARITY_ERR_INT_ENA.
	UART_INT_ENA_RS485_PARITY_ERR_INT_ENA = 0x8000
	// Position of RS485_FRM_ERR_INT_ENA field.
	UART_INT_ENA_RS485_FRM_ERR_INT_ENA_Pos = 0x10
	// Bit mask of RS485_FRM_ERR_INT_ENA field.
	UART_INT_ENA_RS485_FRM_ERR_INT_ENA_Msk = 0x10000
	// Bit RS485_FRM_ERR_INT_ENA.
	UART_INT_ENA_RS485_FRM_ERR_INT_ENA = 0x10000
	// Position of RS485_CLASH_INT_ENA field.
	UART_INT_ENA_RS485_CLASH_INT_ENA_Pos = 0x11
	// Bit mask of RS485_CLASH_INT_ENA field.
	UART_INT_ENA_RS485_CLASH_INT_ENA_Msk = 0x20000
	// Bit RS485_CLASH_INT_ENA.
	UART_INT_ENA_RS485_CLASH_INT_ENA = 0x20000
	// Position of AT_CMD_CHAR_DET_INT_ENA field.
	UART_INT_ENA_AT_CMD_CHAR_DET_INT_ENA_Pos = 0x12
	// Bit mask of AT_CMD_CHAR_DET_INT_ENA field.
	UART_INT_ENA_AT_CMD_CHAR_DET_INT_ENA_Msk = 0x40000
	// Bit AT_CMD_CHAR_DET_INT_ENA.
	UART_INT_ENA_AT_CMD_CHAR_DET_INT_ENA = 0x40000
	// Position of WAKEUP_INT_ENA field.
	UART_INT_ENA_WAKEUP_INT_ENA_Pos = 0x13
	// Bit mask of WAKEUP_INT_ENA field.
	UART_INT_ENA_WAKEUP_INT_ENA_Msk = 0x80000
	// Bit WAKEUP_INT_ENA.
	UART_INT_ENA_WAKEUP_INT_ENA = 0x80000

	// INT_CLR: Interrupt clear bits
	// Position of RXFIFO_FULL_INT_CLR field.
	UART_INT_CLR_RXFIFO_FULL_INT_CLR_Pos = 0x0
	// Bit mask of RXFIFO_FULL_INT_CLR field.
	UART_INT_CLR_RXFIFO_FULL_INT_CLR_Msk = 0x1
	// Bit RXFIFO_FULL_INT_CLR.
	UART_INT_CLR_RXFIFO_FULL_INT_CLR = 0x1
	// Position of TXFIFO_EMPTY_INT_CLR field.
	UART_INT_CLR_TXFIFO_EMPTY_INT_CLR_Pos = 0x1
	// Bit mask of TXFIFO_EMPTY_INT_CLR field.
	UART_INT_CLR_TXFIFO_EMPTY_INT_CLR_Msk = 0x2
	// Bit TXFIFO_EMPTY_INT_CLR.
	UART_INT_CLR_TXFIFO_EMPTY_INT_CLR = 0x2
	// Position of PARITY_ERR_INT_CLR field.
	UART_INT_CLR_PARITY_ERR_INT_CLR_Pos = 0x2
	// Bit mask of PARITY_ERR_INT_CLR field.
	UART_INT_CLR_PARITY_ERR_INT_CLR_Msk = 0x4
	// Bit PARITY_ERR_INT_CLR.
	UART_INT_CLR_PARITY_ERR_INT_CLR = 0x4
	// Position of FRM_ERR_INT_CLR field.
	UART_INT_CLR_FRM_ERR_INT_CLR_Pos = 0x3
	// Bit mask of FRM_ERR_INT_CLR field.
	UART_INT_CLR_FRM_ERR_INT_CLR_Msk = 0x8
	// Bit FRM_ERR_INT_CLR.
	UART_INT_CLR_FRM_ERR_INT_CLR = 0x8
	// Position of RXFIFO_OVF_INT_CLR field.
	UART_INT_CLR_RXFIFO_OVF_INT_CLR_Pos = 0x4
	// Bit mask of RXFIFO_OVF_INT_CLR field.
	UART_INT_CLR_RXFIFO_OVF_INT_CLR_Msk = 0x10
	// Bit RXFIFO_OVF_INT_CLR.
	UART_INT_CLR_RXFIFO_OVF_INT_CLR = 0x10
	// Position of DSR_CHG_INT_CLR field.
	UART_INT_CLR_DSR_CHG_INT_CLR_Pos = 0x5
	// Bit mask of DSR_CHG_INT_CLR field.
	UART_INT_CLR_DSR_CHG_INT_CLR_Msk = 0x20
	// Bit DSR_CHG_INT_CLR.
	UART_INT_CLR_DSR_CHG_INT_CLR = 0x20
	// Position of CTS_CHG_INT_CLR field.
	UART_INT_CLR_CTS_CHG_INT_CLR_Pos = 0x6
	// Bit mask of CTS_CHG_INT_CLR field.
	UART_INT_CLR_CTS_CHG_INT_CLR_Msk = 0x40
	// Bit CTS_CHG_INT_CLR.
	UART_INT_CLR_CTS_CHG_INT_CLR = 0x40
	// Position of BRK_DET_INT_CLR field.
	UART_INT_CLR_BRK_DET_INT_CLR_Pos = 0x7
	// Bit mask of BRK_DET_INT_CLR field.
	UART_INT_CLR_BRK_DET_INT_CLR_Msk = 0x80
	// Bit BRK_DET_INT_CLR.
	UART_INT_CLR_BRK_DET_INT_CLR = 0x80
	// Position of RXFIFO_TOUT_INT_CLR field.
	UART_INT_CLR_RXFIFO_TOUT_INT_CLR_Pos = 0x8
	// Bit mask of RXFIFO_TOUT_INT_CLR field.
	UART_INT_CLR_RXFIFO_TOUT_INT_CLR_Msk = 0x100
	// Bit RXFIFO_TOUT_INT_CLR.
	UART_INT_CLR_RXFIFO_TOUT_INT_CLR = 0x100
	// Position of SW_XON_INT_CLR field.
	UART_INT_CLR_SW_XON_INT_CLR_Pos = 0x9
	// Bit mask of SW_XON_INT_CLR field.
	UART_INT_CLR_SW_XON_INT_CLR_Msk = 0x200
	// Bit SW_XON_INT_CLR.
	UART_INT_CLR_SW_XON_INT_CLR = 0x200
	// Position of SW_XOFF_INT_CLR field.
	UART_INT_CLR_SW_XOFF_INT_CLR_Pos = 0xa
	// Bit mask of SW_XOFF_INT_CLR field.
	UART_INT_CLR_SW_XOFF_INT_CLR_Msk = 0x400
	// Bit SW_XOFF_INT_CLR.
	UART_INT_CLR_SW_XOFF_INT_CLR = 0x400
	// Position of GLITCH_DET_INT_CLR field.
	UART_INT_CLR_GLITCH_DET_INT_CLR_Pos = 0xb
	// Bit mask of GLITCH_DET_INT_CLR field.
	UART_INT_CLR_GLITCH_DET_INT_CLR_Msk = 0x800
	// Bit GLITCH_DET_INT_CLR.
	UART_INT_CLR_GLITCH_DET_INT_CLR = 0x800
	// Position of TX_BRK_DONE_INT_CLR field.
	UART_INT_CLR_TX_BRK_DONE_INT_CLR_Pos = 0xc
	// Bit mask of TX_BRK_DONE_INT_CLR field.
	UART_INT_CLR_TX_BRK_DONE_INT_CLR_Msk = 0x1000
	// Bit TX_BRK_DONE_INT_CLR.
	UART_INT_CLR_TX_BRK_DONE_INT_CLR = 0x1000
	// Position of TX_BRK_IDLE_DONE_INT_CLR field.
	UART_INT_CLR_TX_BRK_IDLE_DONE_INT_CLR_Pos = 0xd
	// Bit mask of TX_BRK_IDLE_DONE_INT_CLR field.
	UART_INT_CLR_TX_BRK_IDLE_DONE_INT_CLR_Msk = 0x2000
	// Bit TX_BRK_IDLE_DONE_INT_CLR.
	UART_INT_CLR_TX_BRK_IDLE_DONE_INT_CLR = 0x2000
	// Position of TX_DONE_INT_CLR field.
	UART_INT_CLR_TX_DONE_INT_CLR_Pos = 0xe
	// Bit mask of TX_DONE_INT_CLR field.
	UART_INT_CLR_TX_DONE_INT_CLR_Msk = 0x4000
	// Bit TX_DONE_INT_CLR.
	UART_INT_CLR_TX_DONE_INT_CLR = 0x4000
	// Position of RS485_PARITY_ERR_INT_CLR field.
	UART_INT_CLR_RS485_PARITY_ERR_INT_CLR_Pos = 0xf
	// Bit mask of RS485_PARITY_ERR_INT_CLR field.
	UART_INT_CLR_RS485_PARITY_ERR_INT_CLR_Msk = 0x8000
	// Bit RS485_PARITY_ERR_INT_CLR.
	UART_INT_CLR_RS485_PARITY_ERR_INT_CLR = 0x8000
	// Position of RS485_FRM_ERR_INT_CLR field.
	UART_INT_CLR_RS485_FRM_ERR_INT_CLR_Pos = 0x10
	// Bit mask of RS485_FRM_ERR_INT_CLR field.
	UART_INT_CLR_RS485_FRM_ERR_INT_CLR_Msk = 0x10000
	// Bit RS485_FRM_ERR_INT_CLR.
	UART_INT_CLR_RS485_FRM_ERR_INT_CLR = 0x10000
	// Position of RS485_CLASH_INT_CLR field.
	UART_INT_CLR_RS485_CLASH_INT_CLR_Pos = 0x11
	// Bit mask of RS485_CLASH_INT_CLR field.
	UART_INT_CLR_RS485_CLASH_INT_CLR_Msk = 0x20000
	// Bit RS485_CLASH_INT_CLR.
	UART_INT_CLR_RS485_CLASH_INT_CLR = 0x20000
	// Position of AT_CMD_CHAR_DET_INT_CLR field.
	UART_INT_CLR_AT_CMD_CHAR_DET_INT_CLR_Pos = 0x12
	// Bit mask of AT_CMD_CHAR_DET_INT_CLR field.
	UART_INT_CLR_AT_CMD_CHAR_DET_INT_CLR_Msk = 0x40000
	// Bit AT_CMD_CHAR_DET_INT_CLR.
	UART_INT_CLR_AT_CMD_CHAR_DET_INT_CLR = 0x40000
	// Position of WAKEUP_INT_CLR field.
	UART_INT_CLR_WAKEUP_INT_CLR_Pos = 0x13
	// Bit mask of WAKEUP_INT_CLR field.
	UART_INT_CLR_WAKEUP_INT_CLR_Msk = 0x80000
	// Bit WAKEUP_INT_CLR.
	UART_INT_CLR_WAKEUP_INT_CLR = 0x80000

	// CLKDIV: Clock divider configuration
	// Position of CLKDIV field.
	UART_CLKDIV_CLKDIV_Pos = 0x0
	// Bit mask of CLKDIV field.
	UART_CLKDIV_CLKDIV_Msk = 0xfff
	// Position of FRAG field.
	UART_CLKDIV_FRAG_Pos = 0x14
	// Bit mask of FRAG field.
	UART_CLKDIV_FRAG_Msk = 0xf00000

	// RX_FILT: Rx Filter configuration
	// Position of GLITCH_FILT field.
	UART_RX_FILT_GLITCH_FILT_Pos = 0x0
	// Bit mask of GLITCH_FILT field.
	UART_RX_FILT_GLITCH_FILT_Msk = 0xff
	// Position of GLITCH_FILT_EN field.
	UART_RX_FILT_GLITCH_FILT_EN_Pos = 0x8
	// Bit mask of GLITCH_FILT_EN field.
	UART_RX_FILT_GLITCH_FILT_EN_Msk = 0x100
	// Bit GLITCH_FILT_EN.
	UART_RX_FILT_GLITCH_FILT_EN = 0x100

	// STATUS: UART status register
	// Position of RXFIFO_CNT field.
	UART_STATUS_RXFIFO_CNT_Pos = 0x0
	// Bit mask of RXFIFO_CNT field.
	UART_STATUS_RXFIFO_CNT_Msk = 0x3ff
	// Position of DSRN field.
	UART_STATUS_DSRN_Pos = 0xd
	// Bit mask of DSRN field.
	UART_STATUS_DSRN_Msk = 0x2000
	// Bit DSRN.
	UART_STATUS_DSRN = 0x2000
	// Position of CTSN field.
	UART_STATUS_CTSN_Pos = 0xe
	// Bit mask of CTSN field.
	UART_STATUS_CTSN_Msk = 0x4000
	// Bit CTSN.
	UART_STATUS_CTSN = 0x4000
	// Position of RXD field.
	UART_STATUS_RXD_Pos = 0xf
	// Bit mask of RXD field.
	UART_STATUS_RXD_Msk = 0x8000
	// Bit RXD.
	UART_STATUS_RXD = 0x8000
	// Position of TXFIFO_CNT field.
	UART_STATUS_TXFIFO_CNT_Pos = 0x10
	// Bit mask of TXFIFO_CNT field.
	UART_STATUS_TXFIFO_CNT_Msk = 0x3ff0000
	// Position of DTRN field.
	UART_STATUS_DTRN_Pos = 0x1d
	// Bit mask of DTRN field.
	UART_STATUS_DTRN_Msk = 0x20000000
	// Bit DTRN.
	UART_STATUS_DTRN = 0x20000000
	// Position of RTSN field.
	UART_STATUS_RTSN_Pos = 0x1e
	// Bit mask of RTSN field.
	UART_STATUS_RTSN_Msk = 0x40000000
	// Bit RTSN.
	UART_STATUS_RTSN = 0x40000000
	// Position of TXD field.
	UART_STATUS_TXD_Pos = 0x1f
	// Bit mask of TXD field.
	UART_STATUS_TXD_Msk = 0x80000000
	// Bit TXD.
	UART_STATUS_TXD = 0x80000000

	// CONF0: a
	// Position of PARITY field.
	UART_CONF0_PARITY_Pos = 0x0
	// Bit mask of PARITY field.
	UART_CONF0_PARITY_Msk = 0x1
	// Bit PARITY.
	UART_CONF0_PARITY = 0x1
	// Position of PARITY_EN field.
	UART_CONF0_PARITY_EN_Pos = 0x1
	// Bit mask of PARITY_EN field.
	UART_CONF0_PARITY_EN_Msk = 0x2
	// Bit PARITY_EN.
	UART_CONF0_PARITY_EN = 0x2
	// Position of BIT_NUM field.
	UART_CONF0_BIT_NUM_Pos = 0x2
	// Bit mask of BIT_NUM field.
	UART_CONF0_BIT_NUM_Msk = 0xc
	// Position of STOP_BIT_NUM field.
	UART_CONF0_STOP_BIT_NUM_Pos = 0x4
	// Bit mask of STOP_BIT_NUM field.
	UART_CONF0_STOP_BIT_NUM_Msk = 0x30
	// Position of SW_RTS field.
	UART_CONF0_SW_RTS_Pos = 0x6
	// Bit mask of SW_RTS field.
	UART_CONF0_SW_RTS_Msk = 0x40
	// Bit SW_RTS.
	UART_CONF0_SW_RTS = 0x40
	// Position of SW_DTR field.
	UART_CONF0_SW_DTR_Pos = 0x7
	// Bit mask of SW_DTR field.
	UART_CONF0_SW_DTR_Msk = 0x80
	// Bit SW_DTR.
	UART_CONF0_SW_DTR = 0x80
	// Position of TXD_BRK field.
	UART_CONF0_TXD_BRK_Pos = 0x8
	// Bit mask of TXD_BRK field.
	UART_CONF0_TXD_BRK_Msk = 0x100
	// Bit TXD_BRK.
	UART_CONF0_TXD_BRK = 0x100
	// Position of IRDA_DPLX field.
	UART_CONF0_IRDA_DPLX_Pos = 0x9
	// Bit mask of IRDA_DPLX field.
	UART_CONF0_IRDA_DPLX_Msk = 0x200
	// Bit IRDA_DPLX.
	UART_CONF0_IRDA_DPLX = 0x200
	// Position of IRDA_TX_EN field.
	UART_CONF0_IRDA_TX_EN_Pos = 0xa
	// Bit mask of IRDA_TX_EN field.
	UART_CONF0_IRDA_TX_EN_Msk = 0x400
	// Bit IRDA_TX_EN.
	UART_CONF0_IRDA_TX_EN = 0x400
	// Position of IRDA_WCTL field.
	UART_CONF0_IRDA_WCTL_Pos = 0xb
	// Bit mask of IRDA_WCTL field.
	UART_CONF0_IRDA_WCTL_Msk = 0x800
	// Bit IRDA_WCTL.
	UART_CONF0_IRDA_WCTL = 0x800
	// Position of IRDA_TX_INV field.
	UART_CONF0_IRDA_TX_INV_Pos = 0xc
	// Bit mask of IRDA_TX_INV field.
	UART_CONF0_IRDA_TX_INV_Msk = 0x1000
	// Bit IRDA_TX_INV.
	UART_CONF0_IRDA_TX_INV = 0x1000
	// Position of IRDA_RX_INV field.
	UART_CONF0_IRDA_RX_INV_Pos = 0xd
	// Bit mask of IRDA_RX_INV field.
	UART_CONF0_IRDA_RX_INV_Msk = 0x2000
	// Bit IRDA_RX_INV.
	UART_CONF0_IRDA_RX_INV = 0x2000
	// Position of LOOPBACK field.
	UART_CONF0_LOOPBACK_Pos = 0xe
	// Bit mask of LOOPBACK field.
	UART_CONF0_LOOPBACK_Msk = 0x4000
	// Bit LOOPBACK.
	UART_CONF0_LOOPBACK = 0x4000
	// Position of TX_FLOW_EN field.
	UART_CONF0_TX_FLOW_EN_Pos = 0xf
	// Bit mask of TX_FLOW_EN field.
	UART_CONF0_TX_FLOW_EN_Msk = 0x8000
	// Bit TX_FLOW_EN.
	UART_CONF0_TX_FLOW_EN = 0x8000
	// Position of IRDA_EN field.
	UART_CONF0_IRDA_EN_Pos = 0x10
	// Bit mask of IRDA_EN field.
	UART_CONF0_IRDA_EN_Msk = 0x10000
	// Bit IRDA_EN.
	UART_CONF0_IRDA_EN = 0x10000
	// Position of RXFIFO_RST field.
	UART_CONF0_RXFIFO_RST_Pos = 0x11
	// Bit mask of RXFIFO_RST field.
	UART_CONF0_RXFIFO_RST_Msk = 0x20000
	// Bit RXFIFO_RST.
	UART_CONF0_RXFIFO_RST = 0x20000
	// Position of TXFIFO_RST field.
	UART_CONF0_TXFIFO_RST_Pos = 0x12
	// Bit mask of TXFIFO_RST field.
	UART_CONF0_TXFIFO_RST_Msk = 0x40000
	// Bit TXFIFO_RST.
	UART_CONF0_TXFIFO_RST = 0x40000
	// Position of RXD_INV field.
	UART_CONF0_RXD_INV_Pos = 0x13
	// Bit mask of RXD_INV field.
	UART_CONF0_RXD_INV_Msk = 0x80000
	// Bit RXD_INV.
	UART_CONF0_RXD_INV = 0x80000
	// Position of CTS_INV field.
	UART_CONF0_CTS_INV_Pos = 0x14
	// Bit mask of CTS_INV field.
	UART_CONF0_CTS_INV_Msk = 0x100000
	// Bit CTS_INV.
	UART_CONF0_CTS_INV = 0x100000
	// Position of DSR_INV field.
	UART_CONF0_DSR_INV_Pos = 0x15
	// Bit mask of DSR_INV field.
	UART_CONF0_DSR_INV_Msk = 0x200000
	// Bit DSR_INV.
	UART_CONF0_DSR_INV = 0x200000
	// Position of TXD_INV field.
	UART_CONF0_TXD_INV_Pos = 0x16
	// Bit mask of TXD_INV field.
	UART_CONF0_TXD_INV_Msk = 0x400000
	// Bit TXD_INV.
	UART_CONF0_TXD_INV = 0x400000
	// Position of RTS_INV field.
	UART_CONF0_RTS_INV_Pos = 0x17
	// Bit mask of RTS_INV field.
	UART_CONF0_RTS_INV_Msk = 0x800000
	// Bit RTS_INV.
	UART_CONF0_RTS_INV = 0x800000
	// Position of DTR_INV field.
	UART_CONF0_DTR_INV_Pos = 0x18
	// Bit mask of DTR_INV field.
	UART_CONF0_DTR_INV_Msk = 0x1000000
	// Bit DTR_INV.
	UART_CONF0_DTR_INV = 0x1000000
	// Position of CLK_EN field.
	UART_CONF0_CLK_EN_Pos = 0x19
	// Bit mask of CLK_EN field.
	UART_CONF0_CLK_EN_Msk = 0x2000000
	// Bit CLK_EN.
	UART_CONF0_CLK_EN = 0x2000000
	// Position of ERR_WR_MASK field.
	UART_CONF0_ERR_WR_MASK_Pos = 0x1a
	// Bit mask of ERR_WR_MASK field.
	UART_CONF0_ERR_WR_MASK_Msk = 0x4000000
	// Bit ERR_WR_MASK.
	UART_CONF0_ERR_WR_MASK = 0x4000000
	// Position of AUTOBAUD_EN field.
	UART_CONF0_AUTOBAUD_EN_Pos = 0x1b
	// Bit mask of AUTOBAUD_EN field.
	UART_CONF0_AUTOBAUD_EN_Msk = 0x8000000
	// Bit AUTOBAUD_EN.
	UART_CONF0_AUTOBAUD_EN = 0x8000000
	// Position of MEM_CLK_EN field.
	UART_CONF0_MEM_CLK_EN_Pos = 0x1c
	// Bit mask of MEM_CLK_EN field.
	UART_CONF0_MEM_CLK_EN_Msk = 0x10000000
	// Bit MEM_CLK_EN.
	UART_CONF0_MEM_CLK_EN = 0x10000000

	// CONF1: Configuration register 1
	// Position of RXFIFO_FULL_THRHD field.
	UART_CONF1_RXFIFO_FULL_THRHD_Pos = 0x0
	// Bit mask of RXFIFO_FULL_THRHD field.
	UART_CONF1_RXFIFO_FULL_THRHD_Msk = 0x1ff
	// Position of TXFIFO_EMPTY_THRHD field.
	UART_CONF1_TXFIFO_EMPTY_THRHD_Pos = 0x9
	// Bit mask of TXFIFO_EMPTY_THRHD field.
	UART_CONF1_TXFIFO_EMPTY_THRHD_Msk = 0x3fe00
	// Position of DIS_RX_DAT_OVF field.
	UART_CONF1_DIS_RX_DAT_OVF_Pos = 0x12
	// Bit mask of DIS_RX_DAT_OVF field.
	UART_CONF1_DIS_RX_DAT_OVF_Msk = 0x40000
	// Bit DIS_RX_DAT_OVF.
	UART_CONF1_DIS_RX_DAT_OVF = 0x40000
	// Position of RX_TOUT_FLOW_DIS field.
	UART_CONF1_RX_TOUT_FLOW_DIS_Pos = 0x13
	// Bit mask of RX_TOUT_FLOW_DIS field.
	UART_CONF1_RX_TOUT_FLOW_DIS_Msk = 0x80000
	// Bit RX_TOUT_FLOW_DIS.
	UART_CONF1_RX_TOUT_FLOW_DIS = 0x80000
	// Position of RX_FLOW_EN field.
	UART_CONF1_RX_FLOW_EN_Pos = 0x14
	// Bit mask of RX_FLOW_EN field.
	UART_CONF1_RX_FLOW_EN_Msk = 0x100000
	// Bit RX_FLOW_EN.
	UART_CONF1_RX_FLOW_EN = 0x100000
	// Position of RX_TOUT_EN field.
	UART_CONF1_RX_TOUT_EN_Pos = 0x15
	// Bit mask of RX_TOUT_EN field.
	UART_CONF1_RX_TOUT_EN_Msk = 0x200000
	// Bit RX_TOUT_EN.
	UART_CONF1_RX_TOUT_EN = 0x200000

	// LOWPULSE: Autobaud minimum low pulse duration register
	// Position of MIN_CNT field.
	UART_LOWPULSE_MIN_CNT_Pos = 0x0
	// Bit mask of MIN_CNT field.
	UART_LOWPULSE_MIN_CNT_Msk = 0xfff

	// HIGHPULSE: Autobaud minimum high pulse duration register
	// Position of MIN_CNT field.
	UART_HIGHPULSE_MIN_CNT_Pos = 0x0
	// Bit mask of MIN_CNT field.
	UART_HIGHPULSE_MIN_CNT_Msk = 0xfff

	// RXD_CNT: Autobaud edge change count register
	// Position of RXD_EDGE_CNT field.
	UART_RXD_CNT_RXD_EDGE_CNT_Pos = 0x0
	// Bit mask of RXD_EDGE_CNT field.
	UART_RXD_CNT_RXD_EDGE_CNT_Msk = 0x3ff

	// FLOW_CONF: Software flow-control configuration
	// Position of SW_FLOW_CON_EN field.
	UART_FLOW_CONF_SW_FLOW_CON_EN_Pos = 0x0
	// Bit mask of SW_FLOW_CON_EN field.
	UART_FLOW_CONF_SW_FLOW_CON_EN_Msk = 0x1
	// Bit SW_FLOW_CON_EN.
	UART_FLOW_CONF_SW_FLOW_CON_EN = 0x1
	// Position of XONOFF_DEL field.
	UART_FLOW_CONF_XONOFF_DEL_Pos = 0x1
	// Bit mask of XONOFF_DEL field.
	UART_FLOW_CONF_XONOFF_DEL_Msk = 0x2
	// Bit XONOFF_DEL.
	UART_FLOW_CONF_XONOFF_DEL = 0x2
	// Position of FORCE_XON field.
	UART_FLOW_CONF_FORCE_XON_Pos = 0x2
	// Bit mask of FORCE_XON field.
	UART_FLOW_CONF_FORCE_XON_Msk = 0x4
	// Bit FORCE_XON.
	UART_FLOW_CONF_FORCE_XON = 0x4
	// Position of FORCE_XOFF field.
	UART_FLOW_CONF_FORCE_XOFF_Pos = 0x3
	// Bit mask of FORCE_XOFF field.
	UART_FLOW_CONF_FORCE_XOFF_Msk = 0x8
	// Bit FORCE_XOFF.
	UART_FLOW_CONF_FORCE_XOFF = 0x8
	// Position of SEND_XON field.
	UART_FLOW_CONF_SEND_XON_Pos = 0x4
	// Bit mask of SEND_XON field.
	UART_FLOW_CONF_SEND_XON_Msk = 0x10
	// Bit SEND_XON.
	UART_FLOW_CONF_SEND_XON = 0x10
	// Position of SEND_XOFF field.
	UART_FLOW_CONF_SEND_XOFF_Pos = 0x5
	// Bit mask of SEND_XOFF field.
	UART_FLOW_CONF_SEND_XOFF_Msk = 0x20
	// Bit SEND_XOFF.
	UART_FLOW_CONF_SEND_XOFF = 0x20

	// SLEEP_CONF: Sleep-mode configuration
	// Position of ACTIVE_THRESHOLD field.
	UART_SLEEP_CONF_ACTIVE_THRESHOLD_Pos = 0x0
	// Bit mask of ACTIVE_THRESHOLD field.
	UART_SLEEP_CONF_ACTIVE_THRESHOLD_Msk = 0x3ff

	// SWFC_CONF0: Software flow-control character configuration
	// Position of XOFF_THRESHOLD field.
	UART_SWFC_CONF0_XOFF_THRESHOLD_Pos = 0x0
	// Bit mask of XOFF_THRESHOLD field.
	UART_SWFC_CONF0_XOFF_THRESHOLD_Msk = 0x1ff
	// Position of XOFF_CHAR field.
	UART_SWFC_CONF0_XOFF_CHAR_Pos = 0x9
	// Bit mask of XOFF_CHAR field.
	UART_SWFC_CONF0_XOFF_CHAR_Msk = 0x1fe00

	// SWFC_CONF1: Software flow-control character configuration
	// Position of XON_THRESHOLD field.
	UART_SWFC_CONF1_XON_THRESHOLD_Pos = 0x0
	// Bit mask of XON_THRESHOLD field.
	UART_SWFC_CONF1_XON_THRESHOLD_Msk = 0x1ff
	// Position of XON_CHAR field.
	UART_SWFC_CONF1_XON_CHAR_Pos = 0x9
	// Bit mask of XON_CHAR field.
	UART_SWFC_CONF1_XON_CHAR_Msk = 0x1fe00

	// TXBRK_CONF: Tx Break character configuration
	// Position of TX_BRK_NUM field.
	UART_TXBRK_CONF_TX_BRK_NUM_Pos = 0x0
	// Bit mask of TX_BRK_NUM field.
	UART_TXBRK_CONF_TX_BRK_NUM_Msk = 0xff

	// IDLE_CONF: Frame-end idle configuration
	// Position of RX_IDLE_THRHD field.
	UART_IDLE_CONF_RX_IDLE_THRHD_Pos = 0x0
	// Bit mask of RX_IDLE_THRHD field.
	UART_IDLE_CONF_RX_IDLE_THRHD_Msk = 0x3ff
	// Position of TX_IDLE_NUM field.
	UART_IDLE_CONF_TX_IDLE_NUM_Pos = 0xa
	// Bit mask of TX_IDLE_NUM field.
	UART_IDLE_CONF_TX_IDLE_NUM_Msk = 0xffc00

	// RS485_CONF: RS485 mode configuration
	// Position of RS485_EN field.
	UART_RS485_CONF_RS485_EN_Pos = 0x0
	// Bit mask of RS485_EN field.
	UART_RS485_CONF_RS485_EN_Msk = 0x1
	// Bit RS485_EN.
	UART_RS485_CONF_RS485_EN = 0x1
	// Position of DL0_EN field.
	UART_RS485_CONF_DL0_EN_Pos = 0x1
	// Bit mask of DL0_EN field.
	UART_RS485_CONF_DL0_EN_Msk = 0x2
	// Bit DL0_EN.
	UART_RS485_CONF_DL0_EN = 0x2
	// Position of DL1_EN field.
	UART_RS485_CONF_DL1_EN_Pos = 0x2
	// Bit mask of DL1_EN field.
	UART_RS485_CONF_DL1_EN_Msk = 0x4
	// Bit DL1_EN.
	UART_RS485_CONF_DL1_EN = 0x4
	// Position of RS485TX_RX_EN field.
	UART_RS485_CONF_RS485TX_RX_EN_Pos = 0x3
	// Bit mask of RS485TX_RX_EN field.
	UART_RS485_CONF_RS485TX_RX_EN_Msk = 0x8
	// Bit RS485TX_RX_EN.
	UART_RS485_CONF_RS485TX_RX_EN = 0x8
	// Position of RS485RXBY_TX_EN field.
	UART_RS485_CONF_RS485RXBY_TX_EN_Pos = 0x4
	// Bit mask of RS485RXBY_TX_EN field.
	UART_RS485_CONF_RS485RXBY_TX_EN_Msk = 0x10
	// Bit RS485RXBY_TX_EN.
	UART_RS485_CONF_RS485RXBY_TX_EN = 0x10
	// Position of RS485_RX_DLY_NUM field.
	UART_RS485_CONF_RS485_RX_DLY_NUM_Pos = 0x5
	// Bit mask of RS485_RX_DLY_NUM field.
	UART_RS485_CONF_RS485_RX_DLY_NUM_Msk = 0x20
	// Bit RS485_RX_DLY_NUM.
	UART_RS485_CONF_RS485_RX_DLY_NUM = 0x20
	// Position of RS485_TX_DLY_NUM field.
	UART_RS485_CONF_RS485_TX_DLY_NUM_Pos = 0x6
	// Bit mask of RS485_TX_DLY_NUM field.
	UART_RS485_CONF_RS485_TX_DLY_NUM_Msk = 0x3c0

	// AT_CMD_PRECNT: Pre-sequence timing configuration
	// Position of PRE_IDLE_NUM field.
	UART_AT_CMD_PRECNT_PRE_IDLE_NUM_Pos = 0x0
	// Bit mask of PRE_IDLE_NUM field.
	UART_AT_CMD_PRECNT_PRE_IDLE_NUM_Msk = 0xffff

	// AT_CMD_POSTCNT: Post-sequence timing configuration
	// Position of POST_IDLE_NUM field.
	UART_AT_CMD_POSTCNT_POST_IDLE_NUM_Pos = 0x0
	// Bit mask of POST_IDLE_NUM field.
	UART_AT_CMD_POSTCNT_POST_IDLE_NUM_Msk = 0xffff

	// AT_CMD_GAPTOUT: Timeout configuration
	// Position of RX_GAP_TOUT field.
	UART_AT_CMD_GAPTOUT_RX_GAP_TOUT_Pos = 0x0
	// Bit mask of RX_GAP_TOUT field.
	UART_AT_CMD_GAPTOUT_RX_GAP_TOUT_Msk = 0xffff

	// AT_CMD_CHAR: AT escape sequence detection configuration
	// Position of AT_CMD_CHAR field.
	UART_AT_CMD_CHAR_AT_CMD_CHAR_Pos = 0x0
	// Bit mask of AT_CMD_CHAR field.
	UART_AT_CMD_CHAR_AT_CMD_CHAR_Msk = 0xff
	// Position of CHAR_NUM field.
	UART_AT_CMD_CHAR_CHAR_NUM_Pos = 0x8
	// Bit mask of CHAR_NUM field.
	UART_AT_CMD_CHAR_CHAR_NUM_Msk = 0xff00

	// MEM_CONF: UART threshold and allocation configuration
	// Position of RX_SIZE field.
	UART_MEM_CONF_RX_SIZE_Pos = 0x1
	// Bit mask of RX_SIZE field.
	UART_MEM_CONF_RX_SIZE_Msk = 0xe
	// Position of TX_SIZE field.
	UART_MEM_CONF_TX_SIZE_Pos = 0x4
	// Bit mask of TX_SIZE field.
	UART_MEM_CONF_TX_SIZE_Msk = 0x70
	// Position of RX_FLOW_THRHD field.
	UART_MEM_CONF_RX_FLOW_THRHD_Pos = 0x7
	// Bit mask of RX_FLOW_THRHD field.
	UART_MEM_CONF_RX_FLOW_THRHD_Msk = 0xff80
	// Position of RX_TOUT_THRHD field.
	UART_MEM_CONF_RX_TOUT_THRHD_Pos = 0x10
	// Bit mask of RX_TOUT_THRHD field.
	UART_MEM_CONF_RX_TOUT_THRHD_Msk = 0x3ff0000
	// Position of MEM_FORCE_PD field.
	UART_MEM_CONF_MEM_FORCE_PD_Pos = 0x1a
	// Bit mask of MEM_FORCE_PD field.
	UART_MEM_CONF_MEM_FORCE_PD_Msk = 0x4000000
	// Bit MEM_FORCE_PD.
	UART_MEM_CONF_MEM_FORCE_PD = 0x4000000
	// Position of MEM_FORCE_PU field.
	UART_MEM_CONF_MEM_FORCE_PU_Pos = 0x1b
	// Bit mask of MEM_FORCE_PU field.
	UART_MEM_CONF_MEM_FORCE_PU_Msk = 0x8000000
	// Bit MEM_FORCE_PU.
	UART_MEM_CONF_MEM_FORCE_PU = 0x8000000

	// MEM_TX_STATUS: Tx-FIFO write and read offset address.
	// Position of APB_TX_WADDR field.
	UART_MEM_TX_STATUS_APB_TX_WADDR_Pos = 0x0
	// Bit mask of APB_TX_WADDR field.
	UART_MEM_TX_STATUS_APB_TX_WADDR_Msk = 0x3ff
	// Position of TX_RADDR field.
	UART_MEM_TX_STATUS_TX_RADDR_Pos = 0xb
	// Bit mask of TX_RADDR field.
	UART_MEM_TX_STATUS_TX_RADDR_Msk = 0x1ff800

	// MEM_RX_STATUS: Rx-FIFO write and read offset address.
	// Position of APB_RX_RADDR field.
	UART_MEM_RX_STATUS_APB_RX_RADDR_Pos = 0x0
	// Bit mask of APB_RX_RADDR field.
	UART_MEM_RX_STATUS_APB_RX_RADDR_Msk = 0x3ff
	// Position of RX_WADDR field.
	UART_MEM_RX_STATUS_RX_WADDR_Pos = 0xb
	// Bit mask of RX_WADDR field.
	UART_MEM_RX_STATUS_RX_WADDR_Msk = 0x1ff800

	// FSM_STATUS: UART transmit and receive status.
	// Position of ST_URX_OUT field.
	UART_FSM_STATUS_ST_URX_OUT_Pos = 0x0
	// Bit mask of ST_URX_OUT field.
	UART_FSM_STATUS_ST_URX_OUT_Msk = 0xf
	// Position of ST_UTX_OUT field.
	UART_FSM_STATUS_ST_UTX_OUT_Pos = 0x4
	// Bit mask of ST_UTX_OUT field.
	UART_FSM_STATUS_ST_UTX_OUT_Msk = 0xf0

	// POSPULSE: Autobaud high pulse register
	// Position of POSEDGE_MIN_CNT field.
	UART_POSPULSE_POSEDGE_MIN_CNT_Pos = 0x0
	// Bit mask of POSEDGE_MIN_CNT field.
	UART_POSPULSE_POSEDGE_MIN_CNT_Msk = 0xfff

	// NEGPULSE: Autobaud low pulse register
	// Position of NEGEDGE_MIN_CNT field.
	UART_NEGPULSE_NEGEDGE_MIN_CNT_Pos = 0x0
	// Bit mask of NEGEDGE_MIN_CNT field.
	UART_NEGPULSE_NEGEDGE_MIN_CNT_Msk = 0xfff

	// CLK_CONF: UART core clock configuration
	// Position of SCLK_DIV_B field.
	UART_CLK_CONF_SCLK_DIV_B_Pos = 0x0
	// Bit mask of SCLK_DIV_B field.
	UART_CLK_CONF_SCLK_DIV_B_Msk = 0x3f
	// Position of SCLK_DIV_A field.
	UART_CLK_CONF_SCLK_DIV_A_Pos = 0x6
	// Bit mask of SCLK_DIV_A field.
	UART_CLK_CONF_SCLK_DIV_A_Msk = 0xfc0
	// Position of SCLK_DIV_NUM field.
	UART_CLK_CONF_SCLK_DIV_NUM_Pos = 0xc
	// Bit mask of SCLK_DIV_NUM field.
	UART_CLK_CONF_SCLK_DIV_NUM_Msk = 0xff000
	// Position of SCLK_SEL field.
	UART_CLK_CONF_SCLK_SEL_Pos = 0x14
	// Bit mask of SCLK_SEL field.
	UART_CLK_CONF_SCLK_SEL_Msk = 0x300000
	// Position of SCLK_EN field.
	UART_CLK_CONF_SCLK_EN_Pos = 0x16
	// Bit mask of SCLK_EN field.
	UART_CLK_CONF_SCLK_EN_Msk = 0x400000
	// Bit SCLK_EN.
	UART_CLK_CONF_SCLK_EN = 0x400000
	// Position of RST_CORE field.
	UART_CLK_CONF_RST_CORE_Pos = 0x17
	// Bit mask of RST_CORE field.
	UART_CLK_CONF_RST_CORE_Msk = 0x800000
	// Bit RST_CORE.
	UART_CLK_CONF_RST_CORE = 0x800000
	// Position of TX_SCLK_EN field.
	UART_CLK_CONF_TX_SCLK_EN_Pos = 0x18
	// Bit mask of TX_SCLK_EN field.
	UART_CLK_CONF_TX_SCLK_EN_Msk = 0x1000000
	// Bit TX_SCLK_EN.
	UART_CLK_CONF_TX_SCLK_EN = 0x1000000
	// Position of RX_SCLK_EN field.
	UART_CLK_CONF_RX_SCLK_EN_Pos = 0x19
	// Bit mask of RX_SCLK_EN field.
	UART_CLK_CONF_RX_SCLK_EN_Msk = 0x2000000
	// Bit RX_SCLK_EN.
	UART_CLK_CONF_RX_SCLK_EN = 0x2000000
	// Position of TX_RST_CORE field.
	UART_CLK_CONF_TX_RST_CORE_Pos = 0x1a
	// Bit mask of TX_RST_CORE field.
	UART_CLK_CONF_TX_RST_CORE_Msk = 0x4000000
	// Bit TX_RST_CORE.
	UART_CLK_CONF_TX_RST_CORE = 0x4000000
	// Position of RX_RST_CORE field.
	UART_CLK_CONF_RX_RST_CORE_Pos = 0x1b
	// Bit mask of RX_RST_CORE field.
	UART_CLK_CONF_RX_RST_CORE_Msk = 0x8000000
	// Bit RX_RST_CORE.
	UART_CLK_CONF_RX_RST_CORE = 0x8000000

	// DATE: UART Version register
	// Position of DATE field.
	UART_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	UART_DATE_DATE_Msk = 0xffffffff

	// ID: UART ID register
	// Position of ID field.
	UART_ID_ID_Pos = 0x0
	// Bit mask of ID field.
	UART_ID_ID_Msk = 0x3fffffff
	// Position of HIGH_SPEED field.
	UART_ID_HIGH_SPEED_Pos = 0x1e
	// Bit mask of HIGH_SPEED field.
	UART_ID_HIGH_SPEED_Msk = 0x40000000
	// Bit HIGH_SPEED.
	UART_ID_HIGH_SPEED = 0x40000000
	// Position of REG_UPDATE field.
	UART_ID_REG_UPDATE_Pos = 0x1f
	// Bit mask of REG_UPDATE field.
	UART_ID_REG_UPDATE_Msk = 0x80000000
	// Bit REG_UPDATE.
	UART_ID_REG_UPDATE = 0x80000000
)

// Bitfields for UHCI0: Peripheral UHCI
const (
	// CONF0: a
	// Position of TX_RST field.
	UHCI_CONF0_TX_RST_Pos = 0x0
	// Bit mask of TX_RST field.
	UHCI_CONF0_TX_RST_Msk = 0x1
	// Bit TX_RST.
	UHCI_CONF0_TX_RST = 0x1
	// Position of RX_RST field.
	UHCI_CONF0_RX_RST_Pos = 0x1
	// Bit mask of RX_RST field.
	UHCI_CONF0_RX_RST_Msk = 0x2
	// Bit RX_RST.
	UHCI_CONF0_RX_RST = 0x2
	// Position of UART0_CE field.
	UHCI_CONF0_UART0_CE_Pos = 0x2
	// Bit mask of UART0_CE field.
	UHCI_CONF0_UART0_CE_Msk = 0x4
	// Bit UART0_CE.
	UHCI_CONF0_UART0_CE = 0x4
	// Position of UART1_CE field.
	UHCI_CONF0_UART1_CE_Pos = 0x3
	// Bit mask of UART1_CE field.
	UHCI_CONF0_UART1_CE_Msk = 0x8
	// Bit UART1_CE.
	UHCI_CONF0_UART1_CE = 0x8
	// Position of SEPER_EN field.
	UHCI_CONF0_SEPER_EN_Pos = 0x5
	// Bit mask of SEPER_EN field.
	UHCI_CONF0_SEPER_EN_Msk = 0x20
	// Bit SEPER_EN.
	UHCI_CONF0_SEPER_EN = 0x20
	// Position of HEAD_EN field.
	UHCI_CONF0_HEAD_EN_Pos = 0x6
	// Bit mask of HEAD_EN field.
	UHCI_CONF0_HEAD_EN_Msk = 0x40
	// Bit HEAD_EN.
	UHCI_CONF0_HEAD_EN = 0x40
	// Position of CRC_REC_EN field.
	UHCI_CONF0_CRC_REC_EN_Pos = 0x7
	// Bit mask of CRC_REC_EN field.
	UHCI_CONF0_CRC_REC_EN_Msk = 0x80
	// Bit CRC_REC_EN.
	UHCI_CONF0_CRC_REC_EN = 0x80
	// Position of UART_IDLE_EOF_EN field.
	UHCI_CONF0_UART_IDLE_EOF_EN_Pos = 0x8
	// Bit mask of UART_IDLE_EOF_EN field.
	UHCI_CONF0_UART_IDLE_EOF_EN_Msk = 0x100
	// Bit UART_IDLE_EOF_EN.
	UHCI_CONF0_UART_IDLE_EOF_EN = 0x100
	// Position of LEN_EOF_EN field.
	UHCI_CONF0_LEN_EOF_EN_Pos = 0x9
	// Bit mask of LEN_EOF_EN field.
	UHCI_CONF0_LEN_EOF_EN_Msk = 0x200
	// Bit LEN_EOF_EN.
	UHCI_CONF0_LEN_EOF_EN = 0x200
	// Position of ENCODE_CRC_EN field.
	UHCI_CONF0_ENCODE_CRC_EN_Pos = 0xa
	// Bit mask of ENCODE_CRC_EN field.
	UHCI_CONF0_ENCODE_CRC_EN_Msk = 0x400
	// Bit ENCODE_CRC_EN.
	UHCI_CONF0_ENCODE_CRC_EN = 0x400
	// Position of CLK_EN field.
	UHCI_CONF0_CLK_EN_Pos = 0xb
	// Bit mask of CLK_EN field.
	UHCI_CONF0_CLK_EN_Msk = 0x800
	// Bit CLK_EN.
	UHCI_CONF0_CLK_EN = 0x800
	// Position of UART_RX_BRK_EOF_EN field.
	UHCI_CONF0_UART_RX_BRK_EOF_EN_Pos = 0xc
	// Bit mask of UART_RX_BRK_EOF_EN field.
	UHCI_CONF0_UART_RX_BRK_EOF_EN_Msk = 0x1000
	// Bit UART_RX_BRK_EOF_EN.
	UHCI_CONF0_UART_RX_BRK_EOF_EN = 0x1000

	// INT_RAW: a
	// Position of RX_START_INT_RAW field.
	UHCI_INT_RAW_RX_START_INT_RAW_Pos = 0x0
	// Bit mask of RX_START_INT_RAW field.
	UHCI_INT_RAW_RX_START_INT_RAW_Msk = 0x1
	// Bit RX_START_INT_RAW.
	UHCI_INT_RAW_RX_START_INT_RAW = 0x1
	// Position of TX_START_INT_RAW field.
	UHCI_INT_RAW_TX_START_INT_RAW_Pos = 0x1
	// Bit mask of TX_START_INT_RAW field.
	UHCI_INT_RAW_TX_START_INT_RAW_Msk = 0x2
	// Bit TX_START_INT_RAW.
	UHCI_INT_RAW_TX_START_INT_RAW = 0x2
	// Position of RX_HUNG_INT_RAW field.
	UHCI_INT_RAW_RX_HUNG_INT_RAW_Pos = 0x2
	// Bit mask of RX_HUNG_INT_RAW field.
	UHCI_INT_RAW_RX_HUNG_INT_RAW_Msk = 0x4
	// Bit RX_HUNG_INT_RAW.
	UHCI_INT_RAW_RX_HUNG_INT_RAW = 0x4
	// Position of TX_HUNG_INT_RAW field.
	UHCI_INT_RAW_TX_HUNG_INT_RAW_Pos = 0x3
	// Bit mask of TX_HUNG_INT_RAW field.
	UHCI_INT_RAW_TX_HUNG_INT_RAW_Msk = 0x8
	// Bit TX_HUNG_INT_RAW.
	UHCI_INT_RAW_TX_HUNG_INT_RAW = 0x8
	// Position of SEND_S_REG_Q_INT_RAW field.
	UHCI_INT_RAW_SEND_S_REG_Q_INT_RAW_Pos = 0x4
	// Bit mask of SEND_S_REG_Q_INT_RAW field.
	UHCI_INT_RAW_SEND_S_REG_Q_INT_RAW_Msk = 0x10
	// Bit SEND_S_REG_Q_INT_RAW.
	UHCI_INT_RAW_SEND_S_REG_Q_INT_RAW = 0x10
	// Position of SEND_A_REG_Q_INT_RAW field.
	UHCI_INT_RAW_SEND_A_REG_Q_INT_RAW_Pos = 0x5
	// Bit mask of SEND_A_REG_Q_INT_RAW field.
	UHCI_INT_RAW_SEND_A_REG_Q_INT_RAW_Msk = 0x20
	// Bit SEND_A_REG_Q_INT_RAW.
	UHCI_INT_RAW_SEND_A_REG_Q_INT_RAW = 0x20
	// Position of OUT_EOF_INT_RAW field.
	UHCI_INT_RAW_OUT_EOF_INT_RAW_Pos = 0x6
	// Bit mask of OUT_EOF_INT_RAW field.
	UHCI_INT_RAW_OUT_EOF_INT_RAW_Msk = 0x40
	// Bit OUT_EOF_INT_RAW.
	UHCI_INT_RAW_OUT_EOF_INT_RAW = 0x40
	// Position of APP_CTRL0_INT_RAW field.
	UHCI_INT_RAW_APP_CTRL0_INT_RAW_Pos = 0x7
	// Bit mask of APP_CTRL0_INT_RAW field.
	UHCI_INT_RAW_APP_CTRL0_INT_RAW_Msk = 0x80
	// Bit APP_CTRL0_INT_RAW.
	UHCI_INT_RAW_APP_CTRL0_INT_RAW = 0x80
	// Position of APP_CTRL1_INT_RAW field.
	UHCI_INT_RAW_APP_CTRL1_INT_RAW_Pos = 0x8
	// Bit mask of APP_CTRL1_INT_RAW field.
	UHCI_INT_RAW_APP_CTRL1_INT_RAW_Msk = 0x100
	// Bit APP_CTRL1_INT_RAW.
	UHCI_INT_RAW_APP_CTRL1_INT_RAW = 0x100

	// INT_ST: a
	// Position of RX_START_INT_ST field.
	UHCI_INT_ST_RX_START_INT_ST_Pos = 0x0
	// Bit mask of RX_START_INT_ST field.
	UHCI_INT_ST_RX_START_INT_ST_Msk = 0x1
	// Bit RX_START_INT_ST.
	UHCI_INT_ST_RX_START_INT_ST = 0x1
	// Position of TX_START_INT_ST field.
	UHCI_INT_ST_TX_START_INT_ST_Pos = 0x1
	// Bit mask of TX_START_INT_ST field.
	UHCI_INT_ST_TX_START_INT_ST_Msk = 0x2
	// Bit TX_START_INT_ST.
	UHCI_INT_ST_TX_START_INT_ST = 0x2
	// Position of RX_HUNG_INT_ST field.
	UHCI_INT_ST_RX_HUNG_INT_ST_Pos = 0x2
	// Bit mask of RX_HUNG_INT_ST field.
	UHCI_INT_ST_RX_HUNG_INT_ST_Msk = 0x4
	// Bit RX_HUNG_INT_ST.
	UHCI_INT_ST_RX_HUNG_INT_ST = 0x4
	// Position of TX_HUNG_INT_ST field.
	UHCI_INT_ST_TX_HUNG_INT_ST_Pos = 0x3
	// Bit mask of TX_HUNG_INT_ST field.
	UHCI_INT_ST_TX_HUNG_INT_ST_Msk = 0x8
	// Bit TX_HUNG_INT_ST.
	UHCI_INT_ST_TX_HUNG_INT_ST = 0x8
	// Position of SEND_S_REG_Q_INT_ST field.
	UHCI_INT_ST_SEND_S_REG_Q_INT_ST_Pos = 0x4
	// Bit mask of SEND_S_REG_Q_INT_ST field.
	UHCI_INT_ST_SEND_S_REG_Q_INT_ST_Msk = 0x10
	// Bit SEND_S_REG_Q_INT_ST.
	UHCI_INT_ST_SEND_S_REG_Q_INT_ST = 0x10
	// Position of SEND_A_REG_Q_INT_ST field.
	UHCI_INT_ST_SEND_A_REG_Q_INT_ST_Pos = 0x5
	// Bit mask of SEND_A_REG_Q_INT_ST field.
	UHCI_INT_ST_SEND_A_REG_Q_INT_ST_Msk = 0x20
	// Bit SEND_A_REG_Q_INT_ST.
	UHCI_INT_ST_SEND_A_REG_Q_INT_ST = 0x20
	// Position of OUTLINK_EOF_ERR_INT_ST field.
	UHCI_INT_ST_OUTLINK_EOF_ERR_INT_ST_Pos = 0x6
	// Bit mask of OUTLINK_EOF_ERR_INT_ST field.
	UHCI_INT_ST_OUTLINK_EOF_ERR_INT_ST_Msk = 0x40
	// Bit OUTLINK_EOF_ERR_INT_ST.
	UHCI_INT_ST_OUTLINK_EOF_ERR_INT_ST = 0x40
	// Position of APP_CTRL0_INT_ST field.
	UHCI_INT_ST_APP_CTRL0_INT_ST_Pos = 0x7
	// Bit mask of APP_CTRL0_INT_ST field.
	UHCI_INT_ST_APP_CTRL0_INT_ST_Msk = 0x80
	// Bit APP_CTRL0_INT_ST.
	UHCI_INT_ST_APP_CTRL0_INT_ST = 0x80
	// Position of APP_CTRL1_INT_ST field.
	UHCI_INT_ST_APP_CTRL1_INT_ST_Pos = 0x8
	// Bit mask of APP_CTRL1_INT_ST field.
	UHCI_INT_ST_APP_CTRL1_INT_ST_Msk = 0x100
	// Bit APP_CTRL1_INT_ST.
	UHCI_INT_ST_APP_CTRL1_INT_ST = 0x100

	// INT_ENA: a
	// Position of RX_START_INT_ENA field.
	UHCI_INT_ENA_RX_START_INT_ENA_Pos = 0x0
	// Bit mask of RX_START_INT_ENA field.
	UHCI_INT_ENA_RX_START_INT_ENA_Msk = 0x1
	// Bit RX_START_INT_ENA.
	UHCI_INT_ENA_RX_START_INT_ENA = 0x1
	// Position of TX_START_INT_ENA field.
	UHCI_INT_ENA_TX_START_INT_ENA_Pos = 0x1
	// Bit mask of TX_START_INT_ENA field.
	UHCI_INT_ENA_TX_START_INT_ENA_Msk = 0x2
	// Bit TX_START_INT_ENA.
	UHCI_INT_ENA_TX_START_INT_ENA = 0x2
	// Position of RX_HUNG_INT_ENA field.
	UHCI_INT_ENA_RX_HUNG_INT_ENA_Pos = 0x2
	// Bit mask of RX_HUNG_INT_ENA field.
	UHCI_INT_ENA_RX_HUNG_INT_ENA_Msk = 0x4
	// Bit RX_HUNG_INT_ENA.
	UHCI_INT_ENA_RX_HUNG_INT_ENA = 0x4
	// Position of TX_HUNG_INT_ENA field.
	UHCI_INT_ENA_TX_HUNG_INT_ENA_Pos = 0x3
	// Bit mask of TX_HUNG_INT_ENA field.
	UHCI_INT_ENA_TX_HUNG_INT_ENA_Msk = 0x8
	// Bit TX_HUNG_INT_ENA.
	UHCI_INT_ENA_TX_HUNG_INT_ENA = 0x8
	// Position of SEND_S_REG_Q_INT_ENA field.
	UHCI_INT_ENA_SEND_S_REG_Q_INT_ENA_Pos = 0x4
	// Bit mask of SEND_S_REG_Q_INT_ENA field.
	UHCI_INT_ENA_SEND_S_REG_Q_INT_ENA_Msk = 0x10
	// Bit SEND_S_REG_Q_INT_ENA.
	UHCI_INT_ENA_SEND_S_REG_Q_INT_ENA = 0x10
	// Position of SEND_A_REG_Q_INT_ENA field.
	UHCI_INT_ENA_SEND_A_REG_Q_INT_ENA_Pos = 0x5
	// Bit mask of SEND_A_REG_Q_INT_ENA field.
	UHCI_INT_ENA_SEND_A_REG_Q_INT_ENA_Msk = 0x20
	// Bit SEND_A_REG_Q_INT_ENA.
	UHCI_INT_ENA_SEND_A_REG_Q_INT_ENA = 0x20
	// Position of OUTLINK_EOF_ERR_INT_ENA field.
	UHCI_INT_ENA_OUTLINK_EOF_ERR_INT_ENA_Pos = 0x6
	// Bit mask of OUTLINK_EOF_ERR_INT_ENA field.
	UHCI_INT_ENA_OUTLINK_EOF_ERR_INT_ENA_Msk = 0x40
	// Bit OUTLINK_EOF_ERR_INT_ENA.
	UHCI_INT_ENA_OUTLINK_EOF_ERR_INT_ENA = 0x40
	// Position of APP_CTRL0_INT_ENA field.
	UHCI_INT_ENA_APP_CTRL0_INT_ENA_Pos = 0x7
	// Bit mask of APP_CTRL0_INT_ENA field.
	UHCI_INT_ENA_APP_CTRL0_INT_ENA_Msk = 0x80
	// Bit APP_CTRL0_INT_ENA.
	UHCI_INT_ENA_APP_CTRL0_INT_ENA = 0x80
	// Position of APP_CTRL1_INT_ENA field.
	UHCI_INT_ENA_APP_CTRL1_INT_ENA_Pos = 0x8
	// Bit mask of APP_CTRL1_INT_ENA field.
	UHCI_INT_ENA_APP_CTRL1_INT_ENA_Msk = 0x100
	// Bit APP_CTRL1_INT_ENA.
	UHCI_INT_ENA_APP_CTRL1_INT_ENA = 0x100

	// INT_CLR: a
	// Position of RX_START_INT_CLR field.
	UHCI_INT_CLR_RX_START_INT_CLR_Pos = 0x0
	// Bit mask of RX_START_INT_CLR field.
	UHCI_INT_CLR_RX_START_INT_CLR_Msk = 0x1
	// Bit RX_START_INT_CLR.
	UHCI_INT_CLR_RX_START_INT_CLR = 0x1
	// Position of TX_START_INT_CLR field.
	UHCI_INT_CLR_TX_START_INT_CLR_Pos = 0x1
	// Bit mask of TX_START_INT_CLR field.
	UHCI_INT_CLR_TX_START_INT_CLR_Msk = 0x2
	// Bit TX_START_INT_CLR.
	UHCI_INT_CLR_TX_START_INT_CLR = 0x2
	// Position of RX_HUNG_INT_CLR field.
	UHCI_INT_CLR_RX_HUNG_INT_CLR_Pos = 0x2
	// Bit mask of RX_HUNG_INT_CLR field.
	UHCI_INT_CLR_RX_HUNG_INT_CLR_Msk = 0x4
	// Bit RX_HUNG_INT_CLR.
	UHCI_INT_CLR_RX_HUNG_INT_CLR = 0x4
	// Position of TX_HUNG_INT_CLR field.
	UHCI_INT_CLR_TX_HUNG_INT_CLR_Pos = 0x3
	// Bit mask of TX_HUNG_INT_CLR field.
	UHCI_INT_CLR_TX_HUNG_INT_CLR_Msk = 0x8
	// Bit TX_HUNG_INT_CLR.
	UHCI_INT_CLR_TX_HUNG_INT_CLR = 0x8
	// Position of SEND_S_REG_Q_INT_CLR field.
	UHCI_INT_CLR_SEND_S_REG_Q_INT_CLR_Pos = 0x4
	// Bit mask of SEND_S_REG_Q_INT_CLR field.
	UHCI_INT_CLR_SEND_S_REG_Q_INT_CLR_Msk = 0x10
	// Bit SEND_S_REG_Q_INT_CLR.
	UHCI_INT_CLR_SEND_S_REG_Q_INT_CLR = 0x10
	// Position of SEND_A_REG_Q_INT_CLR field.
	UHCI_INT_CLR_SEND_A_REG_Q_INT_CLR_Pos = 0x5
	// Bit mask of SEND_A_REG_Q_INT_CLR field.
	UHCI_INT_CLR_SEND_A_REG_Q_INT_CLR_Msk = 0x20
	// Bit SEND_A_REG_Q_INT_CLR.
	UHCI_INT_CLR_SEND_A_REG_Q_INT_CLR = 0x20
	// Position of OUTLINK_EOF_ERR_INT_CLR field.
	UHCI_INT_CLR_OUTLINK_EOF_ERR_INT_CLR_Pos = 0x6
	// Bit mask of OUTLINK_EOF_ERR_INT_CLR field.
	UHCI_INT_CLR_OUTLINK_EOF_ERR_INT_CLR_Msk = 0x40
	// Bit OUTLINK_EOF_ERR_INT_CLR.
	UHCI_INT_CLR_OUTLINK_EOF_ERR_INT_CLR = 0x40
	// Position of APP_CTRL0_INT_CLR field.
	UHCI_INT_CLR_APP_CTRL0_INT_CLR_Pos = 0x7
	// Bit mask of APP_CTRL0_INT_CLR field.
	UHCI_INT_CLR_APP_CTRL0_INT_CLR_Msk = 0x80
	// Bit APP_CTRL0_INT_CLR.
	UHCI_INT_CLR_APP_CTRL0_INT_CLR = 0x80
	// Position of APP_CTRL1_INT_CLR field.
	UHCI_INT_CLR_APP_CTRL1_INT_CLR_Pos = 0x8
	// Bit mask of APP_CTRL1_INT_CLR field.
	UHCI_INT_CLR_APP_CTRL1_INT_CLR_Msk = 0x100
	// Bit APP_CTRL1_INT_CLR.
	UHCI_INT_CLR_APP_CTRL1_INT_CLR = 0x100

	// CONF1: a
	// Position of CHECK_SUM_EN field.
	UHCI_CONF1_CHECK_SUM_EN_Pos = 0x0
	// Bit mask of CHECK_SUM_EN field.
	UHCI_CONF1_CHECK_SUM_EN_Msk = 0x1
	// Bit CHECK_SUM_EN.
	UHCI_CONF1_CHECK_SUM_EN = 0x1
	// Position of CHECK_SEQ_EN field.
	UHCI_CONF1_CHECK_SEQ_EN_Pos = 0x1
	// Bit mask of CHECK_SEQ_EN field.
	UHCI_CONF1_CHECK_SEQ_EN_Msk = 0x2
	// Bit CHECK_SEQ_EN.
	UHCI_CONF1_CHECK_SEQ_EN = 0x2
	// Position of CRC_DISABLE field.
	UHCI_CONF1_CRC_DISABLE_Pos = 0x2
	// Bit mask of CRC_DISABLE field.
	UHCI_CONF1_CRC_DISABLE_Msk = 0x4
	// Bit CRC_DISABLE.
	UHCI_CONF1_CRC_DISABLE = 0x4
	// Position of SAVE_HEAD field.
	UHCI_CONF1_SAVE_HEAD_Pos = 0x3
	// Bit mask of SAVE_HEAD field.
	UHCI_CONF1_SAVE_HEAD_Msk = 0x8
	// Bit SAVE_HEAD.
	UHCI_CONF1_SAVE_HEAD = 0x8
	// Position of TX_CHECK_SUM_RE field.
	UHCI_CONF1_TX_CHECK_SUM_RE_Pos = 0x4
	// Bit mask of TX_CHECK_SUM_RE field.
	UHCI_CONF1_TX_CHECK_SUM_RE_Msk = 0x10
	// Bit TX_CHECK_SUM_RE.
	UHCI_CONF1_TX_CHECK_SUM_RE = 0x10
	// Position of TX_ACK_NUM_RE field.
	UHCI_CONF1_TX_ACK_NUM_RE_Pos = 0x5
	// Bit mask of TX_ACK_NUM_RE field.
	UHCI_CONF1_TX_ACK_NUM_RE_Msk = 0x20
	// Bit TX_ACK_NUM_RE.
	UHCI_CONF1_TX_ACK_NUM_RE = 0x20
	// Position of WAIT_SW_START field.
	UHCI_CONF1_WAIT_SW_START_Pos = 0x7
	// Bit mask of WAIT_SW_START field.
	UHCI_CONF1_WAIT_SW_START_Msk = 0x80
	// Bit WAIT_SW_START.
	UHCI_CONF1_WAIT_SW_START = 0x80
	// Position of SW_START field.
	UHCI_CONF1_SW_START_Pos = 0x8
	// Bit mask of SW_START field.
	UHCI_CONF1_SW_START_Msk = 0x100
	// Bit SW_START.
	UHCI_CONF1_SW_START = 0x100

	// STATE0: a
	// Position of RX_ERR_CAUSE field.
	UHCI_STATE0_RX_ERR_CAUSE_Pos = 0x0
	// Bit mask of RX_ERR_CAUSE field.
	UHCI_STATE0_RX_ERR_CAUSE_Msk = 0x7
	// Position of DECODE_STATE field.
	UHCI_STATE0_DECODE_STATE_Pos = 0x3
	// Bit mask of DECODE_STATE field.
	UHCI_STATE0_DECODE_STATE_Msk = 0x38

	// STATE1: a
	// Position of ENCODE_STATE field.
	UHCI_STATE1_ENCODE_STATE_Pos = 0x0
	// Bit mask of ENCODE_STATE field.
	UHCI_STATE1_ENCODE_STATE_Msk = 0x7

	// ESCAPE_CONF: a
	// Position of TX_C0_ESC_EN field.
	UHCI_ESCAPE_CONF_TX_C0_ESC_EN_Pos = 0x0
	// Bit mask of TX_C0_ESC_EN field.
	UHCI_ESCAPE_CONF_TX_C0_ESC_EN_Msk = 0x1
	// Bit TX_C0_ESC_EN.
	UHCI_ESCAPE_CONF_TX_C0_ESC_EN = 0x1
	// Position of TX_DB_ESC_EN field.
	UHCI_ESCAPE_CONF_TX_DB_ESC_EN_Pos = 0x1
	// Bit mask of TX_DB_ESC_EN field.
	UHCI_ESCAPE_CONF_TX_DB_ESC_EN_Msk = 0x2
	// Bit TX_DB_ESC_EN.
	UHCI_ESCAPE_CONF_TX_DB_ESC_EN = 0x2
	// Position of TX_11_ESC_EN field.
	UHCI_ESCAPE_CONF_TX_11_ESC_EN_Pos = 0x2
	// Bit mask of TX_11_ESC_EN field.
	UHCI_ESCAPE_CONF_TX_11_ESC_EN_Msk = 0x4
	// Bit TX_11_ESC_EN.
	UHCI_ESCAPE_CONF_TX_11_ESC_EN = 0x4
	// Position of TX_13_ESC_EN field.
	UHCI_ESCAPE_CONF_TX_13_ESC_EN_Pos = 0x3
	// Bit mask of TX_13_ESC_EN field.
	UHCI_ESCAPE_CONF_TX_13_ESC_EN_Msk = 0x8
	// Bit TX_13_ESC_EN.
	UHCI_ESCAPE_CONF_TX_13_ESC_EN = 0x8
	// Position of RX_C0_ESC_EN field.
	UHCI_ESCAPE_CONF_RX_C0_ESC_EN_Pos = 0x4
	// Bit mask of RX_C0_ESC_EN field.
	UHCI_ESCAPE_CONF_RX_C0_ESC_EN_Msk = 0x10
	// Bit RX_C0_ESC_EN.
	UHCI_ESCAPE_CONF_RX_C0_ESC_EN = 0x10
	// Position of RX_DB_ESC_EN field.
	UHCI_ESCAPE_CONF_RX_DB_ESC_EN_Pos = 0x5
	// Bit mask of RX_DB_ESC_EN field.
	UHCI_ESCAPE_CONF_RX_DB_ESC_EN_Msk = 0x20
	// Bit RX_DB_ESC_EN.
	UHCI_ESCAPE_CONF_RX_DB_ESC_EN = 0x20
	// Position of RX_11_ESC_EN field.
	UHCI_ESCAPE_CONF_RX_11_ESC_EN_Pos = 0x6
	// Bit mask of RX_11_ESC_EN field.
	UHCI_ESCAPE_CONF_RX_11_ESC_EN_Msk = 0x40
	// Bit RX_11_ESC_EN.
	UHCI_ESCAPE_CONF_RX_11_ESC_EN = 0x40
	// Position of RX_13_ESC_EN field.
	UHCI_ESCAPE_CONF_RX_13_ESC_EN_Pos = 0x7
	// Bit mask of RX_13_ESC_EN field.
	UHCI_ESCAPE_CONF_RX_13_ESC_EN_Msk = 0x80
	// Bit RX_13_ESC_EN.
	UHCI_ESCAPE_CONF_RX_13_ESC_EN = 0x80

	// HUNG_CONF: a
	// Position of TXFIFO_TIMEOUT field.
	UHCI_HUNG_CONF_TXFIFO_TIMEOUT_Pos = 0x0
	// Bit mask of TXFIFO_TIMEOUT field.
	UHCI_HUNG_CONF_TXFIFO_TIMEOUT_Msk = 0xff
	// Position of TXFIFO_TIMEOUT_SHIFT field.
	UHCI_HUNG_CONF_TXFIFO_TIMEOUT_SHIFT_Pos = 0x8
	// Bit mask of TXFIFO_TIMEOUT_SHIFT field.
	UHCI_HUNG_CONF_TXFIFO_TIMEOUT_SHIFT_Msk = 0x700
	// Position of TXFIFO_TIMEOUT_ENA field.
	UHCI_HUNG_CONF_TXFIFO_TIMEOUT_ENA_Pos = 0xb
	// Bit mask of TXFIFO_TIMEOUT_ENA field.
	UHCI_HUNG_CONF_TXFIFO_TIMEOUT_ENA_Msk = 0x800
	// Bit TXFIFO_TIMEOUT_ENA.
	UHCI_HUNG_CONF_TXFIFO_TIMEOUT_ENA = 0x800
	// Position of RXFIFO_TIMEOUT field.
	UHCI_HUNG_CONF_RXFIFO_TIMEOUT_Pos = 0xc
	// Bit mask of RXFIFO_TIMEOUT field.
	UHCI_HUNG_CONF_RXFIFO_TIMEOUT_Msk = 0xff000
	// Position of RXFIFO_TIMEOUT_SHIFT field.
	UHCI_HUNG_CONF_RXFIFO_TIMEOUT_SHIFT_Pos = 0x14
	// Bit mask of RXFIFO_TIMEOUT_SHIFT field.
	UHCI_HUNG_CONF_RXFIFO_TIMEOUT_SHIFT_Msk = 0x700000
	// Position of RXFIFO_TIMEOUT_ENA field.
	UHCI_HUNG_CONF_RXFIFO_TIMEOUT_ENA_Pos = 0x17
	// Bit mask of RXFIFO_TIMEOUT_ENA field.
	UHCI_HUNG_CONF_RXFIFO_TIMEOUT_ENA_Msk = 0x800000
	// Bit RXFIFO_TIMEOUT_ENA.
	UHCI_HUNG_CONF_RXFIFO_TIMEOUT_ENA = 0x800000

	// ACK_NUM: a
	// Position of ACK_NUM field.
	UHCI_ACK_NUM_ACK_NUM_Pos = 0x0
	// Bit mask of ACK_NUM field.
	UHCI_ACK_NUM_ACK_NUM_Msk = 0x7
	// Position of LOAD field.
	UHCI_ACK_NUM_LOAD_Pos = 0x3
	// Bit mask of LOAD field.
	UHCI_ACK_NUM_LOAD_Msk = 0x8
	// Bit LOAD.
	UHCI_ACK_NUM_LOAD = 0x8

	// RX_HEAD: a
	// Position of RX_HEAD field.
	UHCI_RX_HEAD_RX_HEAD_Pos = 0x0
	// Bit mask of RX_HEAD field.
	UHCI_RX_HEAD_RX_HEAD_Msk = 0xffffffff

	// QUICK_SENT: a
	// Position of SINGLE_SEND_NUM field.
	UHCI_QUICK_SENT_SINGLE_SEND_NUM_Pos = 0x0
	// Bit mask of SINGLE_SEND_NUM field.
	UHCI_QUICK_SENT_SINGLE_SEND_NUM_Msk = 0x7
	// Position of SINGLE_SEND_EN field.
	UHCI_QUICK_SENT_SINGLE_SEND_EN_Pos = 0x3
	// Bit mask of SINGLE_SEND_EN field.
	UHCI_QUICK_SENT_SINGLE_SEND_EN_Msk = 0x8
	// Bit SINGLE_SEND_EN.
	UHCI_QUICK_SENT_SINGLE_SEND_EN = 0x8
	// Position of ALWAYS_SEND_NUM field.
	UHCI_QUICK_SENT_ALWAYS_SEND_NUM_Pos = 0x4
	// Bit mask of ALWAYS_SEND_NUM field.
	UHCI_QUICK_SENT_ALWAYS_SEND_NUM_Msk = 0x70
	// Position of ALWAYS_SEND_EN field.
	UHCI_QUICK_SENT_ALWAYS_SEND_EN_Pos = 0x7
	// Bit mask of ALWAYS_SEND_EN field.
	UHCI_QUICK_SENT_ALWAYS_SEND_EN_Msk = 0x80
	// Bit ALWAYS_SEND_EN.
	UHCI_QUICK_SENT_ALWAYS_SEND_EN = 0x80

	// REG_Q0_WORD0: a
	// Position of SEND_Q0_WORD0 field.
	UHCI_REG_Q0_WORD0_SEND_Q0_WORD0_Pos = 0x0
	// Bit mask of SEND_Q0_WORD0 field.
	UHCI_REG_Q0_WORD0_SEND_Q0_WORD0_Msk = 0xffffffff

	// REG_Q0_WORD1: a
	// Position of SEND_Q0_WORD1 field.
	UHCI_REG_Q0_WORD1_SEND_Q0_WORD1_Pos = 0x0
	// Bit mask of SEND_Q0_WORD1 field.
	UHCI_REG_Q0_WORD1_SEND_Q0_WORD1_Msk = 0xffffffff

	// REG_Q1_WORD0: a
	// Position of SEND_Q1_WORD0 field.
	UHCI_REG_Q1_WORD0_SEND_Q1_WORD0_Pos = 0x0
	// Bit mask of SEND_Q1_WORD0 field.
	UHCI_REG_Q1_WORD0_SEND_Q1_WORD0_Msk = 0xffffffff

	// REG_Q1_WORD1: a
	// Position of SEND_Q1_WORD1 field.
	UHCI_REG_Q1_WORD1_SEND_Q1_WORD1_Pos = 0x0
	// Bit mask of SEND_Q1_WORD1 field.
	UHCI_REG_Q1_WORD1_SEND_Q1_WORD1_Msk = 0xffffffff

	// REG_Q2_WORD0: a
	// Position of SEND_Q2_WORD0 field.
	UHCI_REG_Q2_WORD0_SEND_Q2_WORD0_Pos = 0x0
	// Bit mask of SEND_Q2_WORD0 field.
	UHCI_REG_Q2_WORD0_SEND_Q2_WORD0_Msk = 0xffffffff

	// REG_Q2_WORD1: a
	// Position of SEND_Q2_WORD1 field.
	UHCI_REG_Q2_WORD1_SEND_Q2_WORD1_Pos = 0x0
	// Bit mask of SEND_Q2_WORD1 field.
	UHCI_REG_Q2_WORD1_SEND_Q2_WORD1_Msk = 0xffffffff

	// REG_Q3_WORD0: a
	// Position of SEND_Q3_WORD0 field.
	UHCI_REG_Q3_WORD0_SEND_Q3_WORD0_Pos = 0x0
	// Bit mask of SEND_Q3_WORD0 field.
	UHCI_REG_Q3_WORD0_SEND_Q3_WORD0_Msk = 0xffffffff

	// REG_Q3_WORD1: a
	// Position of SEND_Q3_WORD1 field.
	UHCI_REG_Q3_WORD1_SEND_Q3_WORD1_Pos = 0x0
	// Bit mask of SEND_Q3_WORD1 field.
	UHCI_REG_Q3_WORD1_SEND_Q3_WORD1_Msk = 0xffffffff

	// REG_Q4_WORD0: a
	// Position of SEND_Q4_WORD0 field.
	UHCI_REG_Q4_WORD0_SEND_Q4_WORD0_Pos = 0x0
	// Bit mask of SEND_Q4_WORD0 field.
	UHCI_REG_Q4_WORD0_SEND_Q4_WORD0_Msk = 0xffffffff

	// REG_Q4_WORD1: a
	// Position of SEND_Q4_WORD1 field.
	UHCI_REG_Q4_WORD1_SEND_Q4_WORD1_Pos = 0x0
	// Bit mask of SEND_Q4_WORD1 field.
	UHCI_REG_Q4_WORD1_SEND_Q4_WORD1_Msk = 0xffffffff

	// REG_Q5_WORD0: a
	// Position of SEND_Q5_WORD0 field.
	UHCI_REG_Q5_WORD0_SEND_Q5_WORD0_Pos = 0x0
	// Bit mask of SEND_Q5_WORD0 field.
	UHCI_REG_Q5_WORD0_SEND_Q5_WORD0_Msk = 0xffffffff

	// REG_Q5_WORD1: a
	// Position of SEND_Q5_WORD1 field.
	UHCI_REG_Q5_WORD1_SEND_Q5_WORD1_Pos = 0x0
	// Bit mask of SEND_Q5_WORD1 field.
	UHCI_REG_Q5_WORD1_SEND_Q5_WORD1_Msk = 0xffffffff

	// REG_Q6_WORD0: a
	// Position of SEND_Q6_WORD0 field.
	UHCI_REG_Q6_WORD0_SEND_Q6_WORD0_Pos = 0x0
	// Bit mask of SEND_Q6_WORD0 field.
	UHCI_REG_Q6_WORD0_SEND_Q6_WORD0_Msk = 0xffffffff

	// REG_Q6_WORD1: a
	// Position of SEND_Q6_WORD1 field.
	UHCI_REG_Q6_WORD1_SEND_Q6_WORD1_Pos = 0x0
	// Bit mask of SEND_Q6_WORD1 field.
	UHCI_REG_Q6_WORD1_SEND_Q6_WORD1_Msk = 0xffffffff

	// ESC_CONF0: a
	// Position of SEPER_CHAR field.
	UHCI_ESC_CONF0_SEPER_CHAR_Pos = 0x0
	// Bit mask of SEPER_CHAR field.
	UHCI_ESC_CONF0_SEPER_CHAR_Msk = 0xff
	// Position of SEPER_ESC_CHAR0 field.
	UHCI_ESC_CONF0_SEPER_ESC_CHAR0_Pos = 0x8
	// Bit mask of SEPER_ESC_CHAR0 field.
	UHCI_ESC_CONF0_SEPER_ESC_CHAR0_Msk = 0xff00
	// Position of SEPER_ESC_CHAR1 field.
	UHCI_ESC_CONF0_SEPER_ESC_CHAR1_Pos = 0x10
	// Bit mask of SEPER_ESC_CHAR1 field.
	UHCI_ESC_CONF0_SEPER_ESC_CHAR1_Msk = 0xff0000

	// ESC_CONF1: a
	// Position of ESC_SEQ0 field.
	UHCI_ESC_CONF1_ESC_SEQ0_Pos = 0x0
	// Bit mask of ESC_SEQ0 field.
	UHCI_ESC_CONF1_ESC_SEQ0_Msk = 0xff
	// Position of ESC_SEQ0_CHAR0 field.
	UHCI_ESC_CONF1_ESC_SEQ0_CHAR0_Pos = 0x8
	// Bit mask of ESC_SEQ0_CHAR0 field.
	UHCI_ESC_CONF1_ESC_SEQ0_CHAR0_Msk = 0xff00
	// Position of ESC_SEQ0_CHAR1 field.
	UHCI_ESC_CONF1_ESC_SEQ0_CHAR1_Pos = 0x10
	// Bit mask of ESC_SEQ0_CHAR1 field.
	UHCI_ESC_CONF1_ESC_SEQ0_CHAR1_Msk = 0xff0000

	// ESC_CONF2: a
	// Position of ESC_SEQ1 field.
	UHCI_ESC_CONF2_ESC_SEQ1_Pos = 0x0
	// Bit mask of ESC_SEQ1 field.
	UHCI_ESC_CONF2_ESC_SEQ1_Msk = 0xff
	// Position of ESC_SEQ1_CHAR0 field.
	UHCI_ESC_CONF2_ESC_SEQ1_CHAR0_Pos = 0x8
	// Bit mask of ESC_SEQ1_CHAR0 field.
	UHCI_ESC_CONF2_ESC_SEQ1_CHAR0_Msk = 0xff00
	// Position of ESC_SEQ1_CHAR1 field.
	UHCI_ESC_CONF2_ESC_SEQ1_CHAR1_Pos = 0x10
	// Bit mask of ESC_SEQ1_CHAR1 field.
	UHCI_ESC_CONF2_ESC_SEQ1_CHAR1_Msk = 0xff0000

	// ESC_CONF3: a
	// Position of ESC_SEQ2 field.
	UHCI_ESC_CONF3_ESC_SEQ2_Pos = 0x0
	// Bit mask of ESC_SEQ2 field.
	UHCI_ESC_CONF3_ESC_SEQ2_Msk = 0xff
	// Position of ESC_SEQ2_CHAR0 field.
	UHCI_ESC_CONF3_ESC_SEQ2_CHAR0_Pos = 0x8
	// Bit mask of ESC_SEQ2_CHAR0 field.
	UHCI_ESC_CONF3_ESC_SEQ2_CHAR0_Msk = 0xff00
	// Position of ESC_SEQ2_CHAR1 field.
	UHCI_ESC_CONF3_ESC_SEQ2_CHAR1_Pos = 0x10
	// Bit mask of ESC_SEQ2_CHAR1 field.
	UHCI_ESC_CONF3_ESC_SEQ2_CHAR1_Msk = 0xff0000

	// PKT_THRES: a
	// Position of PKT_THRS field.
	UHCI_PKT_THRES_PKT_THRS_Pos = 0x0
	// Bit mask of PKT_THRS field.
	UHCI_PKT_THRES_PKT_THRS_Msk = 0x1fff

	// DATE: a
	// Position of DATE field.
	UHCI_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	UHCI_DATE_DATE_Msk = 0xffffffff
)

// Bitfields for USB_DEVICE: Peripheral USB_DEVICE
const (
	// EP1: USB_DEVICE_EP1_REG.
	// Position of RDWR_BYTE field.
	USB_DEVICE_EP1_RDWR_BYTE_Pos = 0x0
	// Bit mask of RDWR_BYTE field.
	USB_DEVICE_EP1_RDWR_BYTE_Msk = 0xff

	// EP1_CONF: USB_DEVICE_EP1_CONF_REG.
	// Position of WR_DONE field.
	USB_DEVICE_EP1_CONF_WR_DONE_Pos = 0x0
	// Bit mask of WR_DONE field.
	USB_DEVICE_EP1_CONF_WR_DONE_Msk = 0x1
	// Bit WR_DONE.
	USB_DEVICE_EP1_CONF_WR_DONE = 0x1
	// Position of SERIAL_IN_EP_DATA_FREE field.
	USB_DEVICE_EP1_CONF_SERIAL_IN_EP_DATA_FREE_Pos = 0x1
	// Bit mask of SERIAL_IN_EP_DATA_FREE field.
	USB_DEVICE_EP1_CONF_SERIAL_IN_EP_DATA_FREE_Msk = 0x2
	// Bit SERIAL_IN_EP_DATA_FREE.
	USB_DEVICE_EP1_CONF_SERIAL_IN_EP_DATA_FREE = 0x2
	// Position of SERIAL_OUT_EP_DATA_AVAIL field.
	USB_DEVICE_EP1_CONF_SERIAL_OUT_EP_DATA_AVAIL_Pos = 0x2
	// Bit mask of SERIAL_OUT_EP_DATA_AVAIL field.
	USB_DEVICE_EP1_CONF_SERIAL_OUT_EP_DATA_AVAIL_Msk = 0x4
	// Bit SERIAL_OUT_EP_DATA_AVAIL.
	USB_DEVICE_EP1_CONF_SERIAL_OUT_EP_DATA_AVAIL = 0x4

	// INT_RAW: USB_DEVICE_INT_RAW_REG.
	// Position of JTAG_IN_FLUSH_INT_RAW field.
	USB_DEVICE_INT_RAW_JTAG_IN_FLUSH_INT_RAW_Pos = 0x0
	// Bit mask of JTAG_IN_FLUSH_INT_RAW field.
	USB_DEVICE_INT_RAW_JTAG_IN_FLUSH_INT_RAW_Msk = 0x1
	// Bit JTAG_IN_FLUSH_INT_RAW.
	USB_DEVICE_INT_RAW_JTAG_IN_FLUSH_INT_RAW = 0x1
	// Position of SOF_INT_RAW field.
	USB_DEVICE_INT_RAW_SOF_INT_RAW_Pos = 0x1
	// Bit mask of SOF_INT_RAW field.
	USB_DEVICE_INT_RAW_SOF_INT_RAW_Msk = 0x2
	// Bit SOF_INT_RAW.
	USB_DEVICE_INT_RAW_SOF_INT_RAW = 0x2
	// Position of SERIAL_OUT_RECV_PKT_INT_RAW field.
	USB_DEVICE_INT_RAW_SERIAL_OUT_RECV_PKT_INT_RAW_Pos = 0x2
	// Bit mask of SERIAL_OUT_RECV_PKT_INT_RAW field.
	USB_DEVICE_INT_RAW_SERIAL_OUT_RECV_PKT_INT_RAW_Msk = 0x4
	// Bit SERIAL_OUT_RECV_PKT_INT_RAW.
	USB_DEVICE_INT_RAW_SERIAL_OUT_RECV_PKT_INT_RAW = 0x4
	// Position of SERIAL_IN_EMPTY_INT_RAW field.
	USB_DEVICE_INT_RAW_SERIAL_IN_EMPTY_INT_RAW_Pos = 0x3
	// Bit mask of SERIAL_IN_EMPTY_INT_RAW field.
	USB_DEVICE_INT_RAW_SERIAL_IN_EMPTY_INT_RAW_Msk = 0x8
	// Bit SERIAL_IN_EMPTY_INT_RAW.
	USB_DEVICE_INT_RAW_SERIAL_IN_EMPTY_INT_RAW = 0x8
	// Position of PID_ERR_INT_RAW field.
	USB_DEVICE_INT_RAW_PID_ERR_INT_RAW_Pos = 0x4
	// Bit mask of PID_ERR_INT_RAW field.
	USB_DEVICE_INT_RAW_PID_ERR_INT_RAW_Msk = 0x10
	// Bit PID_ERR_INT_RAW.
	USB_DEVICE_INT_RAW_PID_ERR_INT_RAW = 0x10
	// Position of CRC5_ERR_INT_RAW field.
	USB_DEVICE_INT_RAW_CRC5_ERR_INT_RAW_Pos = 0x5
	// Bit mask of CRC5_ERR_INT_RAW field.
	USB_DEVICE_INT_RAW_CRC5_ERR_INT_RAW_Msk = 0x20
	// Bit CRC5_ERR_INT_RAW.
	USB_DEVICE_INT_RAW_CRC5_ERR_INT_RAW = 0x20
	// Position of CRC16_ERR_INT_RAW field.
	USB_DEVICE_INT_RAW_CRC16_ERR_INT_RAW_Pos = 0x6
	// Bit mask of CRC16_ERR_INT_RAW field.
	USB_DEVICE_INT_RAW_CRC16_ERR_INT_RAW_Msk = 0x40
	// Bit CRC16_ERR_INT_RAW.
	USB_DEVICE_INT_RAW_CRC16_ERR_INT_RAW = 0x40
	// Position of STUFF_ERR_INT_RAW field.
	USB_DEVICE_INT_RAW_STUFF_ERR_INT_RAW_Pos = 0x7
	// Bit mask of STUFF_ERR_INT_RAW field.
	USB_DEVICE_INT_RAW_STUFF_ERR_INT_RAW_Msk = 0x80
	// Bit STUFF_ERR_INT_RAW.
	USB_DEVICE_INT_RAW_STUFF_ERR_INT_RAW = 0x80
	// Position of IN_TOKEN_REC_IN_EP1_INT_RAW field.
	USB_DEVICE_INT_RAW_IN_TOKEN_REC_IN_EP1_INT_RAW_Pos = 0x8
	// Bit mask of IN_TOKEN_REC_IN_EP1_INT_RAW field.
	USB_DEVICE_INT_RAW_IN_TOKEN_REC_IN_EP1_INT_RAW_Msk = 0x100
	// Bit IN_TOKEN_REC_IN_EP1_INT_RAW.
	USB_DEVICE_INT_RAW_IN_TOKEN_REC_IN_EP1_INT_RAW = 0x100
	// Position of USB_BUS_RESET_INT_RAW field.
	USB_DEVICE_INT_RAW_USB_BUS_RESET_INT_RAW_Pos = 0x9
	// Bit mask of USB_BUS_RESET_INT_RAW field.
	USB_DEVICE_INT_RAW_USB_BUS_RESET_INT_RAW_Msk = 0x200
	// Bit USB_BUS_RESET_INT_RAW.
	USB_DEVICE_INT_RAW_USB_BUS_RESET_INT_RAW = 0x200
	// Position of OUT_EP1_ZERO_PAYLOAD_INT_RAW field.
	USB_DEVICE_INT_RAW_OUT_EP1_ZERO_PAYLOAD_INT_RAW_Pos = 0xa
	// Bit mask of OUT_EP1_ZERO_PAYLOAD_INT_RAW field.
	USB_DEVICE_INT_RAW_OUT_EP1_ZERO_PAYLOAD_INT_RAW_Msk = 0x400
	// Bit OUT_EP1_ZERO_PAYLOAD_INT_RAW.
	USB_DEVICE_INT_RAW_OUT_EP1_ZERO_PAYLOAD_INT_RAW = 0x400
	// Position of OUT_EP2_ZERO_PAYLOAD_INT_RAW field.
	USB_DEVICE_INT_RAW_OUT_EP2_ZERO_PAYLOAD_INT_RAW_Pos = 0xb
	// Bit mask of OUT_EP2_ZERO_PAYLOAD_INT_RAW field.
	USB_DEVICE_INT_RAW_OUT_EP2_ZERO_PAYLOAD_INT_RAW_Msk = 0x800
	// Bit OUT_EP2_ZERO_PAYLOAD_INT_RAW.
	USB_DEVICE_INT_RAW_OUT_EP2_ZERO_PAYLOAD_INT_RAW = 0x800

	// INT_ST: USB_DEVICE_INT_ST_REG.
	// Position of JTAG_IN_FLUSH_INT_ST field.
	USB_DEVICE_INT_ST_JTAG_IN_FLUSH_INT_ST_Pos = 0x0
	// Bit mask of JTAG_IN_FLUSH_INT_ST field.
	USB_DEVICE_INT_ST_JTAG_IN_FLUSH_INT_ST_Msk = 0x1
	// Bit JTAG_IN_FLUSH_INT_ST.
	USB_DEVICE_INT_ST_JTAG_IN_FLUSH_INT_ST = 0x1
	// Position of SOF_INT_ST field.
	USB_DEVICE_INT_ST_SOF_INT_ST_Pos = 0x1
	// Bit mask of SOF_INT_ST field.
	USB_DEVICE_INT_ST_SOF_INT_ST_Msk = 0x2
	// Bit SOF_INT_ST.
	USB_DEVICE_INT_ST_SOF_INT_ST = 0x2
	// Position of SERIAL_OUT_RECV_PKT_INT_ST field.
	USB_DEVICE_INT_ST_SERIAL_OUT_RECV_PKT_INT_ST_Pos = 0x2
	// Bit mask of SERIAL_OUT_RECV_PKT_INT_ST field.
	USB_DEVICE_INT_ST_SERIAL_OUT_RECV_PKT_INT_ST_Msk = 0x4
	// Bit SERIAL_OUT_RECV_PKT_INT_ST.
	USB_DEVICE_INT_ST_SERIAL_OUT_RECV_PKT_INT_ST = 0x4
	// Position of SERIAL_IN_EMPTY_INT_ST field.
	USB_DEVICE_INT_ST_SERIAL_IN_EMPTY_INT_ST_Pos = 0x3
	// Bit mask of SERIAL_IN_EMPTY_INT_ST field.
	USB_DEVICE_INT_ST_SERIAL_IN_EMPTY_INT_ST_Msk = 0x8
	// Bit SERIAL_IN_EMPTY_INT_ST.
	USB_DEVICE_INT_ST_SERIAL_IN_EMPTY_INT_ST = 0x8
	// Position of PID_ERR_INT_ST field.
	USB_DEVICE_INT_ST_PID_ERR_INT_ST_Pos = 0x4
	// Bit mask of PID_ERR_INT_ST field.
	USB_DEVICE_INT_ST_PID_ERR_INT_ST_Msk = 0x10
	// Bit PID_ERR_INT_ST.
	USB_DEVICE_INT_ST_PID_ERR_INT_ST = 0x10
	// Position of CRC5_ERR_INT_ST field.
	USB_DEVICE_INT_ST_CRC5_ERR_INT_ST_Pos = 0x5
	// Bit mask of CRC5_ERR_INT_ST field.
	USB_DEVICE_INT_ST_CRC5_ERR_INT_ST_Msk = 0x20
	// Bit CRC5_ERR_INT_ST.
	USB_DEVICE_INT_ST_CRC5_ERR_INT_ST = 0x20
	// Position of CRC16_ERR_INT_ST field.
	USB_DEVICE_INT_ST_CRC16_ERR_INT_ST_Pos = 0x6
	// Bit mask of CRC16_ERR_INT_ST field.
	USB_DEVICE_INT_ST_CRC16_ERR_INT_ST_Msk = 0x40
	// Bit CRC16_ERR_INT_ST.
	USB_DEVICE_INT_ST_CRC16_ERR_INT_ST = 0x40
	// Position of STUFF_ERR_INT_ST field.
	USB_DEVICE_INT_ST_STUFF_ERR_INT_ST_Pos = 0x7
	// Bit mask of STUFF_ERR_INT_ST field.
	USB_DEVICE_INT_ST_STUFF_ERR_INT_ST_Msk = 0x80
	// Bit STUFF_ERR_INT_ST.
	USB_DEVICE_INT_ST_STUFF_ERR_INT_ST = 0x80
	// Position of IN_TOKEN_REC_IN_EP1_INT_ST field.
	USB_DEVICE_INT_ST_IN_TOKEN_REC_IN_EP1_INT_ST_Pos = 0x8
	// Bit mask of IN_TOKEN_REC_IN_EP1_INT_ST field.
	USB_DEVICE_INT_ST_IN_TOKEN_REC_IN_EP1_INT_ST_Msk = 0x100
	// Bit IN_TOKEN_REC_IN_EP1_INT_ST.
	USB_DEVICE_INT_ST_IN_TOKEN_REC_IN_EP1_INT_ST = 0x100
	// Position of USB_BUS_RESET_INT_ST field.
	USB_DEVICE_INT_ST_USB_BUS_RESET_INT_ST_Pos = 0x9
	// Bit mask of USB_BUS_RESET_INT_ST field.
	USB_DEVICE_INT_ST_USB_BUS_RESET_INT_ST_Msk = 0x200
	// Bit USB_BUS_RESET_INT_ST.
	USB_DEVICE_INT_ST_USB_BUS_RESET_INT_ST = 0x200
	// Position of OUT_EP1_ZERO_PAYLOAD_INT_ST field.
	USB_DEVICE_INT_ST_OUT_EP1_ZERO_PAYLOAD_INT_ST_Pos = 0xa
	// Bit mask of OUT_EP1_ZERO_PAYLOAD_INT_ST field.
	USB_DEVICE_INT_ST_OUT_EP1_ZERO_PAYLOAD_INT_ST_Msk = 0x400
	// Bit OUT_EP1_ZERO_PAYLOAD_INT_ST.
	USB_DEVICE_INT_ST_OUT_EP1_ZERO_PAYLOAD_INT_ST = 0x400
	// Position of OUT_EP2_ZERO_PAYLOAD_INT_ST field.
	USB_DEVICE_INT_ST_OUT_EP2_ZERO_PAYLOAD_INT_ST_Pos = 0xb
	// Bit mask of OUT_EP2_ZERO_PAYLOAD_INT_ST field.
	USB_DEVICE_INT_ST_OUT_EP2_ZERO_PAYLOAD_INT_ST_Msk = 0x800
	// Bit OUT_EP2_ZERO_PAYLOAD_INT_ST.
	USB_DEVICE_INT_ST_OUT_EP2_ZERO_PAYLOAD_INT_ST = 0x800

	// INT_ENA: USB_DEVICE_INT_ENA_REG.
	// Position of JTAG_IN_FLUSH_INT_ENA field.
	USB_DEVICE_INT_ENA_JTAG_IN_FLUSH_INT_ENA_Pos = 0x0
	// Bit mask of JTAG_IN_FLUSH_INT_ENA field.
	USB_DEVICE_INT_ENA_JTAG_IN_FLUSH_INT_ENA_Msk = 0x1
	// Bit JTAG_IN_FLUSH_INT_ENA.
	USB_DEVICE_INT_ENA_JTAG_IN_FLUSH_INT_ENA = 0x1
	// Position of SOF_INT_ENA field.
	USB_DEVICE_INT_ENA_SOF_INT_ENA_Pos = 0x1
	// Bit mask of SOF_INT_ENA field.
	USB_DEVICE_INT_ENA_SOF_INT_ENA_Msk = 0x2
	// Bit SOF_INT_ENA.
	USB_DEVICE_INT_ENA_SOF_INT_ENA = 0x2
	// Position of SERIAL_OUT_RECV_PKT_INT_ENA field.
	USB_DEVICE_INT_ENA_SERIAL_OUT_RECV_PKT_INT_ENA_Pos = 0x2
	// Bit mask of SERIAL_OUT_RECV_PKT_INT_ENA field.
	USB_DEVICE_INT_ENA_SERIAL_OUT_RECV_PKT_INT_ENA_Msk = 0x4
	// Bit SERIAL_OUT_RECV_PKT_INT_ENA.
	USB_DEVICE_INT_ENA_SERIAL_OUT_RECV_PKT_INT_ENA = 0x4
	// Position of SERIAL_IN_EMPTY_INT_ENA field.
	USB_DEVICE_INT_ENA_SERIAL_IN_EMPTY_INT_ENA_Pos = 0x3
	// Bit mask of SERIAL_IN_EMPTY_INT_ENA field.
	USB_DEVICE_INT_ENA_SERIAL_IN_EMPTY_INT_ENA_Msk = 0x8
	// Bit SERIAL_IN_EMPTY_INT_ENA.
	USB_DEVICE_INT_ENA_SERIAL_IN_EMPTY_INT_ENA = 0x8
	// Position of PID_ERR_INT_ENA field.
	USB_DEVICE_INT_ENA_PID_ERR_INT_ENA_Pos = 0x4
	// Bit mask of PID_ERR_INT_ENA field.
	USB_DEVICE_INT_ENA_PID_ERR_INT_ENA_Msk = 0x10
	// Bit PID_ERR_INT_ENA.
	USB_DEVICE_INT_ENA_PID_ERR_INT_ENA = 0x10
	// Position of CRC5_ERR_INT_ENA field.
	USB_DEVICE_INT_ENA_CRC5_ERR_INT_ENA_Pos = 0x5
	// Bit mask of CRC5_ERR_INT_ENA field.
	USB_DEVICE_INT_ENA_CRC5_ERR_INT_ENA_Msk = 0x20
	// Bit CRC5_ERR_INT_ENA.
	USB_DEVICE_INT_ENA_CRC5_ERR_INT_ENA = 0x20
	// Position of CRC16_ERR_INT_ENA field.
	USB_DEVICE_INT_ENA_CRC16_ERR_INT_ENA_Pos = 0x6
	// Bit mask of CRC16_ERR_INT_ENA field.
	USB_DEVICE_INT_ENA_CRC16_ERR_INT_ENA_Msk = 0x40
	// Bit CRC16_ERR_INT_ENA.
	USB_DEVICE_INT_ENA_CRC16_ERR_INT_ENA = 0x40
	// Position of STUFF_ERR_INT_ENA field.
	USB_DEVICE_INT_ENA_STUFF_ERR_INT_ENA_Pos = 0x7
	// Bit mask of STUFF_ERR_INT_ENA field.
	USB_DEVICE_INT_ENA_STUFF_ERR_INT_ENA_Msk = 0x80
	// Bit STUFF_ERR_INT_ENA.
	USB_DEVICE_INT_ENA_STUFF_ERR_INT_ENA = 0x80
	// Position of IN_TOKEN_REC_IN_EP1_INT_ENA field.
	USB_DEVICE_INT_ENA_IN_TOKEN_REC_IN_EP1_INT_ENA_Pos = 0x8
	// Bit mask of IN_TOKEN_REC_IN_EP1_INT_ENA field.
	USB_DEVICE_INT_ENA_IN_TOKEN_REC_IN_EP1_INT_ENA_Msk = 0x100
	// Bit IN_TOKEN_REC_IN_EP1_INT_ENA.
	USB_DEVICE_INT_ENA_IN_TOKEN_REC_IN_EP1_INT_ENA = 0x100
	// Position of USB_BUS_RESET_INT_ENA field.
	USB_DEVICE_INT_ENA_USB_BUS_RESET_INT_ENA_Pos = 0x9
	// Bit mask of USB_BUS_RESET_INT_ENA field.
	USB_DEVICE_INT_ENA_USB_BUS_RESET_INT_ENA_Msk = 0x200
	// Bit USB_BUS_RESET_INT_ENA.
	USB_DEVICE_INT_ENA_USB_BUS_RESET_INT_ENA = 0x200
	// Position of OUT_EP1_ZERO_PAYLOAD_INT_ENA field.
	USB_DEVICE_INT_ENA_OUT_EP1_ZERO_PAYLOAD_INT_ENA_Pos = 0xa
	// Bit mask of OUT_EP1_ZERO_PAYLOAD_INT_ENA field.
	USB_DEVICE_INT_ENA_OUT_EP1_ZERO_PAYLOAD_INT_ENA_Msk = 0x400
	// Bit OUT_EP1_ZERO_PAYLOAD_INT_ENA.
	USB_DEVICE_INT_ENA_OUT_EP1_ZERO_PAYLOAD_INT_ENA = 0x400
	// Position of OUT_EP2_ZERO_PAYLOAD_INT_ENA field.
	USB_DEVICE_INT_ENA_OUT_EP2_ZERO_PAYLOAD_INT_ENA_Pos = 0xb
	// Bit mask of OUT_EP2_ZERO_PAYLOAD_INT_ENA field.
	USB_DEVICE_INT_ENA_OUT_EP2_ZERO_PAYLOAD_INT_ENA_Msk = 0x800
	// Bit OUT_EP2_ZERO_PAYLOAD_INT_ENA.
	USB_DEVICE_INT_ENA_OUT_EP2_ZERO_PAYLOAD_INT_ENA = 0x800

	// INT_CLR: USB_DEVICE_INT_CLR_REG.
	// Position of JTAG_IN_FLUSH_INT_CLR field.
	USB_DEVICE_INT_CLR_JTAG_IN_FLUSH_INT_CLR_Pos = 0x0
	// Bit mask of JTAG_IN_FLUSH_INT_CLR field.
	USB_DEVICE_INT_CLR_JTAG_IN_FLUSH_INT_CLR_Msk = 0x1
	// Bit JTAG_IN_FLUSH_INT_CLR.
	USB_DEVICE_INT_CLR_JTAG_IN_FLUSH_INT_CLR = 0x1
	// Position of SOF_INT_CLR field.
	USB_DEVICE_INT_CLR_SOF_INT_CLR_Pos = 0x1
	// Bit mask of SOF_INT_CLR field.
	USB_DEVICE_INT_CLR_SOF_INT_CLR_Msk = 0x2
	// Bit SOF_INT_CLR.
	USB_DEVICE_INT_CLR_SOF_INT_CLR = 0x2
	// Position of SERIAL_OUT_RECV_PKT_INT_CLR field.
	USB_DEVICE_INT_CLR_SERIAL_OUT_RECV_PKT_INT_CLR_Pos = 0x2
	// Bit mask of SERIAL_OUT_RECV_PKT_INT_CLR field.
	USB_DEVICE_INT_CLR_SERIAL_OUT_RECV_PKT_INT_CLR_Msk = 0x4
	// Bit SERIAL_OUT_RECV_PKT_INT_CLR.
	USB_DEVICE_INT_CLR_SERIAL_OUT_RECV_PKT_INT_CLR = 0x4
	// Position of SERIAL_IN_EMPTY_INT_CLR field.
	USB_DEVICE_INT_CLR_SERIAL_IN_EMPTY_INT_CLR_Pos = 0x3
	// Bit mask of SERIAL_IN_EMPTY_INT_CLR field.
	USB_DEVICE_INT_CLR_SERIAL_IN_EMPTY_INT_CLR_Msk = 0x8
	// Bit SERIAL_IN_EMPTY_INT_CLR.
	USB_DEVICE_INT_CLR_SERIAL_IN_EMPTY_INT_CLR = 0x8
	// Position of PID_ERR_INT_CLR field.
	USB_DEVICE_INT_CLR_PID_ERR_INT_CLR_Pos = 0x4
	// Bit mask of PID_ERR_INT_CLR field.
	USB_DEVICE_INT_CLR_PID_ERR_INT_CLR_Msk = 0x10
	// Bit PID_ERR_INT_CLR.
	USB_DEVICE_INT_CLR_PID_ERR_INT_CLR = 0x10
	// Position of CRC5_ERR_INT_CLR field.
	USB_DEVICE_INT_CLR_CRC5_ERR_INT_CLR_Pos = 0x5
	// Bit mask of CRC5_ERR_INT_CLR field.
	USB_DEVICE_INT_CLR_CRC5_ERR_INT_CLR_Msk = 0x20
	// Bit CRC5_ERR_INT_CLR.
	USB_DEVICE_INT_CLR_CRC5_ERR_INT_CLR = 0x20
	// Position of CRC16_ERR_INT_CLR field.
	USB_DEVICE_INT_CLR_CRC16_ERR_INT_CLR_Pos = 0x6
	// Bit mask of CRC16_ERR_INT_CLR field.
	USB_DEVICE_INT_CLR_CRC16_ERR_INT_CLR_Msk = 0x40
	// Bit CRC16_ERR_INT_CLR.
	USB_DEVICE_INT_CLR_CRC16_ERR_INT_CLR = 0x40
	// Position of STUFF_ERR_INT_CLR field.
	USB_DEVICE_INT_CLR_STUFF_ERR_INT_CLR_Pos = 0x7
	// Bit mask of STUFF_ERR_INT_CLR field.
	USB_DEVICE_INT_CLR_STUFF_ERR_INT_CLR_Msk = 0x80
	// Bit STUFF_ERR_INT_CLR.
	USB_DEVICE_INT_CLR_STUFF_ERR_INT_CLR = 0x80
	// Position of IN_TOKEN_REC_IN_EP1_INT_CLR field.
	USB_DEVICE_INT_CLR_IN_TOKEN_REC_IN_EP1_INT_CLR_Pos = 0x8
	// Bit mask of IN_TOKEN_REC_IN_EP1_INT_CLR field.
	USB_DEVICE_INT_CLR_IN_TOKEN_REC_IN_EP1_INT_CLR_Msk = 0x100
	// Bit IN_TOKEN_REC_IN_EP1_INT_CLR.
	USB_DEVICE_INT_CLR_IN_TOKEN_REC_IN_EP1_INT_CLR = 0x100
	// Position of USB_BUS_RESET_INT_CLR field.
	USB_DEVICE_INT_CLR_USB_BUS_RESET_INT_CLR_Pos = 0x9
	// Bit mask of USB_BUS_RESET_INT_CLR field.
	USB_DEVICE_INT_CLR_USB_BUS_RESET_INT_CLR_Msk = 0x200
	// Bit USB_BUS_RESET_INT_CLR.
	USB_DEVICE_INT_CLR_USB_BUS_RESET_INT_CLR = 0x200
	// Position of OUT_EP1_ZERO_PAYLOAD_INT_CLR field.
	USB_DEVICE_INT_CLR_OUT_EP1_ZERO_PAYLOAD_INT_CLR_Pos = 0xa
	// Bit mask of OUT_EP1_ZERO_PAYLOAD_INT_CLR field.
	USB_DEVICE_INT_CLR_OUT_EP1_ZERO_PAYLOAD_INT_CLR_Msk = 0x400
	// Bit OUT_EP1_ZERO_PAYLOAD_INT_CLR.
	USB_DEVICE_INT_CLR_OUT_EP1_ZERO_PAYLOAD_INT_CLR = 0x400
	// Position of OUT_EP2_ZERO_PAYLOAD_INT_CLR field.
	USB_DEVICE_INT_CLR_OUT_EP2_ZERO_PAYLOAD_INT_CLR_Pos = 0xb
	// Bit mask of OUT_EP2_ZERO_PAYLOAD_INT_CLR field.
	USB_DEVICE_INT_CLR_OUT_EP2_ZERO_PAYLOAD_INT_CLR_Msk = 0x800
	// Bit OUT_EP2_ZERO_PAYLOAD_INT_CLR.
	USB_DEVICE_INT_CLR_OUT_EP2_ZERO_PAYLOAD_INT_CLR = 0x800

	// CONF0: USB_DEVICE_CONF0_REG.
	// Position of PHY_SEL field.
	USB_DEVICE_CONF0_PHY_SEL_Pos = 0x0
	// Bit mask of PHY_SEL field.
	USB_DEVICE_CONF0_PHY_SEL_Msk = 0x1
	// Bit PHY_SEL.
	USB_DEVICE_CONF0_PHY_SEL = 0x1
	// Position of EXCHG_PINS_OVERRIDE field.
	USB_DEVICE_CONF0_EXCHG_PINS_OVERRIDE_Pos = 0x1
	// Bit mask of EXCHG_PINS_OVERRIDE field.
	USB_DEVICE_CONF0_EXCHG_PINS_OVERRIDE_Msk = 0x2
	// Bit EXCHG_PINS_OVERRIDE.
	USB_DEVICE_CONF0_EXCHG_PINS_OVERRIDE = 0x2
	// Position of EXCHG_PINS field.
	USB_DEVICE_CONF0_EXCHG_PINS_Pos = 0x2
	// Bit mask of EXCHG_PINS field.
	USB_DEVICE_CONF0_EXCHG_PINS_Msk = 0x4
	// Bit EXCHG_PINS.
	USB_DEVICE_CONF0_EXCHG_PINS = 0x4
	// Position of VREFH field.
	USB_DEVICE_CONF0_VREFH_Pos = 0x3
	// Bit mask of VREFH field.
	USB_DEVICE_CONF0_VREFH_Msk = 0x18
	// Position of VREFL field.
	USB_DEVICE_CONF0_VREFL_Pos = 0x5
	// Bit mask of VREFL field.
	USB_DEVICE_CONF0_VREFL_Msk = 0x60
	// Position of VREF_OVERRIDE field.
	USB_DEVICE_CONF0_VREF_OVERRIDE_Pos = 0x7
	// Bit mask of VREF_OVERRIDE field.
	USB_DEVICE_CONF0_VREF_OVERRIDE_Msk = 0x80
	// Bit VREF_OVERRIDE.
	USB_DEVICE_CONF0_VREF_OVERRIDE = 0x80
	// Position of PAD_PULL_OVERRIDE field.
	USB_DEVICE_CONF0_PAD_PULL_OVERRIDE_Pos = 0x8
	// Bit mask of PAD_PULL_OVERRIDE field.
	USB_DEVICE_CONF0_PAD_PULL_OVERRIDE_Msk = 0x100
	// Bit PAD_PULL_OVERRIDE.
	USB_DEVICE_CONF0_PAD_PULL_OVERRIDE = 0x100
	// Position of DP_PULLUP field.
	USB_DEVICE_CONF0_DP_PULLUP_Pos = 0x9
	// Bit mask of DP_PULLUP field.
	USB_DEVICE_CONF0_DP_PULLUP_Msk = 0x200
	// Bit DP_PULLUP.
	USB_DEVICE_CONF0_DP_PULLUP = 0x200
	// Position of DP_PULLDOWN field.
	USB_DEVICE_CONF0_DP_PULLDOWN_Pos = 0xa
	// Bit mask of DP_PULLDOWN field.
	USB_DEVICE_CONF0_DP_PULLDOWN_Msk = 0x400
	// Bit DP_PULLDOWN.
	USB_DEVICE_CONF0_DP_PULLDOWN = 0x400
	// Position of DM_PULLUP field.
	USB_DEVICE_CONF0_DM_PULLUP_Pos = 0xb
	// Bit mask of DM_PULLUP field.
	USB_DEVICE_CONF0_DM_PULLUP_Msk = 0x800
	// Bit DM_PULLUP.
	USB_DEVICE_CONF0_DM_PULLUP = 0x800
	// Position of DM_PULLDOWN field.
	USB_DEVICE_CONF0_DM_PULLDOWN_Pos = 0xc
	// Bit mask of DM_PULLDOWN field.
	USB_DEVICE_CONF0_DM_PULLDOWN_Msk = 0x1000
	// Bit DM_PULLDOWN.
	USB_DEVICE_CONF0_DM_PULLDOWN = 0x1000
	// Position of PULLUP_VALUE field.
	USB_DEVICE_CONF0_PULLUP_VALUE_Pos = 0xd
	// Bit mask of PULLUP_VALUE field.
	USB_DEVICE_CONF0_PULLUP_VALUE_Msk = 0x2000
	// Bit PULLUP_VALUE.
	USB_DEVICE_CONF0_PULLUP_VALUE = 0x2000
	// Position of USB_PAD_ENABLE field.
	USB_DEVICE_CONF0_USB_PAD_ENABLE_Pos = 0xe
	// Bit mask of USB_PAD_ENABLE field.
	USB_DEVICE_CONF0_USB_PAD_ENABLE_Msk = 0x4000
	// Bit USB_PAD_ENABLE.
	USB_DEVICE_CONF0_USB_PAD_ENABLE = 0x4000

	// TEST: USB_DEVICE_TEST_REG.
	// Position of ENABLE field.
	USB_DEVICE_TEST_ENABLE_Pos = 0x0
	// Bit mask of ENABLE field.
	USB_DEVICE_TEST_ENABLE_Msk = 0x1
	// Bit ENABLE.
	USB_DEVICE_TEST_ENABLE = 0x1
	// Position of USB_OE field.
	USB_DEVICE_TEST_USB_OE_Pos = 0x1
	// Bit mask of USB_OE field.
	USB_DEVICE_TEST_USB_OE_Msk = 0x2
	// Bit USB_OE.
	USB_DEVICE_TEST_USB_OE = 0x2
	// Position of TX_DP field.
	USB_DEVICE_TEST_TX_DP_Pos = 0x2
	// Bit mask of TX_DP field.
	USB_DEVICE_TEST_TX_DP_Msk = 0x4
	// Bit TX_DP.
	USB_DEVICE_TEST_TX_DP = 0x4
	// Position of TX_DM field.
	USB_DEVICE_TEST_TX_DM_Pos = 0x3
	// Bit mask of TX_DM field.
	USB_DEVICE_TEST_TX_DM_Msk = 0x8
	// Bit TX_DM.
	USB_DEVICE_TEST_TX_DM = 0x8

	// JFIFO_ST: USB_DEVICE_JFIFO_ST_REG.
	// Position of IN_FIFO_CNT field.
	USB_DEVICE_JFIFO_ST_IN_FIFO_CNT_Pos = 0x0
	// Bit mask of IN_FIFO_CNT field.
	USB_DEVICE_JFIFO_ST_IN_FIFO_CNT_Msk = 0x3
	// Position of IN_FIFO_EMPTY field.
	USB_DEVICE_JFIFO_ST_IN_FIFO_EMPTY_Pos = 0x2
	// Bit mask of IN_FIFO_EMPTY field.
	USB_DEVICE_JFIFO_ST_IN_FIFO_EMPTY_Msk = 0x4
	// Bit IN_FIFO_EMPTY.
	USB_DEVICE_JFIFO_ST_IN_FIFO_EMPTY = 0x4
	// Position of IN_FIFO_FULL field.
	USB_DEVICE_JFIFO_ST_IN_FIFO_FULL_Pos = 0x3
	// Bit mask of IN_FIFO_FULL field.
	USB_DEVICE_JFIFO_ST_IN_FIFO_FULL_Msk = 0x8
	// Bit IN_FIFO_FULL.
	USB_DEVICE_JFIFO_ST_IN_FIFO_FULL = 0x8
	// Position of OUT_FIFO_CNT field.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_CNT_Pos = 0x4
	// Bit mask of OUT_FIFO_CNT field.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_CNT_Msk = 0x30
	// Position of OUT_FIFO_EMPTY field.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_EMPTY_Pos = 0x6
	// Bit mask of OUT_FIFO_EMPTY field.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_EMPTY_Msk = 0x40
	// Bit OUT_FIFO_EMPTY.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_EMPTY = 0x40
	// Position of OUT_FIFO_FULL field.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_FULL_Pos = 0x7
	// Bit mask of OUT_FIFO_FULL field.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_FULL_Msk = 0x80
	// Bit OUT_FIFO_FULL.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_FULL = 0x80
	// Position of IN_FIFO_RESET field.
	USB_DEVICE_JFIFO_ST_IN_FIFO_RESET_Pos = 0x8
	// Bit mask of IN_FIFO_RESET field.
	USB_DEVICE_JFIFO_ST_IN_FIFO_RESET_Msk = 0x100
	// Bit IN_FIFO_RESET.
	USB_DEVICE_JFIFO_ST_IN_FIFO_RESET = 0x100
	// Position of OUT_FIFO_RESET field.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_RESET_Pos = 0x9
	// Bit mask of OUT_FIFO_RESET field.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_RESET_Msk = 0x200
	// Bit OUT_FIFO_RESET.
	USB_DEVICE_JFIFO_ST_OUT_FIFO_RESET = 0x200

	// FRAM_NUM: USB_DEVICE_FRAM_NUM_REG.
	// Position of SOF_FRAME_INDEX field.
	USB_DEVICE_FRAM_NUM_SOF_FRAME_INDEX_Pos = 0x0
	// Bit mask of SOF_FRAME_INDEX field.
	USB_DEVICE_FRAM_NUM_SOF_FRAME_INDEX_Msk = 0x7ff

	// IN_EP0_ST: USB_DEVICE_IN_EP0_ST_REG.
	// Position of IN_EP0_STATE field.
	USB_DEVICE_IN_EP0_ST_IN_EP0_STATE_Pos = 0x0
	// Bit mask of IN_EP0_STATE field.
	USB_DEVICE_IN_EP0_ST_IN_EP0_STATE_Msk = 0x3
	// Position of IN_EP0_WR_ADDR field.
	USB_DEVICE_IN_EP0_ST_IN_EP0_WR_ADDR_Pos = 0x2
	// Bit mask of IN_EP0_WR_ADDR field.
	USB_DEVICE_IN_EP0_ST_IN_EP0_WR_ADDR_Msk = 0x1fc
	// Position of IN_EP0_RD_ADDR field.
	USB_DEVICE_IN_EP0_ST_IN_EP0_RD_ADDR_Pos = 0x9
	// Bit mask of IN_EP0_RD_ADDR field.
	USB_DEVICE_IN_EP0_ST_IN_EP0_RD_ADDR_Msk = 0xfe00

	// IN_EP1_ST: USB_DEVICE_IN_EP1_ST_REG.
	// Position of IN_EP1_STATE field.
	USB_DEVICE_IN_EP1_ST_IN_EP1_STATE_Pos = 0x0
	// Bit mask of IN_EP1_STATE field.
	USB_DEVICE_IN_EP1_ST_IN_EP1_STATE_Msk = 0x3
	// Position of IN_EP1_WR_ADDR field.
	USB_DEVICE_IN_EP1_ST_IN_EP1_WR_ADDR_Pos = 0x2
	// Bit mask of IN_EP1_WR_ADDR field.
	USB_DEVICE_IN_EP1_ST_IN_EP1_WR_ADDR_Msk = 0x1fc
	// Position of IN_EP1_RD_ADDR field.
	USB_DEVICE_IN_EP1_ST_IN_EP1_RD_ADDR_Pos = 0x9
	// Bit mask of IN_EP1_RD_ADDR field.
	USB_DEVICE_IN_EP1_ST_IN_EP1_RD_ADDR_Msk = 0xfe00

	// IN_EP2_ST: USB_DEVICE_IN_EP2_ST_REG.
	// Position of IN_EP2_STATE field.
	USB_DEVICE_IN_EP2_ST_IN_EP2_STATE_Pos = 0x0
	// Bit mask of IN_EP2_STATE field.
	USB_DEVICE_IN_EP2_ST_IN_EP2_STATE_Msk = 0x3
	// Position of IN_EP2_WR_ADDR field.
	USB_DEVICE_IN_EP2_ST_IN_EP2_WR_ADDR_Pos = 0x2
	// Bit mask of IN_EP2_WR_ADDR field.
	USB_DEVICE_IN_EP2_ST_IN_EP2_WR_ADDR_Msk = 0x1fc
	// Position of IN_EP2_RD_ADDR field.
	USB_DEVICE_IN_EP2_ST_IN_EP2_RD_ADDR_Pos = 0x9
	// Bit mask of IN_EP2_RD_ADDR field.
	USB_DEVICE_IN_EP2_ST_IN_EP2_RD_ADDR_Msk = 0xfe00

	// IN_EP3_ST: USB_DEVICE_IN_EP3_ST_REG.
	// Position of IN_EP3_STATE field.
	USB_DEVICE_IN_EP3_ST_IN_EP3_STATE_Pos = 0x0
	// Bit mask of IN_EP3_STATE field.
	USB_DEVICE_IN_EP3_ST_IN_EP3_STATE_Msk = 0x3
	// Position of IN_EP3_WR_ADDR field.
	USB_DEVICE_IN_EP3_ST_IN_EP3_WR_ADDR_Pos = 0x2
	// Bit mask of IN_EP3_WR_ADDR field.
	USB_DEVICE_IN_EP3_ST_IN_EP3_WR_ADDR_Msk = 0x1fc
	// Position of IN_EP3_RD_ADDR field.
	USB_DEVICE_IN_EP3_ST_IN_EP3_RD_ADDR_Pos = 0x9
	// Bit mask of IN_EP3_RD_ADDR field.
	USB_DEVICE_IN_EP3_ST_IN_EP3_RD_ADDR_Msk = 0xfe00

	// OUT_EP0_ST: USB_DEVICE_OUT_EP0_ST_REG.
	// Position of OUT_EP0_STATE field.
	USB_DEVICE_OUT_EP0_ST_OUT_EP0_STATE_Pos = 0x0
	// Bit mask of OUT_EP0_STATE field.
	USB_DEVICE_OUT_EP0_ST_OUT_EP0_STATE_Msk = 0x3
	// Position of OUT_EP0_WR_ADDR field.
	USB_DEVICE_OUT_EP0_ST_OUT_EP0_WR_ADDR_Pos = 0x2
	// Bit mask of OUT_EP0_WR_ADDR field.
	USB_DEVICE_OUT_EP0_ST_OUT_EP0_WR_ADDR_Msk = 0x1fc
	// Position of OUT_EP0_RD_ADDR field.
	USB_DEVICE_OUT_EP0_ST_OUT_EP0_RD_ADDR_Pos = 0x9
	// Bit mask of OUT_EP0_RD_ADDR field.
	USB_DEVICE_OUT_EP0_ST_OUT_EP0_RD_ADDR_Msk = 0xfe00

	// OUT_EP1_ST: USB_DEVICE_OUT_EP1_ST_REG.
	// Position of OUT_EP1_STATE field.
	USB_DEVICE_OUT_EP1_ST_OUT_EP1_STATE_Pos = 0x0
	// Bit mask of OUT_EP1_STATE field.
	USB_DEVICE_OUT_EP1_ST_OUT_EP1_STATE_Msk = 0x3
	// Position of OUT_EP1_WR_ADDR field.
	USB_DEVICE_OUT_EP1_ST_OUT_EP1_WR_ADDR_Pos = 0x2
	// Bit mask of OUT_EP1_WR_ADDR field.
	USB_DEVICE_OUT_EP1_ST_OUT_EP1_WR_ADDR_Msk = 0x1fc
	// Position of OUT_EP1_RD_ADDR field.
	USB_DEVICE_OUT_EP1_ST_OUT_EP1_RD_ADDR_Pos = 0x9
	// Bit mask of OUT_EP1_RD_ADDR field.
	USB_DEVICE_OUT_EP1_ST_OUT_EP1_RD_ADDR_Msk = 0xfe00
	// Position of OUT_EP1_REC_DATA_CNT field.
	USB_DEVICE_OUT_EP1_ST_OUT_EP1_REC_DATA_CNT_Pos = 0x10
	// Bit mask of OUT_EP1_REC_DATA_CNT field.
	USB_DEVICE_OUT_EP1_ST_OUT_EP1_REC_DATA_CNT_Msk = 0x7f0000

	// OUT_EP2_ST: USB_DEVICE_OUT_EP2_ST_REG.
	// Position of OUT_EP2_STATE field.
	USB_DEVICE_OUT_EP2_ST_OUT_EP2_STATE_Pos = 0x0
	// Bit mask of OUT_EP2_STATE field.
	USB_DEVICE_OUT_EP2_ST_OUT_EP2_STATE_Msk = 0x3
	// Position of OUT_EP2_WR_ADDR field.
	USB_DEVICE_OUT_EP2_ST_OUT_EP2_WR_ADDR_Pos = 0x2
	// Bit mask of OUT_EP2_WR_ADDR field.
	USB_DEVICE_OUT_EP2_ST_OUT_EP2_WR_ADDR_Msk = 0x1fc
	// Position of OUT_EP2_RD_ADDR field.
	USB_DEVICE_OUT_EP2_ST_OUT_EP2_RD_ADDR_Pos = 0x9
	// Bit mask of OUT_EP2_RD_ADDR field.
	USB_DEVICE_OUT_EP2_ST_OUT_EP2_RD_ADDR_Msk = 0xfe00

	// MISC_CONF: USB_DEVICE_MISC_CONF_REG.
	// Position of CLK_EN field.
	USB_DEVICE_MISC_CONF_CLK_EN_Pos = 0x0
	// Bit mask of CLK_EN field.
	USB_DEVICE_MISC_CONF_CLK_EN_Msk = 0x1
	// Bit CLK_EN.
	USB_DEVICE_MISC_CONF_CLK_EN = 0x1

	// MEM_CONF: USB_DEVICE_MEM_CONF_REG.
	// Position of USB_MEM_PD field.
	USB_DEVICE_MEM_CONF_USB_MEM_PD_Pos = 0x0
	// Bit mask of USB_MEM_PD field.
	USB_DEVICE_MEM_CONF_USB_MEM_PD_Msk = 0x1
	// Bit USB_MEM_PD.
	USB_DEVICE_MEM_CONF_USB_MEM_PD = 0x1
	// Position of USB_MEM_CLK_EN field.
	USB_DEVICE_MEM_CONF_USB_MEM_CLK_EN_Pos = 0x1
	// Bit mask of USB_MEM_CLK_EN field.
	USB_DEVICE_MEM_CONF_USB_MEM_CLK_EN_Msk = 0x2
	// Bit USB_MEM_CLK_EN.
	USB_DEVICE_MEM_CONF_USB_MEM_CLK_EN = 0x2

	// DATE: USB_DEVICE_DATE_REG.
	// Position of DATE field.
	USB_DEVICE_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	USB_DEVICE_DATE_DATE_Msk = 0xffffffff
)

// Bitfields for XTS_AES: Peripheral XTS_AES
const (
	// LINESIZE: XTS-AES line-size register
	// Position of LINESIZE field.
	XTS_AES_LINESIZE_LINESIZE_Pos = 0x0
	// Bit mask of LINESIZE field.
	XTS_AES_LINESIZE_LINESIZE_Msk = 0x1
	// Bit LINESIZE.
	XTS_AES_LINESIZE_LINESIZE = 0x1

	// DESTINATION: XTS-AES destination register
	// Position of DESTINATION field.
	XTS_AES_DESTINATION_DESTINATION_Pos = 0x0
	// Bit mask of DESTINATION field.
	XTS_AES_DESTINATION_DESTINATION_Msk = 0x1
	// Bit DESTINATION.
	XTS_AES_DESTINATION_DESTINATION = 0x1

	// PHYSICAL_ADDRESS: XTS-AES physical address register
	// Position of PHYSICAL_ADDRESS field.
	XTS_AES_PHYSICAL_ADDRESS_PHYSICAL_ADDRESS_Pos = 0x0
	// Bit mask of PHYSICAL_ADDRESS field.
	XTS_AES_PHYSICAL_ADDRESS_PHYSICAL_ADDRESS_Msk = 0x3fffffff

	// TRIGGER: XTS-AES trigger register
	// Position of TRIGGER field.
	XTS_AES_TRIGGER_TRIGGER_Pos = 0x0
	// Bit mask of TRIGGER field.
	XTS_AES_TRIGGER_TRIGGER_Msk = 0x1
	// Bit TRIGGER.
	XTS_AES_TRIGGER_TRIGGER = 0x1

	// RELEASE: XTS-AES release register
	// Position of RELEASE field.
	XTS_AES_RELEASE_RELEASE_Pos = 0x0
	// Bit mask of RELEASE field.
	XTS_AES_RELEASE_RELEASE_Msk = 0x1
	// Bit RELEASE.
	XTS_AES_RELEASE_RELEASE = 0x1

	// DESTROY: XTS-AES destroy register
	// Position of DESTROY field.
	XTS_AES_DESTROY_DESTROY_Pos = 0x0
	// Bit mask of DESTROY field.
	XTS_AES_DESTROY_DESTROY_Msk = 0x1
	// Bit DESTROY.
	XTS_AES_DESTROY_DESTROY = 0x1

	// STATE: XTS-AES status register
	// Position of STATE field.
	XTS_AES_STATE_STATE_Pos = 0x0
	// Bit mask of STATE field.
	XTS_AES_STATE_STATE_Msk = 0x3

	// DATE: XTS-AES version control register
	// Position of DATE field.
	XTS_AES_DATE_DATE_Pos = 0x0
	// Bit mask of DATE field.
	XTS_AES_DATE_DATE_Msk = 0x3fffffff
)
